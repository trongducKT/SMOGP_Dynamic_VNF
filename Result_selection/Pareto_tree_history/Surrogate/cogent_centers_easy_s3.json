{"1": [{"determining": "Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.7483373386516984}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Max( Min( FirstVNF_RAM_Server ,Const ),( FirstVNF_RAM - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUC ) )", "obj1": 0.23481781376518218, "obj2": 0.7350345795207601}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * MUM ) )", "obj1": 0.3259109311740891, "obj2": 0.6319157482128659}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "Max( ( ( Min( MLU ,MUC ) - MLU ) * CS ),( RCSe - RCSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7759377309856371}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MLU + CS ) + Min( RRSe ,( RMSe - ( ( ( MLU / RMSe ) / RCSe ) * MLU ) ) ) ) - MLU ),Min( DS ,DS ) )", "obj1": 0.48380566801619435, "obj2": 0.4662353491268686}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * RRS ) ) ,Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC - ( MUM / DS ) ) ,Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + ACS ) + ACS ) - ( ( ACS * FirstVNF_RAM_Server ) * FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MUR ) * Min( MLU ,( ( ( ( ( DS - RRSe ) - RCSe ) + ( MUR * ( MLU / MUR ) ) ) + DS ) - ( MUM / CS ) ) ) ) * ( ( MLU + MUM ) / Min( RMSe ,RRSe ) ) )", "obj1": 0.22469635627530365, "obj2": 0.7697897361340833}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( MLU ,( MUM - RMSe ) ) - Min( ( MLU - CS ) ,Max( RRSe,Min( MUC ,( RCSe * Min( CS ,( RRSe - RRSe ) ) ) ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.07041572024249179}, {"determining": "Max( ( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - Min( Min( DS ,MUM ) ,Max( MUR,RMSe ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7832136345963626}, {"determining": "( Max( Min( AMS ,FirstVNF_CPU ),( AMS + ( RRS / Min( ( FirstVNF_CPU - ( AMS * CRS ) ) ,ACS ) ) ) ) - ( MDR - PN ) )", "choosing": "( ( ( MUC / MLU ) - Min( MLU ,MUC ) ) * ( ( CS + ( ( DS / MUC ) - Max( RRSe,RCSe ) ) ) - MUC ) )", "obj1": 0.19635627530364372, "obj2": 0.7872090297003597}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) )", "obj1": 0.18016194331983806, "obj2": 0.8044753392327996}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( FirstVNF_Mem_Server / ( ( MDR - ( ARS / FirstVNF_Mem ) ) / Max( FirstVNF_RAM,RRS ) ) ) ) - Max( Min( MRS ,BR ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( ( Min( RRSe ,MUR ) - MUM ) * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( Max( ( ( Min( Max( RRSe,RRSe ) ,MUC ) + MUC ) * RRSe ),CS ) ,( MUC - DS ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Min( FirstVNF_CPU ,Max( RRS,Max( Const,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( MLU ,RCSe ) / RRSe ) / ( Min( MLU ,( ( MUR + Min( MUM ,DS ) ) * DS ) ) - Max( ( RRSe - RRSe ),CS ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8178634756811718}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( FirstVNF_Mem / ( BR * FirstVNF_CPU ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( MLU - DS ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) )", "choosing": "Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6423186455189427}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( AMS + ARS ) - MDR ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( Max( ( DS * ( RMSe - RRSe ) ),MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.36510607092779973}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}], "2": [{"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUM + DS ) ,( MUC * MUM ) )", "obj1": 0.3259109311740891, "obj2": 0.6319157482128659}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU_Server ,AMS ) ) )", "choosing": "Max( ( ( Min( MLU ,MUC ) - MLU ) * CS ),( RCSe - RCSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7759377309856371}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MLU + CS ) + Min( RRSe ,( RMSe - ( ( ( MLU / RMSe ) / RCSe ) * MLU ) ) ) ) - MLU ),Min( DS ,DS ) )", "obj1": 0.48380566801619435, "obj2": 0.4662353491268686}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * RRS ) ) ,Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC - ( MUM / DS ) ) ,Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( MLU ,( MUM - RMSe ) ) - Min( ( MLU - CS ) ,Max( RRSe,Min( MUC ,( RCSe * Min( CS ,( RRSe - RRSe ) ) ) ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.07041572024249179}, {"determining": "Max( ( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - Min( Min( DS ,MUM ) ,Max( MUR,RMSe ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7832136345963626}, {"determining": "( Max( Min( AMS ,FirstVNF_CPU ),( AMS + ( RRS / Min( ( FirstVNF_CPU - ( AMS * CRS ) ) ,ACS ) ) ) ) - ( MDR - PN ) )", "choosing": "( ( ( MUC / MLU ) - Min( MLU ,MUC ) ) * ( ( CS + ( ( DS / MUC ) - Max( RRSe,RCSe ) ) ) - MUC ) )", "obj1": 0.19635627530364372, "obj2": 0.7872090297003597}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Max( Min( ( FirstVNF_Mem + Const ) ,Min( ACS ,MDR ) ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) )", "obj1": 0.18016194331983806, "obj2": 0.8044753392327996}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( FirstVNF_Mem_Server / ( ( MDR - ( ARS / FirstVNF_Mem ) ) / Max( FirstVNF_RAM,RRS ) ) ) ) - Max( Min( MRS ,BR ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( ( Min( RRSe ,MUR ) - MUM ) * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( Max( ( ( Min( Max( RRSe,RRSe ) ,MUC ) + MUC ) * RRSe ),CS ) ,( MUC - DS ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Min( FirstVNF_CPU ,Max( RRS,Max( Const,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( MLU ,RCSe ) / RRSe ) / ( Min( MLU ,( ( MUR + Min( MUM ,DS ) ) * DS ) ) - Max( ( RRSe - RRSe ),CS ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8178634756811718}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( FirstVNF_Mem / ( BR * FirstVNF_CPU ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( MLU - DS ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( ( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "( Max( MUM,CS ) * Max( DS,( MUR + ( MUM / DS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8690669224278652}, {"determining": "Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( Min( MLU ,MLU ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( Max( RRSe,MUM ) + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.19940066404165327}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( Max( MUM,CS ) * Max( DS,MUR ) ) * RCSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8255072244799893}, {"determining": "Max( Max( ( ARS + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ),( DDR * AMS ) ),Max( ( RRS * FirstVNF_Mem_Server ),( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( RCSe,( ( Max( RRSe,Max( ( Max( RCSe,RMSe ) - CS ),( MUM + RRSe ) ) ) - ( MUM + RCSe ) ) / DS ) ) ,( RRSe + RRSe ) )", "obj1": 0.23076923076923078, "obj2": 0.7479004690264571}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( Max( FirstVNF_Mem,MRS ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( MLU + DS ) )", "obj1": 0.4959514170040486, "obj2": 0.43991821662623676}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - ( MRS * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - DS ) ,Max( ( ( RMSe / MLU ) - RRSe ),MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03276450805001758}, {"determining": "( RRS + Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - RCSe ) )", "obj1": 0.19433198380566802, "obj2": 0.7951281920390856}, {"determining": "( ( Max( ACS,( ( Const / Max( AMS,AMS ) ) + FirstVNF_CPU ) ) - MRS ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( ( MLU - Min( ( ( Min( RRSe ,RRSe ) - MUC ) / RMSe ) ,MUM ) ),Min( ( MUM / Max( DS,MUM ) ) ,MUM ) )", "obj1": 0.21052631578947367, "obj2": 0.7723446293904196}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( DDR / PN ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) )", "choosing": "( ( MUR - MUC ) - ( MUR / MUM ) )", "obj1": 0.19838056680161945, "obj2": 0.7859431734050287}, {"determining": "Min( ( ( RRS - ( FirstVNF_CPU_Server / RRS ) ) / Max( RRS,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( Min( Max( CS,( RRSe * ( RRSe + RMSe ) ) ) ,( DS + RCSe ) ),RCSe ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MLU + CS ) + Min( RRSe ,( RMSe - ( ( ( MLU / RMSe ) / RCSe ) * MLU ) ) ) ) - MLU ),Min( DS ,DS ) )", "obj1": 0.5161943319838057, "obj2": 0.42661656464524655}, {"determining": "Min( Max( FirstVNF_CPU_Server,PN ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.770047322521666}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( Max( ( MLU + Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Max( Max( ( Min( ( CS + MLU ) ,MUC ) * ( MUM + MUM ) ),DS ),Min( ( DS * ( RMSe / RMSe ) ) ,MLU ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6752775506161885}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( MUR - ( ( ( MUR / CS ) - ( ( RCSe - MLU ) + ( MUM - RRSe ) ) ) + ( ( RMSe / Min( ( MUM - RCSe ) ,MLU ) ) + Max( MUM,MUR ) ) ) ) ) - Max( CS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * MUC ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8604202837680489}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) - Max( RRS,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Min( ( Min( RRSe ,Max( RMSe,( RMSe + MUR ) ) ) / ( ( RMSe * Min( MUC ,MUC ) ) * RCSe ) ) ,DS ) - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS + FirstVNF_CPU_Server ) ,( DDR * MDR ) )", "choosing": "( ( MLU - Max( CS,( MUM / RCSe ) ) ) / ( RCSe / DS ) )", "obj1": 0.22874493927125505, "obj2": 0.7492641654725741}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Min( MLU ,MLU ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe * MUR ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.04548754320796509}, {"determining": "( ( ( MDR - PN ) - PN ) / Min( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) ,MRS ) )", "choosing": "Min( ( RCSe / RCSe ) ,( RMSe * ( CS - ( MUR * ( CS * ( DS + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR / BR ),( FirstVNF_RAM + ( ( FirstVNF_Mem * ( Min( Max( AMS,PN ) ,( CRS / Min( CRS ,RRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS + MUC ) / ( MUR * RCSe ) ),( DS + Max( MUM,RMSe ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6351116414320862}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) )", "choosing": "( ( MUR / ( Min( ( RMSe - MUM ) ,MLU ) * RRSe ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( ( ( AMS / Max( Min( ( AMS - Min( CRS ,ACS ) ) ,Const ),( ( ( BR - RRS ) / FirstVNF_RAM_Server ) * MDR ) ) ) / FirstVNF_RAM_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( RRSe - CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7541190101864406}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUC ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8774032838633913}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,( MDR * PN ) )", "choosing": "( ( Min( MLU ,( MUM - RMSe ) ) - Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) ) + Max( RCSe,MLU ) )", "obj1": 0.9331983805668016, "obj2": 0.06686084929335674}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "Min( Max( FirstVNF_CPU_Server,PN ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.770047322521666}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe * MUC ) + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU - Const ) ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / ( DS / ( CS / ( ( MUR / RMSe ) * CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( ( MUM / MLU ) - MUC ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ARS,BR ) ,( FirstVNF_CPU_Server / CRS ) ) + ( ( ACS + ARS ) - ( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( CS - Min( DS ,MUM ) ) + RRSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.10121457489878542, "obj2": 0.8707572420646083}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8604202837680489}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - ( ACS / CRS ) ) )", "choosing": "( ( CS / RCSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,( MRS / ( ACS * MDR ) ) )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + Max( Min( RCSe ,RCSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( FirstVNF_Mem_Server / ( ( MDR - ( ARS / FirstVNF_Mem ) ) / Max( FirstVNF_RAM,RRS ) ) ) ) - Max( Min( MRS ,BR ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( ( Min( RRSe ,MUR ) - MUM ) * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( Max( ( ( Min( Max( RRSe,RRSe ) ,MUC ) + MUC ) * RRSe ),CS ) ,( MUC - DS ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem / ( CRS + FirstVNF_Mem ) ) * MDR ),DDR ) / FirstVNF_RAM ) - ( DDR - Min( Min( ( BR / Min( AMS ,FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + ( MDR + FirstVNF_CPU_Server ) ) + Const ) ) ,Const ) ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU - Max( ( CS * MUR ),( MUM / ( RCSe * Min( DS ,RMSe ) ) ) ) ) ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.8785425101214575, "obj2": 0.11434365345572348}, {"determining": "( ( BR * Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MLU + CS ) + Min( RRSe ,( RMSe - ( ( ( MLU / RMSe ) / RCSe ) * MLU ) ) ) ) - MLU ),Min( DS ,DS ) )", "obj1": 0.5161943319838057, "obj2": 0.42661656464524655}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( Max( RRSe,MUM ) + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.19940066404165327}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.8967611336032388, "obj2": 0.10223049366365859}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "Max( ( BR / BR ),( FirstVNF_RAM + ( ( FirstVNF_Mem * ( Min( Max( AMS,PN ) ,( CRS / Min( CRS ,RRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS + MUC ) / ( MUR * RCSe ) ),( DS + Max( MUM,RMSe ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6351116414320862}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_Mem_Server / ARS ) / ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( MLU ,( MUM - RMSe ) ) - Min( ( MLU - CS ) ,Max( RRSe,Min( MUC ,( RCSe * Min( CS ,( RRSe - RRSe ) ) ) ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.07041572024249179}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_RAM - DDR ) * RRS ) + ( ( ACS + ARS ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + CS ) + CS ) * Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.47368421052631576, "obj2": 0.47543462663763036}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + AMS )", "choosing": "Max( ( CS - ( DS / RRSe ) ),MLU )", "obj1": 0.19433198380566802, "obj2": 0.7760388193165697}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( RCSe - RCSe ) + Max( RCSe,MLU ) )", "obj1": 0.22267206477732793, "obj2": 0.7422373331529503}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "Max( ( BR + ( ( Min( ( ARS * ARS ) ,MRS ) * ( AMS * CRS ) ) - RRS ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RCSe - CS ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - CS ) * Min( Max( RMSe,MUM ) ,MUR ) )", "obj1": 0.35020242914979755, "obj2": 0.597856055543296}, {"determining": "( ( FirstVNF_Mem / ( BR * FirstVNF_CPU ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( MLU - DS ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * RRS ) ) ,( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - ( PN + BR ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUR ) + CS ) + CS ) - ( MUM / DS ) ) ,Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.48380566801619435, "obj2": 0.4607347740089511}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( ( ( AMS / Max( Min( ( AMS - Min( CRS ,ACS ) ) ,Const ),( ( ( BR - RRS ) / FirstVNF_RAM_Server ) * MDR ) ) ) / FirstVNF_RAM_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( RRSe - CS ) )", "obj1": 0.2165991902834008, "obj2": 0.7541190101864406}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe * MUR ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.04548754320796509}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( DS / ( MUR - Max( ( RMSe + Min( MLU ,RMSe ) ),( DS - Min( CS ,MLU ) ) ) ) ),CS ) / RRSe ) / ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - MUR ) ) * ( MLU / CS ) ) + Min( DS ,MUM ) ) )", "obj1": 0.9959514170040485, "obj2": 0.004863771991226045}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUC ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8774032838633913}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( Max( ( MLU + Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Max( Max( ( Min( ( CS + MLU ) ,MUC ) * ( MUM + MUM ) ),DS ),Min( ( DS * ( RMSe / RMSe ) ) ,MLU ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6752775506161885}, {"determining": "( Max( ( ( Max( Max( DDR,DDR ),Const ) / Min( ACS ,DDR ) ) - ARS ),Const ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) )", "choosing": "( ( MUR - MUC ) - CS )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * RRS ) ) ,Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC - ( MUM / DS ) ) ,Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Max( ( ( Max( RCSe,Min( ( ( DS / MLU ) / CS ) ,RRSe ) ) - ( MUM + ( RCSe * MUR ) ) ) + MUC ),( MLU + DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.44906569339228175}, {"determining": "( Min( ( ARS * ( BR + ( Min( MDR ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( MLU - DS ) ,( ( MLU - MLU ) * RMSe ) ) )", "obj1": 0.9655870445344129, "obj2": 0.027900854738507685}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8604202837680489}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - ( MRS * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - DS ) ,Max( ( ( RMSe / MLU ) - RRSe ),MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03276450805001758}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( Max( FirstVNF_Mem,MRS ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( MLU + DS ) )", "obj1": 0.4959514170040486, "obj2": 0.43991821662623676}, {"determining": "( Min( DDR ,MDR ) * ( ( PN * ( Const - DDR ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU - CS ) - MLU ),( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( DS * ( ( RCSe * MUM ) - MUC ) ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7723723148647542}, {"determining": "( ( ARS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ( DDR + ( ( Max( ARS,FirstVNF_CPU_Server ) / DDR ) + MRS ) ) ) )", "choosing": "( Max( MLU,MUC ) * Max( Min( ( MUM / MUC ) ,RMSe ),DS ) )", "obj1": 0.9595141700404858, "obj2": 0.04368318463245342}, {"determining": "Min( Max( FirstVNF_CPU_Server,PN ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.770047322521666}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( Max( ACS,( ( Const / Max( AMS,AMS ) ) + FirstVNF_CPU ) ) - MRS ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( ( MLU - Min( ( ( Min( RRSe ,RRSe ) - MUC ) / RMSe ) ,MUM ) ),Min( ( MUM / Max( DS,MUM ) ) ,MUM ) )", "obj1": 0.21052631578947367, "obj2": 0.7723446293904196}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8604202837680489}, {"determining": "Min( Max( FirstVNF_CPU_Server,PN ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.770047322521666}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( Min( MLU ,MLU ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - ( FirstVNF_CPU_Server / RRS ) ) / Max( RRS,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( Min( Max( CS,( RRSe * ( RRSe + RMSe ) ) ) ,( DS + RCSe ) ),RCSe ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( MUR - ( ( ( MUR / CS ) - ( ( RCSe - MLU ) + ( MUM - RRSe ) ) ) + ( ( RMSe / Min( ( MUM - RCSe ) ,MLU ) ) + Max( MUM,MUR ) ) ) ) ) - Max( CS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * MUC ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) - Max( RRS,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Min( ( Min( RRSe ,Max( RMSe,( RMSe + MUR ) ) ) / ( ( RMSe * Min( MUC ,MUC ) ) * RCSe ) ) ,DS ) - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Min( MLU ,MLU ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - PN ) - PN ) / Min( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) ,MRS ) )", "choosing": "Min( ( RCSe / RCSe ) ,( RMSe * ( CS - ( MUR * ( CS * ( DS + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) )", "choosing": "( ( MUR / ( Min( ( RMSe - MUM ) ,MLU ) * RRSe ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe * MUC ) + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU - Const ) ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / ( DS / ( CS / ( ( MUR / RMSe ) * CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( ( MUM / MLU ) - MUC ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - ( ACS / CRS ) ) )", "choosing": "( ( CS / RCSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - ( MDR * PN ) ) ,CRS ) + ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( ( Max( MUM,( Min( MLU ,( MUM - RMSe ) ) - Min( DS ,Max( RRSe,MUM ) ) ) ) / Max( MUR,( MLU * RRSe ) ) ),DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( FirstVNF_Mem_Server + ( Min( MRS ,ARS ) / AMS ) ) )", "choosing": "( ( MUR / ( Min( ( RMSe - MUM ) ,( Min( DS ,( MLU / MUC ) ) + DS ) ) * RRSe ) ) / Min( Max( RCSe,( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,RRS ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( AMS / ( CRS + Min( Const ,PN ) ) ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( ( ( ( RMSe * MUC ) + ( RMSe / CS ) ) + ( ( MUC * RCSe ) - CS ) ) - MUC ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( ( MDR - ( ARS / FirstVNF_Mem ) ) / Max( FirstVNF_RAM,RRS ) ) ) ,PN )", "choosing": "( ( MLU + ( MLU / CS ) ) - ( DS + Max( DS,Max( MLU,Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,ACS ) )", "choosing": "Max( MLU,Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,MRS ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( Min( DDR ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / Max( ( ( MLU - CS ) - MLU ),Min( DS ,DS ) ) ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,PN ) - ( CRS / ( DDR + MDR ) ) ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * Min( ( CS * ( MUC / MLU ) ) ,MUC ) ) ),Max( ( MLU / ( ( ( RMSe * RCSe ) * RCSe ) * RCSe ) ),( RCSe / Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / RCSe ) ) ) ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,MRS ) / ( Min( ( DDR + MDR ) ,PN ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) )", "choosing": "( RRSe - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( ( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) ),DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( BR * FirstVNF_CPU ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) ) * Min( Max( Min( ( Const * DDR ) ,FirstVNF_RAM ),( Max( MRS,( ARS / DDR ) ) - ( Max( MRS,MDR ) - AMS ) ) ) ,DDR ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) - Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( RMSe - ( CS * ( DS + MUM ) ) ) ) / ( Min( RCSe ,RRSe ) + ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( MLU + ( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( ( RRSe * Max( RMSe,MUR ) ) ,Min( ( ( DS / Min( Min( RRSe ,RRSe ) ,( RRSe - MUM ) ) ) * ( Min( MUM ,RCSe ) / CS ) ) ,Min( RCSe ,DS ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,( MRS / ( ACS * MDR ) ) )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + Max( Min( RCSe ,RCSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( FirstVNF_RAM / AMS ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( CS + MUC ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.17743994212699585}, {"determining": "Min( ( ( Min( ARS ,FirstVNF_Mem ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.29407445973724045}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem / ( CRS + FirstVNF_Mem ) ) * MDR ),DDR ) / FirstVNF_RAM ) - ( DDR - Min( Min( ( BR / Min( AMS ,FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + ( MDR + FirstVNF_CPU_Server ) ) + Const ) ) ,Const ) ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU - Max( ( CS * MUR ),( MUM / ( RCSe * Min( DS ,RMSe ) ) ) ) ) ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.8785425101214575, "obj2": 0.11434365345572348}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( BR * Max( FirstVNF_CPU_Server,ACS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MLU + CS ) + Min( RRSe ,( RMSe - ( ( ( MLU / RMSe ) / RCSe ) * MLU ) ) ) ) - MLU ),Min( DS ,DS ) )", "obj1": 0.5161943319838057, "obj2": 0.42661656464524655}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.46558704453441296, "obj2": 0.460390642671365}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "Max( ( BR / BR ),( FirstVNF_RAM + ( ( FirstVNF_Mem * ( Min( Max( AMS,PN ) ,( CRS / Min( CRS ,RRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS + MUC ) / ( MUR * RCSe ) ),( DS + Max( MUM,RMSe ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6351116414320862}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( RCSe - RCSe ) + Max( RCSe,MLU ) )", "obj1": 0.22267206477732793, "obj2": 0.7422373331529503}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) ),FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),DS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 0.9230769230769231, "obj2": 0.07990438902037106}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( Min( FirstVNF_CPU_Server ,CRS ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( CS - MUR ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2718650408201964}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "( ( FirstVNF_Mem / ( BR * FirstVNF_CPU ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( MLU - DS ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Max( ( ( Max( RCSe,Min( ( ( DS / MLU ) / CS ) ,RRSe ) ) - ( MUM + ( RCSe * MUR ) ) ) + MUC ),( MLU + DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.44906569339228175}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) - FirstVNF_RAM ) + ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( ( RCSe / Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / RCSe ) ) ) ) - ( DS / RRSe ) ),Min( Max( ( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.902834008097166, "obj2": 0.10059428577276132}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( FirstVNF_CPU_Server - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) - RMSe )", "obj1": 0.18218623481781376, "obj2": 0.7906974932594688}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RRSe / MUR ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ) * ( ( CS / CS ) / ( ( Min( ( MUR + MUR ) ,MUR ) * MUR ) - DS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.753681193217337}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( DS / ( MUR - Max( ( RMSe + Min( MLU ,RMSe ) ),( DS - Min( CS ,MLU ) ) ) ) ),CS ) / RRSe ) / ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - MUR ) ) * ( MLU / CS ) ) + Min( DS ,MUM ) ) )", "obj1": 0.9959514170040485, "obj2": 0.004863771991226045}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.8967611336032388, "obj2": 0.10223049366365859}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUC ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8774032838633913}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( Max( ( ( Max( Max( DDR,DDR ),Const ) / Min( ACS ,DDR ) ) - ARS ),Const ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) )", "choosing": "( ( MUR - MUC ) - CS )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( PN - ( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) ) ) )", "choosing": "( Min( MLU ,( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) - MLU ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6839626913644368}, {"determining": "Max( ( BR + ( ( Min( ( ARS * ARS ) ,MRS ) * ( AMS * CRS ) ) - RRS ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RCSe - CS ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - CS ) * Min( Max( RMSe,MUM ) ,MUR ) )", "obj1": 0.35020242914979755, "obj2": 0.597856055543296}, {"determining": "Max( ( BR + ( ( Min( ( ARS * ARS ) ,MRS ) * Min( AMS ,RRS ) ) - RRS ) ),( DDR + BR ) )", "choosing": "( ( Max( ( CS - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - CS ) * Min( MUM ,MUR ) )", "obj1": 0.354251012145749, "obj2": 0.5911615856585335}, {"determining": "( Min( ( ARS * ( BR + ( Min( MDR ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( MLU - DS ) ,( ( MLU - MLU ) * RMSe ) ) )", "obj1": 0.9655870445344129, "obj2": 0.027900854738507685}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),FirstVNF_Mem_Server ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05403238295264214}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * RRS ) ) ,Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC - ( MUM / DS ) ) ,Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( ( DDR / ACS ) / ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( RRSe - DS ) / ( RCSe / MUR ) )", "obj1": 0.15789473684210525, "obj2": 0.8112318813828863}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( Min( CS ,MUM ) + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06400159215354617}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe * MUR ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.04548754320796509}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - RRS ) )", "choosing": "( ( ( ( ( DS + RCSe ) / ( Max( RCSe,( MLU / RMSe ) ) * DS ) ) + CS ) + CS ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8623505771794198}, {"determining": "( ( Max( ACS,( ( Const / Max( AMS,AMS ) ) + FirstVNF_CPU ) ) - MRS ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( ( MLU - Min( ( ( Min( RRSe ,RRSe ) - MUC ) / RMSe ) ,MUM ) ),Min( ( MUM / Max( DS,MUM ) ) ,MUM ) )", "obj1": 0.21052631578947367, "obj2": 0.7723446293904196}, {"determining": "( RRS + ( Min( FirstVNF_CPU_Server ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7826717096286107}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - ( Const - FirstVNF_RAM ) )", "choosing": "( ( MLU * DS ) * ( MUM / CS ) )", "obj1": 0.5141700404858299, "obj2": 0.4269598275352132}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - ( MRS * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - DS ) ,Max( ( ( RMSe / MLU ) - RRSe ),MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03276450805001758}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( Max( FirstVNF_Mem,MRS ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( MLU + DS ) )", "obj1": 0.4959514170040486, "obj2": 0.43991821662623676}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( Max( ( MLU + Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Max( Max( ( Min( ( CS + MLU ) ,MUC ) * ( MUM + MUM ) ),DS ),Min( ( DS * ( RMSe / RMSe ) ) ,MLU ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6752775506161885}, {"determining": "( ( ARS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ( DDR + ( ( Max( ARS,FirstVNF_CPU_Server ) / DDR ) + MRS ) ) ) )", "choosing": "( Max( MLU,MUC ) * Max( Min( ( MUM / MUC ) ,RMSe ),DS ) )", "obj1": 0.9595141700404858, "obj2": 0.04368318463245342}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + AMS )", "choosing": "Max( ( CS - ( DS / RRSe ) ),MLU )", "obj1": 0.19433198380566802, "obj2": 0.7760388193165697}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( Min( DDR ,MDR ) * ( ( PN * ( Const - DDR ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU - CS ) - MLU ),( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( DS * ( ( RCSe * MUM ) - MUC ) ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7723723148647542}, {"determining": "Min( Max( FirstVNF_CPU_Server,( DDR - PN ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.773257006601888}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( Min( MLU ,MLU ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - ( FirstVNF_CPU_Server / RRS ) ) / Max( RRS,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( Min( Max( CS,( RRSe * ( RRSe + RMSe ) ) ) ,( DS + RCSe ) ),RCSe ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( MUR - ( ( ( MUR / CS ) - ( ( RCSe - MLU ) + ( MUM - RRSe ) ) ) + ( ( RMSe / Min( ( MUM - RCSe ) ,MLU ) ) + Max( MUM,MUR ) ) ) ) ) - Max( CS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * MUC ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) - Max( RRS,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Min( ( Min( RRSe ,Max( RMSe,( RMSe + MUR ) ) ) / ( ( RMSe * Min( MUC ,MUC ) ) * RCSe ) ) ,DS ) - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Min( MLU ,MLU ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - PN ) - PN ) / Min( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) ,MRS ) )", "choosing": "Min( ( RCSe / RCSe ) ,( RMSe * ( CS - ( MUR * ( CS * ( DS + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) )", "choosing": "( ( MUR / ( Min( ( RMSe - MUM ) ,MLU ) * RRSe ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe * MUC ) + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU - Const ) ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / ( DS / ( CS / ( ( MUR / RMSe ) * CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( ( MUM / MLU ) - MUC ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - ( ACS / CRS ) ) )", "choosing": "( ( CS / RCSe ) * ( MUR + ( MUM / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - ( MDR * PN ) ) ,CRS ) + ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( ( Max( MUM,( Min( MLU ,( MUM - RMSe ) ) - Min( DS ,Max( RRSe,MUM ) ) ) ) / Max( MUR,( MLU * RRSe ) ) ),DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( FirstVNF_Mem_Server + ( Min( MRS ,ARS ) / AMS ) ) )", "choosing": "( ( MUR / ( Min( ( RMSe - MUM ) ,( Min( DS ,( MLU / MUC ) ) + DS ) ) * RRSe ) ) / Min( Max( RCSe,( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,RRS ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,( MLU / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( AMS / ( CRS + Min( Const ,PN ) ) ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + ( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( ( ( ( RMSe * MUC ) + ( RMSe / CS ) ) + ( ( MUC * RCSe ) - CS ) ) - MUC ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Max( FirstVNF_RAM,( ( ( ( DDR - FirstVNF_Mem ) / DDR ) - ( FirstVNF_RAM_Server * CRS ) ) - AMS ) ) / ( MRS + DDR ) ) / ( FirstVNF_RAM + AMS ) )", "choosing": "Min( ( RMSe * Max( MUR,( ( MUR / ( RCSe / DS ) ) - MUM ) ) ) ,( ( ( MUR / DS ) / MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( ( RRSe * Max( RMSe,MUR ) ) ,Min( ( ( DS / Min( Min( RRSe ,RRSe ) ,( RRSe - MUM ) ) ) * ( Min( MUM ,RCSe ) / CS ) ) ,Min( RCSe ,DS ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "Min( ( ( Min( ARS ,FirstVNF_Mem ) - DDR ) * ARS ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / ( Max( ( RRSe / ( MUR - RCSe ) ),CS ) / RRSe ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.2831366163725512}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.8461538461538461, "obj2": 0.15270671172718003}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - ( Const - ( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( MLU * DS ) * RCSe )", "obj1": 0.5080971659919028, "obj2": 0.41882407088975615}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( Max( ( ( FirstVNF_Mem / ( CRS + FirstVNF_Mem ) ) * MDR ),DDR ) / FirstVNF_RAM ) - ( DDR - Min( Min( ( BR / Min( AMS ,FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) + ( MDR + FirstVNF_CPU_Server ) ) + Const ) ) ,Const ) ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU - Max( ( CS * MUR ),( MUM / ( RCSe * Min( DS ,RMSe ) ) ) ) ) ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.8785425101214575, "obj2": 0.11434365345572348}, {"determining": "( ( CRS - MDR ) + ( ( ARS * Min( ( ACS + ( ( ACS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( ( MUR - DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + MUM ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.4089068825910931, "obj2": 0.5380397907641274}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( RCSe - RCSe ) + Max( RCSe,MLU ) )", "obj1": 0.22267206477732793, "obj2": 0.7422373331529503}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.46558704453441296, "obj2": 0.460390642671365}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + Max( CS,RRSe ) ) / CS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5506180414753913}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "( ( DDR / ACS ) / RRS )", "choosing": "( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / ( RCSe / MUR ) )", "obj1": 0.29959514170040485, "obj2": 0.6397184472249857}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( MUR - DS ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.48254758292820615}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) ),FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),DS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 0.9230769230769231, "obj2": 0.07990438902037106}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Max( ( ( Max( RCSe,Min( ( ( DS / MLU ) / CS ) ,RRSe ) ) - ( MUM + ( RCSe * MUR ) ) ) + MUC ),( MLU + DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.44906569339228175}, {"determining": "( ( Min( FirstVNF_CPU_Server ,CRS ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( CS - MUR ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2718650408201964}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) - FirstVNF_RAM ) + ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( ( RCSe / Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / RCSe ) ) ) ) - ( DS / RRSe ) ),Min( Max( ( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.902834008097166, "obj2": 0.10059428577276132}, {"determining": "Max( ( BR / BR ),( FirstVNF_RAM + ( ( FirstVNF_Mem * ( Min( Max( AMS,PN ) ,( CRS / Min( CRS ,RRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS + MUC ) / ( MUR * RCSe ) ),( DS + Max( MUM,RMSe ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6351116414320862}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( FirstVNF_CPU_Server - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) - RMSe )", "obj1": 0.18218623481781376, "obj2": 0.7906974932594688}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Max( ( BR + ( ( Min( ( ARS * ARS ) ,MRS ) * ( AMS * CRS ) ) - RRS ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RCSe - CS ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - CS ) * Min( Max( RMSe,MUM ) ,MUR ) )", "obj1": 0.35020242914979755, "obj2": 0.597856055543296}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( MLU,CS ) * ( MLU / CS ) )", "obj1": 0.9473684210526315, "obj2": 0.043592452848916594}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RRSe / MUR ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ) * ( ( CS / CS ) / ( ( Min( ( MUR + MUR ) ,MUR ) * MUR ) - DS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.753681193217337}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.8967611336032388, "obj2": 0.10223049366365859}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( CS,MUC ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8774032838633913}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( Min( ( ARS * ( BR + ( Min( MDR ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( MLU - DS ) ,( ( MLU - MLU ) * RMSe ) ) )", "obj1": 0.9655870445344129, "obj2": 0.027900854738507685}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( ( FirstVNF_RAM + ( ( ( Max( FirstVNF_RAM,Max( FirstVNF_Mem_Server,BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.6705458950812979}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( PN - ( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) ) ) )", "choosing": "( Min( MLU ,( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) - MLU ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6839626913644368}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * RRS ) ) ,Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC - ( MUM / DS ) ) ,Min( ( MUR + RCSe ) ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - ( MRS * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - DS ) ,Max( ( ( RMSe / MLU ) - RRSe ),MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03276450805001758}, {"determining": "( ( DDR / ACS ) / ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( RRSe - DS ) / ( RCSe / MUR ) )", "obj1": 0.15789473684210525, "obj2": 0.8112318813828863}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) - FirstVNF_CPU_Server ) + ( ( ACS + ARS ) - RRS ) )", "choosing": "( ( ( ( ( DS + RCSe ) / ( Max( RCSe,( MLU / RMSe ) ) * DS ) ) + CS ) + CS ) * ( MUR + ( MUM / DS ) ) )", "obj1": 0.10728744939271255, "obj2": 0.8623505771794198}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( DDR - ( Const / Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,MUR ) / ( RCSe + RRSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7642298905707303}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( DS / ( MUR - Max( ( RMSe + Min( MLU ,RMSe ) ),( DS - Min( CS ,MLU ) ) ) ) ),CS ) / RRSe ) / ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - MUR ) ) * ( MLU / CS ) ) + Min( DS ,MUM ) ) )", "obj1": 0.9959514170040485, "obj2": 0.004863771991226045}, {"determining": "( RRS + ( Min( FirstVNF_CPU_Server ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7826717096286107}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( Max( ( MLU + Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Max( Max( ( Min( ( CS + MLU ) ,MUC ) * ( MUM + MUM ) ),DS ),Min( ( DS * ( RMSe / RMSe ) ) ,MLU ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6752775506161885}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( Max( FirstVNF_Mem,MRS ),FirstVNF_Mem ) )", "choosing": "Max( ( MLU - RMSe ),( MLU + DS ) )", "obj1": 0.4959514170040486, "obj2": 0.43991821662623676}, {"determining": "( Min( DDR ,MDR ) * ( ( PN * ( Const - DDR ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU - CS ) - MLU ),( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( DS * ( ( RCSe * MUM ) - MUC ) ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7723723148647542}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,MUM ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07014574097199948}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "Min( Max( FirstVNF_CPU_Server,( DDR - PN ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + Max( DS,Max( MLU,MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.773257006601888}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( ( DDR / ( RRS * ( CRS / AMS ) ) ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) ) )", "choosing": "Max( ( ( MUR - ( CS / MUM ) ) * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.19230769230769232, "obj2": 0.7779567669540476}, {"determining": "( ( ( ARS - Max( MRS,MDR ) ) * ( ( ( Const / ACS ) + FirstVNF_RAM_Server ) + RRS ) ) * ( ACS * DDR ) )", "choosing": "( ( ( ( RRSe + MUM ) + MUR ) * RCSe ) - MUM )", "obj1": 0.9291497975708503, "obj2": 0.06733887466892874}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( Min( CS ,MUM ) + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06400159215354617}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( Const * ( BR / FirstVNF_RAM_Server ) ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( DS / ( MUR - Max( MUM,( DS - Min( CS ,MLU ) ) ) ) ),CS ) / RRSe ) / ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - MUR ) ) * ( MLU / CS ) ) + Min( DS ,MUM ) ) )", "obj1": 0.9979757085020243, "obj2": 0.002421791125091705}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * ( ACS + ARS ) ),( Max( MRS,MRS ) - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( ( MUR + ( ( MUM + Min( MUM ,( CS * MUR ) ) ) / DS ) ) * RRSe ) ) )", "obj1": 0.9635627530364372, "obj2": 0.028937467566922614}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + AMS )", "choosing": "Max( ( CS - ( DS / RRSe ) ),MLU )", "obj1": 0.19433198380566802, "obj2": 0.7760388193165697}, {"determining": "( Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,CRS ) + AMS )", "choosing": "Max( ( CS - ( Min( MLU ,MLU ) / RRSe ) ),MLU )", "obj1": 0.19433198380566802, "obj2": 0.7760388193165697}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,( MRS / ( ACS * MDR ) ) )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + Max( Min( RCSe ,RCSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( Min( MLU ,MLU ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - ( FirstVNF_CPU_Server / RRS ) ) / Max( RRS,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( Min( Max( CS,( RRSe * ( RRSe + RMSe ) ) ) ,( DS + RCSe ) ),RCSe ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( MUR - ( ( ( MUR / CS ) - ( ( RCSe - MLU ) + ( MUM - RRSe ) ) ) + ( ( RMSe / Min( ( MUM - RCSe ) ,MLU ) ) + Max( MUM,MUR ) ) ) ) ) - Max( CS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * MUC ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) - Max( RRS,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Min( ( Min( RRSe ,Max( RMSe,( RMSe + MUR ) ) ) / ( ( RMSe * Min( MUC ,MUC ) ) * RCSe ) ) ,DS ) - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( DDR - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) ),CS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,( ( ( ( DDR - FirstVNF_Mem ) / DDR ) - ( FirstVNF_RAM_Server * CRS ) ) - AMS ) ) / ( MRS + DDR ) ) / ( FirstVNF_RAM + AMS ) )", "choosing": "Min( ( RMSe * Max( MUR,( ( MUR / ( RCSe / DS ) ) - MUM ) ) ) ,( ( ( MUR / DS ) / MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( Min( ARS ,FirstVNF_Mem ) - DDR ) * ARS ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / ( Max( ( RRSe / ( MUR - RCSe ) ),CS ) / RRSe ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.2831366163725512}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.46558704453441296, "obj2": 0.460390642671365}, {"determining": "( Min( Max( AMS,FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( MUM ,( ( CS / MUM ) + ( MUM - DS ) ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.8360323886639676, "obj2": 0.16425322888533508}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( CRS - MDR ) + ( ( ARS * Min( ( ACS + ( ( ACS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( ( MUR - DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + MUM ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.4089068825910931, "obj2": 0.5380397907641274}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( RCSe - RCSe ) + Max( RCSe,MLU ) )", "obj1": 0.22267206477732793, "obj2": 0.7422373331529503}, {"determining": "Max( ( BR / BR ),( FirstVNF_RAM + ( ( FirstVNF_Mem * ( Min( Max( AMS,PN ) ,( CRS / Min( CRS ,RRS ) ) ) * Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS + MUC ) / ( MUR * RCSe ) ),( DS + Max( MUM,RMSe ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6351116414320862}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.8967611336032388, "obj2": 0.10223049366365859}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + Max( CS,RRSe ) ) / CS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5506180414753913}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) / RRS ) + FirstVNF_RAM )", "choosing": "Max( ( MLU - RMSe ),( MLU + ( Max( MLU,CS ) * Min( DS ,( ( MLU / ( MUC / RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.6697767128973281}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( MUR - DS ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.48254758292820615}, {"determining": "( ( Min( FirstVNF_CPU_Server ,CRS ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( CS - MUR ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2718650408201964}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( FirstVNF_CPU_Server - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) - RMSe )", "obj1": 0.18218623481781376, "obj2": 0.7906974932594688}, {"determining": "( ( ( Max( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( RMSe,RMSe ) * ( MLU / CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5920594325405352}, {"determining": "( ( ( DDR - PN ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ( Const - DDR ) + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) ),FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),DS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( Max( MLU,RRSe ) ,MUM ) ) )", "obj1": 0.9129554655870445, "obj2": 0.09685077934285685}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RRSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.9210526315789473, "obj2": 0.07886237973695111}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RRSe / MUR ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ) * ( ( CS / CS ) / ( ( Min( ( MUR + MUR ) ,MUR ) * MUR ) - DS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.753681193217337}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( DDR - ( Const / Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,MUR ) / ( RCSe + RRSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7642298905707303}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( PN - ( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) ) ) )", "choosing": "( Min( MLU ,( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) - MLU ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6839626913644368}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "( Max( ( CRS / AMS ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( ( RMSe + ( RRSe + ( MUC / MLU ) ) ) ,( MLU / CS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8082890935376598}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( MLU,CS ) * ( MLU / CS ) )", "obj1": 0.9473684210526315, "obj2": 0.043592452848916594}, {"determining": "( ( ( Const - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.013333609853086358}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( RRS + ( Min( AMS ,MRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( RMSe - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.19433198380566802, "obj2": 0.7720159796716889}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( Max( FirstVNF_Mem,MRS ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MLU - RMSe ),( MLU + DS ) ) * ( MLU / CS ) )", "obj1": 0.9554655870445344, "obj2": 0.037697781239922325}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( RRS + ( Min( FirstVNF_CPU_Server ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7826717096286107}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( Min( ( ARS * ( BR + ( Min( MDR ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( MLU - DS ) ,( ( MLU - MLU ) * RMSe ) ) )", "obj1": 0.9655870445344129, "obj2": 0.027900854738507685}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) - FirstVNF_RAM ) + ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "Max( ( ( RCSe / Max( Min( MLU ,MLU ),Min( RCSe ,( Min( CS ,MUM ) / RCSe ) ) ) ) - ( DS / RRSe ) ),Min( Max( ( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) ),DS ) ,RRSe ) )", "obj1": 0.902834008097166, "obj2": 0.10059428577276132}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,MUM ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07014574097199948}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - ( MRS * FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - DS ) ,Max( ( ( RMSe / MLU ) - RRSe ),MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03276450805001758}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( ( DDR / ( RRS * ( CRS / AMS ) ) ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) ) )", "choosing": "Max( ( ( MUR - ( CS / MUM ) ) * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.19230769230769232, "obj2": 0.7779567669540476}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( DS / ( MUR - Max( ( RMSe + Min( MLU ,RMSe ) ),( DS - Min( CS ,MLU ) ) ) ) ),CS ) / RRSe ) / ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - MUR ) ) * ( MLU / CS ) ) + Min( DS ,MUM ) ) )", "obj1": 0.9959514170040485, "obj2": 0.004863771991226045}, {"determining": "( ( ( ARS - Max( MRS,MDR ) ) * ( ( ( Const / ACS ) + FirstVNF_RAM_Server ) + RRS ) ) * ( ACS * DDR ) )", "choosing": "( ( ( ( RRSe + MUM ) + MUR ) * RCSe ) - MUM )", "obj1": 0.9291497975708503, "obj2": 0.06733887466892874}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "Min( ( ( ARS - ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( Min( CS ,MUM ) + RCSe ),( MLU + ( Max( ( DS / ( MUR - RCSe ) ),CS ) / RRSe ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06400159215354617}, {"determining": "( Min( Max( ( MDR + FirstVNF_Mem_Server ),MDR ) ,CRS ) + ( ( Max( PN,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( Min( Min( ( ( MLU - RMSe ) / ( RCSe - RCSe ) ) ,Min( MUM ,( ( CS / RMSe ) + DS ) ) ) ,( MUM / DS ) ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.9979757085020243, "obj2": 0.002029744422072166}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * ( ACS + ARS ) ),( Max( MRS,MRS ) - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( ( MUR + ( ( MUM + Min( MUM ,( CS * MUR ) ) ) / DS ) ) * RRSe ) ) )", "obj1": 0.9635627530364372, "obj2": 0.028937467566922614}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( ( RRSe * Max( RMSe,MUR ) ) ,Min( ( ( DS / Min( Min( RRSe ,RRSe ) ,( RRSe - MUM ) ) ) * ( Min( MUM ,RCSe ) / CS ) ) ,Min( RCSe ,DS ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,( MRS / ( ACS * MDR ) ) )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + Max( Min( RCSe ,RCSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( Min( MLU ,MLU ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - ( FirstVNF_CPU_Server / RRS ) ) / Max( RRS,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( Min( Max( CS,( RRSe * ( RRSe + RMSe ) ) ) ,( DS + RCSe ) ),RCSe ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( MUR - ( ( ( MUR / CS ) - ( ( RCSe - MLU ) + ( MUM - RRSe ) ) ) + ( ( RMSe / Min( ( MUM - RCSe ) ,MLU ) ) + Max( MUM,MUR ) ) ) ) ) - Max( CS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * MUC ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) - Max( RRS,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( Min( ( Min( RRSe ,Max( RMSe,( RMSe + MUR ) ) ) / ( ( RMSe * Min( MUC ,MUC ) ) * RCSe ) ) ,DS ) - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) ),CS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( Min( ARS ,FirstVNF_Mem ) - DDR ) * ARS ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / ( Max( ( RRSe / ( MUR - RCSe ) ),CS ) / RRSe ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.2831366163725512}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.46558704453441296, "obj2": 0.460390642671365}, {"determining": "( ( ( Const - FirstVNF_CPU ) - DDR ) / ( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUR + ( MUM / DS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07171222809496629}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( RRS - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18834018049844733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "( Min( Max( AMS,FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( MUM ,( ( CS / MUM ) + ( MUM - DS ) ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.8360323886639676, "obj2": 0.16425322888533508}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( CRS - MDR ) + ( ( ARS * Min( ( ACS + ( ( ACS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( ( MUR - DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + MUM ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.4089068825910931, "obj2": 0.5380397907641274}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( RCSe - RCSe ) + Max( RCSe,MLU ) )", "obj1": 0.22267206477732793, "obj2": 0.7422373331529503}, {"determining": "Min( ( ( FirstVNF_CPU + DDR ) * ( ( MDR * Max( BR,PN ) ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( Max( RMSe,MLU ) + RCSe ),( MLU + ( MLU / ( ( MUC / Min( ( MUM + RRSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( MUR ,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.16746864304932185}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) / RRS ) + FirstVNF_RAM )", "choosing": "Max( ( MLU - RMSe ),( MLU + ( Max( MLU,CS ) * Min( DS ,( ( MLU / ( MUC / RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.6697767128973281}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( MUR - DS ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.48254758292820615}, {"determining": "( RRS + ( Min( FirstVNF_CPU_Server ,MDR ) * ( FirstVNF_CPU / ( ARS * ARS ) ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( MLU,( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.6318228511302535}, {"determining": "( ( Min( FirstVNF_CPU_Server ,CRS ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( CS - MUR ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2718650408201964}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( MLU,CS ) * ( MLU / CS ) )", "obj1": 0.9473684210526315, "obj2": 0.043592452848916594}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( ( Max( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( RMSe,RMSe ) * ( MLU / CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5920594325405352}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + ( BR - ( ( ( Const / FirstVNF_CPU ) * ( PN + MDR ) ) + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + ( Max( ( RRSe + CS ),( DS * Max( DS,RCSe ) ) ) / Min( MUR ,( ( MUR / MUM ) / CS ) ) ) ) / CS ) ) )", "obj1": 0.38866396761133604, "obj2": 0.5490359016598676}, {"determining": "Max( ( FirstVNF_RAM_Server / Max( FirstVNF_Mem,PN ) ),( DDR + BR ) )", "choosing": "( ( Max( ( ( RRSe / MUR ) - Min( ( MLU - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ) * ( ( CS / CS ) / ( ( Min( ( MUR + MUR ) ,MUR ) * MUR ) - DS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.753681193217337}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,MUM ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07014574097199948}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + Max( CS,RRSe ) ) / CS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5506180414753913}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( PN - ( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) ) ) )", "choosing": "( Min( MLU ,( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) - MLU ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6839626913644368}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.7917910065567677}, {"determining": "( Max( ( CRS / AMS ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( ( RMSe + ( RRSe + ( MUC / MLU ) ) ) ,( MLU / CS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8082890935376598}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( DDR - ( Const / Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - Const ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,MUR ) / ( RCSe + RRSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7642298905707303}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( RRS + ( Min( FirstVNF_CPU_Server ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7826717096286107}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( DDR / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( CS + CS ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.9635627530364372, "obj2": 0.01704763337267725}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( ( DDR / ( RRS * ( CRS / AMS ) ) ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem_Server + MRS ) ) ) ) ) )", "choosing": "Max( ( ( MUR - ( Min( MUC ,Min( MUM ,( ( RCSe - DS ) + DS ) ) ) / MUM ) ) * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7662616373175819}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( FirstVNF_CPU_Server - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) - RMSe )", "obj1": 0.18218623481781376, "obj2": 0.7906974932594688}, {"determining": "( ( ( Const - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.013333609853086358}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( ( ( ARS - DDR ) * ( Max( Const,MRS ) + RRS ) ) ,( ( DDR / ( RRS * ( CRS / AMS ) ) ) * ( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + MRS ) ) ) ) ) )", "choosing": "Max( ( ( MUR - ( CS / MUM ) ) * RCSe ),( MLU + Max( MLU,RMSe ) ) )", "obj1": 0.19230769230769232, "obj2": 0.7779567669540476}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( RRS + ( Min( AMS ,MRS ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( RMSe - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Min( CS ,( RRSe - RRSe ) ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.19433198380566802, "obj2": 0.7720159796716889}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( DS / ( MUR - Max( ( RMSe + Min( MLU ,RMSe ) ),( DS - Min( CS ,MLU ) ) ) ) ),CS ) / RRSe ) / ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - MUR ) ) * ( MLU / CS ) ) + Min( DS ,MUM ) ) )", "obj1": 0.9959514170040485, "obj2": 0.004863771991226045}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( ARS - Max( MRS,MDR ) ) * ( ( ( Const / ACS ) + FirstVNF_RAM_Server ) + RRS ) ) * ( ACS * DDR ) )", "choosing": "( ( ( ( RRSe + MUM ) + MUR ) * RCSe ) - MUM )", "obj1": 0.9291497975708503, "obj2": 0.06733887466892874}, {"determining": "( Min( ( ARS * ( BR + ( Min( ( FirstVNF_Mem - Min( ARS ,DDR ) ) ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - Min( PN ,PN ) ) )", "choosing": "( Min( MLU ,RMSe ) - Max( ( Min( DS ,MUR ) - ( ( RCSe + ( ( MLU - RRSe ) * MUC ) ) * CS ) ),( Max( RMSe,Min( MLU ,MLU ) ) + MUM ) ) )", "obj1": 0.937246963562753, "obj2": 0.057573893803932}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( Const * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( RRSe - MUM ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06312954767520318}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "( Min( Max( ( MDR + FirstVNF_Mem_Server ),MDR ) ,CRS ) + ( ( Max( PN,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( Min( Min( ( ( MLU - RMSe ) / ( RCSe - RCSe ) ) ,Min( MUM ,( ( CS / RMSe ) + DS ) ) ) ,( MUM / DS ) ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.9979757085020243, "obj2": 0.002029744422072166}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( Max( FirstVNF_RAM,( ( ( ( DDR - FirstVNF_Mem ) / DDR ) - ( FirstVNF_RAM_Server * CRS ) ) - AMS ) ) / ( MRS + DDR ) ) / ( FirstVNF_RAM + AMS ) )", "choosing": "Min( ( RMSe * Max( MUR,( ( MUR / ( RCSe / DS ) ) - MUM ) ) ) ,( ( ( MUR / DS ) / MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( ( RRSe * Max( RMSe,MUR ) ) ,Min( ( ( DS / Min( Min( RRSe ,RRSe ) ,( RRSe - MUM ) ) ) * ( Min( MUM ,RCSe ) / CS ) ) ,Min( RCSe ,DS ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,( MRS / ( ACS * MDR ) ) )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + Max( Min( RCSe ,RCSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + ( CRS / DDR ) ) ) - ( ( Max( Min( Max( ACS,FirstVNF_Mem ) ,MRS ),DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,( MUR + RCSe ) ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * Max( ( ( RCSe * ( DS * ( RRSe - MUR ) ) ) * MUC ),RCSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Min( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) ,RMSe ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( Min( MLU ,MLU ) ,MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - ( FirstVNF_CPU_Server / RRS ) ) / Max( RRS,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( Min( Max( CS,( RRSe * ( RRSe + RMSe ) ) ) ,( DS + RCSe ) ),RCSe ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( MUR - ( ( ( MUR / CS ) - ( ( RCSe - MLU ) + ( MUM - RRSe ) ) ) + ( ( RMSe / Min( ( MUM - RCSe ) ,MLU ) ) + Max( MUM,MUR ) ) ) ) ) - Max( CS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( ( ( ( MUR + MLU ) / MUR ) * DS ) ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3029513123464531}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.46558704453441296, "obj2": 0.460390642671365}, {"determining": "Min( ( ( Min( ARS ,FirstVNF_Mem ) - DDR ) * ARS ) ,( PN + BR ) )", "choosing": "Max( ( MUR * RCSe ),( MLU + ( MLU / ( Max( ( RRSe / ( MUR - RCSe ) ),CS ) / RRSe ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.2831366163725512}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( RRS - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18834018049844733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( MDR,CRS ) - ( BR * Max( FirstVNF_CPU_Server,DDR ) ) ) )", "choosing": "( ( MLU / Max( MUC,MUR ) ) - Min( DS ,Max( ( MLU + CS ),MUM ) ) )", "obj1": 0.17813765182186234, "obj2": 0.7904844413272393}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "( ( ( Max( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10262470132457452}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),( PN - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUR ) - Min( ( DS - DS ) ,Max( RRSe,MUM ) ) ),MUM ) - ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ) * Min( MUM ,MUR ) )", "obj1": 0.23279352226720648, "obj2": 0.7376409169710634}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( Min( Max( AMS,FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( MUM ,( ( CS / MUM ) + ( MUM - DS ) ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.8360323886639676, "obj2": 0.16425322888533508}, {"determining": "( ( ARS / ( MRS * ACS ) ) - ( DDR / ( MRS - Const ) ) )", "choosing": "( ( Max( MLU,( ( ( DS * ( Max( RRSe,MUR ) * Max( MUR,MUC ) ) ) / MLU ) * ( MUC / Min( Max( DS,MLU ) ,MUC ) ) ) ) + ( ( ( RMSe * ( Min( Min( MUM ,MUC ) ,MUR ) * ( RCSe * MUR ) ) ) / RRSe ) - DS ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU / ( ( FirstVNF_Mem - RRS ) + Max( DDR,FirstVNF_Mem_Server ) ) ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( ( DS + ( RMSe * ( MUR / MUR ) ) ) + MUC ),( MLU + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( RMSe ,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.1718581918288548}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) / RRS ) + FirstVNF_RAM )", "choosing": "Max( ( MLU - RMSe ),( MLU + ( Max( MLU,CS ) * Min( DS ,( ( MLU / ( MUC / RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.6697767128973281}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( MUR - DS ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.48254758292820615}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( ( CRS - MDR ) + ( ( ARS * Min( ( ACS + ( ( ACS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( ( MUR - DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + MUM ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.4089068825910931, "obj2": 0.5380397907641274}, {"determining": "( ( Min( FirstVNF_CPU_Server ,CRS ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( CS - MUR ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2718650408201964}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.4190283400809717, "obj2": 0.5260323036984704}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ( Max( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( RMSe,RMSe ) * ( MLU / CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5920594325405352}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + ( BR - ( ( ( Const / FirstVNF_CPU ) * ( PN + MDR ) ) + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + ( Max( ( RRSe + CS ),( DS * Max( DS,RCSe ) ) ) / Min( MUR ,( ( MUR / MUM ) / CS ) ) ) ) / CS ) ) )", "obj1": 0.38866396761133604, "obj2": 0.5490359016598676}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( MDR * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,MUM ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07014574097199948}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( MLU,CS ) * ( MLU / CS ) )", "obj1": 0.9473684210526315, "obj2": 0.043592452848916594}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + Max( CS,RRSe ) ) / CS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5506180414753913}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + AMS ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( ( MUR / MLU ) / RMSe ) - MUM ) ),MUM ) - ( MLU - MUM ) ) * ( MLU / CS ) )", "obj1": 0.43724696356275305, "obj2": 0.5008749101026022}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( PN - ( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ( Const + CRS ) ,MRS ) ) ) )", "choosing": "( Min( MLU ,( ( ( RCSe / Min( CS ,RCSe ) ) / RMSe ) - MLU ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6839626913644368}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "( Max( ( CRS / AMS ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( ( RMSe + ( RRSe + ( MUC / MLU ) ) ) ,( MLU / CS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8082890935376598}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01504679479920575}, {"determining": "( ( ( Const - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.013333609853086358}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * ( Max( DS,MLU ) + MLU ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.05247897300178065}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( MUR - ( CS / MUM ) ) + ( RCSe / DS ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.002952750016301401}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "( ( ( ARS - Max( MRS,MDR ) ) * ( ( ( Const / ACS ) + FirstVNF_RAM_Server ) + RRS ) ) * ( ACS * DDR ) )", "choosing": "( ( ( ( RRSe + MUM ) + MUR ) * RCSe ) - MUM )", "obj1": 0.9291497975708503, "obj2": 0.06733887466892874}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( Min( Max( AMS,MDR ) ,CRS ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,FirstVNF_RAM )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Max( RCSe,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8299595141700404, "obj2": 0.167220588551115}, {"determining": "( Min( ( ARS * ( BR + ( Min( ( FirstVNF_Mem - Min( ARS ,DDR ) ) ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - Min( PN ,PN ) ) )", "choosing": "( Min( MLU ,RMSe ) - Max( ( Min( DS ,MUR ) - ( ( RCSe + ( ( MLU - RRSe ) * MUC ) ) * CS ) ),( Max( RMSe,Min( MLU ,MLU ) ) + MUM ) ) )", "obj1": 0.937246963562753, "obj2": 0.057573893803932}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( Const * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( RRSe - MUM ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06312954767520318}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "Min( ( ( FirstVNF_CPU + DDR ) * ( ( MDR * Max( BR,PN ) ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( Max( RMSe,MLU ) + RCSe ),( MLU + ( MLU / ( ( MUC / Min( ( MUM + RRSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( MUR ,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.16746864304932185}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( Min( Max( ( MDR + FirstVNF_Mem_Server ),MDR ) ,CRS ) + ( ( Max( PN,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( Min( Min( ( ( MLU - RMSe ) / ( RCSe - RCSe ) ) ,Min( MUM ,( ( CS / RMSe ) + DS ) ) ) ,( MUM / DS ) ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.9979757085020243, "obj2": 0.002029744422072166}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( DDR - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) ),CS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,( ( ( ( DDR - FirstVNF_Mem ) / DDR ) - ( FirstVNF_RAM_Server * CRS ) ) - AMS ) ) / ( MRS + DDR ) ) / ( FirstVNF_RAM + AMS ) )", "choosing": "Min( ( RMSe * Max( MUR,( ( MUR / ( RCSe / DS ) ) - MUM ) ) ) ,( ( ( MUR / DS ) / MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( ( RRSe * Max( RMSe,MUR ) ) ,Min( ( ( DS / Min( Min( RRSe ,RRSe ) ,( RRSe - MUM ) ) ) * ( Min( MUM ,RCSe ) / CS ) ) ,Min( RCSe ,DS ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,( MRS / ( ACS * MDR ) ) )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),Min( ( RMSe * MUR ) ,RCSe ) ) - ( DS + Max( Min( RCSe ,RCSe ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_RAM ) - Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) )", "choosing": "( ( MLU * Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),DS ) ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( Const + Const ) )", "choosing": "( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - MUM ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( CRS * CRS ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( ( RMSe + Max( DS,( ( RCSe - MUM ) + ( RRSe / CS ) ) ) ) / ( DS - Max( ( MLU + CS ),MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Min( ARS ,FirstVNF_Mem ) ) - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / ( MUR - RCSe ) ),CS ) / Min( Max( MUC,DS ) ,RMSe ) ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) + Const ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( ( MUR / Min( MUR ,RMSe ) ) ,( ( RCSe - DS ) + DS ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) / ( ( FirstVNF_Mem_Server * MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( RMSe + RRSe ),( Min( RRSe ,( MUR / MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,( DDR * Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( ( MLU * Max( RMSe,( Min( MUR ,MUR ) - DS ) ) ) / RRSe ) * RRSe ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Max( PN,( ACS / Const ) ),( BR - MDR ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),( ( ( ( CS + Min( Max( ( MLU + RMSe ),MUC ) ,Max( RMSe,MLU ) ) ) + ( RMSe * ( MUC + RMSe ) ) ) + ( RMSe / MLU ) ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.24965780151232808}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "( Max( MRS,Const ) - Min( MDR ,Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( ( MUC / MLU ) - Max( Min( MUM ,( RCSe / ( RCSe - RRSe ) ) ),( RCSe * RRSe ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24087162424671088}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( Min( DS ,( RMSe / RMSe ) ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.7364952267242798}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( ( ( ( MUR + MLU ) / MUR ) * DS ) ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.3029513123464531}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Min( Max( AMS,FirstVNF_RAM ) ,CRS ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( CS - ( Min( Min( MUC ,Min( MUM ,( ( CS / MUM ) + ( MUM - DS ) ) ) ) ,CS ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 0.8360323886639676, "obj2": 0.16425322888533508}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * AMS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) / Min( CS ,MUM ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8421052631578947, "obj2": 0.10761104398111962}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09232540237012432}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( Min( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),MDR ) ,CRS ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,FirstVNF_RAM )", "choosing": "Max( ( MUR + RCSe ),( ( Max( ( ( RRSe + DS ) + ( Min( MUR ,MUR ) * CS ) ),( MUM + RMSe ) ) + RCSe ) + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Max( RCSe,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.1719490025112885}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.19610756865355417}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.4190283400809717, "obj2": 0.5260323036984704}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.7327935222672065, "obj2": 0.22476931966640376}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( ( ( Max( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( RMSe,RMSe ) * ( MLU / CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5920594325405352}, {"determining": "( ( ( ACS / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( CS / ( MUC - CS ) ) / DS ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6314030110568981}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( MLU,CS ) * ( MLU / CS ) )", "obj1": 0.9473684210526315, "obj2": 0.043592452848916594}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + Max( CS,RRSe ) ) / CS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5506180414753913}, {"determining": "( ( CRS - MDR ) + ( ( ARS * Min( ( ACS + ( ( ACS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( ( MUR - DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + MUM ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.4089068825910931, "obj2": 0.5380397907641274}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) )", "choosing": "Max( MLU,( MUR + ( Max( MUM,MUM ) + DS ) ) )", "obj1": 0.4068825910931174, "obj2": 0.5456315037873831}, {"determining": "( Max( ( CRS / AMS ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( ( RMSe + ( RRSe + ( MUC / MLU ) ) ) ,( MLU / CS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8082890935376598}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( RRS - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18834018049844733}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1805506261320495}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) * ( FirstVNF_Mem_Server + ( FirstVNF_RAM / AMS ) ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + ( BR - ( ( ( Const / FirstVNF_CPU ) * ( PN + MDR ) ) + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Max( DS,MLU ) + ( Max( ( RRSe + CS ),( DS * Max( DS,RCSe ) ) ) / Min( MUR ,( ( MUR / MUM ) / CS ) ) ) ) / CS ) ) )", "obj1": 0.38866396761133604, "obj2": 0.5490359016598676}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RMSe / MLU ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.23618723483343085}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( Const * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( RRSe - MUM ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06312954767520318}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( ( Max( ( Const * ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RMSe,( ( DS + ( ( MUM + MUR ) * MLU ) ) / Max( MUR,( RRSe * ( MUR - MLU ) ) ) ) ) - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.5040384540377294}, {"determining": "( ( ( Max( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10262470132457452}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_RAM_Server ,CRS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( Min( DS ,Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ,Min( Max( DS,DS ) ,( CS * ( Min( MLU ,RCSe ) * MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 0.728744939271255, "obj2": 0.22701399965172456}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ( Const - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.013333609853086358}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( Max( ( Const * ( BR / ( ( BR / Const ) + ( AMS - MRS ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + AMS ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( MUC * ( ( MLU - RMSe ) / CS ) ) / MLU ) * ( MLU / CS ) )", "obj1": 0.9433198380566802, "obj2": 0.04980056765856087}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01504679479920575}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( Min( Max( AMS,MDR ) ,CRS ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,FirstVNF_RAM )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Max( RCSe,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8299595141700404, "obj2": 0.167220588551115}, {"determining": "( Min( ( ARS * ( BR + ( Min( ( FirstVNF_Mem - Min( ARS ,DDR ) ) ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - Min( PN ,PN ) ) )", "choosing": "( Min( MLU ,RMSe ) - Max( ( Min( DS ,MUR ) - ( ( RCSe + ( ( MLU - RRSe ) * MUC ) ) * CS ) ),( Max( RMSe,Min( MLU ,MLU ) ) + MUM ) ) )", "obj1": 0.937246963562753, "obj2": 0.057573893803932}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "Min( ( ( FirstVNF_CPU + DDR ) * ( ( MDR * Max( BR,PN ) ) + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( Max( RMSe,MLU ) + RCSe ),( MLU + ( MLU / ( ( MUC / Min( ( MUM + RRSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( MUR ,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.16746864304932185}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU / ( ( FirstVNF_Mem - RRS ) + Max( DDR,FirstVNF_Mem_Server ) ) ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( ( DS + ( RMSe * ( MUR / MUR ) ) ) + MUC ),( MLU + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( RMSe ,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.1718581918288548}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - CS ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ACS * MRS ) - Min( MDR ,FirstVNF_RAM ) ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( Min( ( ( CS + ( ( RCSe * Max( MUR,DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Max( DS,RMSe ) ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( PN - Max( PN,FirstVNF_CPU ) ) )", "choosing": "Max( Min( MLU ,MLU ),Min( ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( MUR ,MUC ) ,RMSe ) ) ) ) ,MUM ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( RRS + ( Min( DDR ,( Const - RRS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( ( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( Max( ( MLU - RMSe ),( MLU + DS ) ),( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) - ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( Min( AMS ,ARS ) / Max( DDR,FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( DS / Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) ),CS ) / RRSe ) / ( Max( MUC,RCSe ) + Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,( ( ( ( DDR - FirstVNF_Mem ) / DDR ) - ( FirstVNF_RAM_Server * CRS ) ) - AMS ) ) / ( MRS + DDR ) ) / ( FirstVNF_RAM + AMS ) )", "choosing": "Min( ( RMSe * Max( MUR,( ( MUR / ( RCSe / DS ) ) - MUM ) ) ) ,( ( ( MUR / DS ) / MLU ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( AMS ,MRS ) )", "choosing": "Min( ( RMSe * MUC ) ,( Min( ( RRSe * Max( RMSe,MUR ) ) ,Min( ( ( DS / Min( Min( RRSe ,RRSe ) ,( RRSe - MUM ) ) ) * ( Min( MUM ,RCSe ) / CS ) ) ,Min( RCSe ,DS ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( AMS - MRS ) ) )", "choosing": "( Max( MLU,CS ) * ( Max( MUM,MUR ) / Max( MUR,( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Max( PN,( ACS / Const ) ),( BR - MDR ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),( ( ( ( CS + Min( Max( ( MLU + RMSe ),MUC ) ,Max( RMSe,MLU ) ) ) + ( RMSe * ( MUC + RMSe ) ) ) + ( RMSe / MLU ) ) - ( RCSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.24965780151232808}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2366956779080974}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19496630703923984}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + BR ) - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( MUR - ( ( ( CS * RCSe ) / RRSe ) / MUM ) ) + ( MUM / Max( ( ( MUM / ( RCSe / RRSe ) ) + ( Min( MUR ,MUR ) * CS ) ),( MUM + RMSe ) ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.14992743680134682}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( Max( ( FirstVNF_CPU + Min( CRS ,FirstVNF_RAM_Server ) ),PN ),CRS ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( Max( RMSe,RMSe ) - MLU ),( MLU + ( ( Max( DS,Max( ( RCSe + CS ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2935056686322654}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "( ( CRS - MDR ) + ( ( ARS * Min( ( ACS + ( ( ACS / FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( ( MUR - DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + MUM ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.4089068825910931, "obj2": 0.5380397907641274}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * AMS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) / Min( CS ,MUM ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8421052631578947, "obj2": 0.10761104398111962}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09232540237012432}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / RMSe ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7217936568566983}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( RRS - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18834018049844733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( Min( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),MDR ) ,CRS ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,FirstVNF_RAM )", "choosing": "Max( ( MUR + RCSe ),( ( Max( ( ( RRSe + DS ) + ( Min( MUR ,MUR ) * CS ) ),( MUM + RMSe ) ) + RCSe ) + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Max( RCSe,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.1719490025112885}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.4190283400809717, "obj2": 0.5260323036984704}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( Max( ( RMSe * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.22469635627530365, "obj2": 0.720114596869556}, {"determining": "( ( ( Max( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( RMSe,RMSe ) * ( MLU / CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5920594325405352}, {"determining": "( ( ( ACS / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( CS / ( MUC - CS ) ) / DS ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6314030110568981}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2366956779080974}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( ( ( Max( ( Const * ( BR / ( ( BR / Const ) + ( AMS - MRS ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + AMS ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( MUC * ( ( MLU - RMSe ) / CS ) ) / MLU ) * ( MLU / CS ) )", "obj1": 0.9433198380566802, "obj2": 0.04980056765856087}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "( Max( ( CRS / AMS ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( ( RMSe + ( RRSe + ( MUC / MLU ) ) ) ,( MLU / CS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8082890935376598}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1805506261320495}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8291943271868206}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Min( ACS ,MRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( ( MUM + RRSe ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.4951160708572497}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU / ( ( FirstVNF_Mem - RRS ) + Max( DDR,FirstVNF_Mem_Server ) ) ) + ( ( Max( PN,FirstVNF_CPU ) + BR ) - FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( ( DS + ( RMSe * ( MUR / MUR ) ) ) + MUC ),( MLU + ( MLU / ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - ( CS + ( DS / Min( Min( RMSe ,MUC ) ,RMSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.1718581918288548}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( ( Max( Max( BR,Max( FirstVNF_RAM_Server,AMS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Min( DS ,MLU ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9008097165991903, "obj2": 0.06869493992980978}, {"determining": "( RRS + ( Min( Max( FirstVNF_RAM,CRS ) ,MDR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),Min( DS ,MUC ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MUR ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( Min( ( ARS * ARS ) ,Max( FirstVNF_Mem_Server,( Const * FirstVNF_Mem_Server ) ) ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( RRSe - MUM ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06312954767520318}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "( ( Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,Max( MUM,RMSe ) ) - Min( Min( DS ,Max( RRSe,( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_RAM_Server ) ) ),( MDR + RRS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,( ARS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( Max( MUM,MUC ) + MUM ) ),MUM ) - ( MLU - ( ( MLU * Min( RRSe ,DS ) ) / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.49909305267446136}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ( Const - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.013333609853086358}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01504679479920575}, {"determining": "( ( ( Max( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10262470132457452}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( ( ( Max( ( Const * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.10118972742755745}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( ACS - FirstVNF_RAM_Server ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RMSe * MLU ) * ( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.09535422825802832}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( DS ,( Max( RMSe,RMSe ) / ( RMSe / Min( MUR ,MUC ) ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.05425508067268295}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "Min( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) ,( PN - Max( PN,FirstVNF_CPU ) ) )", "choosing": "Max( Min( MLU ,MLU ),Min( ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ACS * MRS ) - Min( MDR ,FirstVNF_RAM ) ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( Min( ( ( CS + ( ( RCSe * Max( MUR,DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Max( DS,RMSe ) ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "( Min( ( ARS * ( BR + ( Min( ( FirstVNF_Mem - Min( ARS ,DDR ) ) ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - Min( PN ,PN ) ) )", "choosing": "( Min( MLU ,RMSe ) - Max( ( Min( DS ,MUR ) - ( ( RCSe + ( ( MLU - RRSe ) * MUC ) ) * CS ) ),( Max( RMSe,Min( MLU ,MLU ) ) + MUM ) ) )", "obj1": 0.937246963562753, "obj2": 0.057573893803932}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( Const / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - CS ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - MLU ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "( RRS + ( Min( DDR ,( Const - RRS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU - RMSe ),( Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6175397240060342}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( Const * ( BR / ( MDR - FirstVNF_RAM_Server ) ) ) - Max( BR,Max( Max( PN,( ACS / Const ) ),( BR - MDR ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),( ( ( ( CS + Min( Max( ( MLU + RMSe ),MUC ) ,Max( RMSe,MLU ) ) ) + ( RMSe * ( MUC + RMSe ) ) ) + ( RMSe / MLU ) ) - Max( ( RMSe * CS ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( AMS - MRS ) ) )", "choosing": "( Max( MLU,CS ) * ( Max( MUM,MUR ) / Max( MUR,( MLU * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.24965780151232808}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2366956779080974}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + BR ) - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( ( MUR - ( ( ( CS * RCSe ) / RRSe ) / MUM ) ) + ( MUM / Max( ( ( MUM / ( RCSe / RRSe ) ) + ( Min( MUR ,MUR ) * CS ) ),( MUM + RMSe ) ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.14992743680134682}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19496630703923984}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,RRS )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( ( ( Min( CS ,CS ) / RRSe ) - MLU ) * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.15613033644173968}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4068825910931174, "obj2": 0.5279049839247966}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * AMS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) / Min( CS ,MUM ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8421052631578947, "obj2": 0.10761104398111962}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09232540237012432}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( RRS - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18834018049844733}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.16194331983805668, "obj2": 0.8017327822394029}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "( ( ( Max( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Max( RMSe,RMSe ) * ( MLU / CS ) )", "obj1": 0.34615384615384615, "obj2": 0.5920594325405352}, {"determining": "( ( ( ACS / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( CS / ( MUC - CS ) ) / DS ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6314030110568981}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2366956779080974}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.4190283400809717, "obj2": 0.5260323036984704}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "( ( ( Max( ( Const * ( BR / ( FirstVNF_RAM_Server + RRS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + AMS ) - FirstVNF_Mem ) ) - ( ( RRS + ( Min( DDR ,( Const - RRS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) / RRS ) )", "choosing": "( ( Max( ( RMSe * ( MLU - MUM ) ),MUM ) - ( MLU - MUM ) ) * ( Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) - CS ) )", "obj1": 0.9433198380566802, "obj2": 0.04864084656310372}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + Max( RRSe,( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.548582995951417, "obj2": 0.3008467989188862}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server + ARS ) ) - DDR ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe - DS ) / ( RCSe / MUR ) ) ) - ( MLU - Max( MUM,Min( RMSe ,RMSe ) ) ) ) * ( MLU / ( MLU + RMSe ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5819463108539908}, {"determining": "( Max( ( CRS / AMS ),BR ) * ( FirstVNF_Mem - ( MDR * PN ) ) )", "choosing": "( MUM - Min( ( RMSe + ( RRSe + ( MUC / MLU ) ) ) ,( MLU / CS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.8082890935376598}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( Max( ( FirstVNF_CPU + Min( CRS ,FirstVNF_RAM_Server ) ),PN ),CRS ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( Max( RMSe,RMSe ) - MLU ),( MLU + ( ( Max( DS,Max( ( RCSe + CS ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2935056686322654}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1805506261320495}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8291943271868206}, {"determining": "( ( ( Max( MDR,Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( RMSe + CS ) - ( MUR / MUM ) ) ),MUM ) - ( MLU - MUM ) ) * ( MLU / CS ) )", "obj1": 0.44129554655870445, "obj2": 0.4928872128243856}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( ( ( Const - AMS ) * FirstVNF_CPU_Server ) - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,MUR ) / Max( MUR,( MLU * Min( ( CS / ( MUC * MUM ) ) ,DS ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.0615540967529813}, {"determining": "( ( ( Max( Max( BR,Max( FirstVNF_RAM_Server,AMS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Min( DS ,MLU ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9008097165991903, "obj2": 0.06869493992980978}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MUR ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( ( Max( FirstVNF_CPU_Server,( BR + DDR ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( Min( DS ,( Max( Max( MLU,( ( RCSe * MUR ) - ( RRSe / RMSe ) ) ),RMSe ) / ( RMSe / DS ) ) ) ,Min( Max( DS,DS ) ,( CS * Min( RCSe ,( Max( RCSe,RMSe ) * MLU ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.7753036437246964, "obj2": 0.1698159835481352}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_RAM_Server ) ) ),( MDR + RRS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,( ARS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( Max( MUM,MUC ) + MUM ) ),MUM ) - ( MLU - ( ( MLU * Min( RRSe ,DS ) ) / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.49909305267446136}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( ( ARS / ACS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - ( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) / RMSe ) ) + Min( RCSe ,( ( Min( Min( RMSe ,MUR ) ,RMSe ) + DS ) * ( CS * Min( ( RRSe - ( RMSe / MLU ) ) ,( ( RRSe + MUC ) + ( RMSe * MUR ) ) ) ) ) ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + DS ) ) + ( ( MUR * MUR ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.1194331983805668, "obj2": 0.8504557228500698}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.1725086817898915}, {"determining": "( ( ( Const - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.013333609853086358}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( Const / MRS ) + ( ( ARS * Min( ( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( Max( MUR,DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + ( MUC - CS ) ) - ( Min( ( MUC * MUR ) ,RMSe ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.8343066116873646}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,Max( MUM,RMSe ) ) - Min( Min( DS ,Max( RRSe,( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01504679479920575}, {"determining": "( ( ( Max( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10262470132457452}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( ACS - FirstVNF_RAM_Server ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RMSe * MLU ) * ( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.09535422825802832}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( Min( ( ARS * ( BR + ( Max( CRS,FirstVNF_Mem ) - RRS ) ) ) ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,RMSe ) - Min( ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9412955465587044, "obj2": 0.05261732389298728}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + BR ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * Min( DS ,( Max( RMSe,RMSe ) / ( RMSe / Min( MUR ,MUC ) ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.05425508067268295}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( ( DDR + ( FirstVNF_Mem_Server / RRS ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - CS ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - Max( RCSe,MUC ) ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * Const ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * Max( DS,( DS / RCSe ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "( ( ( Max( ( Min( ( CRS + ( FirstVNF_Mem_Server / RRS ) ) ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) * ( MLU / CS ) )", "obj1": 0.854251012145749, "obj2": 0.10035610958458177}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ACS * MRS ) - Min( MDR ,FirstVNF_RAM ) ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( Min( ( ( CS + ( ( RCSe * Max( MUR,DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Max( DS,RMSe ) ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}, {"determining": "( Min( ( ARS * ( BR + ( Min( ( FirstVNF_Mem - Min( ARS ,DDR ) ) ,MRS ) - RRS ) ) ) ,MRS ) * ( Max( FirstVNF_Mem,Const ) - Min( PN ,PN ) ) )", "choosing": "( Min( MLU ,RMSe ) - Max( ( Min( DS ,MUR ) - ( ( RCSe + ( ( MLU - RRSe ) * MUC ) ) * CS ) ),( Max( RMSe,Min( MLU ,MLU ) ) + MUM ) ) )", "obj1": 0.937246963562753, "obj2": 0.057573893803932}, {"determining": "Min( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) ,( PN - Max( PN,FirstVNF_CPU ) ) )", "choosing": "Max( Min( MLU ,MLU ),Min( ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}], "12": [{"determining": "( ( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / Min( ( DDR - BR ) ,ACS ) ) ) ) * FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( Min( DS ,( Max( Max( MLU,( ( RCSe * MUR ) - ( RRSe / RMSe ) ) ),RMSe ) / ( RMSe / DS ) ) ) ,Min( Max( DS,DS ) ,( CS * ( Min( MLU ,( ( MUM + MUR ) * RCSe ) ) * MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * ( BR / ( MDR - FirstVNF_RAM_Server ) ) ) - Max( BR,Max( Max( PN,( ACS / Const ) ),( BR - MDR ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),( ( ( ( CS + Min( Max( ( MLU + RMSe ),MUC ) ,Max( RMSe,MLU ) ) ) + ( RMSe * ( MUC + RMSe ) ) ) + ( RMSe / MLU ) ) - Max( ( RMSe * CS ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2366956779080974}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19496630703923984}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Min( FirstVNF_Mem_Server ,BR ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MRS,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( MLU + RCSe ),( RMSe * MUC ) )", "obj1": 0.39878542510121456, "obj2": 0.5242030730528235}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( Const - Min( Max( ( FirstVNF_RAM - Max( BR,MRS ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( MLU,CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.819838056680162, "obj2": 0.14383321308699593}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,RRS )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( ( ( Min( CS ,CS ) / RRSe ) - MLU ) * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.15613033644173968}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8299595141700404, "obj2": 0.12571052464379062}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.2490874344468082}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( RRS - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18834018049844733}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( ( Max( ( Max( ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ),( ( ACS + AMS ) - ACS ) ) * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ),( FirstVNF_RAM_Server * Const ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( DS ,Max( RRSe,( ( RRSe + MUC ) - DS ) ) ) * ( MLU / CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2366956779080974}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * AMS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) / Min( CS ,MUM ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8421052631578947, "obj2": 0.10761104398111962}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16538794037189464}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * Max( MRS,FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.2982969115676915}, {"determining": "( ( ( ACS / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( CS / ( MUC - CS ) ) / DS ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6314030110568981}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( Max( Min( Max( AMS,Max( BR,( BR + ARS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,MLU ) - Min( Min( ( MUC * DS ) ,Max( RRSe,MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) * ( MLU / CS ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) - BR ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( ( ( MUM / ( MUM + RCSe ) ) - MUM ) + ( Min( RCSe ,MUM ) / DS ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8694925268180439}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1805506261320495}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8291943271868206}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( Max( ( FirstVNF_CPU + Min( CRS ,FirstVNF_RAM_Server ) ),PN ),CRS ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( Max( RMSe,RMSe ) - MLU ),( MLU + ( ( Max( DS,Max( ( RCSe + CS ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2935056686322654}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "( ( ( Max( MDR,Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( RMSe + CS ) - ( MUR / MUM ) ) ),MUM ) - ( MLU - MUM ) ) * ( MLU / CS ) )", "obj1": 0.44129554655870445, "obj2": 0.4928872128243856}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,FirstVNF_CPU ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ( ACS * AMS ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,MLU ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8843842088531129}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( Max( Max( BR,Max( FirstVNF_RAM_Server,AMS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Min( DS ,MLU ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9008097165991903, "obj2": 0.06869493992980978}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) / ( ( MDR - ( ( ( PN / FirstVNF_CPU_Server ) + ( Const - ( DDR + PN ) ) ) * ( FirstVNF_RAM_Server - ( ( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( MDR / Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) ) - ( PN + BR ) ) )", "choosing": "( ( MLU + Max( RCSe,RRSe ) ) + ( ( ( DS + RCSe ) / ( ( MUM - ( ( Max( RMSe,CS ) + MUC ) / MLU ) ) - RMSe ) ) - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8510372387558686}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MUR ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ,( FirstVNF_CPU_Server - Const ) ) - ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( Min( MUR ,( MUR + Max( RCSe,RRSe ) ) ) ,MUR ) / ( DS + RRSe ) )", "obj1": 0.09919028340080972, "obj2": 0.8650272499875008}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_RAM_Server ) ) ),( MDR + RRS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,( ARS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( Max( MUM,MUC ) + MUM ) ),MUM ) - ( MLU - ( ( MLU * Min( RRSe ,DS ) ) / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.49909305267446136}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09232540237012432}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( BR / FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),( ( MUM + MUR ) * ( RRSe / RRSe ) ) ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8470897415192098}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( ( ( MRS - ARS ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) * ( Const - RRS ) ) )", "choosing": "( ( MLU - MUM ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.012131884090482086}, {"determining": "( ( ( Max( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10262470132457452}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( Const / MRS ) + ( ( ARS * Min( ( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( Max( MUR,DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + ( MUC - CS ) ) - ( Min( ( MUC * MUR ) ,RMSe ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.8343066116873646}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01504679479920575}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,Max( MUM,RMSe ) ) - Min( Min( DS ,Max( RRSe,( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( ( ( Max( ( Min( ( CRS + ( FirstVNF_Mem_Server / RRS ) ) ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) * ( MLU / CS ) )", "obj1": 0.854251012145749, "obj2": 0.10035610958458177}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "Min( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) ,( PN - Max( PN,FirstVNF_CPU ) ) )", "choosing": "Max( Min( MLU ,MLU ),Min( ( ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) - Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "( ( ( ACS / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_Mem / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( CS / ( MLU - CS ) ) / DS ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6314030110568981}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "( ( ( ACS - FirstVNF_RAM_Server ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RMSe * MLU ) * ( MLU / CS ) )", "obj1": 0.8582995951417004, "obj2": 0.09535422825802832}, {"determining": "( ( ( Max( ( Min( ( CRS + ( Const / BR ) ) ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( DS,Max( MUM,Min( DS ,Max( RRSe,( RMSe - MLU ) ) ) ) ) + ( MUR - MUR ) ) / CS ) * ( MLU / CS ) )", "obj1": 0.8603238866396761, "obj2": 0.09333056180646085}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( ( DDR + ( FirstVNF_Mem_Server / RRS ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MLU * ( Max( MLU,Min( ( ( ( MUR - DS ) - ( RRSe - CS ) ) / MUM ) ,RMSe ) ) - ( RCSe * ( RCSe - Max( RCSe,MUC ) ) ) ) ) / ( RCSe + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.001694742460517501}, {"determining": "Min( Max( MRS,( RRS - RRS ) ) ,Min( RRS ,ACS ) )", "choosing": "Max( ( ( RMSe * MUC ) + RCSe ),( Min( ( MUM * RCSe ) ,Min( Min( Min( ( ( CS - MUC ) - MUR ) ,DS ) ,MUC ) ,( MUR - MLU ) ) ) + ( MLU / ( ( ( MUM / Min( DS ,( DS - CS ) ) ) - MUM ) / ( MLU + MLU ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.3150902063698717}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( ( ARS / FirstVNF_Mem_Server ) - ( ( ACS * MRS ) - Min( MDR ,FirstVNF_RAM ) ) ) - Max( ( FirstVNF_RAM + PN ),Max( FirstVNF_RAM_Server,MRS ) ) ) )", "choosing": "( Min( ( ( CS + ( ( RCSe * Max( MUR,DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Max( DS,RMSe ) ) + Min( ( Max( MUR,DS ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 0.9979757085020243, "obj2": 0.001209765296180626}], "13": [{"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * AMS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MLU ) ) / Min( CS ,MUM ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / Min( ( DDR - BR ) ,ACS ) ) ) ) * FirstVNF_RAM ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( Min( DS ,( Max( Max( MLU,( ( RCSe * MUR ) - ( RRSe / RMSe ) ) ),RMSe ) / ( RMSe / DS ) ) ) ,Min( Max( DS,DS ) ,( CS * ( Min( MLU ,( ( MUM + MUR ) * RCSe ) ) * MLU ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19496630703923984}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Min( FirstVNF_Mem_Server ,BR ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MRS,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( MLU + RCSe ),( RMSe * MUC ) )", "obj1": 0.39878542510121456, "obj2": 0.5242030730528235}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( Const - Min( Max( ( FirstVNF_RAM - Max( BR,MRS ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( MLU,CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.819838056680162, "obj2": 0.14383321308699593}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,RRS )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( ( ( Min( CS ,CS ) / RRSe ) - MLU ) * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.15613033644173968}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.2490874344468082}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8299595141700404, "obj2": 0.12571052464379062}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( RMSe - DS ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18657103504576408}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( AMS + ACS ) )", "choosing": "Max( ( Max( ( MUM - ( RCSe / RMSe ) ),RMSe ) - MLU ),( ( MUM / RRSe ) / ( ( ( MLU - ( MUM + ( MLU * RMSe ) ) ) / ( MLU - MLU ) ) - Min( CS ,RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.45593836333740245}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1720647773279352, "obj2": 0.7942239386554957}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RMSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07757814811290556}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16538794037189464}, {"determining": "( Max( ( ( DDR + BR ) - ( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ),BR ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( ( ( ( CS - MLU ) - RRSe ) - ( RCSe - DS ) ) * DS ),MUM ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "( ( ( ACS / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( CS / ( MUC - CS ) ) / DS ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3016194331983806, "obj2": 0.6314030110568981}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,FirstVNF_CPU ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ( ACS * AMS ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,MLU ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8843842088531129}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,FirstVNF_CPU ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / CS ) ),MLU ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8659603418476862}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8291943271868206}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1805506261320495}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * PN ) )", "choosing": "( Min( MUR ,( RRSe + RMSe ) ) * ( Min( RRSe ,Min( DS ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) ) - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( Max( PN,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) / ( ( ( DDR + DDR ) / FirstVNF_RAM ) / ( ( ( MDR + ( MRS + DDR ) ) * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,DDR ) ) ) - Const ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( ( MUR - ( RCSe * ( RMSe * ( ( ( MLU - RCSe ) / Max( RCSe,DS ) ) / RMSe ) ) ) ) ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) * ( MLU / CS ) )", "obj1": 0.8967611336032388, "obj2": 0.06813099294261234}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8501656899678073}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( Max( ( FirstVNF_CPU + Min( CRS ,FirstVNF_RAM_Server ) ),PN ),CRS ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( Max( RMSe,RMSe ) - MLU ),( MLU + ( ( Max( DS,Max( ( RCSe + CS ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2935056686322654}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_RAM_Server ) ) ),( MDR + RRS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,( ARS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( Max( MUM,MUC ) + MUM ) ),MUM ) - ( MLU - ( ( MLU * Min( RRSe ,DS ) ) / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.49909305267446136}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( BR / FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),( ( MUM + MUR ) * ( RRSe / RRSe ) ) ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8470897415192098}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( Max( RRSe,MUM ) + MUC ) - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "Min( ( ( FirstVNF_RAM * MDR ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( ( MUR + Max( RMSe,RMSe ) ) - MUR ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29764741734333455}, {"determining": "( ( ( Max( ( Const * ( Min( FirstVNF_CPU_Server ,ACS ) / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( PN,FirstVNF_CPU ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - ( RRSe / ( CS / Min( DS ,MLU ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4433198380566802, "obj2": 0.49012641047163535}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) + FirstVNF_RAM ) * ( FirstVNF_Mem - ( MDR * Max( Min( MRS ,( DDR / Min( PN ,ACS ) ) ),MDR ) ) ) )", "choosing": "( MUM - Min( DS ,Max( ( Min( ( RCSe * RMSe ) ,( Min( DS ,( RMSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) * DS ),( MLU / ( DS - Min( RCSe ,MUR ) ) ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.7798108234884039}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5425101214574899, "obj2": 0.3016874193006996}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / ( CRS * Min( ( ( FirstVNF_CPU - PN ) - ( ( ( RRS * ( DDR - FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / RRS ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( MDR ,CRS ) ) / Min( AMS ,MRS ) ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( MUR ,MUC ) / ( RCSe + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.0016640221259797972}, {"determining": "( ( ( Max( MDR,Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( RMSe + CS ) - ( MUR / MUM ) ) ),MUM ) - ( MLU - MUM ) ) * ( MLU / CS ) )", "obj1": 0.44129554655870445, "obj2": 0.4928872128243856}, {"determining": "( ( Const / MRS ) + ( ( ARS * Min( ( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( Max( MUR,DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + ( MUC - CS ) ) - ( Min( ( MUC * MUR ) ,RMSe ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.8343066116873646}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * Max( MRS,FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.2982969115676915}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( ( Max( ( Min( ( CRS + ( FirstVNF_Mem_Server / BR ) ) ,ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( DS,Max( MUM,MUM ) ) + ( MUR - MUR ) ) / CS ) * ( MLU / CS ) )", "obj1": 0.8663967611336032, "obj2": 0.0897951542152935}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( ( FirstVNF_RAM + MDR ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01504679479920575}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( ( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,RCSe ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.868421052631579, "obj2": 0.0850905373559444}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( ( BR - FirstVNF_CPU_Server ) * ARS ) ) - ( BR * Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( Min( MLU ,( ( Min( CS ,CS ) / RRSe ) - MLU ) ) - ( RRSe * RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( Max( ( ( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ),( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( ( Max( Min( Max( AMS,Max( BR,( BR + ARS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MLU ,MLU ) - Min( Min( ( MUC * DS ) ,Max( RRSe,MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) * ( MLU / CS ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "( ( ( MRS - ARS ) / ( MRS / ( PN * ( ( Const - FirstVNF_RAM ) - DDR ) ) ) ) - ( ( Const * ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) * ( Const - RRS ) ) )", "choosing": "( ( MLU - MUM ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,DS ) * Max( MUM,MUR ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.012131884090482086}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,( BR + RRS ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - Min( ( FirstVNF_RAM / ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU_Server ) ) ) ,MRS ) )", "choosing": "( Min( Max( ( ( RMSe / DS ) / ( RMSe - MUC ) ),MUR ) ,MUR ) / ( RCSe - ( RMSe / RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8337115150116708}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09232540237012432}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( Max( PN,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / Min( ( DDR - BR ) ,ACS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUC / Min( ( CS / RMSe ) ,RMSe ) ) )", "obj1": 0.9676113360323887, "obj2": 0.012684069345242788}], "14": [{"determining": "( ( ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) / ( MDR * ARS ) ) + ( ( ARS * Min( ( ACS + ( FirstVNF_CPU / Max( ( DDR + FirstVNF_CPU ),BR ) ) ) ,Max( DDR,MDR ) ) ) - ( PN + Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( MUC ,Min( ( MLU + Min( MUC ,MUM ) ) ,MLU ) ) ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( Max( RCSe,MUM ) - MUR ) / RCSe ) ) ) ) + CS ) * ( CS + ( ( ( RRSe + ( MUC - CS ) ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( FirstVNF_RAM * AMS ) ) / FirstVNF_RAM ) - Max( Const,FirstVNF_CPU ) ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( Min( MLU ,MLU ),Min( RCSe ,MLU ) ) / Min( CS ,MUM ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ( FirstVNF_RAM - MDR ) - ( FirstVNF_RAM_Server - Min( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ) ,MRS ) ) ) * Max( Max( ( FirstVNF_CPU + Min( CRS ,FirstVNF_RAM_Server ) ),PN ),CRS ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( Max( ( DS - CS ),RMSe ) - MLU ),( MLU + ( ( Max( DS,Max( ( RCSe + ( MUM * RCSe ) ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.4352223009649805}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19496630703923984}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "( Const - Min( Max( ( FirstVNF_RAM - Max( BR,MRS ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( MLU,CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.819838056680162, "obj2": 0.14383321308699593}, {"determining": "( Min( ( ( ARS - ( ( MRS - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( CRS * ARS ) ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Max( ( MRS / Const ),AMS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Max( ( ( MLU / MUC ) * RCSe ),RCSe ),MUM ) - ( ( ( CS / RRSe ) + ( CS / Min( RCSe ,RMSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3285554498054142}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Min( FirstVNF_Mem_Server ,BR ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MRS,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( MLU + RCSe ),( RMSe * MUC ) )", "obj1": 0.39878542510121456, "obj2": 0.5242030730528235}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.2490874344468082}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8299595141700404, "obj2": 0.12571052464379062}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( AMS + ACS ) )", "choosing": "Max( ( Max( ( MUM - ( RCSe / RMSe ) ),RMSe ) - MLU ),( ( MUM / RRSe ) / ( ( ( MLU - ( MUM + ( MLU * RMSe ) ) ) / ( MLU - MLU ) ) - Min( CS ,RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.45593836333740245}, {"determining": "Min( Max( FirstVNF_CPU_Server,( MRS - CRS ) ) ,( MRS + PN ) )", "choosing": "( ( ( DS / ( RMSe - MUM ) ) * MUM ) - ( DS + ( MUC / RRSe ) ) )", "obj1": 0.23481781376518218, "obj2": 0.7040801699427292}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.29959514170040485, "obj2": 0.6294122217003681}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( RMSe - DS ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18657103504576408}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16538794037189464}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RMSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07757814811290556}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2761409525358634}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) / RMSe ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.340080971659919, "obj2": 0.5974077009338783}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) / ( Max( FirstVNF_Mem,( Max( FirstVNF_RAM_Server,DDR ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / Max( RCSe,CS ) ) ) ) ) ) - ( ( Max( MUR,Max( RCSe,DS ) ) + DS ) - DS ) ) )", "obj1": 0.4190283400809717, "obj2": 0.523357886637802}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,FirstVNF_CPU ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ( ACS * AMS ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,MLU ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8843842088531129}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,FirstVNF_CPU ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / CS ) ),MLU ) ) )", "obj1": 0.0931174089068826, "obj2": 0.8659603418476862}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.8291943271868206}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,BR ) * Max( BR,FirstVNF_Mem ) ) / RRS ) / FirstVNF_RAM ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( MLU,RCSe ) - Max( MUR,RCSe ) ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.17741344373193654}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( BR / Max( ( PN * CRS ),CRS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1805506261320495}, {"determining": "( ( ( Max( ( RRS * FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( ( Max( PN,Min( BR ,Const ) ) + MDR ),MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( RMSe + CS ) - ( MUM - ( MUM - ( MUC * MUR ) ) ) ) ),MUM ) - ( ( CS / Min( CS ,MLU ) ) - ( ( DS + MUC ) + RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.43724696356275305, "obj2": 0.48400909967824457}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.6905646168813984}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( Max( PN,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) / ( ( ( DDR + DDR ) / FirstVNF_RAM ) / ( ( ( MDR + ( MRS + DDR ) ) * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,DDR ) ) ) - Const ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( Min( ( MUR - ( RCSe * ( RMSe * ( ( ( MLU - RCSe ) / Max( RCSe,DS ) ) / RMSe ) ) ) ) ,( ( Max( RRSe,MUR ) / ( ( RCSe / MUC ) + RRSe ) ) / RMSe ) ) * ( MLU / CS ) )", "obj1": 0.8967611336032388, "obj2": 0.06813099294261234}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8501656899678073}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2885828533743666}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "Min( ( ( FirstVNF_RAM * MDR ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( ( MUR + Max( RMSe,RMSe ) ) - MUR ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29764741734333455}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( ( Max( ( ( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ),( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_RAM_Server ) ) ),( MDR + RRS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,( ARS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( Max( MUM,MUC ) + MUM ) ),MUM ) - ( MLU - ( ( MLU * Min( RRSe ,DS ) ) / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.49909305267446136}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem_Server,BR ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Min( DS ,Max( RRSe,MUM ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8481781376518218, "obj2": 0.10354021663476551}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.42105263157894735, "obj2": 0.5145077094260074}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( BR / FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),( ( MUM + MUR ) * ( RRSe / RRSe ) ) ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8470897415192098}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( BR,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),MUC ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8318203514760849}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( Max( RRSe,MUM ) + MUC ) - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,( ( ( ( ( RRS / Const ) + Max( PN,( Const * MDR ) ) ) / ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM_Server ,( Min( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( DDR + ARS ) ) ,( FirstVNF_CPU_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( CRS - FirstVNF_CPU ) ) ) ) / Min( AMS ,MRS ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( MUR * ( DS + MLU ) ) ) ) ) ) ) ,( ( MUC / ( ( DS + MUM ) + ( MLU * ( MUC * RMSe ) ) ) ) + Max( MUC,( ( Min( CS ,( Max( RCSe,MLU ) - DS ) ) - RMSe ) * Max( MLU,( RRSe / Min( Min( MUC ,RMSe ) ,( RCSe - DS ) ) ) ) ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.18657103504576408}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09232540237012432}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5425101214574899, "obj2": 0.3016874193006996}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( Const / MRS ) + ( ( ARS * Min( ( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,PN ) ) ) - ( PN + BR ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( Max( MUR,DS ) - MUR ) / RCSe ) ) ) ) + CS ) * ( MUR + ( ( ( RRSe + ( MUC - CS ) ) - ( Min( ( MUC * MUR ) ,RMSe ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.8343066116873646}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) * Max( MRS,FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / Max( DS,MLU ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.2982969115676915}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( PN * Min( BR ,Max( FirstVNF_Mem_Server,Const ) ) ) / ( ( FirstVNF_RAM - Min( MRS ,Const ) ) + BR ) ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( Min( MLU ,Min( ( Min( MUR ,( Max( RMSe,CS ) * MUR ) ) / RCSe ) ,MUC ) ) / MUR ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) - MLU ) )", "obj1": 0.9736842105263158, "obj2": 0.007959498213366872}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( ( Max( ( Min( ( CRS + ( FirstVNF_Mem_Server / BR ) ) ,ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( DS,Max( MUM,MUM ) ) + ( MUR - MUR ) ) / CS ) * ( MLU / CS ) )", "obj1": 0.8663967611336032, "obj2": 0.0897951542152935}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem ) + ( ( ACS + ARS ) - ( PN + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MUC - Max( CS,RRSe ) ) ,MLU ) * ( MUR + ( Min( Max( MUR,RMSe ) ,RRSe ) / ( MLU + ( Min( DS ,Min( DS ,RMSe ) ) / MUC ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / ( CS + MUM ) ) + ( ( CS + MUR ) / MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.02270070113245542}, {"determining": "Min( ( MRS - ( ( Const * FirstVNF_RAM ) * CRS ) ) ,( ( ( ( FirstVNF_RAM + MDR ) / FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,DDR ) ) - RRS ) )", "choosing": "Min( ( CS / CS ) ,( ( ( DS - ( ( Min( ( MLU - RCSe ) ,( RCSe + RCSe ) ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,RCSe ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.868421052631579, "obj2": 0.0850905373559444}], "15": [{"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) / ( MDR * ARS ) ) + ( ( ARS * Min( ( ACS + ( FirstVNF_CPU / Max( ( DDR + FirstVNF_CPU ),BR ) ) ) ,Max( DDR,MDR ) ) ) - ( PN + Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Max( MUC,Min( MUC ,Min( ( MLU + Min( MUC ,MUM ) ) ,MLU ) ) ) + ( ( MUC / ( RRSe / MLU ) ) / Min( RRSe ,( ( Max( RCSe,MUM ) - MUR ) / RCSe ) ) ) ) + CS ) * ( CS + ( ( ( RRSe + ( MUC - CS ) ) - ( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ) / ( RRSe / RMSe ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "Min( ( ( ( FirstVNF_RAM - MDR ) - ( FirstVNF_RAM_Server - Min( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ) ,MRS ) ) ) * Max( Max( ( FirstVNF_CPU + Min( CRS ,FirstVNF_RAM_Server ) ),PN ),CRS ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU_Server ) ) ) + BR ) )", "choosing": "Max( ( Max( ( DS - CS ),RMSe ) - MLU ),( MLU + ( ( Max( DS,Max( ( RCSe + ( MUM * RCSe ) ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.47368421052631576, "obj2": 0.4352223009649805}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19496630703923984}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( RRS - FirstVNF_Mem_Server ) * RRS ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / Min( AMS ,MRS ) ) + BR ) )", "choosing": "Max( MLU,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( DS + MLU ) ) ) ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3692405772085592}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ( ACS / RRS ) ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - Max( ( DS - MUR ),( DS - ( DS * CS ) ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3809310125769093}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( ( ARS - ( ( MRS - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( CRS * ARS ) ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Max( ( MRS / Const ),AMS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Max( ( ( MLU / MUC ) * RCSe ),RCSe ),MUM ) - ( ( ( CS / RRSe ) + ( CS / Min( RCSe ,RMSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3285554498054142}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Const - Min( Max( ( FirstVNF_RAM - Max( BR,MRS ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( MLU,CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.819838056680162, "obj2": 0.14383321308699593}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.42105263157894735, "obj2": 0.5145077094260074}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16538794037189464}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26379325962242706}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( Min( DS ,MUR ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( Max( RRS,BR ) / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Min( DS ,( ( MUC / DS ) / MUM ) ) ) * ( MLU / CS ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.6946942774689636}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.29959514170040485, "obj2": 0.6294122217003681}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( ( ( Max( ( Const * ( BR / ( MDR - ( FirstVNF_CPU_Server * BR ) ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUM ,MUR ) * ( MUC * RMSe ) ) * RMSe ) * DS ) * MUM ) * ( MLU / CS ) )", "obj1": 0.44534412955465585, "obj2": 0.4804063883630314}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.2490874344468082}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( MDR - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07709564711381833}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) / RMSe ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.340080971659919, "obj2": 0.5974077009338783}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( AMS + ACS ) )", "choosing": "Max( ( Max( ( MUM - ( RCSe / RMSe ) ),RMSe ) - MLU ),( ( MUM / RRSe ) / ( ( ( MLU - ( MUM + ( MLU * RMSe ) ) ) / ( MLU - MLU ) ) - Min( CS ,RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.45593836333740245}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( DDR / ( MRS / ( PN * ACS ) ) ) / ( RRS + ( Const + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM + Min( RCSe ,Min( ( RCSe - RMSe ) ,RMSe ) ) ) - DS ) / ( MLU - CS ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "( ( ( Max( ( BR - Max( FirstVNF_RAM_Server,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( Const,MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( RRS - Max( ( CRS * FirstVNF_RAM_Server ),Max( ( FirstVNF_RAM / Min( MDR ,FirstVNF_Mem ) ),BR ) ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MLU / MUC ) / Min( RCSe ,( CS - Max( ( DS * RCSe ),RCSe ) ) ) ) - MUM ) ) * ( MLU / CS ) )", "obj1": 0.4331983805668016, "obj2": 0.49542069170207087}, {"determining": "( ( ( Max( ( RRS * FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( ( Max( PN,Min( BR ,Const ) ) + MDR ),MRS ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( RMSe + CS ) - ( MUM - ( MUM - ( MUC * MUR ) ) ) ) ),MUM ) - ( ( CS / Min( CS ,MLU ) ) - ( ( DS + MUC ) + RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.43724696356275305, "obj2": 0.48400909967824457}, {"determining": "Min( ( ( ( Max( PN,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) ) ,PN )", "choosing": "( ( ( DS / ( ( RCSe / MUC ) + RRSe ) ) * MUM ) - ( DS + Max( DS,Max( MLU,RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.13251801119128456}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server / RRS ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.27828966418749}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( Min( Max( ( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( Max( AMS,Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,FirstVNF_CPU ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ( ACS * AMS ) ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,MLU ),Min( MLU ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8843842088531129}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8501656899678073}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2885828533743666}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( ( MDR - ( PN / MDR ) ) ,ARS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * Min( MUC ,( RMSe / MLU ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,( RRSe - RMSe ) ) - Max( Max( RMSe,( MLU / CS ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8697207724839968}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "Min( ( ( FirstVNF_RAM * MDR ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( ( MUR + Max( RMSe,RMSe ) ) - MUR ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29764741734333455}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.6905646168813984}, {"determining": "Min( ( ( ARS - Max( Max( ( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( MLU,MUR ) ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3082693494632206}, {"determining": "( ( ( Max( ( ( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ),( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,ACS ) - FirstVNF_RAM_Server ) ) ),( MDR + RRS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,( ARS / FirstVNF_RAM ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( Max( MUM,MUC ) + MUM ) ),MUM ) - ( MLU - ( ( MLU * Min( RRSe ,DS ) ) / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.4251012145748988, "obj2": 0.49909305267446136}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem_Server,BR ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Min( DS ,Max( RRSe,MUM ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8481781376518218, "obj2": 0.10354021663476551}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "( ( ( Max( FirstVNF_RAM,Max( ( Max( DDR,BR ) / AMS ),BR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_RAM + ( RRS + PN ) ) )", "choosing": "( ( Max( ( RMSe * MLU ),( MUR * Min( CS ,( RMSe + Min( ( MUR - RMSe ) ,RRSe ) ) ) ) ) - ( MLU - Max( RRSe,( MUR * ( CS / DS ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.4230769230769231, "obj2": 0.5065332138149656}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( BR / FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( ( MUC / ( RMSe - Max( ( MLU + CS ),( ( MUM + MUR ) * ( RRSe / RRSe ) ) ) ) ) * ( MUM / RMSe ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.8470897415192098}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( RCSe - CS ) ) ) ) + DS ) - ( MUR + ( Min( RCSe ,MUM ) / DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,MDR )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( MUM * RCSe ) ),( RMSe * ( ( RMSe + CS ) - ( MUR / MUM ) ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4538448731011577}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( Max( RRSe,MUM ) + MUC ) - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2761409525358634}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5425101214574899, "obj2": 0.3016874193006996}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ARS ) / FirstVNF_RAM ) - ( ( ( FirstVNF_Mem / ( ( ( DDR * BR ) / FirstVNF_RAM ) * ( ARS * DDR ) ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) + ( MRS + CRS ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( PN - FirstVNF_RAM ) ) )", "choosing": "( Max( ( Min( RCSe ,( CS * Min( ( ( MUM + MUM ) * MUM ) ,( RCSe + ( CS + RMSe ) ) ) ) ) * CS ),RMSe ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7342385743441273}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}], "16": [{"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - ( Const + CRS ) ) ) / FirstVNF_RAM ) ) ) ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,RRSe ) + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( MLU + ( ( Max( Max( CS,Min( RRSe ,Max( DS,RMSe ) ) ),Max( ( MLU * Min( RRSe ,DS ) ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.46356275303643724, "obj2": 0.42272547858674253}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6255060728744939, "obj2": 0.2401550680246711}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12806553106119306}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( DS + CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16538794037189464}, {"determining": "( Min( ( ( ARS - ( ( MRS - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( CRS * ARS ) ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Max( ( MRS / Const ),AMS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Max( ( ( MLU / MUC ) * RCSe ),RCSe ),MUM ) - ( ( ( CS / RRSe ) + ( CS / Min( RCSe ,RMSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3285554498054142}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ( ACS / RRS ) ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - Max( ( DS - MUR ),( DS - ( DS * CS ) ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3809310125769093}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26379325962242706}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( AMS + ACS ) )", "choosing": "Max( ( Max( ( MUM - ( RCSe / RMSe ) ),RMSe ) - MLU ),( ( MUM / RRSe ) / ( ( ( MLU - ( MUM + ( MLU * RMSe ) ) ) / ( MLU - MLU ) ) - Min( CS ,RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.45593836333740245}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( MUR - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.4413155001268369}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_CPU / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),Max( MUM,MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3809310125769093}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( Min( DS ,MUR ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16819389251892927}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.11336032388663968, "obj2": 0.8501656899678073}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.2490874344468082}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( MDR - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07709564711381833}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) / RMSe ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.340080971659919, "obj2": 0.5974077009338783}, {"determining": "( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( DS * ( MLU + ( CS + Min( RCSe ,( ( MUC - RRSe ) * Min( Max( RCSe,DS ) ,Max( RRSe,MLU ) ) ) ) ) ) ) * Max( Max( MLU,RRSe ),MUC ) )", "obj1": 0.17813765182186234, "obj2": 0.7509200871688301}, {"determining": "Min( ( ( FirstVNF_RAM * MDR ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( ( MUR + Max( RMSe,RMSe ) ) - MUR ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29764741734333455}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - FirstVNF_RAM ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,Max( ( RMSe * CS ),MUM ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09510958627963452}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server / RRS ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.27828966418749}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + AMS ) / Max( FirstVNF_Mem,RRS ) ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( ( MLU / MUR ),( MLU + ( MLU / ( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3162534475091603}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( Max( MRS,( FirstVNF_Mem - Max( FirstVNF_RAM,CRS ) ) ) - ( ( DDR * ( Const - RRS ) ) / Const ) ) ) * ( FirstVNF_RAM_Server + RRS ) ) ,( PN + BR ) )", "choosing": "Max( Min( MUM ,( Min( DS ,( ( MUC / DS ) / MUM ) ) - DS ) ),( MLU + ( ( MUM - Min( ( ( RCSe / ( RCSe * MLU ) ) * MUC ) ,RCSe ) ) / CS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6209191831464829}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5607287449392713, "obj2": 0.2885828533743666}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( ( Max( ( ( ( FirstVNF_Mem_Server / Min( ARS ,MDR ) ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ),( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5425101214574899, "obj2": 0.3016874193006996}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,MDR )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( MUM * RCSe ) ),( RMSe * ( ( RMSe + CS ) - ( MUR / MUM ) ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4538448731011577}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,ACS ) ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server / RRS ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( ( MLU - CS ) * Max( MUM,MUR ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5809716599190283, "obj2": 0.27518102429984936}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ARS ) / FirstVNF_RAM ) - ( ( ( FirstVNF_Mem / ( ( ( DDR * BR ) / FirstVNF_RAM ) * ( ARS * DDR ) ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) + ( MRS + CRS ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( PN - FirstVNF_RAM ) ) )", "choosing": "( Max( ( Min( RCSe ,( CS * Min( ( ( MUM + MUM ) * MUM ) ,( RCSe + ( CS + RMSe ) ) ) ) ) * CS ),RMSe ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7342385743441273}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( RCSe - CS ) ) ) ) + DS ) - ( MUR + ( Min( RCSe ,MUM ) / DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "Min( ( ( ARS - Max( Max( ( FirstVNF_Mem + ( ( FirstVNF_RAM_Server - RRS ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( Const,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( MLU,MUR ) ,( ( MUM - RMSe ) + ( RMSe * MUC ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3082693494632206}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( FirstVNF_CPU_Server / RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( ( MDR / MRS ) / ( PN - FirstVNF_RAM ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / Max( RMSe,MUM ) ) + Min( DS ,MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01075878928480613}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( Max( RRSe,MUM ) + MUC ) - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "( ( ( Max( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( Max( ( ( RRS / ACS ) * ( BR / DDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.1000134604296653}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM_Server ) ) - CRS ),( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem_Server,BR ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Min( DS ,Max( RRSe,MUM ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8481781376518218, "obj2": 0.10354021663476551}], "17": [{"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Max( MDR,MDR ) ) ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - ( Const + CRS ) ) ) / FirstVNF_RAM ) ) ) ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,RRSe ) + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Min( FirstVNF_CPU_Server ,ACS ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( MLU + ( ( Max( Max( CS,Min( RRSe ,Max( DS,RMSe ) ) ),Max( ( MLU * Min( RRSe ,DS ) ),MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.46356275303643724, "obj2": 0.42272547858674253}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),( RMSe * ( MUR + RCSe ) ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.4109311740890688, "obj2": 0.517833285088353}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6255060728744939, "obj2": 0.2401550680246711}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( ( MUC / DS ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12806553106119306}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + Min( FirstVNF_CPU_Server ,ACS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( RMSe * CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16245815070801464}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( AMS / MDR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3392159793437042}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16819389251892927}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_Mem * ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( FirstVNF_RAM_Server + Max( CRS,FirstVNF_RAM ) ) ) ,( ( CRS / ACS ) - ARS ) )", "choosing": "Max( ( ( ( RCSe / Min( CS ,RRSe ) ) * Max( Max( CS,( ( ( MLU * MUC ) - MUR ) - ( ( RMSe + DS ) + MUM ) ) ),( ( ( Min( MLU ,RCSe ) - RRSe ) + ( CS / ( MUC / MUR ) ) ) - RMSe ) ) ) + RCSe ),( MLU + ( ( Min( DS ,( ( RRSe - DS ) / ( RCSe / MUR ) ) ) + MLU ) / CS ) ) )", "obj1": 0.611336032388664, "obj2": 0.2490874344468082}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( MDR - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07709564711381833}, {"determining": "( Min( ( ( ARS - ( ( MRS - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( CRS * ARS ) ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Max( ( MRS / Const ),AMS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Max( ( ( MLU / MUC ) * RCSe ),RCSe ),MUM ) - ( ( ( CS / RRSe ) + ( CS / Min( RCSe ,RMSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3285554498054142}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - Const ) ) ) ) / FirstVNF_RAM ) - Max( MRS,CRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( Max( ( CS / MLU ),( ( MUM * MUM ) + CS ) ) ,( ( ( RMSe * MUR ) + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5893826290110404}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( ( Max( ( ( ( FirstVNF_Mem_Server / Min( ARS ,ACS ) ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( ( Max( ( RCSe / MUR ),MUM ) + Max( ( MUR * DS ),CS ) ),( ( RRSe + MUC ) - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( RRSe + MUC ) - DS ) ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8514117028341134}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - FirstVNF_RAM ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,Max( ( RMSe * CS ),MUM ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09510958627963452}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( Const - Min( Max( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ),( Min( FirstVNF_RAM_Server ,( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) + ( DDR * MRS ) ) ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( CS / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( Max( RMSe,( ( DS + RRSe ) / DS ) ) / CS ) )", "obj1": 0.8360323886639676, "obj2": 0.12227736176050724}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26379325962242706}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_CPU_Server ,PN ) - ( ( CRS + FirstVNF_RAM ) + ( MDR - FirstVNF_RAM_Server ) ) ) * RRS ) ) ) * Max( MRS,Const ) ) ,( ( Const * FirstVNF_RAM ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( Min( RRSe ,( RMSe + MLU ) ),( MLU + ( MLU / ( RMSe * ( MUC / ( MUR / ( ( RRSe - CS ) / RCSe ) ) ) ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.32743262571500015}, {"determining": "( ( ( BR + Min( ( AMS * FirstVNF_Mem_Server ) ,Const ) ) / AMS ) - ( Max( FirstVNF_Mem,( DDR + MDR ) ) * FirstVNF_RAM ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,( ( MUR / RCSe ) * RRSe ) ) ) ) ) ) / ( Min( Min( DS ,( RMSe * DS ) ) ,MLU ) - Max( Max( ( Max( MUM,MUC ) * RCSe ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8367226437478468}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,RRS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( RRSe - RRSe ) ) + MLU ) / CS ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3144178974714202}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.618157466825664}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26379325962242706}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - Max( Max( ( FirstVNF_Mem + ( ( FirstVNF_RAM_Server - RRS ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( Const,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( MLU,MUR ) ,( ( MUM - RMSe ) + ( RMSe * MUC ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3082693494632206}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server / RRS ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.27828966418749}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "Min( ( ( ( MDR + FirstVNF_CPU_Server ) - ( Const - FirstVNF_CPU_Server ) ) * ( ( Max( Max( ( AMS * PN ),RRS ),AMS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + Max( MUR,Max( MLU,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3064755854455808}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / Max( AMS,RRS ) ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MUC ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2843289287664118}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( DDR - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( RRSe - Max( RMSe,RMSe ) ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.1796232203181919}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ARS ) / FirstVNF_RAM ) - ( ( ( FirstVNF_Mem / ( ( ( DDR * BR ) / FirstVNF_RAM ) * ( ARS * DDR ) ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) + ( MRS + CRS ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( PN - FirstVNF_RAM ) ) )", "choosing": "( Max( ( Min( RCSe ,( CS * Min( ( ( MUM + MUM ) * MUM ) ,( RCSe + ( CS + RMSe ) ) ) ) ) * CS ),RMSe ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7342385743441273}, {"determining": "( ( ( MRS * ( FirstVNF_RAM - Max( Const,ARS ) ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( ( Const + ( ( Max( FirstVNF_RAM,PN ) + ( ( DDR / FirstVNF_Mem ) / Max( AMS,ARS ) ) ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( MUM - DS ) )", "obj1": 0.9878542510121457, "obj2": 0.006008967231127733}, {"determining": "( ( ( Max( PN,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8562753036437247, "obj2": 0.0972691343669155}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5465587044534413, "obj2": 0.29936846962763974}, {"determining": "Min( ( ( FirstVNF_RAM * MDR ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) + ( ( MUR + Max( RMSe,RMSe ) ) - MUR ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29764741734333455}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5425101214574899, "obj2": 0.3016874193006996}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( ( FirstVNF_RAM_Server + Max( Const,AMS ) ) - ARS ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + Max( FirstVNF_Mem_Server,BR ) ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( MLU * MUM ) * DS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.29540108276228894}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( FirstVNF_CPU_Server / RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( ( MDR / MRS ) / ( PN - FirstVNF_RAM ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( RCSe - ( ( MUC / Max( RMSe,MUM ) ) + Min( DS ,MUC ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01075878928480613}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( Max( RRSe,MUM ) + MUC ) - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}], "18": [{"determining": "( Const - ( MRS * BR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) + Max( ( CS / DS ),MLU ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Max( MDR,MDR ) ) ) / ( ( ( Max( PN,Const ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),( RMSe * ( MUR + RCSe ) ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.4109311740890688, "obj2": 0.517833285088353}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + Min( FirstVNF_CPU_Server ,ACS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( RMSe * CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16245815070801464}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6255060728744939, "obj2": 0.2401550680246711}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( PN + FirstVNF_RAM_Server ) - ( MDR * PN ) ) )", "choosing": "( Min( MLU ,( MUM - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.14979757085020243, "obj2": 0.8201627371359193}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16819389251892927}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( MDR - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07709564711381833}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - Const ) ) ) ) / FirstVNF_RAM ) - Max( MRS,CRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( Max( ( CS / MLU ),( ( MUM * MUM ) + CS ) ) ,( ( ( RMSe * MUR ) + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5893826290110404}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( MUR - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( Min( ( ( ARS - ( ( MRS - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( CRS * ARS ) ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Max( ( MRS / Const ),AMS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Max( ( ( MLU / MUC ) * RCSe ),RCSe ),MUM ) - ( ( ( CS / RRSe ) + ( CS / Min( RCSe ,RMSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3285554498054142}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / Min( ( DDR - BR ) ,ACS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( ( MLU - RCSe ),MLU ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03481228259403515}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server / RRS ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5728744939271255, "obj2": 0.27828966418749}, {"determining": "( Const - Min( Max( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ),( Min( FirstVNF_RAM_Server ,( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) + ( DDR * MRS ) ) ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( CS / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( Max( RMSe,( ( DS + RRSe ) / DS ) ) / CS ) )", "obj1": 0.8360323886639676, "obj2": 0.12227736176050724}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( AMS / MDR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3392159793437042}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.618157466825664}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( ( FirstVNF_RAM_Server + Max( Const,AMS ) ) - ARS ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + Max( FirstVNF_Mem_Server,BR ) ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( MLU * MUM ) * DS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.29540108276228894}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - Max( Max( ( FirstVNF_Mem + ( ( FirstVNF_RAM_Server - RRS ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( Const,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( MLU,MUR ) ,( ( MUM - RMSe ) + ( RMSe * MUC ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3082693494632206}, {"determining": "( Min( FirstVNF_RAM ,BR ) + ( ( ACS + ( Max( ( ( Min( ACS ,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - CRS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( MLU * ( MUR + ( Min( RCSe ,MUM ) / Min( DS ,Max( RRSe,( ( Max( RRSe,MUM ) + MUC ) - DS ) ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8637980651689193}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( ( ( BR + Min( ( AMS * FirstVNF_Mem_Server ) ,Const ) ) / AMS ) - ( Max( FirstVNF_Mem,( DDR + MDR ) ) * FirstVNF_RAM ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,( ( MUR / RCSe ) * RRSe ) ) ) ) ) ) / ( Min( Min( DS ,( RMSe * DS ) ) ,MLU ) - Max( Max( ( Max( MUM,MUC ) * RCSe ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8367226437478468}, {"determining": "( ( ( Max( ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( CS - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( ( ( MUR * RRSe ) * RCSe ) - ( MLU / CS ) ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5910931174089069, "obj2": 0.26833430484387294}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.32331459444489374}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,RRS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( RRSe - RRSe ) ) + MLU ) / CS ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3144178974714202}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / Max( AMS,RRS ) ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MUC ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2843289287664118}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.1862348178137652, "obj2": 0.7376816716180904}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( DDR - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( RRSe - Max( RMSe,RMSe ) ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.1796232203181919}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ARS ) / FirstVNF_RAM ) - ( ( ( FirstVNF_Mem / ( ( ( DDR * BR ) / FirstVNF_RAM ) * ( ARS * DDR ) ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) + ( MRS + CRS ) ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( PN - FirstVNF_RAM ) ) )", "choosing": "( Max( ( Min( RCSe ,( CS * Min( ( ( MUM + MUM ) * MUM ) ,( RCSe + ( CS + RMSe ) ) ) ) ) * CS ),RMSe ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7342385743441273}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( MRS - ( Const * CRS ) ) ,( ACS * ( PN - RRS ) ) )", "choosing": "Min( ( CS / CS ) ,( ( ( RCSe - ( ( Min( ( MLU - RCSe ) ,MUC ) * ( ( RMSe + MUC ) / Max( MUM,DS ) ) ) * RMSe ) ) / Min( DS ,Max( RRSe,MUC ) ) ) + ( CS - RRSe ) ) )", "obj1": 0.9838056680161943, "obj2": 0.005556378210583506}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5465587044534413, "obj2": 0.29936846962763974}], "19": [{"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Max( MDR,MDR ) ) ) / ( ( ( ( MDR + ( ( PN - FirstVNF_Mem ) + ( FirstVNF_CPU_Server / RRS ) ) ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( Min( Min( RRSe ,( Min( RCSe ,RMSe ) * MUC ) ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( MRS * BR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) + Max( ( CS / DS ),MLU ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),( RMSe * ( MUR + RCSe ) ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.4109311740890688, "obj2": 0.517833285088353}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( RRS + ACS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUC ,RCSe ),MUR ) ) - ( Min( RMSe ,MUR ) * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.42442326072030084}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "( ( ( Max( ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( RMSe + CS ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( RCSe ,MUM ) / DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.14979757085020243, "obj2": 0.8046515884247039}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ( PN + FirstVNF_CPU ) - Max( ACS,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),( MLU - MLU ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.7975708502024291, "obj2": 0.1496616345015018}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16819389251892927}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + Min( FirstVNF_CPU_Server ,ACS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( RMSe * CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16245815070801464}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6255060728744939, "obj2": 0.2401550680246711}, {"determining": "( ( DDR / ( RRS * ( ARS / ACS ) ) ) * ( ( Const * ( ( FirstVNF_CPU + DDR ) + FirstVNF_RAM_Server ) ) / ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RMSe + CS ) - Min( RMSe ,( ( ( ( RMSe * Min( MLU ,( MLU + RCSe ) ) ) - CS ) / RRSe ) - RMSe ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5730594726301461}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( MDR - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07709564711381833}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - Const ) ) ) ) / FirstVNF_RAM ) - Max( MRS,CRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( Max( ( CS / MLU ),( ( MUM * MUM ) + CS ) ) ,( ( ( RMSe * MUR ) + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5893826290110404}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( MUR - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,Max( RRSe,( ( Min( DS ,MUC ) + Min( RRSe ,RCSe ) ) - DS ) ) ) ,Max( RRSe,( MLU * DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.3076923076923077, "obj2": 0.6243847217170633}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.32331459444489374}, {"determining": "( Const - Min( Max( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ),( Min( FirstVNF_RAM_Server ,( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) + ( DDR * MRS ) ) ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( CS / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( Max( RMSe,( ( DS + RRSe ) / DS ) ) / CS ) )", "obj1": 0.8360323886639676, "obj2": 0.12227736176050724}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( ( FirstVNF_RAM_Server + Max( Const,AMS ) ) - ARS ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Min( MDR ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) + Max( FirstVNF_Mem_Server,BR ) ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( MLU * MUM ) * DS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.29540108276228894}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( AMS / MDR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3392159793437042}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.618157466825664}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( ( ( MUR * RRSe ) * RCSe ) - ( MLU / CS ) ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5910931174089069, "obj2": 0.26833430484387294}, {"determining": "Min( ( ( ARS - Max( Max( ( FirstVNF_Mem + ( ( FirstVNF_RAM_Server - RRS ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( Const,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( MLU,MUR ) ,( ( MUM - RMSe ) + ( RMSe * MUC ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3082693494632206}, {"determining": "( ( ( BR + Min( ( AMS * FirstVNF_Mem_Server ) ,Const ) ) / AMS ) - ( Max( FirstVNF_Mem,( DDR + MDR ) ) * FirstVNF_RAM ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,( ( MUR / RCSe ) * RRSe ) ) ) ) ) ) / ( Min( Min( DS ,( RMSe * DS ) ) ,MLU ) - Max( Max( ( Max( MUM,MUC ) * RCSe ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8367226437478468}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "( ( ( Max( ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( CS - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( MRS - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_RAM ) * CRS ) ) / ( Max( FirstVNF_Mem,( ( ARS / ( Const - Min( ( FirstVNF_Mem / ACS ) ,DDR ) ) ) + RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + ( MUM * MUC ) ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - ( RRSe - Max( MLU,MUR ) ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.0319594407618272}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5465587044534413, "obj2": 0.29936846962763974}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,RRS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( RRSe - RRSe ) ) + MLU ) / CS ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3144178974714202}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( Max( MDR,MDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * RCSe ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5688259109311741, "obj2": 0.28286311138523684}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}, {"determining": "( Const - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9129554655870445, "obj2": 0.06493671163141783}], "20": [{"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( FirstVNF_Mem_Server,BR ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( MUC * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Max( MDR,MDR ) ) ) / ( ( ( ( MDR + ( ( PN - FirstVNF_Mem ) + ( FirstVNF_CPU_Server / RRS ) ) ) / ( FirstVNF_RAM_Server - ( RRS + AMS ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( Min( Min( RRSe ,( Min( RCSe ,RMSe ) * MUC ) ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) + RCSe ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ),( RMSe * ( MUR + RCSe ) ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.4109311740890688, "obj2": 0.517833285088353}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + Min( FirstVNF_CPU_Server ,ACS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( RMSe * CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16245815070801464}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Min( MDR ,ARS ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + DS ),MUM ) / ( RCSe / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7975708502024291, "obj2": 0.13897759163799578}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16819389251892927}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "( Min( Max( FirstVNF_Mem,ACS ) ,( ( DDR + BR ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( Min( ( RMSe * DS ) ,( MLU + RCSe ) ) / ( MUR - MLU ) )", "obj1": 0.10323886639676114, "obj2": 0.8575599176778484}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6255060728744939, "obj2": 0.2401550680246711}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - MRS ) ) ) ) / FirstVNF_RAM ) - ( ( DDR * FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( CS + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.354251012145749, "obj2": 0.5705799638320181}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( ( Max( ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( CS - DS ) ) ) ,( ( MUC + MUR ) / MUC ) ) ) * ( MLU / CS ) )", "obj1": 0.18016194331983806, "obj2": 0.7422457590717414}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - Const ) ) ) ) / FirstVNF_RAM ) - Max( MRS,CRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( Max( ( CS / MLU ),( ( MUM * MUM ) + CS ) ) ,( ( ( RMSe * MUR ) + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5893826290110404}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / RRS ) ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( MUC + MUM ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2920181157681372}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5465587044534413, "obj2": 0.29936846962763974}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( Const - Min( Max( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ),( Min( FirstVNF_RAM_Server ,( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) + DDR ) ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( CS / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( DS - Max( DS,RMSe ) ) )", "obj1": 0.8360323886639676, "obj2": 0.121982166171314}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / ( Max( FirstVNF_Mem,( AMS / MDR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3392159793437042}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( CS / Min( DS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2461806250399815}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( ( ( MUR * RRSe ) * RCSe ) - ( MLU / CS ) ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5910931174089069, "obj2": 0.26833430484387294}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.618157466825664}, {"determining": "Min( ( ( ARS - Max( Max( ( FirstVNF_Mem + ( ( FirstVNF_RAM_Server - RRS ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( Const,FirstVNF_CPU ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( MLU,MUR ) ,( ( MUM - RMSe ) + ( RMSe * MUC ) ) ) + MLU ) / CS ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3082693494632206}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "( ( ( BR + Min( ( AMS * FirstVNF_Mem_Server ) ,Const ) ) / AMS ) - ( Max( FirstVNF_Mem,( DDR + MDR ) ) * FirstVNF_RAM ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,( ( MUR / RCSe ) * RRSe ) ) ) ) ) ) / ( Min( Min( DS ,( RMSe * DS ) ) ,MLU ) - Max( Max( ( Max( MUM,MUC ) * RCSe ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8367226437478468}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( Max( MDR,MDR ) + FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( RRSe ,( Min( RCSe ,RMSe ) * RCSe ) ),Max( MUM,MUR ) ) + ( DS - DS ) ) / CS ) ) )", "obj1": 0.5688259109311741, "obj2": 0.28286311138523684}, {"determining": "( ( ( Max( ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( RMSe + CS ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( RCSe ,MUM ) / DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.14979757085020243, "obj2": 0.8046515884247039}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "( ( AMS - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( CS ,MLU ) + Max( RCSe,MUC ) ) + Min( RCSe ,( Max( ( ( RRSe - ( DS * ( RRSe * MUC ) ) ) - MUR ),Max( Max( ( DS / ( MUC - MUM ) ),CS ),( ( RCSe * RRSe ) + Min( MLU ,RCSe ) ) ) ) * MLU ) ) )", "obj1": 0.9554655870445344, "obj2": 0.020645544717242215}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.32331459444489374}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,RRS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( RRSe - RRSe ) ) + MLU ) / CS ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3144178974714202}, {"determining": "( ( Max( ( ( ARS * PN ) / CRS ),ACS ) - Max( PN,FirstVNF_CPU ) ) - Max( FirstVNF_CPU_Server,Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.8441295546558705, "obj2": 0.10635780863058494}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,MDR ) - Max( DDR,( CRS - ACS ) ) ) ,Max( CRS,FirstVNF_RAM ) )", "choosing": "Max( MLU,( CS - Min( RCSe ,Max( ( CS - MUM ),( MUM - DS ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3138725360226814}, {"determining": "( ( ( ( CRS * FirstVNF_Mem ) / Const ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( MUR + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ) - Max( Max( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( RMSe * MUC ) ),MLU ),( MUM + Min( MUC ,DS ) ) ) ) )", "obj1": 0.24696356275303644, "obj2": 0.684896963353143}], "21": [{"determining": "( ( Const - ( FirstVNF_RAM_Server + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( MUM + ( MUR / MUR ) ),CS ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Max( FirstVNF_Mem_Server,BR ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( MUC * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Min( MDR ,ARS ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + DS ),MUM ) / ( RCSe / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7975708502024291, "obj2": 0.13897759163799578}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + Min( FirstVNF_CPU_Server ,ACS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( RMSe * CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16245815070801464}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6255060728744939, "obj2": 0.2401550680246711}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - MRS ) ) ) ) / FirstVNF_RAM ) - ( ( DDR * FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( CS + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.354251012145749, "obj2": 0.5705799638320181}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.4865268151919736}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - Const ) ) ) ) / FirstVNF_RAM ) - Max( MRS,CRS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( Max( ( CS / MLU ),( ( MUM * MUM ) + CS ) ) ,( ( ( RMSe * MUR ) + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5893826290110404}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * ( RRS * PN ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( RRSe ,CS ) - ( RMSe / RCSe ) ) ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * MUC ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.851759638978481}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "( ( ( Max( ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( RMSe + CS ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( RCSe ,MUM ) / DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.14979757085020243, "obj2": 0.8046515884247039}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) * ( Max( PN,RRS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( RRSe - MUC ) ) + MLU ) / CS ) ) )", "obj1": 0.5182186234817814, "obj2": 0.32247606975777443}, {"determining": "( Const - Min( Max( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ),( Min( FirstVNF_RAM_Server ,( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) + DDR ) ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( CS / DS ) / MLU ) + Max( RMSe,MLU ) ) ) * ( DS - Max( DS,RMSe ) ) )", "obj1": 0.8360323886639676, "obj2": 0.121982166171314}, {"determining": "( ( ( Max( ( ( RRS * CRS ) * ( ARS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( ( ( RRSe - Max( RMSe,RMSe ) ) / MUM ) * CS ),MUM ) - ( MLU - ( Max( DS,Max( MUM,MUR ) ) / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.34210526315789475, "obj2": 0.5801167062841448}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU * AMS ) - BR ) - CRS ),Min( FirstVNF_CPU_Server ,ACS ) ) / Min( ACS ,( MDR * ARS ) ) ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( DS - DS ) ) * ( MLU / CS ) )", "obj1": 0.8279352226720648, "obj2": 0.1251470783092152}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / RRS ) ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( MUC + MUM ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2920181157681372}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( ( ACS - ( ARS - FirstVNF_RAM_Server ) ) * ACS ) - Const ) ) ) ) - ( DDR * ( Const - RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * Max( RMSe,CS ) )", "obj1": 0.24493927125506074, "obj2": 0.6892239420459001}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * CS ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.611336032388664, "obj2": 0.2451203276774973}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( ( ( MUR * RRSe ) * RCSe ) - ( MLU / CS ) ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.5910931174089069, "obj2": 0.26833430484387294}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.618157466825664}, {"determining": "Min( ( ( ARS - ( ( DDR / ( RRS - FirstVNF_CPU ) ) - Min( ( Max( CRS,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) + CRS ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( ( Const * FirstVNF_CPU ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * ( MUR + CS ) ) - CS ),( ( ( MLU + ( RMSe - MUR ) ) * RMSe ) + ( ( Max( Max( CS,Min( RRSe ,( RRSe - DS ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / ( Max( ( MLU * MLU ),MUR ) + Min( RCSe ,RRSe ) ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1751873026398919}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "( ( ( BR + Min( ( AMS * FirstVNF_Mem_Server ) ,Const ) ) / AMS ) - ( Max( FirstVNF_Mem,( DDR + MDR ) ) * FirstVNF_RAM ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,( ( MUR / RCSe ) * RRSe ) ) ) ) ) ) / ( Min( Min( DS ,( RMSe * DS ) ) ,MLU ) - Max( Max( ( Max( MUM,MUC ) * RCSe ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8367226437478468}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8117408906882592, "obj2": 0.12522741753227098}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ACS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),( ( RCSe - MLU ) * ( MUM + ( ( MUR / RCSe ) * RRSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( DS + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8456538411753536}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3436528564728486}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) + DDR ) ) ) * FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( DS + RCSe ) * ( RRSe - RMSe ) ) )", "obj1": 0.9635627530364372, "obj2": 0.016767093417962415}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.548582995951417, "obj2": 0.29673612525747145}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( ARS * ( MDR - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( Max( FirstVNF_Mem,RRS ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( Max( ( RMSe * CS ),( MLU + MUM ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8866396761133604, "obj2": 0.0742542902417594}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5465587044534413, "obj2": 0.29936846962763974}], "22": [{"determining": "( ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( Max( RRS,Const ) + ( Max( DDR,( ACS + DDR ) ) / FirstVNF_CPU_Server ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( Max( DS,RMSe ) + MLU ) ) ) ,( RRSe + Max( ( RRSe + MLU ),( RRSe * ( RMSe + ( MUR + CS ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_RAM_Server + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( MUM + ( MUR / MUR ) ),CS ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( ( Max( ( Max( BR,Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,DDR ) ) ) * ( BR / ( ARS * Min( RRS ,FirstVNF_CPU_Server ) ) ) ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,FirstVNF_CPU ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( MUC * DS ) ,Max( Max( Min( MLU ,MLU ),Min( RCSe ,MUM ) ),MUM ) ) ,Max( RRSe,MUM ) ) ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,( MUR + ( Min( MUM ,MUC ) - ( ( MUC / ( CS + CS ) ) + ( ( MUR * DS ) / MUC ) ) ) ) ) ) * ( ( ( CS / Max( ( RCSe - RMSe ),CS ) ) * MLU ) - MUC ) )", "obj1": 0.16194331983805668, "obj2": 0.7966629282922972}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + Min( FirstVNF_CPU_Server ,ACS ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * ( CS * ( RMSe * CS ) ) ) ) ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.16245815070801464}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "( ( ( Max( PN,Min( ACS ,( FirstVNF_RAM_Server - ( RRS - MRS ) ) ) ) / FirstVNF_RAM ) - ( ( DDR * FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( CS + ( RMSe * CS ) ) - ( CS + MUC ) ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( MLU / CS ) )", "obj1": 0.354251012145749, "obj2": 0.5705799638320181}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Min( MDR ,ARS ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + DS ),MUM ) / ( RCSe / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7975708502024291, "obj2": 0.13897759163799578}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.4865268151919736}, {"determining": "( ( Const - ( MRS + DDR ) ) - Min( RRS ,( FirstVNF_Mem / ( Min( ( Const - AMS ) ,PN ) * Const ) ) ) )", "choosing": "( Min( MUC ,( Min( ( RMSe - ( Max( ( MUM / MUR ),MUC ) + Max( Min( MUM ,RCSe ),Max( MLU,MUM ) ) ) ) ,CS ) / RCSe ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5857751775834198}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * ( RRS * PN ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( RRSe ,CS ) - ( RMSe / RCSe ) ) ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * MUC ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.851759638978481}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( Const - Min( Max( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem * RRS ) ) ),( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( MUR / DS ) / MLU ) + ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * RRSe ) ) ) ) ) ) * CS )", "obj1": 0.902834008097166, "obj2": 0.0665643188269334}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.027775268326540845}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "( ( ( Max( ( Const / Min( MDR ,( FirstVNF_CPU * FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( RMSe + CS ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( RCSe ,MUM ) / DS ) ) ) ) * ( MLU / CS ) )", "obj1": 0.14979757085020243, "obj2": 0.8046515884247039}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( CRS / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * Min( DS ,MUR ) ) ) ) ) ) ,( Max( Max( ( DS + RCSe ),Max( MUM,MLU ) ),MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.11763826384902022}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( DDR * ( ( MRS + ARS ) - RRS ) ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7226720647773279, "obj2": 0.17483385171835436}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / RRS ) ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( MUC + MUM ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2920181157681372}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ) / ACS ) * ( BR / ( Max( MRS,DDR ) / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RMSe * ( RMSe + Min( RRSe ,MLU ) ) ),MUM ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.1438296357608121}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( Max( ( DS + CS ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( Max( MUM,CS ) - DS ),( MLU * MUM ) ) ) ) / CS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8122116347789982}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3436528564728486}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5772105841623391}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( CS / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.11821538366467092}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( ( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / ( Min( FirstVNF_CPU_Server ,RRS ) - FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,( MUM / Min( ( RCSe * RMSe ) ,RCSe ) ) ) ) ) * ( ( ( Max( ( ( MLU / CS ) * CS ),MUM ) - ( MLU - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3441295546558704, "obj2": 0.5740558705854284}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * CS ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.611336032388664, "obj2": 0.2451203276774973}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( ( FirstVNF_Mem + BR ) - ( Max( MRS,Max( Const,( FirstVNF_RAM * AMS ) ) ) * CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - ( MLU / CS ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Max( ( RRSe / RCSe ),( MUR - MUC ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5890688259109311, "obj2": 0.267320828463077}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( ( ( Max( Max( ( MDR * ARS ),FirstVNF_RAM ),ARS ) / Max( ( FirstVNF_Mem_Server * PN ),Max( RRS,( DDR + Min( AMS ,( FirstVNF_RAM - AMS ) ) ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe - Min( Min( ( RRSe - ( RCSe / ( RRSe + RRSe ) ) ) ,MUC ) ,Max( RRSe,MUM ) ) ) - ( RRSe + CS ) ) * ( MLU / CS ) )", "obj1": 0.15182186234817813, "obj2": 0.7996011542509772}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( ( ( MUC - MUR ) - MLU ) - MUR ) ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01848681565329806}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU_Server ,ACS ) + DDR ) ) ) * FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUM * ( RRSe - RMSe ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ACS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),( ( RCSe - MLU ) * ( MUM + ( ( MUR / RCSe ) * RRSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( DS + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8456538411753536}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8117408906882592, "obj2": 0.12522741753227098}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( RRS / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( MDR * FirstVNF_CPU ) / CRS ) ) ),BR ) ) * ( Max( PN,( DDR * ( Const - RRS ) ) ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( DS ,( ( Max( MUM,RRSe ) / Min( CS ,MLU ) ) + DS ) ) + MLU ) / CS ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2403139676176424}], "23": [{"determining": "( Max( ( BR * AMS ),MDR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( DDR + ( FirstVNF_Mem_Server / RRS ) ) * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( RCSe * MUC ) + DS ) - ( RMSe / RCSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * ( Max( RRS,Const ) + ( Max( DDR,( ACS + DDR ) ) / FirstVNF_CPU_Server ) ) ) ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( Max( DS,RMSe ) + MLU ) ) ) ,( RRSe + Max( ( RRSe + MLU ),( RRSe * ( RMSe + ( MUR + CS ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),RRSe ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7550607287449392, "obj2": 0.16142278625226003}, {"determining": "( ( Const - ( MRS + DDR ) ) - Min( RRS ,( FirstVNF_Mem / ( Min( ( Const - AMS ) ,PN ) * Const ) ) ) )", "choosing": "( Min( MUC ,( Min( ( RMSe - ( Max( ( MUM / MUR ),MUC ) + Max( Min( MUM ,RCSe ),Max( MLU,MUM ) ) ) ) ,CS ) / RCSe ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5857751775834198}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - FirstVNF_CPU ) ) + ( ( ACS + AMS ) - ACS ) ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe / DS ),MUM ) - ( ( ( CS / ( RMSe / MUC ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7992477774653702}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / RRS ) ) ) ) * ( Max( MDR,MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( MUC + MUM ) + Max( ( Min( DS ,MLU ) + RRSe ),( Max( DS,Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2920181157681372}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ( PN / CRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( FirstVNF_RAM / Min( ( PN * CRS ) ,FirstVNF_CPU ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,Min( ( Min( MUR ,MLU ) - ( ( MLU + MUC ) * MLU ) ) ,RMSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + RMSe ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.3161519434253904}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * ( RRS * PN ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( RRSe ,CS ) - ( RMSe / RCSe ) ) ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * MUC ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.851759638978481}, {"determining": "( ( ( Max( ( ( MRS + FirstVNF_RAM_Server ) - CRS ),Min( MRS ,FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( MUC,( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( Min( MUM ,RCSe ) ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8704453441295547, "obj2": 0.08902927372145228}, {"determining": "Min( ( ( ARS - Max( Min( ACS ,( AMS - FirstVNF_RAM_Server ) ),Const ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( Const + ARS ) )", "choosing": "Max( ( ( RRSe - ( RRSe + MUC ) ) - MLU ),( ( MUM - RRSe ) + ( RRSe + MLU ) ) )", "obj1": 0.4109311740890688, "obj2": 0.4855167351849795}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.027775268326540845}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( CRS / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * Min( DS ,MUR ) ) ) ) ) ) ,( Max( Max( ( DS + RCSe ),Max( MUM,MLU ) ),MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.11763826384902022}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( DDR * ( ( MRS + ARS ) - RRS ) ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7226720647773279, "obj2": 0.17483385171835436}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( ( Min( AMS ,ARS ) * ( BR / FirstVNF_RAM_Server ) ) / ACS ) * ( BR / ( Max( MRS,DDR ) / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( RMSe * ( RMSe + Min( RRSe ,MLU ) ) ),MUM ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.1438296357608121}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ) ) ,BR )", "choosing": "Max( ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ),( MLU + ( ( RMSe * MUC ) / CS ) ) )", "obj1": 0.7995951417004049, "obj2": 0.13398828898857879}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * ( ( ( MDR - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( Max( ( DS + CS ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( Max( MUM,CS ) - DS ),( MLU * MUM ) ) ) ) / CS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.8122116347789982}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( MLU + ( ( RMSe - ( ( RMSe * MLU ) + ( MUR + RCSe ) ) ) * CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3436528564728486}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( AMS * FirstVNF_Mem ) * Max( CRS,BR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + ( RCSe + MUM ) ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3440325246813082}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( CS / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.11821538366467092}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * CS ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.611336032388664, "obj2": 0.2451203276774973}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( ( FirstVNF_Mem + BR ) - ( Max( MRS,Max( Const,( FirstVNF_RAM * AMS ) ) ) * CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - ( MLU / CS ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Max( ( RRSe / RCSe ),( MUR - MUC ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5890688259109311, "obj2": 0.267320828463077}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( ( ( MUC - MUR ) - MLU ) - MUR ) ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01848681565329806}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU_Server ,ACS ) + DDR ) ) ) * FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUM * ( RRSe - RMSe ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( FirstVNF_RAM / ( MDR * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) - MRS ) / DDR ) ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( Max( MUC,MUR ) - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( Min( CS ,( MUM / MUM ) ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( MLU / CS ) ) / Max( RMSe,RCSe ) ) )", "obj1": 0.9271255060728745, "obj2": 0.06268044299906025}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ACS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),( ( RCSe - MLU ) * ( MUM + ( ( MUR / RCSe ) * RRSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( DS + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8456538411753536}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( RCSe / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8117408906882592, "obj2": 0.12522741753227098}], "24": [{"determining": "Min( Min( ( MRS - ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_RAM ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( Min( ( CS / Max( ( ( MLU - MLU ) / Max( CS,RRSe ) ),MUR ) ) ,RRSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR * AMS ),MDR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( DDR + ( FirstVNF_Mem_Server / RRS ) ) * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( RCSe * MUC ) + DS ) - ( RMSe / RCSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.4331983805668016, "obj2": 0.431278803897286}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( ( Const - ( MRS + DDR ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( Min( MUM ,( ( ( RMSe * MUR ) + Max( RRSe,MUC ) ) - RCSe ) ) * RRSe ) - ( RRSe / RCSe ) ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5572357350486988}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / ( ARS - FirstVNF_Mem_Server ) ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( MUM ,MUR ) + Max( Min( DS ,( RCSe / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7894736842105263, "obj2": 0.1337229663194755}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),RRSe ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7550607287449392, "obj2": 0.16142278625226003}, {"determining": "( ( Const - ( MRS + DDR ) ) - Min( RRS ,( FirstVNF_Mem / ( Min( ( Const - AMS ) ,PN ) * Const ) ) ) )", "choosing": "( Min( MUC ,( Min( ( RMSe - ( Max( ( MUM / MUR ),MUC ) + Max( Min( MUM ,RCSe ),Max( MLU,MUM ) ) ) ) ,CS ) / RCSe ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5857751775834198}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ( PN / CRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( FirstVNF_RAM / Min( ( PN * CRS ) ,FirstVNF_CPU ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,Min( ( Min( MUR ,MLU ) - ( ( MLU + MUC ) * MLU ) ) ,RMSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + RMSe ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.3161519434253904}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ,Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) )", "choosing": "Max( ( ( MLU + Max( RCSe,MUC ) ) + ( ( ( DS + RCSe ) / ( MUR + ( Min( Min( DS ,RCSe ) ,MLU ) - Max( DS,MLU ) ) ) ) - ( RRSe / Max( RCSe,MUC ) ) ) ),( MLU + ( ( Max( Min( ( MUM + RCSe ) ,( Min( RCSe ,RMSe ) * ( RCSe + MLU ) ) ),Max( MUM,Min( CS ,( MLU - MLU ) ) ) ) + ( ( MUR + MLU ) - MUR ) ) / ( ( ( Max( Min( RMSe ,MUC ),CS ) + DS ) / ( RMSe * RRSe ) ) / MUR ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.6153400302317936}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - Max( Min( ACS ,( AMS - FirstVNF_RAM_Server ) ),Const ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( Const + ARS ) )", "choosing": "Max( ( ( RRSe - ( RRSe + MUC ) ) - MLU ),( ( MUM - RRSe ) + ( RRSe + MLU ) ) )", "obj1": 0.4109311740890688, "obj2": 0.4855167351849795}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ACS / CRS ) * ( ( MRS + MRS ) * CRS ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( MRS * BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( FirstVNF_Mem,ACS ) / MDR ) ) ) + ( ( ARS * PN ) / CRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "Min( Min( ( MRS - ( Min( MDR ,CRS ) * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) ) ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),( RRSe * RRSe ) ) / ( RCSe / MUR ) ) ) + DS ) / CS ) ) )", "obj1": 0.7854251012145749, "obj2": 0.15263658549121367}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * ( RRS * PN ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( RRSe ,CS ) - ( RMSe / RCSe ) ) ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * MUC ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.851759638978481}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( CRS / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * Min( DS ,MUR ) ) ) ) ) ) ,( Max( Max( ( DS + RCSe ),Max( MUM,MLU ) ),MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.11763826384902022}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - FirstVNF_CPU ) ) + ( ( ACS + AMS ) - ACS ) ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe / DS ),MUM ) - ( ( ( CS / ( RMSe / MUC ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7992477774653702}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( DDR * ( ( MRS + ARS ) - RRS ) ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7226720647773279, "obj2": 0.17483385171835436}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - Max( ( MLU + CS ),MUM ) ) * ( MLU / CS ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.027775268326540845}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * CS ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.611336032388664, "obj2": 0.2451203276774973}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( ( ( Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( Max( MDR,PN ) ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( MUM - Min( ( ( Max( RRSe,RRSe ) / MUM ) + MUM ) ,MUC ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7216203346296609}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( ( BR / FirstVNF_RAM_Server ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.25834372425440866}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( CS / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.11821538366467092}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( ( MUR + MUC ) / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.3259109311740891, "obj2": 0.6063215531681589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( ( FirstVNF_Mem + BR ) - ( Max( MRS,Max( Const,( FirstVNF_RAM * AMS ) ) ) * CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - ( MLU / CS ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Max( ( RRSe / RCSe ),( MUR - MUC ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5890688259109311, "obj2": 0.267320828463077}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09111313023596274}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,Max( ( Max( ( ( DDR / FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( MDR + FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( ( Min( MLU ,MLU ) - Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( DS ,( MLU - RRSe ) ) ) ) * ( MLU / CS ) ) )", "obj1": 0.9352226720647774, "obj2": 0.03926650701561647}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( ( ( MUC - MUR ) - MLU ) - MUR ) ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.9574898785425101, "obj2": 0.01848681565329806}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( MDR * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server + ( Min( FirstVNF_CPU_Server ,ACS ) + DDR ) ) ) * FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUM * ( RRSe - RMSe ) ) )", "obj1": 0.9595141700404858, "obj2": 0.01667500501894516}, {"determining": "( ( FirstVNF_RAM / ( MDR * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) - MRS ) / DDR ) ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( Max( MUC,MUR ) - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( Min( CS ,( MUM / MUM ) ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( MLU / CS ) ) / Max( RMSe,RCSe ) ) )", "obj1": 0.9271255060728745, "obj2": 0.06268044299906025}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ACS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),( ( RCSe - MLU ) * ( MUM + ( ( MUR / RCSe ) * RRSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( DS + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8456538411753536}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( RRS * ( MDR * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUC / MUM ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RCSe * ( CS - RCSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.34211763045009375}], "25": [{"determining": "( ( ( Max( ( ( ACS + FirstVNF_CPU ) * FirstVNF_CPU_Server ),MRS ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( Min( DS ,MUR ) - ( RMSe / RCSe ) ) ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS - ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_RAM ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( Min( ( CS / Max( ( ( MLU - MLU ) / Max( CS,RRSe ) ),MUR ) ) ,RRSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( ( ( ARS - Max( CRS,FirstVNF_RAM_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( ( RCSe * RMSe ) - Max( ( ( DS / MUR ) / DS ),DS ) ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Max( MUR,RCSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Min( MUM ,MUR ) ) / CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.19265706496655474}, {"determining": "( Min( ( ( ARS - ( ( ARS / ( FirstVNF_CPU + ACS ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + Min( MUR ,MUM ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.5458818577203167}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ACS / CRS ) * ( ( MRS + MRS ) * CRS ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( MRS * BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( FirstVNF_Mem,ACS ) / MDR ) ) ) + ( ( ARS * PN ) / CRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,RRS ) * BR ) - MRS ),Min( ( MDR / ( ACS / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,ACS ) ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( Min( MUM ,( RMSe - MUM ) ) * ( MLU / CS ) ) / CS ) )", "obj1": 0.3684210526315789, "obj2": 0.5388000231788982}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( ACS * AMS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - ( ( Max( CS,MUR ) / Min( Min( Max( MUC,DS ) ,DS ) ,DS ) ) - MUR ) ) ) ,( Max( RMSe,MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.1549039613959547}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.6518218623481782, "obj2": 0.23286789040685632}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,FirstVNF_CPU_Server ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),RRSe ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7550607287449392, "obj2": 0.16142278625226003}, {"determining": "( ( Const - ( MRS + DDR ) ) - Min( RRS ,( FirstVNF_Mem / ( Min( ( Const - AMS ) ,PN ) * Const ) ) ) )", "choosing": "( Min( MUC ,( Min( ( RMSe - ( Max( ( MUM / MUR ),MUC ) + Max( Min( MUM ,RCSe ),Max( MLU,MUM ) ) ) ) ,CS ) / RCSe ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5857751775834198}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ( PN / CRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( FirstVNF_RAM / Min( ( PN * CRS ) ,FirstVNF_CPU ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,Min( ( Min( MUR ,MLU ) - ( ( MLU + MUC ) * MLU ) ) ,RMSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + RMSe ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.3161519434253904}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / ( ARS - FirstVNF_Mem_Server ) ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( MUM ,MUR ) + Max( Min( DS ,( RCSe / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7894736842105263, "obj2": 0.1337229663194755}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( ( ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - AMS ) ) / FirstVNF_RAM ) - Max( ( Max( ( Const - Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),ARS ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( ( Min( ( MLU / DS ) ,CS ) + MLU ) + Min( RRSe ,MLU ) ) ),MUM ) - ( MLU * ( MUM - MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.840080971659919, "obj2": 0.10981925724327482}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( RRS * FirstVNF_Mem_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( ( Min( RRSe ,DS ) - ( RMSe / MUC ) ) / MUM ) ) + Max( Min( DS ,( ( MUC / MUR ) / MUM ) ),( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.8097165991902834, "obj2": 0.12643971063956863}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( CRS ,BR ) ) + BR ) ) / ( ( AMS * ( FirstVNF_CPU_Server / RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MLU * ( MLU / CS ) ) - ( ( MUR / ( ( MUC / ( ( CS * MUR ) + ( CS - RRSe ) ) ) - MUR ) ) * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32800788920401935}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - Max( Min( ACS ,( AMS - FirstVNF_RAM_Server ) ),Const ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( Const + ARS ) )", "choosing": "Max( ( ( RRSe - ( RRSe + MUC ) ) - MLU ),( ( MUM - RRSe ) + ( RRSe + MLU ) ) )", "obj1": 0.4109311740890688, "obj2": 0.4855167351849795}, {"determining": "Min( ( ( ARS - Max( Max( ( ( DDR / ACS ) * ( BR / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / ( ARS - FirstVNF_Mem_Server ) ) ) ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + AMS ) + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( RRSe + RCSe ),( MLU + ( ( Min( MUM ,MUR ) + Max( Min( DS ,( RCSe / MUM ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.7834008097165992, "obj2": 0.13872661022680513}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_RAM_Server / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( MLU / CS ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.708502024291498, "obj2": 0.1865660783962337}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * ( RRS * PN ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( RRSe ,CS ) - ( RMSe / RCSe ) ) ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( MUR,( MLU * MUC ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.851759638978481}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09111313023596274}, {"determining": "( ( ( Max( ( MDR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8502024291497976, "obj2": 0.10320774786299072}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( CRS / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - Min( ( RMSe * MUC ) ,( RMSe * ( MUR * Min( DS ,MUR ) ) ) ) ) ) ,( Max( Max( ( DS + RCSe ),Max( MUM,MLU ) ),MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.11763826384902022}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - FirstVNF_CPU ) ) + ( ( ACS + AMS ) - ACS ) ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe / DS ),MUM ) - ( ( ( CS / ( RMSe / MUC ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7992477774653702}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( DDR * ( ( MRS + ARS ) - RRS ) ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7226720647773279, "obj2": 0.17483385171835436}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * CS ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.611336032388664, "obj2": 0.2451203276774973}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2543749440576743}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( ( FirstVNF_Mem + BR ) - ( Max( MRS,Max( Const,( FirstVNF_RAM * AMS ) ) ) * CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - ( MLU / CS ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Max( ( RRSe / RCSe ),( MUR - MUC ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5890688259109311, "obj2": 0.267320828463077}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( RRS * ( MDR * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUC / MUM ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RCSe * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2830826612151308}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( DS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.9048582995951417, "obj2": 0.06380542591016607}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * MLU ) / ( MLU / MLU ) ) ) / CS ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03336149498280497}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( ( FirstVNF_RAM / ( MDR * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) - MRS ) / DDR ) ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( Max( MUC,MUR ) - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( Min( CS ,( MUM / MUM ) ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( MLU / CS ) ) / Max( RMSe,RCSe ) ) )", "obj1": 0.9271255060728745, "obj2": 0.06268044299906025}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( CS / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.11821538366467092}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ACS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),( ( RCSe - MLU ) * ( MUM + ( ( MUR / RCSe ) * RRSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( DS + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8456538411753536}, {"determining": "Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / ( CRS / BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + BR ) ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( MLU / CS ) ) ,( Max( Max( ( DS + RCSe ),Max( MUM,MLU ) ),MUM ) + Max( MUR,( MLU * ( RRSe - MUC ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.12455298092220961}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}], "26": [{"determining": "( ( ( Min( MDR ,MRS ) * FirstVNF_CPU ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( RCSe * RRSe ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * RMSe ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( ( ACS + FirstVNF_CPU ) * FirstVNF_CPU_Server ),MRS ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * ( Min( DS ,MUR ) - ( RMSe / RCSe ) ) ),( MUR + RCSe ) ) - ( ( ( CS / Max( Min( MUM ,( MLU * MLU ) ),( Max( MLU,RCSe ) / ( MUC - CS ) ) ) ) + DS ) - ( MUR + ( Min( Max( DS,( DS * MUM ) ) ,MUM ) / ( ( ( MUM - MUR ) / Max( MUR,MUC ) ) / Min( CS ,Max( RRSe,RCSe ) ) ) ) ) ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,Max( ( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem / ACS ) * ( BR / FirstVNF_RAM_Server ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( CS / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.11821538366467092}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( ARS - Max( CRS,FirstVNF_RAM_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( ( RCSe * RMSe ) - Max( ( ( DS / MUR ) / DS ),DS ) ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Max( MUR,RCSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Min( MUM ,MUR ) ) / CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.19265706496655474}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( Min( ( MRS - ( DDR * CRS ) ) ,( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ) ,BR )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( MLU + CS ),MUM ) / ( CS / MUR ) ) ) + Max( CS,( ( RRSe + RMSe ) / RMSe ) ) ) / CS ) ) )", "obj1": 0.8218623481781376, "obj2": 0.10274181185207128}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ACS / CRS ) * ( ( MRS + MRS ) * CRS ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( MRS * BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( FirstVNF_Mem,ACS ) / MDR ) ) ) + ( ( ARS * PN ) / CRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( Min( ( MLU / DS ) ,CS ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5319540305905963}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) - MDR ) + FirstVNF_Mem ) / FirstVNF_RAM ) - ( DDR - ( ( ( Max( PN,Const ) * Min( Const ,FirstVNF_CPU_Server ) ) / ACS ) * Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) ) ) - ( ( ( MDR * BR ) / FirstVNF_CPU ) / RRS ) )", "choosing": "( ( RRSe - Min( Min( DS ,( ( ( ( MUC - MUR ) - MLU ) - MUR ) - ( MLU - ( MUR / CS ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( MLU / CS ) )", "obj1": 0.8522267206477733, "obj2": 0.09341989301195537}, {"determining": "Min( ( ( ARS - Max( Max( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + ( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( ( MUR / MUR ) ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.6497975708502024, "obj2": 0.22994298240301406}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( ( ARS - ( ( ARS / ( FirstVNF_CPU + ACS ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + Min( MUR ,MUM ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.5458818577203167}, {"determining": "( ( Const - ( MRS + DDR ) ) - Min( RRS ,( FirstVNF_Mem / ( Min( ( Const - AMS ) ,PN ) * Const ) ) ) )", "choosing": "( Min( MUC ,( Min( ( RMSe - ( Max( ( MUM / MUR ),MUC ) + Max( Min( MUM ,RCSe ),Max( MLU,MUM ) ) ) ) ,CS ) / RCSe ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5857751775834198}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ( PN / CRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( FirstVNF_RAM / Min( ( PN * CRS ) ,FirstVNF_CPU ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,Min( ( Min( MUR ,MLU ) - ( ( MLU + MUC ) * MLU ) ) ,RMSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + RMSe ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.3161519434253904}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9574898785425101, "obj2": 0.020103443603683508}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( MUM,DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7461773635193786}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,Min( MUC ,CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32703310396594076}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - Max( Min( ACS ,( AMS - FirstVNF_RAM_Server ) ),Const ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( Const + ARS ) )", "choosing": "Max( ( ( RRSe - ( RRSe + MUC ) ) - MLU ),( ( MUM - RRSe ) + ( RRSe + MLU ) ) )", "obj1": 0.4109311740890688, "obj2": 0.4855167351849795}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( AMS + DDR ) ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe - RCSe ) - ( MLU * ( Max( ( CS / MUC ),( ( MUR - MUM ) * ( RMSe + RCSe ) ) ) + ( ( RMSe + ( RCSe / CS ) ) + Min( RRSe ,RCSe ) ) ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( ( ( RCSe / MUC ) + RRSe ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( CS / Max( MUC,RCSe ) ) + DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6217265062646539}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( Min( FirstVNF_CPU_Server ,ACS ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.708502024291498, "obj2": 0.18493713789753166}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Max( Max( CRS,( Max( CRS,FirstVNF_CPU_Server ) / Const ) ),RRS ) - Min( Max( ACS,( FirstVNF_RAM / ( AMS * Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_RAM ) ) ) ) ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( MLU - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( ( MLU / CS ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( ( Min( RRSe ,MLU ) / RCSe ) / CS ) ) / CS ) )", "obj1": 0.9311740890688259, "obj2": 0.059487103473121104}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8623481781376519, "obj2": 0.09111313023596274}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - FirstVNF_CPU ) ) + ( ( ACS + AMS ) - ACS ) ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe / DS ),MUM ) - ( ( ( CS / ( RMSe / MUC ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7992477774653702}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * CS ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.611336032388664, "obj2": 0.2451203276774973}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,( ( ( ARS / ACS ) / ( FirstVNF_RAM_Server - ( RRS + Max( MDR,MDR ) ) ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MUC / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.30569842893619403}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.18093242539918897}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( ( FirstVNF_RAM / Const ) - ( Max( FirstVNF_Mem_Server,ACS ) / Const ) )", "choosing": "( ( Max( ( RMSe * CS ),( MLU + MLU ) ) - ( ( ( Max( CS,RRSe ) / ( Min( ( DS - MUR ) ,Min( DS ,MUM ) ) * Min( RMSe ,RCSe ) ) ) / MLU ) + Max( RMSe,MLU ) ) ) * ( MLU / CS ) )", "obj1": 0.9149797570850202, "obj2": 0.06272588542896339}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_RAM_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5445344129554656, "obj2": 0.3001689653936466}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + ( MUM / RRSe ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26487809339560303}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( DS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.9048582995951417, "obj2": 0.06380542591016607}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "( ( FirstVNF_RAM / ( MDR * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) - MRS ) / DDR ) ) ) - Min( Max( ACS,MRS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( RRSe + RRSe ) + ( RRSe * Min( ( ( RCSe / DS ) + ( MUR / CS ) ) ,MUC ) ) ) ) - ( Max( MUC,MUR ) - Max( RCSe,MLU ) ) ) * ( ( ( Max( ( Min( CS ,( MUM / MUM ) ) * ( ( MUR * RCSe ) + MUM ) ),MUM ) - ( MLU - ( ( MUC / RCSe ) / RCSe ) ) ) * ( MLU / CS ) ) / Max( RMSe,RCSe ) ) )", "obj1": 0.9271255060728745, "obj2": 0.06268044299906025}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( DDR * ( ( MRS + ARS ) - RRS ) ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7226720647773279, "obj2": 0.17483385171835436}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + BR ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( MUM + RRSe ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1742175562564295}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( AMS ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( MDR ,( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,( Max( ( RRSe / RCSe ),( MUR - MUC ) ) + RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9979757085020243, "obj2": 0.00044436359387534715}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2543749440576743}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( Max( Max( ( Max( ( MRS / FirstVNF_Mem ),PN ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( CS,( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6052631578947368, "obj2": 0.25092094404457876}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( BR / Max( MRS,Max( AMS,DDR ) ) ) / RRS ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( ( MUM * DS ) * ( DS / MUR ) ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2925639612427298}, {"determining": "( ( ( FirstVNF_RAM / ( AMS / FirstVNF_CPU ) ) - Max( ( ( ( Const - ( ARS / FirstVNF_RAM_Server ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( RMSe / MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}], "27": [{"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,MRS ) * FirstVNF_CPU ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( RCSe * RRSe ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * RMSe ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7894736842105263, "obj2": 0.08952709750122868}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,DS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( DDR,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( DS * MUM ) ) / CS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1633813567735416}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( ARS - Max( CRS,FirstVNF_RAM_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( ( RCSe * RMSe ) - Max( ( ( DS / MUR ) / DS ),DS ) ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Max( MUR,RCSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Min( MUM ,MUR ) ) / CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.19265706496655474}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( Min( ( ( ( Max( Const,Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ) - FirstVNF_RAM ) / ( ( ( ACS * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / BR ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( CS + MUR ) ) ) ) ) / ( Min( Min( Max( Max( RMSe,Min( MUR ,( MUR * RMSe ) ) ),MLU ) ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / CS ) ),MLU ) ) )", "obj1": 0.9129554655870445, "obj2": 0.05557011510458196}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( Min( ( MLU / DS ) ,CS ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5319540305905963}, {"determining": "Min( ( ( ARS - Max( Max( ( ( Min( RRS ,MRS ) - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,( PN + ( ARS / FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( ( MUR / MUR ) ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Min( MUR ,MUC ) ) ) ) ) / CS ) ) )", "obj1": 0.6497975708502024, "obj2": 0.22994298240301406}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ACS / CRS ) * ( ( MRS + MRS ) * CRS ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( MRS * BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( FirstVNF_Mem,ACS ) / MDR ) ) ) + ( ( ARS * PN ) / CRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( Min( ( ( ARS - ( ( ARS / ( FirstVNF_CPU + ACS ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + Min( MUR ,MUM ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.5458818577203167}, {"determining": "( ( Const - ( MRS + DDR ) ) - Min( RRS ,( FirstVNF_Mem / ( Min( ( Const - AMS ) ,PN ) * Const ) ) ) )", "choosing": "( Min( MUC ,( Min( ( RMSe - ( Max( ( MUM / MUR ),MUC ) + Max( Min( MUM ,RCSe ),Max( MLU,MUM ) ) ) ) ,CS ) / RCSe ) ) * ( Max( MUR,MUM ) / CS ) )", "obj1": 0.3319838056680162, "obj2": 0.5857751775834198}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ( PN / CRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( ( Max( FirstVNF_Mem_Server,BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( FirstVNF_RAM / Min( ( PN * CRS ) ,FirstVNF_CPU ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,Min( ( Min( MUR ,MLU ) - ( ( MLU + MUC ) * MLU ) ) ,RMSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + RMSe ) ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5364372469635628, "obj2": 0.3161519434253904}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( Min( Min( CS ,( RCSe + RCSe ) ) ,( RRSe - ( RMSe / ( RRSe * MUM ) ) ) ) / Min( DS ,( RRSe / RMSe ) ) ) ) - Min( CS ,RRSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7897612168684035}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - Max( Min( ACS ,( AMS - FirstVNF_RAM_Server ) ),Const ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( Const + ARS ) )", "choosing": "Max( ( ( RRSe - ( RRSe + MUC ) ) - MLU ),( ( MUM - RRSe ) + ( RRSe + MLU ) ) )", "obj1": 0.4109311740890688, "obj2": 0.4855167351849795}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6059600297111506}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - FirstVNF_CPU ) ) + ( ( ACS + AMS ) - ACS ) ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe / DS ),MUM ) - ( ( ( CS / ( RMSe / MUC ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.1437246963562753, "obj2": 0.7992477774653702}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( DS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.9048582995951417, "obj2": 0.06380542591016607}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,Min( MUC ,CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32703310396594076}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RRSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.7320471797142221}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "Min( ( ( ARS - Max( Max( ( ( ACS - ( FirstVNF_CPU_Server * BR ) ) * ( ( FirstVNF_CPU_Server - MDR ) / Max( RRS,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),( FirstVNF_Mem_Server / RRS ) ) ) * ( ( DDR + AMS ) + MDR ) ) ,Max( ( ( MRS - ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * BR ),PN ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( Min( DS ,( Max( ( CS + CS ),( MLU - CS ) ) / ( RCSe / MUR ) ) ) + Max( Min( DS ,( RCSe / MUM ) ),Max( RRSe,( Min( CS ,CS ) + Max( DS,RRSe ) ) ) ) ) / CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.1712300867538111}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( MUR / MUR ) + MLU ) / ( ( MLU / MUC ) * RMSe ) ),( ( ( RRSe - Max( MLU,MUR ) ) - MLU ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( Max( ( RMSe * CS ),MUM ),MUR ) ) + Max( RRSe,( Max( DS,( DS * MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.597165991902834, "obj2": 0.26241362970915594}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + ( MUM / RRSe ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26487809339560303}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( Min( FirstVNF_CPU_Server ,ACS ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.708502024291498, "obj2": 0.18493713789753166}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( ( RMSe * CS ) + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.1809165078466486}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( ( MDR * PN ) / AMS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( Max( ( MLU / ( CS * MLU ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( MUM ,RRSe ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01879725931226052}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( BR / Max( MRS,Max( AMS,DDR ) ) ) / RRS ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( ( MUM * DS ) * ( DS / MUR ) ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2925639612427298}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9574898785425101, "obj2": 0.020103443603683508}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2543749440576743}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3801320167836418}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_RAM_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5445344129554656, "obj2": 0.3001689653936466}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8409331344197506}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "( Max( Max( ( ( Max( MRS,DDR ) / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( CRS ,AMS ) / PN ) ) ) )", "choosing": "( ( ( DS / RCSe ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2441837863089431}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( DDR * ( ( MRS + ARS ) - RRS ) ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7226720647773279, "obj2": 0.17483385171835436}, {"determining": "( ( ( FirstVNF_RAM / ( AMS / FirstVNF_CPU ) ) - Max( ( ( ( Const - ( ARS / FirstVNF_RAM_Server ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( RMSe / MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + BR ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( MUM + RRSe ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1742175562564295}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ARS,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),RMSe ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.33380552710070277}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5789473684210527, "obj2": 0.2751559636877793}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( Max( Max( ( Max( ( MRS / FirstVNF_Mem ),PN ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( CS,( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6052631578947368, "obj2": 0.25092094404457876}], "28": [{"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( MDR + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( RRS ,MRS ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * MLU ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.7125506072874493, "obj2": 0.14539479574334044}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7550607287449392, "obj2": 0.10870434764414119}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server + ACS ) - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( ( ( CRS / FirstVNF_Mem_Server ) * Max( FirstVNF_RAM,BR ) ) / PN ) ) ) ,( ( FirstVNF_CPU_Server * Const ) + BR ) )", "choosing": "Max( ( MLU + Max( RCSe,MUC ) ),( ( RRSe * ( CS - MLU ) ) + Max( RCSe,( RRSe - DS ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.48707592454418863}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "Min( ( ( ARS - Max( Max( ( ( CRS / ARS ) / FirstVNF_RAM ),Min( ( Max( MDR,MDR ) + FirstVNF_CPU ) ,ACS ) ),Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS * Const ) ) ,( ARS * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM * RCSe ) + RCSe ),( MLU + ( ( Min( Max( Max( ( DS / RCSe ),( CS + RRSe ) ),( RRSe / MLU ) ) ,( ( CS / Min( MUR ,MLU ) ) + ( RMSe * Max( DS,RRSe ) ) ) ) + Min( CS ,CS ) ) / CS ) ) )", "obj1": 0.3765182186234818, "obj2": 0.5195232753432008}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7894736842105263, "obj2": 0.08952709750122868}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( ARS - Max( CRS,FirstVNF_RAM_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( ( RCSe * RMSe ) - Max( ( ( DS / MUR ) / DS ),DS ) ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Max( MUR,RCSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Min( MUM ,MUR ) ) / CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.19265706496655474}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( Min( ( ( ( Max( Const,Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ) - FirstVNF_RAM ) / ( ( ( ACS * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / BR ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( CS + MUR ) ) ) ) ) / ( Min( Min( Max( Max( RMSe,Min( MUR ,( MUR * RMSe ) ) ),MLU ) ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / CS ) ),MLU ) ) )", "obj1": 0.9129554655870445, "obj2": 0.05557011510458196}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( Min( ( MLU / DS ) ,CS ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5319540305905963}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( Min( ( ( ARS - ( ( ARS / ( FirstVNF_CPU + ACS ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + Min( MUR ,MUM ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.5458818577203167}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( MLU + Max( RCSe,MUC ) ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5807294976554003}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ACS / CRS ) * ( ( MRS + MRS ) * CRS ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( MRS * BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( FirstVNF_Mem,ACS ) / MDR ) ) ) + ( ( ARS * PN ) / CRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,DS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + BR ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( MUM + RRSe ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.18456546696735698}, {"determining": "( ( DDR * ( Const - RRS ) ) * ( FirstVNF_Mem / DDR ) )", "choosing": "( Min( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,( MUC / Min( MUR ,DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.2260897894306427}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( Min( Min( CS ,( RCSe + RCSe ) ) ,( RRSe - ( RMSe / ( RRSe * MUM ) ) ) ) / Min( DS ,( RRSe / RMSe ) ) ) ) - Min( CS ,RRSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7897612168684035}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - ( BR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ( ( MDR + CRS ) / FirstVNF_Mem ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / RRS ) + ( MDR / RRS ) ) ) * ( ( ( ACS - DDR ) - DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - ( MLU - ( RMSe - ( Max( MUM,DS ) / RRSe ) ) ) ),( Min( CS ,RMSe ) - MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.22123505345930572}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.31603617407413825}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - Max( Min( ACS ,( AMS - FirstVNF_RAM_Server ) ),Const ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( Const + ARS ) )", "choosing": "Max( ( ( RRSe - ( RRSe + MUC ) ) - MLU ),( ( MUM - RRSe ) + ( RRSe + MLU ) ) )", "obj1": 0.4109311740890688, "obj2": 0.4855167351849795}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6059600297111506}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Min( ( Min( MLU ,MUM ) + Min( CS ,Max( RCSe,RRSe ) ) ) ,Max( MLU,MUM ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( DS + RRSe ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( Max( Max( ( ( Max( MRS,DDR ) / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( CRS ,AMS ) / PN ) ) ) )", "choosing": "( ( ( DS / RCSe ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2441837863089431}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( DS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.9048582995951417, "obj2": 0.06380542591016607}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26219126083574823}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,Min( MUC ,CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32703310396594076}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( Min( FirstVNF_CPU_Server ,ACS ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( MLU + ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.708502024291498, "obj2": 0.18493713789753166}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2543749440576743}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM - DDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( ( PN / CRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,Min( ( Min( MUR ,MLU ) - ( ( MLU + MUC ) * Min( ( MUR - RRSe ) ,( MUR * RCSe ) ) ) ) ,RMSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( RCSe / ( DS + RMSe ) ) - ( RMSe / Min( DS ,Max( RRSe,MUM ) ) ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.8027457881710278}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + ( MUM / RRSe ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26487809339560303}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( ( MDR * PN ) / AMS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( Max( ( MLU / ( CS * MLU ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( MUM ,RRSe ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01879725931226052}, {"determining": "( ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - DDR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( Max( ( MLU / ( CS * MLU ) ),Max( Max( ( RCSe + Max( ( MLU + MUC ),( RMSe / RMSe ) ) ),MLU ),MLU ) ) - Min( MUM ,RRSe ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( RRS ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3772578518648036}, {"determining": "( Max( Max( ( Max( Const,FirstVNF_CPU_Server ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.6477732793522267, "obj2": 0.2234211574598936}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_RAM_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5445344129554656, "obj2": 0.3001689653936466}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( BR / Max( MRS,Max( AMS,DDR ) ) ) / RRS ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( ( MUM * DS ) * ( DS / MUR ) ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) )", "obj1": 0.5566801619433198, "obj2": 0.2925639612427298}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( ( Const - FirstVNF_RAM ),MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MUM ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( ( ( FirstVNF_RAM / ( AMS / FirstVNF_CPU ) ) - Max( ( ( ( Const - ( ARS / FirstVNF_RAM_Server ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( RMSe / MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( RMSe,( MUC * MUR ) ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - MDR ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_RAM_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( Max( MUM,MLU ) / RRSe ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5222672064777328, "obj2": 0.32059765779809435}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5789473684210527, "obj2": 0.2751559636877793}], "29": [{"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( ACS - ( BR + FirstVNF_RAM_Server ) ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( CS - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( PN,FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) - ( DDR * ( ( MRS + Min( FirstVNF_CPU_Server ,Const ) ) - RRS ) ) ) ) )", "choosing": "( Max( Min( MUM ,MUM ),( MLU / ( RMSe * MUC ) ) ) + ( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( MDR + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( RRS ,MRS ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * MLU ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.7125506072874493, "obj2": 0.14539479574334044}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7388663967611336, "obj2": 0.12604532959790504}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / RRS ) - ( DDR * ( Const - RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ) + MDR ) ) ,Max( DDR,DDR ) )", "choosing": "Max( Max( RRSe,( ( RRSe + MUC ) - DS ) ),( MLU + ( ( ( RRSe - ( ( ( RRSe * RRSe ) - Max( DS,RCSe ) ) * MUM ) ) - RCSe ) / CS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.626594575148727}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7550607287449392, "obj2": 0.10870434764414119}, {"determining": "Min( ( ( ARS - Max( CRS,FirstVNF_RAM_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( ( RCSe * RMSe ) - Max( ( ( DS / MUR ) / DS ),DS ) ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Max( MUR,RCSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Min( MUM ,MUR ) ) / CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.19265706496655474}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Max( Max( Max( FirstVNF_RAM_Server,( AMS / PN ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server / Max( PN,ARS ) ) + MDR ) ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,Min( RMSe ,MUM ) ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MLU ) + Min( MUM ,Min( ( RCSe + RCSe ) ,CS ) ) ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.09581342821951273}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( Min( ( ( ( Max( Const,Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ) - FirstVNF_RAM ) / ( ( ( ACS * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / BR ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( CS + MUR ) ) ) ) ) / ( Min( Min( Max( Max( RMSe,Min( MUR ,( MUR * RMSe ) ) ),MLU ) ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / CS ) ),MLU ) ) )", "obj1": 0.9129554655870445, "obj2": 0.05557011510458196}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( Min( ( MLU / DS ) ,CS ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5319540305905963}, {"determining": "Min( Min( FirstVNF_RAM_Server ,( ARS + ( ( BR * PN ) - CRS ) ) ) ,( ( ARS / BR ) * Const ) )", "choosing": "Min( ( CS / CS ) ,( ( ( ( ( MUR * MLU ) + RRSe ) * MUC ) + MLU ) + ( Max( ( MLU + MUC ),( Min( ( ( MUM + RMSe ) + MLU ) ,MUC ) * ( RRSe + Min( ( MUM + RMSe ) ,MUR ) ) ) ) - RRSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.039279735871181796}, {"determining": "( Min( ( ( ARS - ( ( ARS / ( FirstVNF_CPU + ACS ) ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + Min( MUR ,MUM ) ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.5458818577203167}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_Mem_Server * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( Max( ( CS + MUM ),( MUC / MUM ) ) * ( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - ( RMSe * Min( Min( MLU ,Min( RRSe ,RCSe ) ) ,MUC ) ) ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.5611290593475454}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( MLU + Max( RCSe,MUC ) ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5807294976554003}, {"determining": "( ( FirstVNF_Mem_Server / ( ( PN + ( ( RRS * ( ( FirstVNF_Mem / MDR ) * PN ) ) * DDR ) ) - Max( ACS,FirstVNF_RAM_Server ) ) ) * ( Max( ( PN * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / MDR ) ) - ( ( ACS * MRS ) - Min( ( MDR * ACS ) ,RRS ) ) ) )", "choosing": "Min( ( ( CS + ( ( RCSe * Max( ( ( DS - MUR ) + Max( CS,MLU ) ),DS ) ) * MUR ) ) / ( MLU - MLU ) ) ,Min( ( RCSe - ( RCSe + Max( DS,MUR ) ) ) ,( ( ( Min( MUM ,Min( RRSe ,Min( RRSe ,MUC ) ) ) + RCSe ) - MUR ) / Max( Min( ( CS + ( RRSe + ( RRSe - RRSe ) ) ) ,MLU ),MUM ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + BR ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( MUM + RRSe ) ) ) + ( MUR - MUR ) ) / CS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.18456546696735698}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ( ( ACS / CRS ) * ( ( MRS + MRS ) * CRS ) ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( MRS * BR ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( FirstVNF_Mem,ACS ) / MDR ) ) ) + ( ( ARS * PN ) / CRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.23951968117702566}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( Min( Min( CS ,( RCSe + RCSe ) ) ,( RRSe - ( RMSe / ( RRSe * MUM ) ) ) ) / Min( DS ,( RRSe / RMSe ) ) ) ) - Min( CS ,RRSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7897612168684035}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6059600297111506}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( Max( ( Max( FirstVNF_Mem,ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + ( RCSe + Min( MUM ,( RRSe - MUR ) ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6477732793522267, "obj2": 0.21786474540352954}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( Min( RRS ,( FirstVNF_RAM / FirstVNF_Mem_Server ) ),MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( RRSe / RMSe ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.6396761133603239, "obj2": 0.2268806065942208}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7894736842105263, "obj2": 0.08952709750122868}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( FirstVNF_RAM / ( AMS / FirstVNF_CPU ) ) - Max( ( ( ( Const - ( ARS / FirstVNF_RAM_Server ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( RMSe / MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Max( Max( ( ( Max( MRS,DDR ) / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( CRS ,AMS ) / PN ) ) ) )", "choosing": "( ( ( DS / RCSe ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2441837863089431}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( DS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 0.9048582995951417, "obj2": 0.06380542591016607}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + ( MUM / RRSe ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26487809339560303}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,DS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( ( MDR * PN ) / AMS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( Max( ( MLU / ( CS * MLU ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( MUM ,RRSe ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01879725931226052}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + BR ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( MUM + RRSe ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.7044534412955465, "obj2": 0.18562098610730232}, {"determining": "( ( ( Const - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - DDR ) / ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * CRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( Max( ( MLU / ( CS * MLU ) ),Max( Max( ( RCSe + Max( ( MLU + MUC ),( RMSe / RMSe ) ) ),MLU ),MLU ) ) - Min( MUM ,RRSe ) ) )", "obj1": 0.9574898785425101, "obj2": 0.018901466017983565}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( RRS ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.3772578518648036}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "( ( DDR * ( Const - RRS ) ) * ( FirstVNF_Mem / DDR ) )", "choosing": "( Min( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( ( ( DS * DS ) * MLU ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,( MUC / Min( MUR ,DS ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.2260897894306427}, {"determining": "( ( ( FirstVNF_Mem / ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) / RRS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUM,RMSe ) / RRSe ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.683381509114205}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,Min( MUC ,CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32703310396594076}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_RAM * PN ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),Max( Min( RRSe ,Max( RRSe,Max( RCSe,( RRSe - MLU ) ) ) ),CS ) )", "obj1": 0.562753036437247, "obj2": 0.28476482965339445}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26219126083574823}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( RMSe,( MUC * MUR ) ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - MDR ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( CRS + ( FirstVNF_RAM_Server / RRS ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + BR ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( Max( MUM,MLU ) / RRSe ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5222672064777328, "obj2": 0.32059765779809435}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( RRS - MDR ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + Min( PN ,PN ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( Max( MUM,MLU ) / RRSe ) + Max( ( Min( ( RMSe - RRSe ) ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),( RMSe - MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5141700404858299, "obj2": 0.32561627070843074}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( ( Const - FirstVNF_RAM ),MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MUM ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7469635627530364, "obj2": 0.1207246572060536}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}], "30": [{"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( ( DDR / ACS ),( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( ( Min( ( Min( RRSe ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ( ACS - ( BR + FirstVNF_RAM_Server ) ) ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( CS - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + BR ) + MDR ) ) ,( ( ( Max( Const,DDR ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,( MUM + RRSe ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.7044534412955465, "obj2": 0.18562098610730232}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7388663967611336, "obj2": 0.12604532959790504}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "Min( ( ( ARS - Max( CRS,FirstVNF_RAM_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RMSe * Min( Min( DS ,Max( RRSe,( RRSe - DS ) ) ) ,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,MUR ) ) ) - CS ),( ( ( RCSe * RMSe ) - Max( ( ( DS / MUR ) / DS ),DS ) ) + ( ( Max( Min( ( RCSe + RCSe ) ,( Max( MUR,RCSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + Min( MUM ,MUR ) ) / CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.19265706496655474}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( Min( ( MLU / DS ) ,CS ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.5319540305905963}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( MDR + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( RRS ,MRS ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * ( RMSe * MLU ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.7125506072874493, "obj2": 0.14539479574334044}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( DS * RCSe ) * ( MLU / CS ) )", "obj1": 0.8987854251012146, "obj2": 0.06655189549183897}, {"determining": "( Max( Max( Max( FirstVNF_RAM_Server,( AMS / PN ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server / Max( PN,ARS ) ) + MDR ) ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,Min( RMSe ,MUM ) ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MLU ) + Min( MUM ,Min( ( RCSe + RCSe ) ,CS ) ) ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.09581342821951273}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( Min( Min( CS ,( RCSe + RCSe ) ) ,( RRSe - ( RMSe / ( RRSe * MUM ) ) ) ) / Min( DS ,( RRSe / RMSe ) ) ) ) - Min( CS ,RRSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7897612168684035}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( Max( ACS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.1080597775199846}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + BR ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) - ( MUC - ( DS / MUM ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.2258446446196789}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + Min( Max( ( Max( MRS,ARS ) / ( DDR - DDR ) ),FirstVNF_RAM_Server ) ,ACS ) ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - MLU ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUC,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.4611171413330366}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( Max( Max( ( ( Max( MRS,DDR ) / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( CRS ,AMS ) / PN ) ) ) )", "choosing": "( ( ( DS / RCSe ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2441837863089431}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Max( ( Max( FirstVNF_Mem,ARS ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + ( RCSe + Min( MUM ,( RRSe - MUR ) ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( FirstVNF_RAM / ( AMS / FirstVNF_CPU ) ) - Max( ( ( ( Const - ( ARS / FirstVNF_RAM_Server ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( RMSe / MUM ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - MDR ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( MDR + ( MDR + CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( Max( MUM,MLU ) / RRSe ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MUC ) ) + Min( MUM ,MUM ) ) ) ) / CS ) ) )", "obj1": 0.52834008097166, "obj2": 0.31420046890420233}, {"determining": "( ( ( ( CRS + ACS ) - DDR ) - DDR ) / ( ( PN / FirstVNF_Mem_Server ) / ( ( ( ( PN - FirstVNF_CPU ) - ARS ) - BR ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / DS ) + Max( RCSe,MUC ) ) + ( ( MUM * ( MUC * RMSe ) ) / Min( RCSe ,( MUR * RCSe ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07169188564833512}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6477732793522267, "obj2": 0.21786474540352954}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( Const - RRS ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ,ARS ) ) ) ,ARS )", "choosing": "Max( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) - MLU ),( MLU + ( ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) + Max( Min( ( MLU / DS ) ,CS ),( Max( DS,Max( MUM,RMSe ) ) + MLU ) ) ) / ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.5277306622122232}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6059600297111506}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6072874493927125, "obj2": 0.24878053539834746}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - ( ( Const - ( ARS - MDR ) ) * ( Const - RRS ) ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - ( ( RCSe * RRSe ) * ( Max( MUM,( Max( MLU,Min( MLU ,MLU ) ) / MLU ) ) + RCSe ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.8296090691339395}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.645748987854251, "obj2": 0.22462728468318346}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26219126083574823}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + ( MUM / RRSe ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26487809339560303}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_Mem_Server / RRS ) / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - ( ( Max( MUM,MUR ) / RRSe ) + DS ) ) ) ,MUC ) + RMSe ) )", "obj1": 0.7530364372469636, "obj2": 0.11991825556601834}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( RRS - RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUC / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01844864289837972}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( ( ( FirstVNF_Mem / ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) / RRS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUM,RMSe ) / RRSe ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.683381509114205}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,Min( MUC ,CS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32703310396594076}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7550607287449392, "obj2": 0.10870434764414119}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / ( Max( ( MRS * MRS ),MDR ) / AMS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( Min( MUR ,CS ) + ( CS - RRSe ) ) ),MLU ) * ( ( RMSe + Min( ( MUM - MUM ) ,Max( CS,RCSe ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.02064554471724222}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUM + CS ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.19956375191115902}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( ( Const - FirstVNF_RAM ),MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MUM ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( RRS - MDR ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ( ARS / ACS ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),MDR ) + Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + Min( PN ,PN ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( Max( MUM,MLU ) / RRSe ) + Max( ( Min( ( RMSe - RRSe ) ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),( RMSe - MUM ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5141700404858299, "obj2": 0.32561627070843074}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Min( ARS ,AMS ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( Min( Max( Max( MLU,RRSe ),DS ) ,CS ) ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7834008097165992, "obj2": 0.09376968037489443}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}], "31": [{"determining": "( ( FirstVNF_Mem - Min( AMS ,BR ) ) / ( ( ACS * FirstVNF_Mem_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) )", "choosing": "( ( MLU + Min( Min( RMSe ,RMSe ) ,( RRSe * ( ( DS / ( RCSe / CS ) ) / DS ) ) ) ) + ( Min( ( RRSe / CS ) ,( RMSe * RCSe ) ) + ( ( Min( CS ,MUR ) - MUC ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem / ( CRS - MRS ) ) / ( Max( ( DDR / ACS ),( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( CRS + PN ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,( ( Min( ( Min( RRSe ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) / ( Min( ( Min( MUC ,Min( DS ,RMSe ) ) - CS ) ,MLU ) - Max( Max( ( RRSe + DS ),( MLU / CS ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - MDR ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * ( Max( MUC,MUR ) - Min( ( CS / MUR ) ,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1769856145550336}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "( Max( FirstVNF_Mem,( MRS / ( ( MDR + ( ARS - Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) - RRS ) ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( MUM / Min( ( RCSe * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * RRSe ) ) ) ) - ( MUC / ( Min( MUM ,RCSe ) - Min( ( RMSe / RCSe ) ,RRSe ) ) ) ) ) * ( MLU / CS ) )", "obj1": 0.8724696356275303, "obj2": 0.08420028745387044}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.3076923076923077, "obj2": 0.60431067734124}, {"determining": "( Max( ( AMS + FirstVNF_CPU ),( Max( FirstVNF_Mem,( Max( MDR,MDR ) + FirstVNF_CPU ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( MDR + BR ) * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( ( RCSe * RRSe ) - Min( RRSe ,CS ) ),Min( DS ,Max( RRSe,MUM ) ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - ( RMSe - Min( RRSe ,CS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5257173616728714}, {"determining": "( Max( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_Mem ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Min( MRS ,MDR ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( ( MUM * MUC ) + MUC ) ,Max( MUR,Min( RMSe ,RCSe ) ) ),Max( MUM,( MUM + ( RRSe - RMSe ) ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05868641241210333}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Min( RRS ,RRS ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.41323729319514657}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,Max( RRSe,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( Min( Min( CS ,( RCSe + RCSe ) ) ,( RRSe - ( RMSe / ( RRSe * MUM ) ) ) ) / Min( DS ,( RRSe / RMSe ) ) ) ) - Min( CS ,RRSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.7897612168684035}, {"determining": "( ( ( FirstVNF_Mem / ( ARS * FirstVNF_RAM ) ) / RRS ) / ( Max( FirstVNF_Mem,( Max( PN,PN ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( ( DS * MLU ) - MUR ) ) )", "obj1": 0.4959514170040486, "obj2": 0.3360965790368475}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( Max( Max( Max( FirstVNF_RAM_Server,( AMS / PN ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server / Max( PN,ARS ) ) + MDR ) ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,Min( RMSe ,MUM ) ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MLU ) + Min( MUM ,Min( ( RCSe + RCSe ) ,CS ) ) ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.09581342821951273}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.10804546817954523}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_Mem_Server / RRS ) / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - ( ( Max( MUM,MUR ) / RRSe ) + DS ) ) ) ,MUC ) + RMSe ) )", "obj1": 0.7530364372469636, "obj2": 0.11991825556601834}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( ( BR / FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) - Min( DS ,Max( RRSe,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.12737529391980784}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) - ( MUC - ( Min( ( ( ( MUM * MUR ) * RMSe ) * RRSe ) ,Max( ( Max( MLU,CS ) - MUR ),RMSe ) ) / MUM ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - Max( MUM,MUR ) ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.22568259709555788}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( DDR ,DDR ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( ( RCSe / CS ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.14138631320359532}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + Min( Max( ( Max( MRS,ARS ) / ( DDR - DDR ) ),FirstVNF_RAM_Server ) ,ACS ) ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - MLU ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUC,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.4611171413330366}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( DS * RCSe ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07333895097673995}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7388663967611336, "obj2": 0.12604532959790504}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6477732793522267, "obj2": 0.21786474540352954}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "Min( ( ( ARS - Max( Min( FirstVNF_CPU_Server ,CRS ),Min( Max( ( MRS / ( PN - FirstVNF_RAM_Server ) ),PN ) ,( DDR - ARS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) ,( PN + BR ) )", "choosing": "Max( ( MUR + RCSe ),( MLU + ( ( ( Min( MUM ,CS ) + RRSe ) * ( ( CS * Min( MUC ,RMSe ) ) / ( MLU / MLU ) ) ) / CS ) ) )", "obj1": 0.582995951417004, "obj2": 0.27082501693347155}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - RRS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5344129554655871, "obj2": 0.3065228398771479}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( Max( ( Max( ( ( Max( ARS,FirstVNF_CPU_Server ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / CRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( Min( Min( MUR ,MUM ) ,RCSe ),Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7372229744375628}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( RRS - RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUC / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01844864289837972}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + MDR ) ) ,( ( ACS / AMS ) + BR ) )", "choosing": "Max( Min( DS ,MUC ),( MLU + ( ( Max( RCSe,Max( MUM,MUR ) ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( DS + RCSe ),Max( MUM,MLU ) ) + MLU ) ) ) / CS ) ) )", "obj1": 0.5769230769230769, "obj2": 0.27771095428677794}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) ) / ( ( ACS - DDR ) + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,Min( RMSe ,( Max( MUR,MLU ) - RRSe ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ACS ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / MLU ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6116711293151051}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.645748987854251, "obj2": 0.22462728468318346}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.26219126083574823}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / ( Max( FirstVNF_Mem,FirstVNF_Mem ) + ARS ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM + ( MUM / RRSe ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.5890688259109311, "obj2": 0.26487809339560303}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / FirstVNF_CPU ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7923190728716195}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Const / BR ) ) )", "choosing": "( MUC + ( ( ( Max( ( MUR * Min( Max( MUR,MUM ) ,( RCSe * RCSe ) ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "( Min( AMS ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( CS,MUM ) / CS ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( Max( Min( FirstVNF_RAM ,ARS ),( PN - MDR ) ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * Min( ( RRS - RRS ) ,DDR ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + Min( RCSe ,CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( RCSe,( ( ( MLU / ( DS / CS ) ) * MUR ) * MLU ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.24093110828222963}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( Max( FirstVNF_Mem,( DDR + ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / ( Max( ( MRS * MRS ),MDR ) / AMS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( Min( MUR ,CS ) + ( CS - RRSe ) ) ),MLU ) * ( ( RMSe + Min( ( MUM - MUM ) ,Max( CS,RCSe ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9554655870445344, "obj2": 0.02064554471724222}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( ( ( FirstVNF_Mem / ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) / RRS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUM,RMSe ) / RRSe ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.683381509114205}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR - MDR ) ) / FirstVNF_RAM ) ) ) ) * ( ( RRS * CRS ) + ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + Const ) - Const ) ) ) ) ) ) ,( FirstVNF_Mem_Server * ( MDR + ( MDR + CRS ) ) ) )", "choosing": "Max( ( ( ( RMSe + DS ) - Max( MLU,MUR ) ) - MLU ),( MLU + ( ( ( Max( MUM,MLU ) / RRSe ) + Max( ( Min( DS ,Min( MUC ,RRSe ) ) + RRSe ),( Max( ( MLU / CS ),Max( MUM,MUC ) ) + Min( MUM ,MUM ) ) ) ) / CS ) ) )", "obj1": 0.52834008097166, "obj2": 0.31420046890420233}, {"determining": "( Max( ( ARS - ( RRS * FirstVNF_Mem_Server ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,AMS ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( ( MLU / CS ),MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7834008097165992, "obj2": 0.09376968037489443}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32616744481127263}, {"determining": "( Max( Max( ( ( Max( MRS,DDR ) / BR ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( CRS ,AMS ) / PN ) ) ) )", "choosing": "( ( ( DS / RCSe ) + MLU ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2441837863089431}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,( MUC * Min( RRSe ,RMSe ) ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.562753036437247, "obj2": 0.283005865849552}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - Max( ( ( ( Const - ( ARS / Min( FirstVNF_Mem ,PN ) ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( ( CS / ( ( ( MLU / DS ) + DS ) - ( Min( MUM ,RCSe ) * MUR ) ) ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.6059600297111506}], "32": [{"determining": "( ( Const / ( Min( FirstVNF_RAM_Server ,Max( RRS,Const ) ) - PN ) ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,( Min( RRSe ,Max( MUM,Max( ( MLU / CS ),( MLU * RMSe ) ) ) ) + DS ) ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - ( ( ( CS - MLU ) - ( MLU / MUC ) ) - ( RCSe / RRSe ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,BR ) ) / ( ( ACS * FirstVNF_Mem_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) )", "choosing": "( ( MLU + Min( Min( RMSe ,RMSe ) ,( RRSe * ( ( DS / ( RCSe / CS ) ) / DS ) ) ) ) + ( Min( ( RRSe / CS ) ,( RMSe * RCSe ) ) + ( ( Min( CS ,MUR ) - MUC ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - MDR ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * ( Max( MUC,MUR ) - Min( ( CS / MUR ) ,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1769856145550336}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * ( AMS - ACS ) ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.8380566801619433, "obj2": 0.07732121128968912}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( CS + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5879976399010735}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "( Max( ( AMS + FirstVNF_CPU ),( Max( FirstVNF_Mem,( Max( MDR,MDR ) + FirstVNF_CPU ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( MDR + BR ) * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( ( RCSe * RRSe ) - Min( RRSe ,CS ) ),Min( DS ,Max( RRSe,MUM ) ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - ( RMSe - Min( RRSe ,CS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5257173616728714}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( Max( ( FirstVNF_CPU - BR ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( DDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( Min( DS ,( MUR / MUC ) ) * ( ( ( ( Min( RRSe ,DS ) + Max( RRSe,MUM ) ) + RMSe ) - ( MUR + ( ( RCSe * RMSe ) - ( CS / MUM ) ) ) ) + MLU ) ) ,MUC ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.48754605338221985}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Max( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MRS ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( RMSe / ( Min( DS ,Min( MUM ,MUM ) ) / ( Max( RRSe,MUR ) + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7880319118069494}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( DDR * DDR ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_Mem - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( DS + MLU ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.25999409451738703}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MLU / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.03576145908474865}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.10804546817954523}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ACS ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / MLU ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6116711293151051}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( DDR ,DDR ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( ( RCSe / CS ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.14138631320359532}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( Max( Max( Max( FirstVNF_RAM_Server,( AMS / PN ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server / Max( PN,ARS ) ) + MDR ) ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,Min( RMSe ,MUM ) ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MLU ) + Min( MUM ,Min( ( RCSe + RCSe ) ,CS ) ) ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.09581342821951273}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6477732793522267, "obj2": 0.21786474540352954}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) ) / ( ( ACS - DDR ) + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,Min( RMSe ,( Max( MUR,MLU ) - RRSe ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( ( BR / FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) - Min( DS ,Max( RRSe,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.12737529391980784}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,MDR ),BR ) * ( Min( BR ,FirstVNF_CPU_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Max( MLU,( ( MUR * MLU ) / Max( MLU,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( Min( ( ( DS - MLU ) / MUC ) ,CS ),( MUM / RRSe ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2732844649262087}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Min( RRS ,RRS ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.41323729319514657}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( DS * RCSe ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07333895097673995}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( Max( Max( ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( CS * ( MUM + RRSe ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7510121457489879, "obj2": 0.12228042818008443}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( Max( ( ARS - ( RRS * FirstVNF_Mem_Server ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,AMS ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( ( MLU / CS ),MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7834008097165992, "obj2": 0.09376968037489443}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - Max( ( ( ( Const - ( ARS / Min( FirstVNF_Mem ,PN ) ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( ( CS / ( ( ( MLU / DS ) + DS ) - ( Min( MUM ,RCSe ) * MUR ) ) ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( ( PN - FirstVNF_CPU_Server ) / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( DDR + ( FirstVNF_Mem_Server / ( RRS * FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( ( Min( RCSe ,RMSe ) / MLU ) / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( MUR / ( MLU / CS ) ) ) + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4011312206787779}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + Min( Max( ( Max( MRS,ARS ) / ( DDR - DDR ) ),FirstVNF_RAM_Server ) ,ACS ) ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - MLU ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUC,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.4611171413330366}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7388663967611336, "obj2": 0.12604532959790504}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( RRS - RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUC / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01844864289837972}, {"determining": "( ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3362883535873624}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_Mem ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3052110812987878}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7530364372469636, "obj2": 0.1106630810179923}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) - ( MUC - ( Min( ( ( ( MUM * MUR ) * RMSe ) * RRSe ) ,Max( ( Max( MLU,CS ) - MUR ),RMSe ) ) / MUM ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - Max( MUM,MUR ) ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.22568259709555788}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( Max( Max( ( Min( DDR ,FirstVNF_CPU_Server ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( MUM + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * Max( Max( Min( RRSe ,MUM ),( RRSe / MLU ) ),MUM ) ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.611336032388664, "obj2": 0.2519898580071304}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_Mem ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Min( MRS ,MDR ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( ( MUM * MUC ) + MUC ) ,Max( MUR,Min( RMSe ,RCSe ) ) ),Max( MUM,( MUM + ( RRSe - RMSe ) ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05868641241210333}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_Mem ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Min( MRS ,MDR ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( ( MUM * MUC ) + MUC ) ,Max( MUR,Min( RMSe ,RCSe ) ) ),Max( MUM,( MUM + ( RRSe - RMSe ) ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05868641241210333}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( Max( Max( ( ( DDR / Max( FirstVNF_Mem,( Const + ACS ) ) ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / ( RCSe + RCSe ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.6356275303643725, "obj2": 0.22373778264916858}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Max( Min( ACS ,( MRS * AMS ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUM,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Const / BR ) ) )", "choosing": "( MUC + ( ( ( Max( ( MUR * Min( Max( MUR,MUM ) ,( RCSe * RCSe ) ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( Max( ( Max( ( ( Max( ARS,FirstVNF_CPU_Server ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / CRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( Min( Min( MUR ,MUM ) ,RCSe ),Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7372229744375628}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( Max( Min( FirstVNF_RAM ,ARS ),( PN - MDR ) ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * Min( ( RRS - RRS ) ,DDR ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + Min( RCSe ,CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( RCSe,( ( ( MLU / ( DS / CS ) ) * MUR ) * MLU ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.24093110828222963}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( ( ( ARS + ACS ) / MDR ) / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( Const / BR ) ) ) + ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),AMS ) ) ) / PN ) ) ) )", "choosing": "( Min( MLU ,( ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( RCSe / Min( Min( MUM ,DS ) ,CS ) ) ) + RCSe ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( MUC / MUM ) + MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.020166751025053116}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3819723613182589}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32616744481127263}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( ( FirstVNF_Mem / ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) / RRS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUM,RMSe ) / RRSe ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.683381509114205}], "33": [{"determining": "Min( ( ( ( Min( ( BR * RRS ) ,( MRS - BR ) ) / CRS ) - ( ( ( CRS + FirstVNF_CPU_Server ) - ACS ) - Min( RRS ,MRS ) ) ) * ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( ( DS / RMSe ) - MLU ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( ( RMSe * CS ) / ( CS * RCSe ) ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Min( FirstVNF_RAM_Server ,Max( RRS,Const ) ) - PN ) ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,( Min( RRSe ,Max( MUM,Max( ( MLU / CS ),( MLU * RMSe ) ) ) ) + DS ) ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - ( ( ( CS - MLU ) - ( MLU / MUC ) ) - ( RCSe / RRSe ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * ( AMS - ACS ) ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.8380566801619433, "obj2": 0.07732121128968912}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( CS + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5879976399010735}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,DDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,Min( ( MUM - MUM ) ,( MUM - RMSe ) ) ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.6983805668016194, "obj2": 0.1663019943597085}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - MDR ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * ( Max( MUC,MUR ) - Min( ( CS / MUR ) ,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1769856145550336}, {"determining": "( Max( ( AMS + FirstVNF_CPU ),( Max( FirstVNF_Mem,( Max( MDR,MDR ) + FirstVNF_CPU ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( MDR + BR ) * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( ( RCSe * RRSe ) - Min( RRSe ,CS ) ),Min( DS ,Max( RRSe,MUM ) ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - ( RMSe - Min( RRSe ,CS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5257173616728714}, {"determining": "( Max( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( Max( ( FirstVNF_CPU - BR ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( DDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( Min( DS ,( MUR / MUC ) ) * ( ( ( ( Min( RRSe ,DS ) + Max( RRSe,MUM ) ) + RMSe ) - ( MUR + ( ( RCSe * RMSe ) - ( CS / MUM ) ) ) ) + MLU ) ) ,MUC ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.48754605338221985}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MRS ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( RMSe / ( Min( DS ,Min( MUM ,MUM ) ) / ( Max( RRSe,MUR ) + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7880319118069494}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,CS ) )", "obj1": 0.6275303643724697, "obj2": 0.21295724836091573}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( MDR * PN ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4190283400809717, "obj2": 0.43934194044899294}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MLU / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.03576145908474865}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.10804546817954523}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ACS ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / MLU ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6116711293151051}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( Min( DDR ,DDR ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( ( RCSe / CS ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7206477732793523, "obj2": 0.14138631320359532}, {"determining": "( ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3362883535873624}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.38115091601422724}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( Max( Max( Max( FirstVNF_RAM_Server,( AMS / PN ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server / Max( PN,ARS ) ) + MDR ) ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,Min( RMSe ,MUM ) ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MLU ) + Min( MUM ,Min( ( RCSe + RCSe ) ,CS ) ) ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.09581342821951273}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( DDR * DDR ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_Mem - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( DS + MLU ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.25999409451738703}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) ) / ( ( ACS - DDR ) + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,Min( RMSe ,( Max( MUR,MLU ) - RRSe ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( ( BR / FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) - Min( DS ,Max( RRSe,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.12737529391980784}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Min( RRS ,RRS ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.41323729319514657}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( Const - FirstVNF_Mem ) * ( CRS - ACS ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( MUR + RMSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * RCSe ) ) )", "obj1": 0.645748987854251, "obj2": 0.21047458202286157}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + Min( Max( ( Max( MRS,ARS ) / ( DDR - DDR ) ),FirstVNF_RAM_Server ) ,ACS ) ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - MLU ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUC,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.41700404858299595, "obj2": 0.4611171413330366}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( DS * RCSe ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07333895097673995}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / Max( MRS,DDR ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) / RCSe ) ) )", "obj1": 0.7510121457489879, "obj2": 0.12207988881853847}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_RAM ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( ( MUM - CS ) * ( RRSe - RMSe ) ) ),RCSe ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8987854251012146, "obj2": 0.05513580363432198}, {"determining": "( Max( Max( ( Min( DDR ,FirstVNF_CPU_Server ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( MUM + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * Max( Max( Min( RRSe ,MUM ),( RRSe / MLU ) ),MUM ) ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.611336032388664, "obj2": 0.2519898580071304}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( Max( Min( FirstVNF_RAM ,ARS ),( PN - MDR ) ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * Min( ( RRS - RRS ) ,DDR ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + Min( RCSe ,CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( RCSe,( ( ( MLU / ( DS / CS ) ) * MUR ) * MLU ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.24093110828222963}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - Max( ( ( ( Const - ( ARS / Min( FirstVNF_Mem ,PN ) ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( ( CS / ( ( ( MLU / DS ) + DS ) - ( Min( MUM ,RCSe ) * MUR ) ) ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Min( Min( Const ,MDR ) ,( ( ( Max( Const,( Max( MDR,CRS ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / CRS ) ) ) ) ) + BR ) ) / Max( ( ( DDR + Max( ( RRS - ( ARS - MDR ) ),DDR ) ) / AMS ),( ( Max( DDR,CRS ) / ( Max( CRS,PN ) - PN ) ) / ( FirstVNF_Mem - AMS ) ) ) )", "choosing": "( ( MLU + Max( RCSe,( MLU + ( MUM + CS ) ) ) ) + ( ( RMSe / MUC ) + MUC ) )", "obj1": 0.46356275303643724, "obj2": 0.37475824010635733}, {"determining": "( Max( Min( ACS ,( MRS * AMS ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUM,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( ( PN - FirstVNF_CPU_Server ) / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( DDR + ( FirstVNF_Mem_Server / ( RRS * FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( ( Min( RCSe ,RMSe ) / MLU ) / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( MUR / ( MLU / CS ) ) ) + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4011312206787779}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.9919028340080972, "obj2": 0.005182298786078372}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Max( ( ( Max( ( MRS * AMS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7388663967611336, "obj2": 0.12604532959790504}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( RRS - RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUC / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01844864289837972}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,( ( ( FirstVNF_Mem_Server / Max( Max( ARS,CRS ),( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) * CRS ) ) - ( Max( Min( AMS ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ),Const ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) ) ) )", "choosing": "( ( ( RRSe + RMSe ) + ( CS - ( ( ( RRSe * CS ) * Max( DS,DS ) ) * RRSe ) ) ) / ( Min( ( RCSe - RRSe ) ,( DS * MLU ) ) - Max( Max( RMSe,( MUC * MUR ) ),MLU ) ) )", "obj1": 0.1902834008097166, "obj2": 0.7261781848733969}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( Max( MDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / ( MRS - ARS ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Min( Max( ( CS / RRSe ),( CS + RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( MLU - RCSe ) * ( CS - RCSe ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2800326868704957}, {"determining": "( Max( ( Max( ( ( Max( ARS,FirstVNF_CPU_Server ) / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / CRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( Min( Min( MUR ,MUM ) ,RCSe ),Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.1882591093117409, "obj2": 0.7372229744375628}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( Max( MDR,( ( MRS + FirstVNF_Mem ) / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - MLU ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.46376462324100726}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Const / BR ) ) )", "choosing": "( MUC + ( ( ( Max( ( MUR * Min( Max( MUR,MUM ) ,( RCSe * RCSe ) ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.7530364372469636, "obj2": 0.1106630810179923}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,BR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,MUR ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.26860297698937013}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_Mem ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Min( MRS ,MDR ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( ( MUM * MUC ) + MUC ) ,Max( MUR,Min( RMSe ,RCSe ) ) ),Max( MUM,( MUM + ( RRSe - RMSe ) ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05868641241210333}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( MLU + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.25370980169561674}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( ( ( ARS + ACS ) / MDR ) / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( Const / BR ) ) ) + ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),AMS ) ) ) / PN ) ) ) )", "choosing": "( Min( MLU ,( ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( RCSe / Min( Min( MUM ,DS ) ,CS ) ) ) + RCSe ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( MUC / MUM ) + MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.020166751025053116}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32616744481127263}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3052110812987878}, {"determining": "( ( ( FirstVNF_Mem / ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) / RRS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUM,RMSe ) / RRSe ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.683381509114205}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,MDR ),BR ) * ( Min( BR ,FirstVNF_CPU_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Max( MLU,( ( MUR * MLU ) / Max( MLU,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( Min( ( ( DS - MLU ) / MUC ) ,CS ),( MUM / RRSe ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.2732844649262087}, {"determining": "( Max( Max( ( ( ( ( Min( BR ,RRS ) + ( CRS / FirstVNF_RAM_Server ) ) + CRS ) / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( BR * ( Const / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RRSe - ( ( Min( ( ( MUR - MUR ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7854251012145749, "obj2": 0.09102158729404433}], "34": [{"determining": "( Max( Min( FirstVNF_RAM_Server ,MDR ),BR ) * ( Min( BR ,FirstVNF_CPU_Server ) - ( MDR * ( ( Max( MDR,Min( ACS ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( Min( ( ( DS - MLU ) / MUC ) ,CS ),( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( ( BR * RRS ) ,( MRS - BR ) ) / CRS ) - ( ( ( CRS + FirstVNF_CPU_Server ) - ACS ) - Min( RRS ,MRS ) ) ) * ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( ( DS / RMSe ) - MLU ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( ( RMSe * CS ) / ( CS * RCSe ) ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * ( AMS - ACS ) ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.8380566801619433, "obj2": 0.07732121128968912}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( CS + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5879976399010735}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,FirstVNF_CPU ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / ( RCSe / RRSe ) ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.15255822661687368}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - MDR ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * ( Max( MUC,MUR ) - Min( ( CS / MUR ) ,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1769856145550336}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( Min( MLU ,MUM ) + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.43504194104556804}, {"determining": "( Max( ( AMS + FirstVNF_CPU ),( Max( FirstVNF_Mem,( Max( MDR,MDR ) + FirstVNF_CPU ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( MDR + BR ) * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( ( RCSe * RRSe ) - Min( RRSe ,CS ) ),Min( DS ,Max( RRSe,MUM ) ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - ( RMSe - Min( RRSe ,CS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5257173616728714}, {"determining": "( Max( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Max( Max( ( FirstVNF_CPU - BR ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( DDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( Min( DS ,( MUR / MUC ) ) * ( ( ( ( Min( RRSe ,DS ) + Max( RRSe,MUM ) ) + RMSe ) - ( MUR + ( ( RCSe * RMSe ) - ( CS / MUM ) ) ) ) + MLU ) ) ,MUC ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.48754605338221985}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( ( ( Max( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( CRS ,FirstVNF_CPU ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( Max( BR,FirstVNF_Mem ) * FirstVNF_RAM ) ) ),FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUC - Max( MLU,DS ) ) / Min( ( Max( ( RMSe * CS ),( MLU + MLU ) ) * RMSe ) ,( Min( DS ,( RRSe / RMSe ) ) - ( ( MUM / MUM ) * ( CS / RCSe ) ) ) ) ) - ( MUC / RCSe ) ) ) * ( Max( Min( ( ( MUR * Min( ( CS + MUM ) ,RMSe ) ) + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ),Max( MUM,MUR ) ) / CS ) )", "obj1": 0.8825910931174089, "obj2": 0.07690415901050414}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MRS ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( RMSe / ( Min( DS ,Min( MUM ,MUM ) ) / ( Max( RRSe,MUR ) + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7880319118069494}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MLU / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.03576145908474865}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ACS ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / MLU ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6116711293151051}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / ( Const / ( ARS - PN ) ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7165991902834008, "obj2": 0.1401434254267961}, {"determining": "( ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3362883535873624}, {"determining": "( Max( Min( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) ,MDR ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Max( MLU,( ( MUR * MLU ) / Max( MLU,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( ( MLU + Max( RCSe,MUC ) ) + ( ( MUM * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * ( Max( ( Min( DS ,Max( MUM,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) ) ) )", "obj1": 0.5668016194331984, "obj2": 0.27233803860483796}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.38115091601422724}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) ) / ( ( ACS - DDR ) + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,Min( RMSe ,( Max( MUR,MLU ) - RRSe ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / Max( MRS,DDR ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) / RCSe ) ) )", "obj1": 0.7510121457489879, "obj2": 0.12207988881853847}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Min( RRS ,RRS ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.41323729319514657}, {"determining": "( Max( ( ( Min( FirstVNF_Mem ,( PN * CRS ) ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ) * ( Max( MDR,( ( BR / FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - RRSe ) ),MUC ) ),DS ) - Min( DS ,Max( RRSe,Min( Max( ( MUR / ( RMSe - MUC ) ),MUR ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.12737529391980784}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ( Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,ACS ) ) / FirstVNF_RAM ) - Max( PN,FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / RRS ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( DS * RCSe ) * ( MLU / CS ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07333895097673995}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,CS ) )", "obj1": 0.6275303643724697, "obj2": 0.21295724836091573}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * Min( MUM ,MUR ) ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( ( RCSe - DS ) ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / ( Max( RRSe,RMSe ) * MUC ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5404858299595142, "obj2": 0.3017611170578263}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_RAM ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( MUM ,( ( MUM - CS ) * ( RRSe - RMSe ) ) ),RCSe ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8987854251012146, "obj2": 0.05513580363432198}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( Max( Min( FirstVNF_RAM ,ARS ),( PN - MDR ) ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * Min( ( RRS - RRS ) ,DDR ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + Min( RCSe ,CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( RCSe,( ( ( MLU / ( DS / CS ) ) * MUR ) * MLU ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.24093110828222963}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - Max( ( ( ( Const - ( ARS / Min( FirstVNF_Mem ,PN ) ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( ( CS / ( ( ( MLU / DS ) + DS ) - ( Min( MUM ,RCSe ) * MUR ) ) ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7611336032388664, "obj2": 0.10804546817954523}, {"determining": "( Max( Max( FirstVNF_Mem,( ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2234209619171548}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3052110812987878}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,BR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,MUR ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.26860297698937013}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "( ( PN - FirstVNF_CPU_Server ) / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( DDR + ( FirstVNF_Mem_Server / ( RRS * FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( ( Min( RCSe ,RMSe ) / MLU ) / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( MUR / ( MLU / CS ) ) ) + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4011312206787779}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( DDR * DDR ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_Mem - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( DS + MLU ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.25999409451738703}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( ( CRS + FirstVNF_CPU ) / Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( CS / ( DS / RCSe ) ) + DS ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.9919028340080972, "obj2": 0.004736747575189834}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Max( Max( ( Min( DDR ,FirstVNF_CPU_Server ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + Min( FirstVNF_CPU ,Const ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( MUM + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * Max( Max( Min( MLU ,MUM ),( RRSe / MLU ) ),MUM ) ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7732793522267206, "obj2": 0.10362717197819607}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - MUR ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.12428935642637405}, {"determining": "( ( ( Const - FirstVNF_RAM ) - DDR ) / ( ( ( ( ( Max( ( RRS - RRS ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( MUC / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01844864289837972}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( MDR + Min( DDR ,FirstVNF_Mem ) ) + MDR ) ) ,( ( FirstVNF_Mem_Server * ( MDR - Min( MRS ,MDR ) ) ) + AMS ) )", "choosing": "Max( ( ( MUC / RCSe ) - CS ),( MLU + ( ( Max( Min( ( ( MUM * MUC ) + MUC ) ,Max( MUR,Min( RMSe ,RCSe ) ) ),Max( MUM,( MUM + ( RRSe - RMSe ) ) ) ) + ( CS - MUR ) ) / CS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.05868641241210333}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( ( Max( ( RMSe * CS ),MUM ) - MUR ) + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5951417004048583, "obj2": 0.25859913805484624}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.7530364372469636, "obj2": 0.1106630810179923}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU / FirstVNF_CPU ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( Const + FirstVNF_RAM_Server ) + BR ) ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RMSe ) * MLU ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( MUR / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( ( CS - MUM ) / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( ( MUM / RMSe ) ,( Max( RCSe,RCSe ) * MUR ) ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5040485829959515, "obj2": 0.3316385372776878}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.726356320856132}, {"determining": "( Max( Max( ( Min( DDR ,FirstVNF_CPU_Server ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( MUM + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * Max( Max( Min( RRSe ,MUM ),( RRSe / MLU ) ),MUM ) ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.611336032388664, "obj2": 0.2519898580071304}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32616744481127263}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),MLU ) ) + RCSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3726444926593631}, {"determining": "( Max( Min( ACS ,( MRS * ( ( ( FirstVNF_Mem + Min( ACS ,MDR ) ) * Const ) - ( ( MRS * PN ) - Const ) ) ) ),( Max( Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ),( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( MUC + RCSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( ( DS - RCSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.21129449823280264}, {"determining": "( Max( Min( ACS ,( MRS * AMS ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUM,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Const / BR ) ) )", "choosing": "( MUC + ( ( ( Max( ( MUR * Min( Max( MUR,MUM ) ,( RCSe * RCSe ) ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( Const - FirstVNF_Mem ) * ( CRS - ACS ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( MUR + RMSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * RCSe ) ) )", "obj1": 0.645748987854251, "obj2": 0.21047458202286157}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( ( ( ARS + ACS ) / MDR ) / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( Const / BR ) ) ) + ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),AMS ) ) ) / PN ) ) ) )", "choosing": "( Min( MLU ,( ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( RCSe / Min( Min( MUM ,DS ) ,CS ) ) ) + RCSe ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( MUC / MUM ) + MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.020166751025053116}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( Max( Const,RRS ) - ( MDR * ( ( Max( MDR,ARS ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( ( Max( CS,( ( Min( MLU ,RRSe ) + ( RRSe / Max( RMSe,MUR ) ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.0885380244096587}, {"determining": "( Max( Max( ( ( ( ( Min( BR ,RRS ) + ( CRS / FirstVNF_RAM_Server ) ) + CRS ) / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( BR * ( Const / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RRSe - ( ( Min( ( ( MUR - MUR ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.7854251012145749, "obj2": 0.09102158729404433}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,ACS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MUR * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Max( MUC,RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3213870672598359}, {"determining": "( ( ( FirstVNF_Mem / ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) / RRS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUM,RMSe ) / RRSe ),MUM ) - ( Min( Max( ( CS / RRSe ),( RRSe * RMSe ) ) ,CS ) - ( RMSe / RCSe ) ) ) * ( MLU / Max( RRSe,RCSe ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.683381509114205}, {"determining": "( Max( Max( Max( FirstVNF_RAM_Server,( AMS / PN ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server / Max( PN,ARS ) ) + MDR ) ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,Min( RMSe ,MUM ) ) ) ),( MUR / Min( CS ,MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MLU ) + Min( MUM ,Min( ( RCSe + RCSe ) ,CS ) ) ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.09581342821951273}], "35": [{"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + BR ) - ( MDR * ( ( Max( MDR,FirstVNF_CPU ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / ( RCSe / RRSe ) ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( MUM / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,MDR ),BR ) * ( Min( BR ,FirstVNF_CPU_Server ) - ( MDR * ( ( Max( MDR,Min( ACS ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( Min( ( ( DS - MLU ) / MUC ) ,CS ),( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( CS + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5879976399010735}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * ( AMS - ACS ) ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.8380566801619433, "obj2": 0.07732121128968912}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,FirstVNF_CPU ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / ( RCSe / RRSe ) ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.15255822661687368}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.868421052631579, "obj2": 0.05140771381398055}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Max( ( AMS + FirstVNF_CPU ),( Max( FirstVNF_Mem,( Max( MDR,MDR ) + FirstVNF_CPU ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( MDR + BR ) * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( ( RCSe * RRSe ) - Min( RRSe ,CS ) ),Min( DS ,Max( RRSe,MUM ) ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - ( RMSe - Min( RRSe ,CS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5257173616728714}, {"determining": "( Max( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - MDR ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * ( Max( MUC,MUR ) - Min( ( CS / MUR ) ,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1769856145550336}, {"determining": "( Max( Max( ( FirstVNF_CPU - BR ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( DDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( Min( DS ,( MUR / MUC ) ) * ( ( ( ( Min( RRSe ,DS ) + Max( RRSe,MUM ) ) + RMSe ) - ( MUR + ( ( RCSe * RMSe ) - ( CS / MUM ) ) ) ) + MLU ) ) ,MUC ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.48754605338221985}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Max( ( Min( FirstVNF_CPU ,( Min( DDR ,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RMSe - Min( DS ,MUM ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.06189493569912157}, {"determining": "( Max( ( ( ( Max( Const,RRS ) * FirstVNF_CPU ) + ( ACS * FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),Max( FirstVNF_CPU_Server,DDR ) ) - ( ( ( AMS + Const ) * FirstVNF_Mem ) / RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( Min( Max( ( DS / MUC ),( RRSe - MUC ) ) ,MUC ) + Min( RRSe ,( ( MUC + MLU ) / RRSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( CS + ( ( RCSe / ( DS * ( MUR * MUC ) ) ) + RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6900623179170826}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MRS ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( RMSe / ( Min( DS ,Min( MUM ,MUM ) ) / ( Max( RRSe,MUR ) + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7880319118069494}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / FirstVNF_RAM_Server )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.43839387463760804}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Max( Max( ( ( Min( PN ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) / ACS ) * ( PN / MRS ) ),Min( FirstVNF_CPU_Server ,( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( Min( Min( ( ( Max( ( RMSe * CS ),MUM ) - MUR ) + DS ) ,( MUC / RMSe ) ) ,MUM ) ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( Max( MUR,MUC ) / ( ( MUM + RRSe ) * ( MUR + MUR ) ) ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) )", "obj1": 0.5951417004048583, "obj2": 0.25859913805484624}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( MDR + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( Min( MUR ,CS ) + ( CS - RRSe ) ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.244878898898145}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) ) / ( ( ACS - DDR ) + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,Min( RMSe ,( Max( MUR,MLU ) - RRSe ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RRSe ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.7255823193559737}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MLU / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.03576145908474865}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( Min( MLU ,MUM ) + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.43504194104556804}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Min( RRS ,RRS ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.41323729319514657}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,CS ) )", "obj1": 0.6275303643724697, "obj2": 0.21295724836091573}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( Max( ( ( ARS / ACS ) / ( DDR * CRS ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.19305721386722408}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( ( ARS - MDR ) / ( FirstVNF_CPU + Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) / Max( RRSe,RMSe ) ) - RMSe ),MUC ) + Max( RCSe,MUC ) ) + ( Max( ( ( Max( ( RRSe + DS ),Min( DS ,RMSe ) ) - Max( Min( CS ,RRSe ),( MUC - Max( CS,RRSe ) ) ) ) / MLU ),DS ) + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.6874828773062173}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + Min( FirstVNF_CPU ,PN ) ) - ( MDR * ( ( Max( MDR,FirstVNF_CPU ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / ( RCSe / RRSe ) ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - ( MUR - MUC ) )", "obj1": 0.9898785425101214, "obj2": 0.0023937256525166225}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ACS ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / MLU ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6116711293151051}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - Max( ( ( ( Const - ( ARS / Min( FirstVNF_Mem ,PN ) ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( ( CS / ( ( ( MLU / DS ) + DS ) - ( Min( MUM ,RCSe ) * MUR ) ) ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / ( Const / ( ARS - PN ) ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7165991902834008, "obj2": 0.1401434254267961}, {"determining": "( Max( Max( FirstVNF_Mem,( ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2234209619171548}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( ( ( DDR / FirstVNF_Mem_Server ) * ( PN + MRS ) ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),MLU ) ) + RCSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3726444926593631}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3052110812987878}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7267206477732794, "obj2": 0.13454473498973593}, {"determining": "( Max( Min( ACS ,( MRS * AMS ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MUM,MUR ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.2047334419117945}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "( ( PN - FirstVNF_CPU_Server ) / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( DDR + ( FirstVNF_Mem_Server / ( RRS * FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( ( Min( RCSe ,RMSe ) / MLU ) / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( MUR / ( MLU / CS ) ) ) + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4011312206787779}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32616744481127263}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( Max( Min( FirstVNF_RAM ,ARS ),( PN - MDR ) ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * Min( ( RRS - RRS ) ,DDR ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + Min( RCSe ,CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( RCSe,( ( ( MLU / ( DS / CS ) ) * MUR ) * MLU ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.24093110828222963}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,ACS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),( MUC / RCSe ) ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3820492198739282}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.7530364372469636, "obj2": 0.1106630810179923}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( BR / BR ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),Min( MLU ,MUM ) ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5, "obj2": 0.33156820506176043}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - ( AMS - RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( ( CS * MUM ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.1659919028340081, "obj2": 0.7502947701809117}, {"determining": "( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) * ( Max( Max( ( ( ( ACS - ( MRS - FirstVNF_Mem ) ) / CRS ) - FirstVNF_Mem_Server ),RRS ),BR ) / ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( CS ,RCSe ) ) ),Min( RRSe ,RRSe ) ) - ( ( Max( ( Max( MUM,MUR ) - ( CS + DS ) ),MUR ) / MUM ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,MUM ) ) )", "obj1": 0.659919028340081, "obj2": 0.19810596436490674}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( ( DDR * BR ) * ( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + MUC ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.8868708758086534}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / ( ( Max( CS,MUR ) / RRSe ) + DS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.341713017306201}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3362883535873624}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - MUR ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.12428935642637405}, {"determining": "( Max( ( ( ARS / ACS ) / ( DDR * CRS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( MLU,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.562753036437247, "obj2": 0.27352617874120877}, {"determining": "( Max( Min( ( Max( ( AMS * ( FirstVNF_RAM_Server / MRS ) ),ARS ) / FirstVNF_RAM ) ,MDR ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( ( MLU + Max( RCSe,MUC ) ) + ( ( MUM * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * ( Max( ( Min( DS ,Max( MUM,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2688918475192399}, {"determining": "( Max( Min( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) ,MDR ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - MDR ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Max( MLU,( ( MUR * MLU ) / Max( MLU,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( ( RRSe - Max( MLU,MUR ) ) + RMSe ) / ( ( MLU + Max( RCSe,MUC ) ) + ( ( MUM * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * ( Max( ( Min( DS ,Max( MUM,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.26134651846494616}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( DDR * DDR ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_Mem - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( DS + MLU ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.25999409451738703}, {"determining": "( Max( Min( ACS ,( MRS * ( ( ( FirstVNF_Mem + Min( ACS ,MDR ) ) * Const ) - ( ( MRS * PN ) - Const ) ) ) ),( Max( Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ),( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( MUC + RCSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( ( DS - RCSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.21129449823280264}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( MDR + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( BR * ( Const / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RRSe - ( ( Min( ( Min( MUR ,CS ) + ( MUR - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.012712900558809097}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM_Server / Max( MRS,DDR ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( ( ( ( RMSe * Max( MUR,DS ) ) / RRSe ) + DS ) / RCSe ) ) )", "obj1": 0.7489878542510121, "obj2": 0.12315601469519911}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Const / BR ) ) )", "choosing": "( MUC + ( ( ( Max( ( MUR * Min( Max( MUR,MUM ) ,( RCSe * RCSe ) ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( ( BR * FirstVNF_RAM ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( Const - FirstVNF_Mem ) * ( CRS - ACS ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( MUR + RMSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * RCSe ) ) )", "obj1": 0.645748987854251, "obj2": 0.21047458202286157}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( ( ARS - FirstVNF_Mem_Server ) ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( MUC,MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.29960518535044917}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * Min( AMS ,AMS ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( Min( DS ,Min( Min( MUC ,RCSe ) ,( MUR + MUR ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ,MUC ) + RMSe ) )", "obj1": 0.9554655870445344, "obj2": 0.012297984342187738}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,ACS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MUR * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Max( MUC,RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3213870672598359}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / Max( MRS,DDR ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) / RCSe ) ) )", "obj1": 0.7510121457489879, "obj2": 0.12207988881853847}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( ( BR / BR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( Min( MUR ,CS ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.1041570268530661}], "36": [{"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( ( ARS - FirstVNF_Mem_Server ) ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( Max( MUR,DS ) * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( MUC,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + BR ) - ( MDR * ( ( Max( MDR,FirstVNF_CPU ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / ( RCSe / RRSe ) ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( MUM / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * BR ) * ( Min( MDR ,FirstVNF_RAM ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + RMSe ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.88829729784762}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Max( Const,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( MUR - MUR ) ) / CS ) ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( CS / ( MUC * MUC ) ) ) ) - ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.7975708502024291, "obj2": 0.08563114648937543}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( CS + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5879976399010735}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * ( AMS - ACS ) ) ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU * MDR ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Max( RCSe,MUC ) - MUM ) ,MUC ) + RMSe ) / ( ( DS / ( ( RMSe / RCSe ) * RMSe ) ) * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.8380566801619433, "obj2": 0.07732121128968912}, {"determining": "( Max( ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( ( BR + ( ACS - FirstVNF_CPU_Server ) ) / MRS ) ) ) ),BR ) * ( ( ( ( Const - FirstVNF_RAM ) - DDR ) + FirstVNF_Mem_Server ) - ( MDR * ( PN / ( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( Max( ( RMSe * CS ),MUM ) ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( RRSe ,MUM ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( MUM / Max( MUC,( MUC / Max( Min( RMSe ,MUM ),RRSe ) ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.03768389723318803}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,FirstVNF_CPU ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / ( RCSe / RRSe ) ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6862348178137652, "obj2": 0.15255822661687368}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6828337273087304}, {"determining": "( Max( ( AMS + FirstVNF_CPU ),( Max( FirstVNF_Mem,( Max( MDR,MDR ) + FirstVNF_CPU ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( ( MDR + BR ) * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( ( RCSe * RRSe ) - Min( RRSe ,CS ) ),Min( DS ,Max( RRSe,MUM ) ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - ( RMSe - Min( RRSe ,CS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5257173616728714}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( Max( FirstVNF_Mem,( DDR + Min( Max( ACS,DDR ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( DS / RCSe ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / ( CS / Min( ( Max( RCSe,MUC ) - MUM ) ,RMSe ) ) ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.679345436021441}, {"determining": "( Max( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,Max( ACS,DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) ,MUC ) + RMSe ) / ( RCSe - ( Max( ( RMSe * CS ),MUM ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.548165222334882}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - ( ( MDR * BR ) / RRS ) )", "choosing": "( Min( Min( CS ,Min( Min( MLU ,Max( RRSe,DS ) ) ,RMSe ) ) ,( RMSe / Max( ( Min( MUR ,RMSe ) - RCSe ),RRSe ) ) ) * ( MLU / CS ) )", "obj1": 0.2550607287449393, "obj2": 0.6497152691493251}, {"determining": "Min( ( ( RRS + ARS ) * ( CRS - ( ( ( MDR / MDR ) - BR ) * MDR ) ) ) ,Max( DDR,DDR ) )", "choosing": "Max( ( RMSe * RRSe ),( MLU + ( ( MUR + RRSe ) * ( CS / ( RRSe * ( ( Max( RCSe,RCSe ) / ( MUR - RMSe ) ) / DS ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5200517931359383}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - MDR ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * ( Max( MUC,MUR ) - Min( ( CS / MUR ) ,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1769856145550336}, {"determining": "( ( Max( ( Const * ( ( Max( ( AMS * FirstVNF_Mem ),( Const + FirstVNF_RAM ) ) + ARS ) - FirstVNF_Mem ) ),( MDR * PN ) ) / FirstVNF_RAM ) / ( Max( Max( FirstVNF_RAM_Server,PN ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( Max( CS,RRSe ) + ( ( ( Max( ( MLU / ( CS * ( RCSe + RCSe ) ) ),Max( Max( ( RCSe + CS ),MLU ),MLU ) ) - Min( Max( RMSe,MUR ) ,RRSe ) ) * ( MLU / ( MUC / MUR ) ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.7097765083575384}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem + MRS ) ) - FirstVNF_Mem ) - FirstVNF_Mem ) ,FirstVNF_RAM ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( RMSe / ( Min( DS ,Min( MUM ,MUM ) ) / ( Max( RRSe,MUR ) + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7880319118069494}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( ( BR / BR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( RRSe,MUM ) ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( Min( MUR ,CS ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.1041570268530661}, {"determining": "( ( FirstVNF_CPU_Server / ( DDR + Max( CRS,( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( BR + FirstVNF_RAM_Server ) ) / Min( ( MDR + RRS ) ,( FirstVNF_Mem_Server * CRS ) ) ) + ( Max( Max( FirstVNF_Mem,CRS ),AMS ) / CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - ( MUR / Min( RRSe ,( ( Max( MLU,RRSe ) - CS ) / DS ) ) ) ) * DS ) * ( MLU / CS ) )", "obj1": 0.16396761133603238, "obj2": 0.7587820455663394}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_Mem_Server - ( AMS - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem / Const ) - FirstVNF_Mem ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5017007464650967}, {"determining": "( Max( Max( ( FirstVNF_CPU - BR ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( DDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( ( Min( DS ,( MUR / MUC ) ) * ( ( ( ( Min( RRSe ,DS ) + Max( RRSe,MUM ) ) + RMSe ) - ( MUR + ( ( RCSe * RMSe ) - ( CS / MUM ) ) ) ) + MLU ) ) ,MUC ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.48754605338221985}, {"determining": "( Max( ( ( ARS / ACS ) / ( DDR * CRS ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_RAM_Server - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( Max( Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ),Max( MUM,MUR ) ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2017989589034166}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + ( Min( AMS ,AMS ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ARS / ACS ) / ( Max( ( MDR * ( FirstVNF_RAM / PN ) ),( CRS + RRS ) ) * ( FirstVNF_CPU_Server / RRS ) ) ) + BR ) )", "choosing": "Max( ( ( ( MUC * MUC ) - Max( MLU,( MLU - RCSe ) ) ) - ( RMSe * Max( MUC,MUR ) ) ),( MLU + ( ( Max( DS,Max( MUM,MUR ) ) + ( Max( ( RMSe * CS ),MUM ) - MUR ) ) / Max( ( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) - ( DS * ( RCSe + ( RRSe - RMSe ) ) ) ),MUR ) ) ) )", "obj1": 0.402834008097166, "obj2": 0.46902960678740463}, {"determining": "( Max( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * Min( ( DS + ( CS - RRSe ) ) ,MUC ) ) ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.1816687791252212}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( Min( ( Min( MUR ,CS ) + Max( MLU,MUR ) ) ,MUC ) + RMSe ) / ( RCSe - ( ( ( MUM * RMSe ) + MLU ) + RMSe ) ) ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5435484096621798}, {"determining": "( ( Min( Min( RRS ,Min( FirstVNF_CPU ,PN ) ) ,FirstVNF_CPU ) - ( DDR - FirstVNF_Mem ) ) - ( ( Min( Max( CRS,FirstVNF_Mem_Server ) ,BR ) - DDR ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( Max( RMSe,( MUM + Min( ( CS * MUR ) ,Max( RCSe,RCSe ) ) ) ) - ( Max( MUR,( MUC - DS ) ) * Max( MLU,DS ) ) ) ) ,Min( Max( MUC,( ( Max( MLU,DS ) - ( RMSe / MUC ) ) - MUR ) ) ,( CS * Min( RMSe ,( Min( ( MUR - MUC ) ,( CS + RMSe ) ) + Max( MUR,MUC ) ) ) ) ) ) * ( ( RCSe / ( RRSe - ( ( DS - ( ( MUM + RMSe ) * CS ) ) / Min( MLU ,MUC ) ) ) ) / CS ) )", "obj1": 0.27530364372469635, "obj2": 0.6336419083666867}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.4250556658407379}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / FirstVNF_CPU ) - ( DDR * ( Const - ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / FirstVNF_RAM ) - ( MDR / RRS ) ) ) ) ) / ( Max( ( BR / ( CRS * RRS ) ),( Min( FirstVNF_CPU ,ARS ) + ( FirstVNF_Mem_Server / RRS ) ) ) * ( ( AMS / BR ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( MUR / ( Max( ( MUC * MUM ),RCSe ) - ( ( DS + RCSe ) - Min( RMSe ,Min( RMSe ,MUM ) ) ) ) ) - ( Max( MUR,( CS / RCSe ) ) / ( Max( Max( RCSe,Max( RRSe,MLU ) ),( RCSe * CS ) ) * DS ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.823908188186064}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / FirstVNF_RAM_Server )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.43839387463760804}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.14554989879649885}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + BR ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MLU / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.03576145908474865}, {"determining": "( Max( Max( ( ( ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,RRSe ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5931174089068826, "obj2": 0.2582219197310948}, {"determining": "( ( ( ( FirstVNF_RAM + Max( ( Min( MRS ,FirstVNF_Mem ) - Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( ACS + Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - ARS ) ) ) ) ) / FirstVNF_CPU ) - ( DDR * ( Const - RRS ) ) ) / ( Max( FirstVNF_Mem,( Min( FirstVNF_CPU ,ARS ) + ( Max( PN,FirstVNF_CPU ) / RRS ) ) ) * ( ( ACS / ( FirstVNF_RAM * Min( FirstVNF_CPU ,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Const ) ) ) ) - ( DDR * ( ( MRS + ARS ) - RRS ) ) ) ) )", "choosing": "( Min( MLU ,MUC ) + ( ( ( ( ( ( ( MUM + MUR ) - ( DS * MLU ) ) / Max( RCSe,RCSe ) ) - ( Max( RRSe,( RMSe / RCSe ) ) - ( MUC / RCSe ) ) ) * ( ( MUR * Min( RMSe ,MUR ) ) / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + Max( ( RRSe / MUM ),( RMSe - RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.11133603238866396, "obj2": 0.8346050838444398}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( MDR + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( ( ( ( CS + MUR ) - MLU ) + MUM ) - ( ( Min( MUR ,CS ) + ( CS - RRSe ) ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.244878898898145}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * Min( ACS ,DDR ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / MLU ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6116711293151051}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,ACS ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),( MUC / RCSe ) ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3820492198739282}, {"determining": "( Max( ( Min( FirstVNF_CPU ,( Min( DDR ,FirstVNF_Mem ) + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RMSe - Min( DS ,MUM ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.06189493569912157}, {"determining": "( ( FirstVNF_CPU + Min( FirstVNF_CPU ,( Max( ( Const * DDR ),Const ) - RRS ) ) ) - Max( FirstVNF_Mem,Min( Min( AMS ,BR ) ,RRS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( ( ( ( Max( RCSe,Min( RRSe ,DS ) ) / ( DS - MUC ) ) / Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * MLU ) ) ) / Min( ( MLU - CS ) ,Max( ( Max( DS,RCSe ) - ( MUM / RCSe ) ),( RMSe / RCSe ) ) ) ) ,Max( RRSe,MUM ) ) ) * ( ( MUR * ( RMSe / ( MLU + CS ) ) ) / CS ) )", "obj1": 0.27125506072874495, "obj2": 0.6380498097705911}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU_Server ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( CS ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.868421052631579, "obj2": 0.05140771381398055}, {"determining": "( ( FirstVNF_RAM - ( ( Const - FirstVNF_Mem ) * ( Const - MDR ) ) ) / ( ( ACS - DDR ) + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / ( ( MUC / RCSe ) - CS ) ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,Min( RMSe ,( Max( MUR,MLU ) - RRSe ) ) ) ) ) - ( ( RCSe * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8481640662253803}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - MUR ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.12428935642637405}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Max( MDR,( Max( MDR,MDR ) + FirstVNF_CPU ) ) / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RRSe ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.7255823193559737}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( ( AMS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,MDR ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - ( MLU * RRSe ) ),Max( MLU,Min( Max( MLU,RRSe ) ,Max( MUC,DS ) ) ) ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.37680932293724095}, {"determining": "( Min( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) ,Max( Max( ( ( FirstVNF_RAM_Server / CRS ) + Const ),FirstVNF_CPU ),MDR ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * Max( MUC,MUR ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( ( CS / Max( RRSe,( RMSe - RRSe ) ) ) / ( ( MUM * MUM ) / MLU ) ) ),MLU ) ) )", "obj1": 0.09109311740890688, "obj2": 0.8670765949221718}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,AMS ),( CRS + ( ( PN - FirstVNF_RAM ) / BR ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( ( BR / Min( AMS ,BR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( Max( RCSe,Min( RRSe ,DS ) ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( RRSe,Min( Min( MUR ,CS ) ,Max( ( RMSe + Max( MUM,RCSe ) ),( Min( ( RMSe + DS ) ,( CS / MUR ) ) * ( ( MLU + MLU ) / ( RMSe - RRSe ) ) ) ) ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.1180031955155707}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( ACS,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( Min( MLU ,MUM ) + RRSe ) - RMSe ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.43504194104556804}, {"determining": "( ( ( ( ACS * ACS ) - FirstVNF_RAM ) - ( FirstVNF_CPU_Server / DDR ) ) / ( Max( FirstVNF_Mem,RRS ) * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU - ( MLU * RMSe ) ),RRSe ) + ( ( ( Max( ( RMSe / ( MUM - RMSe ) ),( CS * MUM ) ) * ( ( MUC * Max( ( CS - RMSe ),Max( MUM,DS ) ) ) * CS ) ) - DS ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02447536791108124}, {"determining": "( Min( ( ( ARS - ( Max( ( AMS + FirstVNF_CPU_Server ),AMS ) - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( FirstVNF_CPU - AMS ) + BR ) ) / ( Max( Max( ACS,CRS ),( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( ( CS * MUC ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( MLU / CS ) ) - ( ( RRSe / Min( MUC ,( ( RCSe * ( MUR + RMSe ) ) - RRSe ) ) ) * ( Max( ( ( Max( MUM,RCSe ) * ( MUC * DS ) ) / Min( ( MUR / MUM ) ,Min( DS ,RRSe ) ) ),Max( Max( ( MLU + CS ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.39327093421572223}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( Max( ( FirstVNF_CPU_Server / RRS ),FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( ( ( MUM * MUM ) / MLU ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.46947560055037946}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + MDR ) ) ,( ( ( Max( Const,( Max( MDR,MDR ) + FirstVNF_CPU ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( RRS - ( Max( MRS,DDR ) / Max( MRS,BR ) ) ) ) ) + BR ) ) / ( Min( RRS ,RRS ) * FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RRSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Max( CS,MUR ) / RRSe ) + DS ) - Max( MUM,Max( MUC,MUC ) ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.41323729319514657}, {"determining": "( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem_Server / RRS ) ) * ( BR / Max( Const,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_CPU_Server ,( CRS + AMS ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( RCSe,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.5587044534412956, "obj2": 0.2858394370278847}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / MRS ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( DS - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7267206477732794, "obj2": 0.13454473498973593}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,Min( Max( ( AMS - ( ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_RAM ) - FirstVNF_CPU_Server ) ),MDR ) ,MDR ) ) )", "choosing": "( ( MUM * RRSe ) * ( MLU + RMSe ) )", "obj1": 0.18218623481781376, "obj2": 0.7416889227676061}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.7530364372469636, "obj2": 0.1106630810179923}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3052110812987878}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,CS ) )", "obj1": 0.6275303643724697, "obj2": 0.21295724836091573}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( ( ARS - FirstVNF_Mem_Server ) ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( MUC,MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.29960518535044917}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem + Const ) ) / ( Max( FirstVNF_Mem,( Const + ACS ) ) * ( Max( ( Const / RRS ),MDR ) + FirstVNF_CPU ) ) ) + BR ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - Min( CS ,Max( CS,RMSe ) ) ),( MLU + ( ( Max( Min( RCSe ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) + ( CS * ( MUR - Min( RRSe ,RMSe ) ) ) ) / CS ) ) )", "obj1": 0.5526315789473685, "obj2": 0.29529881394456314}, {"determining": "( Max( Min( ACS ,( MRS * ( ( ( FirstVNF_Mem + Min( ACS ,MDR ) ) * Const ) - ( ( MRS * PN ) - Const ) ) ) ),( Max( Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ),( Const + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( FirstVNF_CPU * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( MUR / RMSe ) ) - ( ( MUC + RCSe ) / ( MUC * MUC ) ) ) ) - Min( DS ,Max( ( DS / Min( MUM ,MUR ) ),Min( ( RCSe + RCSe ) ,( ( DS - RCSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.21129449823280264}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ( ( MDR - FirstVNF_Mem ) - BR ) - FirstVNF_Mem_Server ) / ( Const / FirstVNF_CPU ) ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,( MUR + RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * DS ) * ( MUR + RCSe ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.8020179364154929}, {"determining": "( Min( ( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,Max( ARS,Const ) ) + FirstVNF_CPU ) ) ) + BR ) ,( ( DDR + ( ( Const / DDR ) + ( Max( PN,BR ) / ACS ) ) ) - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( ( MDR * FirstVNF_CPU_Server ) - ( ( Max( MRS,DDR ) / Max( MRS,BR ) ) + ARS ) ) ) )", "choosing": "( Min( DS ,( MLU + ( MLU / ( RMSe * ( MUR * ( CS * ( MUM * DS ) ) ) ) ) ) ) / ( Min( Min( DS ,RCSe ) ,MLU ) - Max( Max( RMSe,( MLU / Max( MUC,MUC ) ) ),MLU ) ) )", "obj1": 0.08704453441295547, "obj2": 0.871695802303831}, {"determining": "( ( ( Const - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) * PN ) ) / ( ( ( ( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / ( PN - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) / ACS ) * ( BR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( RRSe * ( MLU * MUM ) ) * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011175594901458898}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) - Max( ( ( ( Const - ( ARS / Min( FirstVNF_Mem ,PN ) ) ) + ( FirstVNF_Mem_Server - ( FirstVNF_RAM + CRS ) ) ) + MDR ),AMS ) ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( Max( ( RCSe - ( MLU / MUM ) ),Max( MUM,( RRSe * ( ( RRSe + DS ) * RCSe ) ) ) ) + ( ( ( ( CS / ( ( ( MLU / DS ) + DS ) - ( Min( MUM ,RCSe ) * MUR ) ) ) - ( ( ( CS / ( MLU / CS ) ) + DS ) - ( MUC / RCSe ) ) ) * ( MLU / Min( Min( MUR ,( MUR + MUC ) ) ,DS ) ) ) - RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.8425073606170815}, {"determining": "( Max( ( ( ARS / ACS ) / ( DDR * CRS ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,MDR ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( ( Min( ( DS - RMSe ) ,RCSe ) * ( MUM - ( Max( MUR,Max( MLU,MUR ) ) / ( CS + MUR ) ) ) ) / RCSe ) + MLU ) - Min( DS ,CS ) )", "obj1": 0.562753036437247, "obj2": 0.27352617874120877}, {"determining": "( Max( ( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / ( Const / ( ARS - PN ) ) ) ) ) ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * ( BR / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( ( RRSe - Min( Min( MUR ,MUM ) ,RCSe ) ) - ( DS * Min( CS ,RCSe ) ) ) - ( Max( ( Max( MUC,RCSe ) * CS ),( CS * ( MUM + RRSe ) ) ) - ( RMSe / RCSe ) ) )", "obj1": 0.7165991902834008, "obj2": 0.1401434254267961}, {"determining": "( Max( Max( FirstVNF_Mem,( ( MDR * ( ( Min( BR ,MDR ) + FirstVNF_CPU ) / PN ) ) + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( ARS - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) / ( MUC * MUC ) ) ) - Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2234209619171548}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,Max( ARS,Min( Const ,FirstVNF_Mem ) ) ) - FirstVNF_RAM ) / ( ( Max( FirstVNF_CPU,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,RRS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Min( DS ,( RRSe / RMSe ) ) - RCSe ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) * ( Max( Min( ( MLU / CS ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ),Max( MUM,MUR ) ) / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,RMSe ) ),Max( Max( ( MLU + MLU ),DS ),Min( RMSe ,DS ) ) ) + RCSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.35991577106657957}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,Max( Const,Const ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( DDR / CRS ) ) ) ) ) + Max( Min( PN ,Max( ( ( FirstVNF_CPU / FirstVNF_RAM ) * AMS ),( FirstVNF_Mem_Server - BR ) ) ),MRS ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( MUC + ( ( ( Max( ( ( RCSe * RRSe ) * Min( RMSe ,DS ) ),MUM ) - ( ( ( Max( MUM,MLU ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( ( MLU - ( DS / ( ( CS / ( MUR * MUR ) ) + ( CS + Max( MLU,CS ) ) ) ) ) * MLU ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( Min( ( Max( ( AMS * ( FirstVNF_RAM_Server / MRS ) ),ARS ) / FirstVNF_RAM ) ,MDR ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( ( MLU + Max( RCSe,MUC ) ) + ( ( MUM * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * ( Max( ( Min( DS ,Max( MUM,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.2688918475192399}, {"determining": "( ( PN - FirstVNF_CPU_Server ) / ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( DDR + ( FirstVNF_Mem_Server / ( RRS * FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( Max( MUR,RCSe ) - ( MLU * RRSe ) ),MUM ) - ( ( ( Max( MUM,MUR ) / RRSe ) + DS ) - ( ( Min( RCSe ,RMSe ) / MLU ) / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * ( Max( Min( MLU ,Min( MUC ,Min( MUC ,CS ) ) ),( MUR / ( MLU / CS ) ) ) + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4011312206787779}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - FirstVNF_Mem ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( RCSe ,MUM ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.145748987854251, "obj2": 0.7941302792552174}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( Min( RRS ,( RRS / AMS ) ) / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU / CS ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7208842512846936}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - ( MRS - ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,CRS ) ) ) ) ) * ( ( Min( DDR ,CRS ) - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( Max( FirstVNF_Mem,( CRS + ( MDR / RRS ) ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) + Max( Max( ( ( DDR / ACS ) * ( BR / Max( FirstVNF_Mem_Server,BR ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) ) ) / Max( ( ( ARS * PN ) / CRS ),ACS ) )", "choosing": "( ( ( MUR * MLU ) + RRSe ) + ( Max( ( DS / RCSe ),( CS + RRSe ) ) - ( Max( Min( RRSe ,( ( MLU - CS ) * MLU ) ),( RMSe + CS ) ) * ( ( Max( RRSe,Max( ( MUC / MUM ),MLU ) ) - ( MUC / RCSe ) ) + RCSe ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.03180163487529686}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,RRS ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - Min( RRS ,( RRS / AMS ) ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( Max( ( DS / RMSe ),( MLU - MLU ) ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.17408906882591094, "obj2": 0.7450477339568501}, {"determining": "Min( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( RRS * FirstVNF_Mem_Server ) ) + MDR ) ) ,( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( MLU * ( DS - RCSe ) ) * ( MLU / Min( DS ,( RRSe / RMSe ) ) ) ) - ( ( RRSe * Max( MLU,CS ) ) - RRSe ) ) )", "obj1": 0.13157894736842105, "obj2": 0.8114790211512858}, {"determining": "( Max( ( Max( ( ( FirstVNF_CPU_Server / RRS ) * ( BR / FirstVNF_RAM_Server ) ),Min( FirstVNF_CPU_Server ,Max( AMS,Min( ( FirstVNF_Mem_Server - PN ) ,MDR ) ) ) ) * ( BR / FirstVNF_RAM_Server ) ),Min( ( FirstVNF_RAM_Server / MRS ) ,MRS ) ) - ( AMS - RRS ) )", "choosing": "( ( Min( MLU ,MLU ) - Min( Min( DS ,( ( RRSe * RRSe ) + Min( RRSe ,RCSe ) ) ) ,Max( Max( MUM,Max( ( CS * MUM ),MUC ) ),DS ) ) ) * ( MLU / CS ) )", "obj1": 0.1659919028340081, "obj2": 0.7502947701809117}, {"determining": "( ( DDR * BR ) * ( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ) * ACS ) )", "choosing": "( Min( MLU ,( Min( MLU ,MLU ) - MLU ) ) - Min( DS ,Max( ( ( DS / Min( RRSe ,CS ) ) + CS ),( RMSe - Min( ( ( RCSe + MUC ) - RRSe ) ,CS ) ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.8868708758086534}, {"determining": "Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,Const ) / FirstVNF_RAM ) ) ) ) * ( ( ARS - ( ( FirstVNF_CPU_Server - MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) ,ARS )", "choosing": "Max( ( ( RRSe - Max( MLU,MUR ) ) - MLU ),( ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( RRSe,Max( RCSe,MLU ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) * ( MLU / ( Min( DS ,Min( MUM ,Max( RRSe,RCSe ) ) ) / ( DS + ( ( RMSe + DS ) * ( MUM / RMSe ) ) ) ) ) ) - ( ( MUC * RRSe ) * ( MUR + RCSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7213280970103384}, {"determining": "( Max( Min( ( Max( ( AMS * PN ),ARS ) / FirstVNF_RAM ) ,MDR ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,Min( ( FirstVNF_Mem_Server - MDR ) ,MDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Max( MLU,( ( MUR * MLU ) / Max( MLU,RRSe ) ) ) ),( MUR / RMSe ) ) - ( ( ( RRSe - Max( MLU,MUR ) ) + RMSe ) / ( ( MLU + Max( RCSe,MUC ) ) + ( ( MUM * MUC ) - ( RMSe * ( MUR + RCSe ) ) ) ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * ( Max( ( Min( DS ,Max( MUM,MUM ) ) * CS ),MUM ) - ( ( ( Max( MUM,RMSe ) / RRSe ) + DS ) - ( RMSe / RCSe ) ) ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.26134651846494616}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + ARS ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Max( MUC,MUC ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.8582995951417004, "obj2": 0.060971661752283426}, {"determining": "( Min( ( ( ( RRS / MRS ) - Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * CRS ),FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( ( BR * MRS ),DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( FirstVNF_RAM / CRS ) ) ) ) ) + BR ) ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM - DS ) ) + ( Max( CS,( ( Min( MLU ,RRSe ) + ( MUC + MUC ) ) / ( RCSe / ( RRSe / RRSe ) ) ) ) + ( MUR - DS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.35814776596930326}, {"determining": "( ( ( ARS - ( ( Const - ACS ) - Min( RRS ,( Max( BR,( BR * FirstVNF_RAM ) ) / FirstVNF_RAM ) ) ) ) * ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( ARS * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( ( ( MLU + Max( RCSe,Min( Max( ( MLU / RRSe ),( RRSe * RMSe ) ) ,CS ) ) ) + DS ) / ( ( Max( CS,MUR ) / RRSe ) + DS ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.341713017306201}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / BR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( MDR + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( BR * ( Const / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RRSe - ( ( Min( ( Min( MUR ,CS ) + ( MUR - RRSe ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.9534412955465587, "obj2": 0.012712900558809097}, {"determining": "( Min( ( ( ARS - ( ( ( AMS / ( RRS * AMS ) ) - ( ( FirstVNF_CPU_Server * CRS ) - ( ACS / PN ) ) ) / MRS ) ) * ( ( ARS - FirstVNF_Mem_Server ) + MDR ) ) ,( ( ( Max( Const,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,Min( PN ,FirstVNF_RAM ) ) ) ) ) + ( ARS * FirstVNF_Mem ) ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + Max( ( Min( MLU ,MUM ) - ( Min( Max( RMSe,MUM ) ,MUR ) - Max( MUM,Max( Max( ( DS / RMSe ),( DS - RRSe ) ),MUC ) ) ) ),Min( MLU ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.3492856240303242}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,Min( ACS ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) * ( Max( ARS,FirstVNF_Mem ) + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ,( ( Max( FirstVNF_Mem,Const ) / ( ( Max( MRS,DDR ) / BR ) * ( FirstVNF_RAM_Server - Min( Min( MDR ,FirstVNF_RAM ) ,( DDR / CRS ) ) ) ) ) + BR ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( Const / BR ) ) )", "choosing": "( MUC + ( ( ( Max( ( MUR * Min( Max( MUR,MUM ) ,( RCSe * RCSe ) ) ),MUM ) - ( ( ( Max( RMSe,MUR ) / RRSe ) + DS ) - Max( MUM,RMSe ) ) ) * ( Max( MUM,MUR ) / CS ) ) - ( Max( RCSe,MUC ) * ( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6181534105370802}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.8663967611336032, "obj2": 0.05312567555658763}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( RRS ,( Max( BR,( PN - ACS ) ) / FirstVNF_RAM ) ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( ( FirstVNF_RAM / PN ) / CRS ) ) ) ) * ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( PN - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( Max( MUM,Max( Min( MUM ,RCSe ),MUR ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( Min( MUR ,MUC ) / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - Max( Min( ( DS / Min( MUM ,MUR ) ) ,( CS + RMSe ) ),Max( MUM,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.32616744481127263}, {"determining": "( Max( Max( FirstVNF_Mem,( CRS + ( ( PN - FirstVNF_RAM ) / RRS ) ) ),( Max( FirstVNF_Mem,( MDR + ACS ) ) * ( Max( MDR,MDR ) + FirstVNF_CPU ) ) ) * ( ( DDR * DDR ) - ( MDR * ( ( Max( MDR,( ( FirstVNF_Mem - MDR ) * DDR ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( ( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + ( DS + MLU ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) - Min( Min( DS ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( RRSe - RMSe ) ) ) ) ) ,Max( RRSe,Min( ( RCSe + RCSe ) ,( Min( RCSe ,RMSe ) * ( Max( Min( RMSe ,RCSe ),RMSe ) - RMSe ) ) ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.25999409451738703}, {"determining": "( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( ACS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( Min( ACS ,Max( RRS,FirstVNF_RAM_Server ) ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,Min( MRS ,CRS ) ) )", "choosing": "( Max( ( ( RRSe / Min( DS ,( RCSe - CS ) ) ) * ( ( RMSe - CS ) + MLU ) ),RMSe ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / RRSe ) ) + Min( MUR ,( MUR + RCSe ) ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.31454503056620015}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( MDR - ACS ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.3215543920639381}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MDR - Max( Max( MDR,RRS ),( ( DDR * ( FirstVNF_CPU_Server + ARS ) ) + FirstVNF_CPU ) ) ) ) + AMS ) / ( Max( FirstVNF_Mem,( RRS * BR ) ) * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( ( ( MUM * MUR ) - MUM ),( Min( MUM ,CS ) * Max( ( ( MUC * MUR ) * MUR ),MUM ) ) ) ) + ( RRSe - RMSe ) )", "obj1": 0.9777327935222672, "obj2": 0.006329257684301413}, {"determining": "( Max( ( Min( FirstVNF_CPU ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( CRS + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,RRSe ) + ( CS - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.7631578947368421, "obj2": 0.10474050598859443}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server - MDR ) ) + ( FirstVNF_Mem / RRS ) ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( ( DDR / ACS ) * Min( ARS ,AMS ) ) ) + FirstVNF_CPU ) / ( MDR * AMS ) ) ) ) )", "choosing": "( ( MUC * RMSe ) - ( Min( ( Min( MUR ,CS ) + ( ( CS + ( Max( CS,MUC ) * ( RMSe * DS ) ) ) - RRSe ) ) ,MUC ) + RMSe ) )", "obj1": 0.6194331983805668, "obj2": 0.23171278615796595}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) ,( ACS - RRS ) ) / ( Max( FirstVNF_Mem,( DDR + ( FirstVNF_Mem_Server / RRS ) ) ) * ( FirstVNF_RAM_Server - ( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) + ( ( ( Max( Min( MUM ,CS ),RRSe ) + MUC ) * ( ( Max( ( MUM + ( MUR / MUR ) ),CS ) * ( Max( ( MUC / DS ),MUR ) / Max( ( MUR / MLU ),( MLU * RRSe ) ) ) ) / CS ) ) - ( RMSe * ( MUR + RCSe ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.8100782571067943}, {"determining": "( Max( Max( ( ( DDR / ACS ) * Min( RRS ,( Max( Min( FirstVNF_RAM ,ARS ),( PN - MDR ) ) / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * Min( ( RRS - RRS ) ,DDR ) )", "choosing": "( Min( MLU ,( Max( ( DS - ( DS * Min( ( CS - MUR ) ,RCSe ) ) ),( MUR / RMSe ) ) - ( ( Min( ( DS + Min( RCSe ,CS ) ) ,MUC ) + RMSe ) / ( MUC * MUC ) ) ) ) - ( ( Min( ( Min( MUR ,CS ) + ( CS - RRSe ) ) ,MUC ) + RMSe ) / Max( RCSe,( ( ( MLU / ( DS / CS ) ) * MUR ) * MLU ) ) ) )", "obj1": 0.6153846153846154, "obj2": 0.24093110828222963}, {"determining": "( Max( Max( ( ( DDR / ACS ) * ( BR / MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ),BR ) * ( ( MDR + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( MDR,( BR * ( Const / BR ) ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( RRSe - ( ( Min( MUR ,CS ) + Max( MLU,RCSe ) ) / ( MUC * MUC ) ) ) ) - ( RCSe + MUM ) )", "obj1": 0.9554655870445344, "obj2": 0.012079841631535559}, {"determining": "( ( Max( ( Const * ( BR / FirstVNF_RAM_Server ) ),( MDR * PN ) ) / FirstVNF_RAM ) / Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) * ( Max( ( Min( ACS ,CRS ) * ( BR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM_Server ,( BR / BR ) ) + ACS ) ) / FirstVNF_RAM ) ) ,( ( ( ARS / ACS ) / ( DDR * CRS ) ) + BR ) ) )", "choosing": "( ( Max( RCSe,RMSe ) / CS ) + ( ( ( Max( ( RMSe * CS ),Min( MLU ,MUM ) ) - ( ( ( CS / ( RMSe / CS ) ) + Min( MUR ,MUC ) ) - ( MUC / RCSe ) ) ) * ( MLU / CS ) ) - ( RMSe * Max( MUR,DS ) ) ) )", "obj1": 0.5, "obj2": 0.33156820506176043}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * Max( MRS,Min( CRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ,( ( ( MDR + ( ARS / CRS ) ) / ( ( Max( MRS,RRS ) / BR ) * ( FirstVNF_RAM_Server - Min( RRS ,( RRS / CRS ) ) ) ) ) + BR ) ) / ( BR * FirstVNF_RAM ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( ( Max( ( RMSe * CS ),MUM ) - ( Max( ( Max( MUC,RCSe ) * CS ),RCSe ) - ( ( RRSe + MLU ) * MUC ) ) ) * ( MLU / CS ) ) - ( RCSe * ( MUR + RCSe ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.34303047041435986}, {"determining": "( Max( ( Min( Min( ACS ,( MRS * AMS ) ) ,( AMS + FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ),BR ) * ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( MDR * ( ( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( BR ,FirstVNF_CPU ) ),( Max( MDR,MDR ) + FirstVNF_CPU ) ) + FirstVNF_CPU ) / PN ) ) ) )", "choosing": "( Min( MLU ,( Max( ( DS - Min( RRSe ,CS ) ),( ( RMSe / MUC ) + MUC ) ) - ( ( Min( ( Min( MUR ,CS ) + ( RCSe - RRSe ) ) ,MUC ) + Min( DS ,Max( Max( MUM,MUR ),MUM ) ) ) / ( MUC * MUC ) ) ) ) - ( ( MUR + MUC ) - RRSe ) )", "obj1": 0.868421052631579, "obj2": 0.05140771381398055}, {"determining": "( Min( ( ( ARS - ( FirstVNF_RAM_Server - Min( RRS ,MRS ) ) ) * ( ( ARS - FirstVNF_RAM ) + MDR ) ) ,( ( ( Max( Const,( FirstVNF_Mem_Server / RRS ) ) - FirstVNF_RAM ) / ( ( Max( MRS,DDR ) / BR ) * ( Max( MDR,Min( FirstVNF_RAM_Server ,ACS ) ) + FirstVNF_CPU ) ) ) + BR ) ) / ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + Max( RCSe,MUC ) ) + ( ( MUR * ( MLU / CS ) ) - ( RMSe * ( Max( Min( ( CS / RCSe ) ,Min( MUC ,Min( MUC ,CS ) ) ),Max( Max( ( MLU + MLU ),DS ),Max( MUC,RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.5222672064777328, "obj2": 0.3213870672598359}]}