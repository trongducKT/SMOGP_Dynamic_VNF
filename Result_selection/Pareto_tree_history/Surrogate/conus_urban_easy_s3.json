{"1": [{"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) )", "choosing": "( ( DS / RCSe ) * ( RCSe - MLU ) )", "obj1": 0.16159695817490494, "obj2": 0.7287825235805406}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( MUM + RCSe ) ,( MLU / MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.6830552197405497}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( AMS ,MRS ),( CRS * RRS ) )", "choosing": "( ( MLU / RMSe ) / ( MLU / MUC ) )", "obj1": 0.1596958174904943, "obj2": 0.7327707466870389}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * CRS ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - Max( CS,CS ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RRSe + RMSe ) * Min( Max( ( RCSe - Max( RCSe,( RCSe * RMSe ) ) ),( RRSe - MUM ) ) ,MUR ) ) + MUM ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN + MRS ),MDR ) + ( PN - MDR ) )", "choosing": "( ( ( MUC * DS ) + ( MUR - RCSe ) ) - ( ( RCSe * MUR ) * ( RMSe * MLU ) ) )", "obj1": 0.18250950570342206, "obj2": 0.7252801189975931}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) )", "choosing": "( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.4949961936433361}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3822436561855518}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( Min( FirstVNF_Mem ,Min( ARS ,Min( ( RRS / ( FirstVNF_CPU_Server + MRS ) ) ,PN ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - Max( CS,MUC ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( ( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) ) + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( Min( MLU ,DS ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}], "2": [{"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( MUM + RCSe ) ,( MLU / MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.6830552197405497}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * CRS ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - Max( CS,CS ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RRSe + RMSe ) * Min( Max( ( RCSe - Max( RCSe,( RCSe * RMSe ) ) ),( RRSe - MUM ) ) ,MUR ) ) + MUM ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "( Min( FirstVNF_Mem ,Min( ARS ,Min( ( RRS / ( FirstVNF_CPU_Server + MRS ) ) ,PN ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - Max( CS,MUC ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( ( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) ) + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( Min( MLU ,DS ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - Min( CS ,Max( MUR,MUC ) ) ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,( ( Max( Max( CS,RCSe ),( MUR / ( MLU - RRSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.44866920152091255, "obj2": 0.3971504224167205}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_RAM_Server ) ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + ( MLU + MUC ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.48614679199789856}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MLU ) - Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.39952558583092257}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - ( CRS / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + MLU )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( BR + MRS ) * ( ( BR / ( RRS / FirstVNF_CPU ) ) - ACS ) )", "choosing": "( ( RMSe - RMSe ) + Max( ( RCSe / Min( ( Max( RRSe,( MUM / ( MUM * RCSe ) ) ) + RMSe ) ,MUR ) ),MUR ) )", "obj1": 0.20532319391634982, "obj2": 0.6614410535653187}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8555133079847909, "obj2": 0.05550403703214738}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9752851711026616, "obj2": 0.010833520634110996}, {"determining": "( FirstVNF_Mem_Server * Min( AMS ,ARS ) )", "choosing": "( ( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.2224334600760456, "obj2": 0.5661999072551898}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * FirstVNF_CPU ) ) * ( FirstVNF_Mem * Max( RRS,AMS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) / Min( Max( CS,MLU ) ,MUM ) )", "obj1": 0.7509505703422054, "obj2": 0.20459236909354486}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "( ( Min( Max( PN,BR ) ,( PN + DDR ) ) + ( PN * FirstVNF_Mem ) ) * Max( ( ( BR / AMS ) + ( MRS / FirstVNF_CPU_Server ) ),Min( ( Const * BR ) ,( Const - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUR * RCSe ) - ( RRSe - MUC ) ) / ( ( ( ( DS / MUR ) * CS ) + RRSe ) - ( RRSe * MUM ) ) ) ,Max( ( ( MLU / MLU ) / Max( MUR,DS ) ),( ( MLU + RMSe ) - ( RRSe / DS ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.714610109523726}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ( FirstVNF_Mem / RRS ) / AMS ) ) ) - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + MRS ) ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,Max( RRSe,( RCSe + RMSe ) ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( MUC * MUM ) ) )", "obj1": 0.4923954372623574, "obj2": 0.3944693834747572}, {"determining": "( Min( ( ( ( PN * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( Max( CS,RMSe ) ,Min( MUC ,MLU ) )", "obj1": 0.973384030418251, "obj2": 0.012845267208443381}, {"determining": "( ( ( FirstVNF_Mem + DDR ) - ( Min( DDR ,Const ) + ( RRS / RRS ) ) ) * Min( ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( Min( Min( DS ,RMSe ) ,Max( RCSe,RMSe ) ),MUC ) - CS ) ) )", "obj1": 0.5019011406844106, "obj2": 0.34507000378209907}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( MUM + RCSe ) ,( MLU / MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.6830552197405497}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * CRS ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - Max( CS,CS ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RRSe + RMSe ) * Min( Max( ( RCSe - Max( RCSe,( RCSe * RMSe ) ) ),( RRSe - MUM ) ) ,MUR ) ) + MUM ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,Min( ARS ,Min( ( RRS / ( FirstVNF_CPU_Server + MRS ) ) ,PN ) ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - Max( CS,MUC ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( ( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) ) + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( Min( MLU ,DS ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - Min( CS ,Max( MUR,MUC ) ) ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,( ( Max( Max( CS,RCSe ),( MUR / ( MLU - RRSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MLU ) - Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.39952558583092257}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( CRS - ( CRS / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + MLU )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( BR + MRS ) * ( ( BR / ( RRS / FirstVNF_CPU ) ) - ACS ) )", "choosing": "( ( RMSe - RMSe ) + Max( ( RCSe / Min( ( Max( RRSe,( MUM / ( MUM * RCSe ) ) ) + RMSe ) ,MUR ) ),MUR ) )", "obj1": 0.20532319391634982, "obj2": 0.6614410535653187}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8555133079847909, "obj2": 0.05550403703214738}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9752851711026616, "obj2": 0.010833520634110996}, {"determining": "( FirstVNF_Mem_Server * Min( AMS ,ARS ) )", "choosing": "( ( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.2224334600760456, "obj2": 0.5661999072551898}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * FirstVNF_CPU ) ) * ( FirstVNF_Mem * Max( RRS,AMS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) / Min( Max( CS,MLU ) ,MUM ) )", "obj1": 0.7509505703422054, "obj2": 0.20459236909354486}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( PN * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( Max( CS,RMSe ) ,Min( MUC ,MLU ) )", "obj1": 0.973384030418251, "obj2": 0.012845267208443381}, {"determining": "( ( ( FirstVNF_Mem + DDR ) - ( Min( DDR ,Const ) + ( RRS / RRS ) ) ) * Min( ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( Min( Min( DS ,RMSe ) ,Max( RCSe,RMSe ) ),MUC ) - CS ) ) )", "obj1": 0.5019011406844106, "obj2": 0.34507000378209907}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( ( ARS / ( ( AMS - Min( PN ,FirstVNF_Mem ) ) * MRS ) ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( ( MUM + ( Min( MUR ,MUM ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( ( RCSe * CS ),( MUC - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / Min( ( MUM + RCSe ) ,( MLU / MUR ) ) )", "obj1": 0.311787072243346, "obj2": 0.5006770629677351}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "( ( PN / ARS ) / ACS )", "choosing": "( ( ( Min( DS ,MLU ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ( FirstVNF_Mem * Max( FirstVNF_RAM_Server,MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( DS ,Max( ( ( MLU - Min( RRSe ,( Max( MLU,DS ) + RRSe ) ) ) / DS ),( ( MLU * DS ) / Max( MUC,CS ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.3310894629309786}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( ( ACS * CRS ) - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Max( RMSe,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( PN ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ),RCSe )", "obj1": 0.7129277566539924, "obj2": 0.27832840936566844}, {"determining": "( ( ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) * ( CRS / PN ) ) - Min( ( DDR / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) ) ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / ( Max( ( RCSe - MUM ),DS ) / ( MUR / MLU ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7992319647978224}, {"determining": "( Max( ( Const * CRS ),ACS ) + ( ( MRS + BR ) / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( ( ( MUR / RCSe ) * ( RCSe - Max( ( Max( MLU,RMSe ) + RCSe ),( DS / RRSe ) ) ) ) * DS ) )", "obj1": 0.058935361216730035, "obj2": 0.8054881618830471}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR * AMS ),( FirstVNF_CPU_Server * Max( DDR,AMS ) ) ) - FirstVNF_CPU_Server ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - Min( Min( MLU ,RRSe ) ,Max( RRSe,MUC ) ) ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / ( ( MUM + ( MUC - DS ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe + ( ( ( RCSe / Max( ( CS - ( MUC * RRSe ) ),RRSe ) ) + RCSe ) - RRSe ) ) ,Min( DS ,Max( RCSe,( RRSe + RMSe ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( ( ( ( FirstVNF_CPU / CRS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( ( ( ( MUM / RMSe ) - MUC ) * RRSe ),MUR ) ) ) / Max( Min( MUC ,CS ),( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) / ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Min( DS ,MLU ) + ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) / MUC ) ) - ( Min( MLU ,RCSe ) - Min( RCSe ,MUC ) ) ) / ( RCSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Min( ( ( ( AMS - FirstVNF_CPU_Server ) / Const ) * Const ) ,( CRS / FirstVNF_RAM ) ) * CRS ) / ( ARS + ( Const * PN ) ) ) )", "choosing": "( MUM / ( RCSe / Max( ( RCSe - MUM ),( Min( MUR ,( ( MUM * MUC ) - Min( ( RCSe - CS ) ,MLU ) ) ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ,( ( ( FirstVNF_CPU + BR ) / ( Max( AMS,ACS ) + FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( MUC ,Min( Max( ( RMSe + ( Min( ( Min( CS ,RCSe ) + ( RCSe + CS ) ) ,( ( DS - RRSe ) * ( MUC + RCSe ) ) ) * RCSe ) ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8536121673003803, "obj2": 0.05880684559251137}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( Max( FirstVNF_CPU_Server,Const ),Const ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + ( ( DS / MLU ) * DS ) ),MUR ) ,( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * RRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( RMSe - RMSe ) + Max( ( MLU / RMSe ),( MUC / RMSe ) ) ) * MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * ( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) * MUR ),( RCSe / ( MUR / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - RRS ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + ( MLU * RCSe ) ) ),( ( Max( MUC,MLU ) - DS ) * MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.051330798479087454, "obj2": 0.8063753910208669}, {"determining": "( ( AMS * ( CRS / ( ARS / Min( ARS ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( ( CS / ( CS - Max( RRSe,MUR ) ) ) ,CS ),Min( MUC ,MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.047786331324796046}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Max( Max( RCSe,( ( ( ( MUC - CS ) - RMSe ) + MLU ) - MLU ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "Min( ( Min( RRSe ,CS ) - ( DS + MUC ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( ( Min( Max( PN,BR ) ,( PN + DDR ) ) + ( ( ( Const * BR ) + AMS ) - ( FirstVNF_RAM * ARS ) ) ) * Max( ( ( BR / AMS ) + ( MRS / FirstVNF_CPU_Server ) ),Min( ( Const * BR ) ,( Const - FirstVNF_CPU ) ) ) ) ) / Max( MDR,BR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( ( ( MLU / MLU ) / Max( MUR,DS ) ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.3365019011406844, "obj2": 0.48405949750623223}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( Min( RCSe ,RCSe ),( RRSe + ( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ( FirstVNF_Mem / RRS ) / AMS ) ) ) - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + MRS ) ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,Max( RRSe,( RCSe + RMSe ) ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9866920152091255, "obj2": 0.008525116478254675}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Max( CRS,( Const + FirstVNF_RAM ) ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( MUR - MUR ) ,RMSe ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * RMSe ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ARS )", "choosing": "Max( Min( ( RMSe + ( DS - RRSe ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( ( ( RMSe / ( MLU - MUR ) ) * MUM ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - Max( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,FirstVNF_RAM_Server ),PN ) ) ) ) * ARS ) - Min( Min( FirstVNF_Mem_Server ,ACS ) ,ARS ) )", "choosing": "( ( Min( Max( Min( RCSe ,( Max( ( RRSe / RRSe ),MUR ) + Max( ( MUC - RCSe ),( CS / MUC ) ) ) ),RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / ( ( PN / ARS ) / ( MDR * PN ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( MLU / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + MUR ) ) ) - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4391634980988593, "obj2": 0.39274658579019933}, {"determining": "( ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( RCSe - MUM ) )", "obj1": 0.9847908745247148, "obj2": 0.00961642519784671}, {"determining": "( ( Max( FirstVNF_Mem,CRS ) / Max( MDR,BR ) ) / ( BR * Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( RCSe / ( ( ( MUR + RCSe ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( PN ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ),RCSe )", "obj1": 0.7129277566539924, "obj2": 0.27832840936566844}, {"determining": "( ( ( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) * MUR ),MLU ) ) )", "obj1": 0.17870722433460076, "obj2": 0.6065091413595947}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MLU ) - Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.39952558583092257}, {"determining": "( ( FirstVNF_RAM_Server - ( Const * FirstVNF_CPU ) ) * ( FirstVNF_Mem * Max( RRS,AMS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) / Min( Max( CS,MLU ) ,MUM ) )", "obj1": 0.7509505703422054, "obj2": 0.20459236909354486}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( CRS * FirstVNF_RAM_Server ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7604562737642585, "obj2": 0.09932669455341392}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) - ( Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / Min( ( MUM + RCSe ) ,( MLU / MUR ) ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.1891662535326427}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( FirstVNF_CPU_Server / RRS ) * Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),FirstVNF_RAM ) ) * ARS )", "choosing": "Max( ( Max( Max( RCSe,( ( ( ( MUC - CS ) - RMSe ) + MLU ) - MLU ) ),RMSe ) / Max( MLU,Min( Max( RMSe,MLU ) ,MUC ) ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 0.17680608365019013, "obj2": 0.7112665826461622}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ( FirstVNF_Mem * Max( FirstVNF_RAM_Server,MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( DS ,Max( ( ( MLU - Min( RRSe ,( Max( MLU,DS ) + RRSe ) ) ) / DS ),( ( MLU * DS ) / Max( MUC,CS ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.3310894629309786}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( ( FirstVNF_CPU_Server + ARS ) - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( Min( ( Min( ( DS - RCSe ) ,( Min( DS ,( RRSe / MUC ) ) - DS ) ) * ( ( RRSe / CS ) - ( ( Min( MUM ,RRSe ) + ( CS * MUR ) ) - MLU ) ) ) ,( MLU / Max( ( RMSe - MUR ),( Max( Max( RMSe,RMSe ),( MUM + MUC ) ) / MUR ) ) ) ) - DS ) / ( DS * CS ) )", "obj1": 0.053231939163498096, "obj2": 0.7812459601272959}, {"determining": "( ( Max( FirstVNF_Mem,( ( Min( Max( PN,BR ) ,( PN + DDR ) ) + ( ( ( Const * BR ) + AMS ) - ( FirstVNF_RAM * ARS ) ) ) * Max( ( ( BR / AMS ) + ( MRS / FirstVNF_CPU_Server ) ),Min( ( Const * BR ) ,( Const - FirstVNF_CPU ) ) ) ) ) / Max( MDR,BR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) )", "choosing": "( ( ( ( ( MLU / MLU ) / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.30798479087452474, "obj2": 0.5246027197903408}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_CPU + PN ) ,MRS ) )", "choosing": "( ( RMSe * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7889733840304183, "obj2": 0.09169089644286965}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( DDR + FirstVNF_RAM ),BR ) ) ) / BR ) ,Max( BR,( Min( RRS ,FirstVNF_CPU ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( RRSe * ( MUR + RRSe ) ) ) + RMSe ) ) ) )", "obj1": 0.4847908745247148, "obj2": 0.38664639955133273}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( ( AMS * ( CRS / ( ARS / Min( ARS ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( ( CS / ( CS - Max( RRSe,MUR ) ) ) ,CS ),Min( MUC ,MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.047786331324796046}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8555133079847909, "obj2": 0.05550403703214738}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + MUR ) ) ) - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4391634980988593, "obj2": 0.39274658579019933}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8536121673003803, "obj2": 0.05880684559251137}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * Min( ( ( DDR / ( ( MRS + DDR ) * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( MUM,Max( RCSe,MUR ) ) - CS ) ) )", "obj1": 0.49809885931558934, "obj2": 0.3558131282803496}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "( Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / Min( ( MUM + RCSe ) ,( MLU / MUR ) ) )", "obj1": 0.311787072243346, "obj2": 0.5006770629677351}, {"determining": "( Min( ( BR * ARS ) ,( DDR + Const ) ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( MUR - DS ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.01955210473590462}, {"determining": "( ( Max( FirstVNF_Mem,( ( Min( Max( PN,BR ) ,( PN + DDR ) ) + ( ( ( Const * BR ) + AMS ) - ( FirstVNF_RAM * ARS ) ) ) * Max( ( ( BR / AMS ) + ( MRS / FirstVNF_CPU_Server ) ),Min( ( Const * BR ) ,( Const - FirstVNF_CPU ) ) ) ) ) / Max( MDR,BR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( ( ( MLU / MLU ) / Max( MUR,DS ) ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.3365019011406844, "obj2": 0.48405949750623223}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "( ( PN / ARS ) / ACS )", "choosing": "( ( ( Min( DS ,MLU ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.05880684559251137}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - RRS ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + ( MLU * RCSe ) ) ),( ( Max( MUC,MLU ) - DS ) * MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.051330798479087454, "obj2": 0.8063753910208669}, {"determining": "( ( ( FirstVNF_Mem + DDR ) - ( Min( DDR ,Const ) + ( RRS / RRS ) ) ) * Min( ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( Min( Min( DS ,RMSe ) ,Max( RCSe,RMSe ) ),MUC ) - CS ) ) )", "obj1": 0.5019011406844106, "obj2": 0.34507000378209907}, {"determining": "Min( ( AMS * CRS ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - Max( CS,CS ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 0.9277566539923955, "obj2": 0.04394473670770262}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ( FirstVNF_Mem / RRS ) / AMS ) ) ) - Min( Max( ( FirstVNF_Mem - ( FirstVNF_CPU + MRS ) ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,Max( RRSe,( RCSe + RMSe ) ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9866920152091255, "obj2": 0.008525116478254675}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( Max( BR,( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * DDR ),FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * DS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 0.9790874524714829, "obj2": 0.009166951352780018}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( PN / ARS ) / Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( Min( DS ,( MUR / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "( ( ( ( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) ) + ACS ) - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Min( Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,RRSe ) ) ,( RRSe + DS ) ) - ( DS + MUC ) )", "obj1": 0.973384030418251, "obj2": 0.011487664181131832}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( Const * FirstVNF_RAM ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( MUM,( ( Max( Max( CS,RCSe ),( MUR / ( MLU - RRSe ) ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) ) ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - Min( CS ,Max( MUR,MUC ) ) ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9752851711026616, "obj2": 0.010833520634110996}, {"determining": "( ( ( ( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - MRS ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,Min( ( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) / Max( DS,RRSe ) ) ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Max( PN,( CRS - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( Min( Max( RMSe,RMSe ) ,( MUR - MLU ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RRSe + RMSe ) * Min( Max( ( RCSe - Max( RCSe,( RCSe * RMSe ) ) ),( RRSe - MUM ) ) ,MUR ) ) + MUM ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( ( ARS / ( ( AMS - Min( PN ,FirstVNF_Mem ) ) * MRS ) ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( ( MUM + ( Min( MUR ,MUM ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( ( RCSe * CS ),( MUC - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( ( ACS * CRS ) - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Max( RMSe,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR * AMS ),( FirstVNF_CPU_Server * Max( DDR,AMS ) ) ) - FirstVNF_CPU_Server ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - Min( Min( MLU ,RRSe ) ,Max( RRSe,MUC ) ) ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / ( ( MUM + ( MUC - DS ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / CRS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( ( ( ( MUM / RMSe ) - MUC ) * RRSe ),MUR ) ) ) / Max( Min( MUC ,CS ),( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) / ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Min( DS ,MLU ) + ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) / MUC ) ) - ( Min( MLU ,RCSe ) - Min( RCSe ,MUC ) ) ) / ( RCSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Min( ( ( ( AMS - FirstVNF_CPU_Server ) / Const ) * Const ) ,( CRS / FirstVNF_RAM ) ) * CRS ) / ( ARS + ( Const * PN ) ) ) )", "choosing": "( MUM / ( RCSe / Max( ( RCSe - MUM ),( Min( MUR ,( ( MUM * MUC ) - Min( ( RCSe - CS ) ,MLU ) ) ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ,( ( ( FirstVNF_CPU + BR ) / ( Max( AMS,ACS ) + FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( MUC ,Min( Max( ( RMSe + ( Min( ( Min( CS ,RCSe ) + ( RCSe + CS ) ) ,( ( DS - RRSe ) * ( MUC + RCSe ) ) ) * RCSe ) ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( Max( FirstVNF_CPU_Server,Const ),Const ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + ( ( DS / MLU ) * DS ) ),MUR ) ,( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * RRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( RMSe - RMSe ) + Max( ( MLU / RMSe ),( MUC / RMSe ) ) ) * MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * ( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) * MUR ),( RCSe / ( MUR / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Max( Max( RCSe,( ( ( ( MUC - CS ) - RMSe ) + MLU ) - MLU ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "Min( ( Min( RRSe ,CS ) - ( DS + MUC ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( Min( RCSe ,RCSe ),( RRSe + ( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Max( CRS,( Const + FirstVNF_RAM ) ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( MUR - MUR ) ,RMSe ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * RMSe ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ARS )", "choosing": "Max( Min( ( RMSe + ( DS - RRSe ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( ( ( RMSe / ( MLU - MUR ) ) * MUM ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - Max( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,FirstVNF_RAM_Server ),PN ) ) ) ) * ARS ) - Min( Min( FirstVNF_Mem_Server ,ACS ) ,ARS ) )", "choosing": "( ( Min( Max( Min( RCSe ,( Max( ( RRSe / RRSe ),MUR ) + Max( ( MUC - RCSe ),( CS / MUC ) ) ) ),RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / ( ( PN / ARS ) / ( MDR * PN ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( MLU / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,CRS ) / Max( MDR,BR ) ) / ( BR * Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "( RCSe / ( ( ( MUR + RCSe ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.22191480287819437}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( ( ( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) * MUR ),MLU ) ) )", "obj1": 0.17870722433460076, "obj2": 0.6065091413595947}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.714828897338403, "obj2": 0.11506510888571418}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42131321643733843}, {"determining": "( ( ( FirstVNF_CPU_Server / RRS ) * Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),FirstVNF_RAM ) ) * ARS )", "choosing": "Max( ( Max( Max( RCSe,( ( ( ( MUC - CS ) - RMSe ) + MLU ) - MLU ) ),RMSe ) / Max( MLU,Min( Max( RMSe,MLU ) ,MUC ) ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 0.17680608365019013, "obj2": 0.7112665826461622}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( ( FirstVNF_CPU_Server + ARS ) - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( Min( ( Min( ( DS - RCSe ) ,( Min( DS ,( RRSe / MUC ) ) - DS ) ) * ( ( RRSe / CS ) - ( ( Min( MUM ,RRSe ) + ( CS * MUR ) ) - MLU ) ) ) ,( MLU / Max( ( RMSe - MUR ),( Max( Max( RMSe,RMSe ),( MUM + MUC ) ) / MUR ) ) ) ) - DS ) / ( DS * CS ) )", "obj1": 0.053231939163498096, "obj2": 0.7812459601272959}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_CPU + PN ) ,MRS ) )", "choosing": "( ( RMSe * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7889733840304183, "obj2": 0.09169089644286965}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( ( Const - FirstVNF_CPU_Server ),( MRS * FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( MUR + RMSe ) ,( ( Max( CS,MUC ) * Min( MUC ,MUC ) ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4619771863117871, "obj2": 0.3701163375976681}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) + Max( ( ACS - MDR ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( Const / FirstVNF_RAM ) ),CRS ) ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * ( MUR * RRSe ) ),DS ) ) ,Max( ( ( MUR + ( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) * DS ) ) - RCSe ),RRSe ) )", "obj1": 0.2718631178707224, "obj2": 0.5236540753649374}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "( ( AMS * ( CRS / ( ARS / Min( ARS ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( ( CS / ( CS - Max( RRSe,MUR ) ) ) ,CS ),Min( MUC ,MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.047786331324796046}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ( FirstVNF_Mem * Max( FirstVNF_RAM_Server,MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( DS ,Max( ( ( MLU - Min( RRSe ,( Max( MLU,DS ) + RRSe ) ) ) / DS ),( ( MLU * DS ) / Max( MUC,CS ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.3310894629309786}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MLU ) - Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.39952558583092257}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8555133079847909, "obj2": 0.05550403703214738}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "( Max( BR,( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * DDR ),FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) - ( DDR / ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,Max( ( Min( ( MUR - MUR ) ,RMSe ) / MUR ),RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * DS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 0.5798479087452472, "obj2": 0.3204740740760943}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * Min( ( ( DDR / ( ( MRS + DDR ) * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( MUM,Max( RCSe,MUR ) ) - CS ) ) )", "obj1": 0.49809885931558934, "obj2": 0.3558131282803496}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + MUR ) ) ) - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4391634980988593, "obj2": 0.39274658579019933}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8536121673003803, "obj2": 0.05880684559251137}, {"determining": "( ( ( Min( ( FirstVNF_Mem + Const ) ,( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * RRSe ),MUR ) ) ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 0.2889733840304182, "obj2": 0.5020022336685513}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "( Min( ( BR * ARS ) ,( DDR + Const ) ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( MUR - DS ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.01955210473590462}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( ( MRS + ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_CPU ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Min( Max( RMSe,RMSe ) ,( DS + CS ) ) ) * Min( MUM ,MUR ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7319391634980988, "obj2": 0.11462878584218184}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.10469651776937863}, {"determining": "( Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / Min( ( MUM + RCSe ) ,( MLU / MUR ) ) )", "obj1": 0.311787072243346, "obj2": 0.5006770629677351}, {"determining": "( ( Max( FirstVNF_Mem,( ( Min( Max( PN,BR ) ,( PN + DDR ) ) + ( ( ( Const * BR ) + AMS ) - ( FirstVNF_RAM * ARS ) ) ) * Max( ( ( BR / AMS ) + ( MRS / FirstVNF_CPU_Server ) ),Min( ( Const * BR ) ,( Const - FirstVNF_CPU ) ) ) ) ) / Max( MDR,BR ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( ( ( MLU / MLU ) / Max( MUR,DS ) ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.3365019011406844, "obj2": 0.48405949750623223}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( MUM / MUR ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "( ( PN / ARS ) / ACS )", "choosing": "( ( ( Min( DS ,MLU ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.05880684559251137}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - RRS ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + ( MLU * RCSe ) ) ),( ( Max( MUC,MLU ) - DS ) * MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.051330798479087454, "obj2": 0.8063753910208669}, {"determining": "( ( ( FirstVNF_Mem + DDR ) - ( Min( DDR ,Const ) + ( RRS / RRS ) ) ) * Min( ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( Min( Min( DS ,RMSe ) ,Max( RCSe,RMSe ) ),MUC ) - CS ) ) )", "obj1": 0.5019011406844106, "obj2": 0.34507000378209907}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7756653992395437, "obj2": 0.09360522971889662}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( CRS * FirstVNF_RAM_Server ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7604562737642585, "obj2": 0.09932669455341392}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - Min( CS ,Max( MUR,MUC ) ) ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 0.9277566539923955, "obj2": 0.04394473670770262}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( PN / ARS ) / Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( Min( DS ,( MUR / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU / ( DDR * FirstVNF_RAM ) ) - ( Max( RRS,Const ) * FirstVNF_RAM_Server ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( Max( MUR,RMSe ) / ( MUM / RRSe ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( ( ( ( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - MRS ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,Min( ( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) / Max( DS,RRSe ) ) ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( Max( PN,( ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( RCSe ,RCSe ) - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( PN,( CRS - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( Min( Max( RMSe,RMSe ) ,( MUR - MLU ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( ( ARS / ( ( AMS - Min( PN ,FirstVNF_Mem ) ) * MRS ) ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( ( MUM + ( Min( MUR ,MUM ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( ( RCSe * CS ),( MUC - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( ( ACS * CRS ) - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Max( RMSe,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR * AMS ),( FirstVNF_CPU_Server * Max( DDR,AMS ) ) ) - FirstVNF_CPU_Server ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - Min( Min( MLU ,RRSe ) ,Max( RRSe,MUC ) ) ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / ( ( MUM + ( MUC - DS ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / CRS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( ( ( ( MUM / RMSe ) - MUC ) * RRSe ),MUR ) ) ) / Max( Min( MUC ,CS ),( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) / ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Min( DS ,MLU ) + ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) / MUC ) ) - ( Min( MLU ,RCSe ) - Min( RCSe ,MUC ) ) ) / ( RCSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Min( ( ( ( AMS - FirstVNF_CPU_Server ) / Const ) * Const ) ,( CRS / FirstVNF_RAM ) ) * CRS ) / ( ARS + ( Const * PN ) ) ) )", "choosing": "( MUM / ( RCSe / Max( ( RCSe - MUM ),( Min( MUR ,( ( MUM * MUC ) - Min( ( RCSe - CS ) ,MLU ) ) ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ,( ( ( FirstVNF_CPU + BR ) / ( Max( AMS,ACS ) + FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( MUC ,Min( Max( ( RMSe + ( Min( ( Min( CS ,RCSe ) + ( RCSe + CS ) ) ,( ( DS - RRSe ) * ( MUC + RCSe ) ) ) * RCSe ) ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( Max( FirstVNF_CPU_Server,Const ),Const ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + ( ( DS / MLU ) * DS ) ),MUR ) ,( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * RRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( RMSe - RMSe ) + Max( ( MLU / RMSe ),( MUC / RMSe ) ) ) * MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * ( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) * MUR ),( RCSe / ( MUR / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Max( Max( RCSe,( ( ( ( MUC - CS ) - RMSe ) + MLU ) - MLU ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / FirstVNF_CPU_Server )", "choosing": "Min( ( Min( RRSe ,CS ) - ( DS + MUC ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( Min( RCSe ,RCSe ),( RRSe + ( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Max( CRS,( Const + FirstVNF_RAM ) ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( ( MUR - MUR ) ,RMSe ) / MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * RMSe ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ARS )", "choosing": "Max( Min( ( RMSe + ( DS - RRSe ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - BR ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( ( ( RMSe / ( MLU - MUR ) ) * MUM ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - Max( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,FirstVNF_RAM_Server ),PN ) ) ) ) * ARS ) - Min( Min( FirstVNF_Mem_Server ,ACS ) ,ARS ) )", "choosing": "( ( Min( Max( Min( RCSe ,( Max( ( RRSe / RRSe ),MUR ) + Max( ( MUC - RCSe ),( CS / MUC ) ) ) ),RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) / MUR )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.22191480287819437}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( Min( FirstVNF_CPU ,( RRS + FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - ( RMSe + ( DS - RRSe ) ) ) + ( RCSe / ( Min( Min( MUM ,CS ) ,( CS * CS ) ) / Max( Min( RCSe ,MUR ),MUC ) ) ) )", "obj1": 0.6749049429657795, "obj2": 0.2527737655765725}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "( ( ( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) * MUR ),MLU ) ) )", "obj1": 0.17870722433460076, "obj2": 0.6065091413595947}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.714828897338403, "obj2": 0.11506510888571418}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( ACS * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.05031795430215405}, {"determining": "( ( ( FirstVNF_CPU_Server / RRS ) * Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),FirstVNF_RAM ) ) * ARS )", "choosing": "Max( ( Max( Max( RCSe,( ( ( ( MUC - CS ) - RMSe ) + MLU ) - MLU ) ),RMSe ) / Max( MLU,Min( Max( RMSe,MLU ) ,MUC ) ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 0.17680608365019013, "obj2": 0.7112665826461622}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( ( FirstVNF_CPU_Server + ARS ) - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( Min( ( Min( ( DS - RCSe ) ,( Min( DS ,( RRSe / MUC ) ) - DS ) ) * ( ( RRSe / CS ) - ( ( Min( MUM ,RRSe ) + ( CS * MUR ) ) - MLU ) ) ) ,( MLU / Max( ( RMSe - MUR ),( Max( Max( RMSe,RMSe ),( MUM + MUC ) ) / MUR ) ) ) ) - DS ) / ( DS * CS ) )", "obj1": 0.053231939163498096, "obj2": 0.7812459601272959}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( ( Const - FirstVNF_CPU_Server ),( MRS * FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( MUR + RMSe ) ,( ( Max( CS,MUC ) * Min( MUC ,MUC ) ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4619771863117871, "obj2": 0.3701163375976681}, {"determining": "( PN - Min( CRS ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( ( RCSe - RCSe ) * RMSe ) )", "obj1": 0.3269961977186312, "obj2": 0.48292792220234637}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ( FirstVNF_Mem * Max( FirstVNF_RAM_Server,MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( DS ,Max( ( ( MLU - Min( RRSe ,( Max( MLU,DS ) + RRSe ) ) ) / DS ),( ( MLU * DS ) / Max( MUC,CS ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.3310894629309786}, {"determining": "( PN - Min( CRS ,Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5091180433481342}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "( ( AMS * ( CRS / ( ARS / Min( ARS ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( ( CS / ( CS - Max( RRSe,MUR ) ) ) ,CS ),Min( MUC ,MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.047786331324796046}, {"determining": "Min( ( PN - MDR ) ,( ( MDR - CRS ) - ( ( Max( BR,Min( RRS ,FirstVNF_CPU_Server ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( CS + MUM ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( ( Max( Min( Min( MUR ,( MUM / RCSe ) ) ,MLU ),RMSe ) - MLU ) + Min( Max( CS,MLU ) ,DS ) ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06569371572414731}, {"determining": "Min( ( ( ( ARS / AMS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) ) ) ,( AMS - Const ) )", "choosing": "( ( Min( ( MUR / MUR ) ,( ( RMSe * MUC ) / MLU ) ) + Min( ( DS / CS ) ,Max( CS,RCSe ) ) ) - RMSe )", "obj1": 0.3821292775665399, "obj2": 0.43142794365628784}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server / BR ) ,( FirstVNF_RAM_Server * BR ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM + MUM ) - Max( CS,RCSe ) ) * DS ) / Max( MUC,CS ) )", "obj1": 0.5779467680608364, "obj2": 0.31362374339464677}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * Min( ( ( DDR / ( ( MRS + DDR ) * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( MUM,Max( RCSe,MUR ) ) - CS ) ) )", "obj1": 0.49809885931558934, "obj2": 0.3558131282803496}, {"determining": "( Min( ( PN - MDR ) ,( FirstVNF_RAM * ( RRS * ACS ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 0.7737642585551331, "obj2": 0.08584680156644203}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( AMS ,FirstVNF_CPU ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + MUR ) ) ) - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4391634980988593, "obj2": 0.39274658579019933}, {"determining": "( Min( ( BR * ARS ) ,( DDR + Const ) ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( MUR - DS ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.01955210473590462}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MLU ) - Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.39952558583092257}, {"determining": "( ( PN / ARS ) / ACS )", "choosing": "( ( ( Min( DS ,MLU ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42131321643733843}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( CRS * FirstVNF_RAM_Server ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7604562737642585, "obj2": 0.09932669455341392}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - RRS ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + ( MLU * RCSe ) ) ),( ( Max( MUC,MLU ) - DS ) * MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.051330798479087454, "obj2": 0.8063753910208669}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.10469651776937863}, {"determining": "( ( ( FirstVNF_Mem + DDR ) - ( Min( DDR ,Const ) + ( RRS / RRS ) ) ) * Min( ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( Max( Min( Min( DS ,RMSe ) ,Max( RCSe,RMSe ) ),MUC ) - CS ) ) )", "obj1": 0.5019011406844106, "obj2": 0.34507000378209907}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - Min( CS ,Max( MUR,MUC ) ) ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( ( MRS + ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_CPU ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Min( Max( RMSe,RMSe ) ,( DS + CS ) ) ) * Min( MUM ,MUR ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7319391634980988, "obj2": 0.11462878584218184}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7357414448669202, "obj2": 0.11243045303910773}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( ( Const - FirstVNF_CPU_Server ),( MRS * FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( MUR + RMSe ) ,( ( Max( CS,MUC ) * Min( MUC ,MUC ) ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.39444207938360504}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 0.9201520912547528, "obj2": 0.04662000885222292}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RCSe,MUR ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7357414448669202, "obj2": 0.11243045303910773}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "( ( PN / ARS ) / Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( Min( DS ,( MUR / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) ) + ( RMSe / MUC ) ) - CS ) / ( RCSe * RMSe ) )", "obj1": 0.34790874524714827, "obj2": 0.4746979969325181}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 0.9277566539923955, "obj2": 0.04394473670770262}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MRS * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( FirstVNF_Mem / AMS ) ) ),FirstVNF_RAM ) * ( Min( FirstVNF_Mem_Server ,PN ) + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + MUM ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( ( ( DS + MLU ) / RMSe ) - Max( MLU,MLU ) ) )", "obj1": 0.9277566539923955, "obj2": 0.04394473670770262}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU / ( DDR * FirstVNF_RAM ) ) - ( Max( RRS,Const ) * FirstVNF_RAM_Server ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( Max( MUR,RMSe ) / ( MUM / RRSe ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "( ( ( ( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - MRS ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,Min( ( Min( Max( RMSe,RMSe ) ,( Max( DS,MLU ) + CS ) ) / Max( DS,RRSe ) ) ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( Max( PN,( Min( ( ( MDR * DDR ) - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( ( ( MLU / ( ( MUR + ( MUR - MUR ) ) / RCSe ) ) / RRSe ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( PN,( ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( RCSe ,RCSe ) - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( ( ARS / ( ( AMS - Min( PN ,FirstVNF_Mem ) ) * MRS ) ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( ( MUM + ( Min( MUR ,MUM ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( ( RCSe * CS ),( MUC - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( ( ACS * CRS ) - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Max( RMSe,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR * AMS ),( FirstVNF_CPU_Server * Max( DDR,AMS ) ) ) - FirstVNF_CPU_Server ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - Min( Min( MLU ,RRSe ) ,Max( RRSe,MUC ) ) ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / ( ( MUM + ( MUC - DS ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / CRS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( ( ( ( MUM / RMSe ) - MUC ) * RRSe ),MUR ) ) ) / Max( Min( MUC ,CS ),( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) / ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Min( DS ,MLU ) + ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) / MUC ) ) - ( Min( MLU ,RCSe ) - Min( RCSe ,MUC ) ) ) / ( RCSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Min( ( ( ( AMS - FirstVNF_CPU_Server ) / Const ) * Const ) ,( CRS / FirstVNF_RAM ) ) * CRS ) / ( ARS + ( Const * PN ) ) ) )", "choosing": "( MUM / ( RCSe / Max( ( RCSe - MUM ),( Min( MUR ,( ( MUM * MUC ) - Min( ( RCSe - CS ) ,MLU ) ) ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ,( ( ( FirstVNF_CPU + BR ) / ( Max( AMS,ACS ) + FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( MUC ,Min( Max( ( RMSe + ( Min( ( Min( CS ,RCSe ) + ( RCSe + CS ) ) ,( ( DS - RRSe ) * ( MUC + RCSe ) ) ) * RCSe ) ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( Max( FirstVNF_CPU_Server,Const ),Const ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + ( ( DS / MLU ) * DS ) ),MUR ) ,( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * RRS ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( RMSe - RMSe ) + Max( ( MLU / RMSe ),( MUC / RMSe ) ) ) * MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) * ( CRS - FirstVNF_Mem ) ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) * MUR ),( RCSe / ( MUR / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( ( ( DDR + ( ( RRS / ( MDR * FirstVNF_CPU_Server ) ) * DDR ) ) + FirstVNF_RAM ) + FirstVNF_RAM ) ) * ( Max( ( ACS / ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( PN + ACS ) ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( ( Max( CS,RRSe ) + ( ( ( MUR + MUM ) + Max( Min( ( MLU / MLU ) ,DS ),RRSe ) ) + Max( RRSe,Max( Max( MUM,CS ),( ( MUR * MUM ) + Max( CS,RMSe ) ) ) ) ) ),( Min( RRSe ,DS ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Max( BR,( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( Min( RCSe ,MLU ) * MLU ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + ACS ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( RRSe + MUR ) )", "obj1": 0.034220532319391636, "obj2": 0.8181639706320266}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( MRS - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RRSe,RRSe ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11986720250105214}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server / BR ) ,( FirstVNF_RAM_Server * BR ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Min( MRS ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM + MUM ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) )", "obj1": 0.6045627376425855, "obj2": 0.29693241223416794}, {"determining": "( Max( Max( ( ( ( Max( CRS,MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / MUM ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Max( Min( ( Max( Const,( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) * CS ) )", "obj1": 0.17490494296577946, "obj2": 0.6155681265118033}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( ( Const - FirstVNF_CPU_Server ),( MRS * FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( MUR + RMSe ) ,( ( Max( CS,MUC ) * Min( MUC ,MUC ) ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4619771863117871, "obj2": 0.3701163375976681}, {"determining": "Min( Max( ( Min( ( ( ( ( FirstVNF_RAM_Server + PN ) + ACS ) * Min( ( RRS - Const ) ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - Max( Min( ( Max( MUM,Max( RMSe,( Min( MUR ,MLU ) * ( MLU - MUR ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 0.42775665399239543, "obj2": 0.39076599429563935}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,AMS ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,RCSe ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8479087452471483, "obj2": 0.04265277148279041}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( ( RCSe - RCSe ) * RMSe ) )", "obj1": 0.3269961977186312, "obj2": 0.48292792220234637}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_Mem * RRS ),PN ) ) * FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Min( CS ,Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ) ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - Max( ( MUC - ( ( DS * MUC ) * MUM ) ),MUR ) )", "obj1": 0.06844106463878327, "obj2": 0.778770152311606}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ( FirstVNF_Mem * Max( FirstVNF_RAM_Server,MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( DS ,Max( ( ( MLU - Min( RRSe ,( Max( MLU,DS ) + RRSe ) ) ) / DS ),( ( MLU * DS ) / Max( MUC,CS ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.3310894629309786}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( PN - Min( CRS ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server / BR ) ,( FirstVNF_RAM_Server * BR ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM + MUM ) - Max( CS,RCSe ) ) * DS ) / Max( MUC,CS ) )", "obj1": 0.5779467680608364, "obj2": 0.31362374339464677}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( ( ACS + FirstVNF_Mem_Server ) + CRS ) ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( PN - MDR ) ,Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) )", "choosing": "( ( MUC / MLU ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.09992549308808048}, {"determining": "( PN - ( ( ACS + ACS ) / ( ARS / Min( ( Min( PN ,PN ) - ( PN + Max( Const,( FirstVNF_RAM - ACS ) ) ) ) ,ARS ) ) ) )", "choosing": "Min( Min( RMSe ,Max( Min( Max( Max( RRSe,( ( MLU + RMSe ) * CS ) ),( MUR / MUM ) ) ,MLU ),Min( ( RRSe / CS ) ,RMSe ) ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( DS,MLU ) ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.33840304182509506, "obj2": 0.46439713411324623}, {"determining": "( Const + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,RMSe ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) * MUR ),( RCSe / ( MUR / MLU ) ) ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5675035497882676}, {"determining": "Min( ( PN - MDR ) ,Max( AMS,MRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( Max( Max( CS,RCSe ),( MUR / CS ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06110697756677212}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( ( FirstVNF_CPU_Server + ARS ) - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( Min( ( Min( ( DS - RCSe ) ,( Min( DS ,( RRSe / MUC ) ) - DS ) ) * ( ( RRSe / CS ) - ( ( Min( MUM ,RRSe ) + ( CS * MUR ) ) - MLU ) ) ) ,( MLU / Max( ( RMSe - MUR ),( Max( Max( RMSe,RMSe ),( MUM + MUC ) ) / MUR ) ) ) ) - DS ) / ( DS * CS ) )", "obj1": 0.053231939163498096, "obj2": 0.7812459601272959}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42131321643733843}, {"determining": "Max( ( ( MRS * FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( DS / ( Min( MUC ,RCSe ) + RRSe ) ) / Max( MUC,CS ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "( ( ( CRS - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) * MUR ),MLU ) ) )", "obj1": 0.17870722433460076, "obj2": 0.6065091413595947}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "Min( ( ( ( ARS / AMS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) ) ) ,( AMS - Const ) )", "choosing": "( ( Min( ( MUR / MUR ) ,( ( RMSe * MUC ) / MLU ) ) + Min( ( DS / CS ) ,Max( CS,RCSe ) ) ) - RMSe )", "obj1": 0.3821292775665399, "obj2": 0.43142794365628784}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - RRS ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + ( MLU * RCSe ) ) ),( ( Max( MUC,MLU ) - DS ) * MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.051330798479087454, "obj2": 0.8063753910208669}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.05455761175749202}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( ACS * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.05031795430215405}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( RCSe / MUR ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07641357671543816}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.714828897338403, "obj2": 0.11506510888571418}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - Min( CS ,Max( MUR,MUC ) ) ) ) ,Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Max( ( MRS + ( Max( FirstVNF_RAM_Server,ACS ) / FirstVNF_CPU ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Min( Max( RMSe,RMSe ) ,( DS + CS ) ) ) * Min( MUM ,MUR ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7319391634980988, "obj2": 0.11462878584218184}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( DDR * PN ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( CS / ( RRSe * ( RRSe + ( ( RCSe / RMSe ) / RMSe ) ) ) ) * RCSe ) )", "obj1": 0.8250950570342205, "obj2": 0.05144888081336378}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7357414448669202, "obj2": 0.11243045303910773}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7357414448669202, "obj2": 0.11243045303910773}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ARS / ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( RMSe / ( DS / Min( MUR ,MUR ) ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.11789416185941107}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "( ( FirstVNF_CPU_Server / Max( Min( FirstVNF_CPU_Server ,MRS ),( ( MDR * MRS ) * FirstVNF_RAM_Server ) ) ) * Max( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) - CRS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( RCSe,( Max( RCSe,MUR ) - MLU ) ),RMSe ) / Max( MLU,Min( DS ,MUC ) ) )", "obj1": 0.17110266159695817, "obj2": 0.7119660257234789}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU / ( DDR * FirstVNF_RAM ) ) - ( Max( RRS,Const ) * FirstVNF_RAM_Server ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( Max( MUR,RMSe ) / ( MUM / RRSe ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "( ( ( ( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( MUR / Max( ( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / Min( ( MUM + RCSe ) ,( MLU / MUR ) ) ),MLU ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001700866384483111}, {"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( ( ARS / ( ( AMS - Min( PN ,FirstVNF_Mem ) ) * MRS ) ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( ( MUM + ( Min( MUR ,MUM ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( ( RCSe * CS ),( MUC - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( ( ACS * CRS ) - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Max( RMSe,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR * AMS ),( FirstVNF_CPU_Server * Max( DDR,AMS ) ) ) - FirstVNF_CPU_Server ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - Min( Min( MLU ,RRSe ) ,Max( RRSe,MUC ) ) ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / ( ( MUM + ( MUC - DS ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU / CRS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( ( ( ( MUM / RMSe ) - MUC ) * RRSe ),MUR ) ) ) / Max( Min( MUC ,CS ),( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ARS ) / ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Min( DS ,MLU ) + ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) / MUC ) ) - ( Min( MLU ,RCSe ) - Min( RCSe ,MUC ) ) ) / ( RCSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( Min( ( ( ( AMS - FirstVNF_CPU_Server ) / Const ) * Const ) ,( CRS / FirstVNF_RAM ) ) * CRS ) / ( ARS + ( Const * PN ) ) ) )", "choosing": "( MUM / ( RCSe / Max( ( RCSe - MUM ),( Min( MUR ,( ( MUM * MUC ) - Min( ( RCSe - CS ) ,MLU ) ) ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ,( ( ( FirstVNF_CPU + BR ) / ( Max( AMS,ACS ) + FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( MUC ,Min( Max( ( RMSe + ( Min( ( Min( CS ,RCSe ) + ( RCSe + CS ) ) ,( ( DS - RRSe ) * ( MUC + RCSe ) ) ) * RCSe ) ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( Max( FirstVNF_CPU_Server,Const ),Const ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + ( ( DS / MLU ) * DS ) ),MUR ) ,( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( ( CRS - Max( ( DDR * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( AMS ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - ( ( RMSe / ( ( MLU * MLU ) / MUM ) ) * MUM ) ) - Max( ( RCSe + ( ( MUM / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( Min( CS ,RMSe ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( Min( RCSe ,MLU ) * MLU ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + ACS ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( RRSe + MUR ) )", "obj1": 0.034220532319391636, "obj2": 0.8181639706320266}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11986720250105214}, {"determining": "( Max( BR,( Max( DDR,( Max( ( ARS + FirstVNF_CPU_Server ),( Max( Const,DDR ) * CRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ) / ( RRS + MRS ) ) ) - ( DDR / BR ) )", "choosing": "( ( RRSe - ( ( MUR / ( ( Min( CS ,( CS - RRSe ) ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( ( RRSe * CS ) ,( RRSe + MUC ) ) ) ) ) / ( MUR - ( MUM + CS ) ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 0.6102661596958175, "obj2": 0.25037030626530127}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server / BR ) ,( FirstVNF_RAM_Server * BR ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,ARS ) ) ),( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem ) / DDR ) ) )", "choosing": "( ( ( ( MUM + Max( ( RRSe * ( CS * MUR ) ),( Min( ( MLU / MUR ) ,MUM ) * DS ) ) ) - Max( CS,Min( ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) )", "obj1": 0.596958174904943, "obj2": 0.293326918183679}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( ( Const - FirstVNF_CPU_Server ),( MRS * FirstVNF_CPU_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( MUR + RMSe ) ,( ( Max( CS,MUC ) * Min( MUC ,MUC ) ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.4619771863117871, "obj2": 0.3701163375976681}, {"determining": "Min( Max( ( Min( ( ( ( ( FirstVNF_RAM_Server + PN ) + ACS ) * Min( ( RRS - Const ) ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - Max( Min( ( Max( MUM,Max( RMSe,( Min( MUR ,MLU ) * ( MLU - MUR ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 0.42775665399239543, "obj2": 0.39076599429563935}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,AMS ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,RCSe ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8479087452471483, "obj2": 0.04265277148279041}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( ( RCSe - RCSe ) * RMSe ) )", "obj1": 0.3269961977186312, "obj2": 0.48292792220234637}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_Mem * RRS ),PN ) ) * FirstVNF_RAM ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Min( CS ,Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ) ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - Max( ( MUC - ( ( DS * MUC ) * MUM ) ),MUR ) )", "obj1": 0.06844106463878327, "obj2": 0.778770152311606}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5380228136882129, "obj2": 0.3232020101778079}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( PN - Min( CRS ,Min( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( ( CS + RRSe ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5605196385470766}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.10184045117809169}, {"determining": "Min( ( PN - MDR ) ,Max( AMS,MRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( Max( Max( CS,RCSe ),( MUR / CS ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06110697756677212}, {"determining": "( PN - ( ( ACS + ACS ) / ( ARS / Min( ( Min( PN ,PN ) - ( PN + Max( Const,( FirstVNF_RAM - ACS ) ) ) ) ,ARS ) ) ) )", "choosing": "Min( Min( RMSe ,Max( Min( Max( Max( RRSe,( ( MLU + RMSe ) * CS ) ),( MUR / MUM ) ) ,MLU ),Min( ( RRSe / CS ) ,RMSe ) ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( DS,MLU ) ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.33840304182509506, "obj2": 0.46439713411324623}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "Min( ( PN - MDR ) ,Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) )", "choosing": "( ( MUC / MLU ) - ( ( Min( CS ,DS ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.09992549308808048}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( ( FirstVNF_CPU_Server + ARS ) - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( Min( ( Min( ( DS - RCSe ) ,( Min( DS ,( RRSe / MUC ) ) - DS ) ) * ( ( RRSe / CS ) - ( ( Min( MUM ,RRSe ) + ( CS * MUR ) ) - MLU ) ) ) ,( MLU / Max( ( RMSe - MUR ),( Max( Max( RMSe,RMSe ),( MUM + MUC ) ) / MUR ) ) ) ) - DS ) / ( DS * CS ) )", "obj1": 0.053231939163498096, "obj2": 0.7812459601272959}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - RRS ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + ( MLU * RCSe ) ) ),( ( Max( MUC,MLU ) - DS ) * MLU ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.051330798479087454, "obj2": 0.8063753910208669}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( ( ACS + FirstVNF_Mem_Server ) + CRS ) ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.11147374835852474}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( Min( PN ,Const ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( MUR + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8212927756653993, "obj2": 0.05277694939005198}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( RCSe / MUR ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07641357671543816}, {"determining": "Min( ( CRS - BR ) ,( CRS - ( ( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,( RCSe * MUM ) ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08411337272584164}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - ( ( MUC - MUC ) - Max( DS,CS ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42131321643733843}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( ACS * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.05031795430215405}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( PN - Min( CRS ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "Min( Max( ( Min( ( Min( ( MRS - BR ) ,BR ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / Max( RCSe,RCSe ) ) ,( DS * MUC ) ) ) - MUM )", "obj1": 0.3916349809885932, "obj2": 0.42507980721713456}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "Min( ( ( ( ARS / AMS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) ) ) ,( AMS - Const ) )", "choosing": "( ( Min( ( MUR / MUR ) ,( ( RMSe * MUC ) / MLU ) ) + Min( ( DS / CS ) ,Max( CS,RCSe ) ) ) - RMSe )", "obj1": 0.3821292775665399, "obj2": 0.43142794365628784}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( Max( MDR,Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( Max( RMSe,MUM ) + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4312865031181436}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.050828015901876036}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ARS / ( Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,AMS ) + ( AMS + FirstVNF_CPU_Server ) ) ) + BR ) ) ) )", "choosing": "( ( ( MLU - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( RMSe / ( DS / Min( MUR ,MUR ) ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7053231939163498, "obj2": 0.1179698220554015}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "( ( ( Min( ( FirstVNF_Mem + Const ) ,( FirstVNF_Mem_Server - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( MUC + RRSe ) ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( DDR * PN ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( CS / ( RRSe * ( RRSe + ( ( RCSe / RMSe ) / RMSe ) ) ) ) * RCSe ) )", "obj1": 0.8250950570342205, "obj2": 0.05144888081336378}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8269961977186312, "obj2": 0.05088306442185057}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU / ( DDR * FirstVNF_RAM ) ) - ( Max( RRS,Const ) * FirstVNF_RAM_Server ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( Max( MUR,RMSe ) / ( MUM / RRSe ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( Const * PN ) ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( MUR / ( MUC / MLU ) ) - Min( MUR ,MUR ) ) ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Max( ( ARS + Max( FirstVNF_CPU,Min( ( FirstVNF_CPU + ( Const + Const ) ) ,PN ) ) ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - Min( CRS ,( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) ) )", "choosing": "Min( ( CS - RCSe ) ,Max( ( MUR - MUM ),( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * RRS ),( ( ARS / ( ( AMS - Min( PN ,FirstVNF_Mem ) ) * MRS ) ) / FirstVNF_CPU_Server ) ) - MRS )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( MUM / ( ( MUM + ( Min( MUR ,MUM ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( ( RCSe * CS ),( MUC - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Max( Min( Min( ( ACS * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ,ARS ),Max( MRS,FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( Min( RCSe ,MLU ) / ( RMSe - Min( RRSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,Max( FirstVNF_CPU,BR ) ) + ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( ( ACS * CRS ) - BR ) ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / ( ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) + MUR ) ),( MUC / RMSe ) ) * Max( Min( ( Max( MUM,Max( RMSe,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR * AMS ),( FirstVNF_CPU_Server * Max( DDR,AMS ) ) ) - FirstVNF_CPU_Server ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - Min( Min( MLU ,RRSe ) ,Max( RRSe,MUC ) ) ) / Min( RCSe ,Max( MUC,RMSe ) ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / ( ( MUM + ( MUC - DS ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( MRS,Const ) )", "choosing": "Min( ( RRSe + Max( MUC,MLU ) ) ,Min( Max( ( RMSe + CS ),MUR ) ,( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( DDR * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( AMS ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - ( ( RMSe / ( ( MLU * MLU ) / MUM ) ) * MUM ) ) - Max( ( RCSe + ( ( MUM / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( Min( CS ,RMSe ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + ACS ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( RRSe + MUR ) )", "obj1": 0.034220532319391636, "obj2": 0.8181639706320266}, {"determining": "( ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - ( MLU + RMSe ) ) ) * MUC ) )", "obj1": 0.12357414448669202, "obj2": 0.6534093546591547}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11986720250105214}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_CPU_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( ( RMSe * RCSe ) - RCSe ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.5950570342205324, "obj2": 0.25691703609953614}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( CRS * RRS ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( MUR,CS ) ) / ( DS * CS ) )", "obj1": 0.045627376425855515, "obj2": 0.7735709849384007}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.4372623574144487, "obj2": 0.368622181433353}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8460076045627376, "obj2": 0.042637787291146534}, {"determining": "Min( ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( ( Max( BR,ACS ) + BR ) ,( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) ) ,( CRS - ( ( Max( FirstVNF_RAM_Server,Min( ( MRS / FirstVNF_CPU_Server ) ,MRS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( ( MUC - MUC ) - Max( DS,CS ) ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MLU / ( CS + MUR ) ) / RCSe ) / ( MUR + RMSe ) ) ) ) - ( ( Max( MUC,MLU ) / ( RCSe * ( MUR * DS ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.22676315771806854}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( ( RCSe - RCSe ) * RMSe ) )", "obj1": 0.3269961977186312, "obj2": 0.48292792220234637}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5380228136882129, "obj2": 0.3232020101778079}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( PN - Min( CRS ,Min( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( ( CS + RRSe ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5605196385470766}, {"determining": "( PN - ( ( ACS + ACS ) / ( ARS / Min( ( Min( PN ,PN ) - ( PN + Max( Const,( FirstVNF_RAM - ACS ) ) ) ) ,ARS ) ) ) )", "choosing": "Min( Min( RMSe ,Max( Min( Max( Max( RRSe,( ( MLU + RMSe ) * CS ) ),( MUR / MUM ) ) ,MLU ),Min( ( RRSe / CS ) ,RMSe ) ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( DS,MLU ) ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.33840304182509506, "obj2": 0.46439713411324623}, {"determining": "( PN - Min( CRS ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "Min( ( PN - MDR ) ,Max( AMS,MRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( Max( Max( CS,RCSe ),( MUR / CS ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06110697756677212}, {"determining": "Min( Max( ( Min( ( ( ( ( FirstVNF_RAM_Server + PN ) + ACS ) * Min( BR ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - Max( Min( ( Max( MUM,Max( DS,( CS / ( MUC + DS ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 0.42775665399239543, "obj2": 0.39076599429563935}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MDR ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( MUM,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09891907065698143}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * CS ) ) ) ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.08707822269150985}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( Max( ( Min( ( ( ( ( FirstVNF_RAM_Server + PN ) + ACS ) * Min( ( RRS - Const ) ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - Max( Min( ( Max( MUM,Max( RMSe,( Min( MUR ,MLU ) * ( MLU - MUR ) ) ) ) - MUR ) ,RCSe ),MUC ) )", "obj1": 0.42775665399239543, "obj2": 0.39076599429563935}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.10184045117809169}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( Min( PN ,Const ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( MUR + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8212927756653993, "obj2": 0.05277694939005198}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11057205442295909}, {"determining": "Min( ( PN - ( MRS * FirstVNF_RAM_Server ) ) ,( ( DDR / Max( ( ARS / ( MRS - FirstVNF_RAM ) ),( ( RRS - FirstVNF_CPU ) + FirstVNF_CPU ) ) ) * ( ( Min( PN ,Const ) * Min( ( Min( ARS ,( AMS * FirstVNF_CPU ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( MUR - ( ( Min( MUM ,( MUC / Max( Min( RMSe ,Max( RRSe,RRSe ) ),( RMSe - ( MLU / RCSe ) ) ) ) ) * RCSe ) - Min( RCSe ,Max( Max( MUR,MLU ),MUM ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06527524943436389}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42131321643733843}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( ( ACS + FirstVNF_Mem_Server ) + CRS ) ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( ACS * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.05031795430215405}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - ( ( MUC - MUC ) - Max( DS,CS ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( RCSe / MUR ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07641357671543816}, {"determining": "Min( Max( ( Min( ( Min( ( MRS - BR ) ,BR ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / Max( RCSe,RCSe ) ) ,( DS * MUC ) ) ) - MUM )", "obj1": 0.3916349809885932, "obj2": 0.42507980721713456}, {"determining": "Min( ( ( ( ARS / AMS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) ) ) ,( AMS - Const ) )", "choosing": "( ( Min( ( MUR / MUR ) ,( ( RMSe * MUC ) / MLU ) ) + Min( ( DS / CS ) ,Max( CS,RCSe ) ) ) - RMSe )", "obj1": 0.3821292775665399, "obj2": 0.43142794365628784}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( Max( MUR,( ( MLU * DS ) - ( ( RRSe + MUR ) * RRSe ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25285171102661597, "obj2": 0.5042896545585661}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8158087335628165}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( ( BR - ARS ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( ( MDR / AMS ) ,PN ) - ( PN + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( Min( ( RCSe + ( ( RRSe - MUR ) + MUC ) ) ,RRSe ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( RMSe ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5029746787478695}, {"determining": "Min( Max( MDR,Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( Max( RMSe,MUM ) + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4312865031181436}, {"determining": "Min( ( CRS - BR ) ,( CRS - ( ( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,( RCSe * MUM ) ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08411337272584164}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ARS / ( Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,AMS ) + ( AMS + FirstVNF_CPU_Server ) ) ) + BR ) ) ) )", "choosing": "( ( ( MLU - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( RMSe / ( DS / Min( MUR ,MUR ) ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7053231939163498, "obj2": 0.1179698220554015}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07654936175273798}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.11147374835852474}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.42066543524161226}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( FirstVNF_RAM ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * RMSe ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( ( RRSe + Max( MUM,MUM ) ) / ( MUR + CS ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.050828015901876036}, {"determining": "( ( DDR * ARS ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) ) * Min( MUM ,RRSe ) ) - ( MUC + RRSe ) ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( DDR * PN ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( CS / ( RRSe * ( RRSe + ( ( RCSe / RMSe ) / RMSe ) ) ) ) * RCSe ) )", "obj1": 0.8250950570342205, "obj2": 0.05137960374856276}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8269961977186312, "obj2": 0.05088306442185057}, {"determining": "( ( ( ( ( ( ( FirstVNF_CPU / ( DDR * FirstVNF_RAM ) ) - ( Max( RRS,Const ) * FirstVNF_RAM_Server ) ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( Max( MUR,RMSe ) / ( MUM / RRSe ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + ( AMS + DDR ) ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( RCSe / ( ( MLU / MUC ) + DS ) ) )", "obj1": 0.9714828897338403, "obj2": 0.0033774017424854723}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.050828015901876036}, {"determining": "( Max( BR,( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( Min( RCSe ,MLU ) * MLU ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) - Max( ( ACS + Const ),( Const * ( Min( BR ,Min( PN ,( FirstVNF_Mem_Server / MRS ) ) ) - BR ) ) ) )", "choosing": "( ( CS / Max( RMSe,Max( MUR,MUR ) ) ) + Min( MLU ,( Max( RRSe,MUC ) / Max( MUC,Max( RCSe,Min( ( MLU / Min( DS ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU ),( FirstVNF_CPU_Server - MRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( ( MLU * Max( MUM,RMSe ) ) + Min( Min( MUR ,RRSe ) ,RCSe ) ) ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( BR / RRS ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( ( BR * MDR ) ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - MUC ) - Max( ( RCSe + ( ( Min( ( RMSe - MUC ) ,CS ) / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( ( ( MUR / MUC ) / MUM ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( Const + ( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( BR,ACS ) ) * RRS ) + Min( CRS ,CRS ) ) * MRS ) ) ) - Min( ( MRS - AMS ) ,FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( ( MUC * RCSe ) / ( ( MUR + MLU ) / ( ( MUR / MUR ) - Max( ( MLU / ( DS * RRSe ) ),Min( CS ,CS ) ) ) ) ) ,CS ),( ( ( ( RCSe + MUM ) * MUC ) + Min( RRSe ,MUM ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - AMS ) * PN ) / FirstVNF_CPU ) - ( ( RRS * ARS ) / BR ) )", "choosing": "( ( RRSe - ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) ) * Min( Max( ( ( MLU * CS ) * MUM ),MUC ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( MRS,Const ) )", "choosing": "Min( ( RRSe + Max( MUC,MLU ) ) ,Min( Max( ( RMSe + CS ),MUR ) ,( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + ACS ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( RRSe + MUR ) )", "obj1": 0.034220532319391636, "obj2": 0.8181639706320266}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11986720250105214}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "( ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - ( MLU + RMSe ) ) ) * MUC ) )", "obj1": 0.12357414448669202, "obj2": 0.6534093546591547}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( ( PN / MDR ) ,( AMS + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,MUM ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07984790874524715, "obj2": 0.7178594793086719}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.4372623574144487, "obj2": 0.368622181433353}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_CPU_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( ( RMSe * RCSe ) - RCSe ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.5950570342205324, "obj2": 0.25691703609953614}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.591254752851711, "obj2": 0.29805849535310397}, {"determining": "Min( ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( ( Max( BR,ACS ) + BR ) ,( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) ) ,( CRS - ( ( Max( FirstVNF_RAM_Server,Min( ( MRS / FirstVNF_CPU_Server ) ,MRS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( ( MUC - MUC ) - Max( DS,CS ) ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MLU / ( CS + MUR ) ) / RCSe ) / ( MUR + RMSe ) ) ) ) - ( ( Max( MUC,MLU ) / ( RCSe * ( MUR * DS ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.22676315771806854}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + ( Max( Min( MDR ,( FirstVNF_Mem_Server * ACS ) ),Max( MDR,( FirstVNF_RAM_Server * ACS ) ) ) / ARS ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( Max( ( MUC + ( DS * MLU ) ),( Max( MLU,RRSe ) / ( MUR * MLU ) ) ) / RMSe ) + ( ( DS * MUM ) - RMSe ) ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.055133079847908745, "obj2": 0.7584873711606878}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8460076045627376, "obj2": 0.042637787291146534}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "( PN - ( Max( Min( ( ( RRS + DDR ) * ( PN + ACS ) ) ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.9068441064638784, "obj2": 0.025682097806027083}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( Min( PN ,Const ) * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - RCSe )", "obj1": 0.4011406844106464, "obj2": 0.4036465222793764}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,CRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * ( Max( Const,( ACS / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,( CS + RMSe ) ),( MUR / CS ) ) + Min( ( ( DS * Max( RCSe,RCSe ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.4220532319391635, "obj2": 0.3829096569582356}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5380228136882129, "obj2": 0.3232020101778079}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( CRS * RRS ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( MUR,CS ) ) / ( DS * CS ) )", "obj1": 0.045627376425855515, "obj2": 0.7735709849384007}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( ( RCSe - RCSe ) * RMSe ) )", "obj1": 0.3269961977186312, "obj2": 0.48292792220234637}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,RRS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.2965779467680608, "obj2": 0.4847508536743693}, {"determining": "( PN - Min( CRS ,Min( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( ( CS + RRSe ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1958174904942966, "obj2": 0.5605196385470766}, {"determining": "( PN - ( ( ACS + ACS ) / ( ARS / Min( ( Min( PN ,PN ) - ( PN + Max( Const,( FirstVNF_RAM - ACS ) ) ) ) ,ARS ) ) ) )", "choosing": "Min( Min( RMSe ,Max( Min( Max( Max( RRSe,( ( MLU + RMSe ) * CS ) ),( MUR / MUM ) ) ,MLU ),Min( ( RRSe / CS ) ,RMSe ) ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( DS,MLU ) ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.33840304182509506, "obj2": 0.46439713411324623}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "Min( Max( MDR,Min( ( ( FirstVNF_Mem / ( ARS + ( CRS * ARS ) ) ) * FirstVNF_RAM ) ,( MDR * ( RRS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Min( RRSe ,( ( CS * MLU ) / ( MUR / ( CS / RCSe ) ) ) ),CS ),( MUR / CS ) ) + Min( Min( ( ( RCSe * ( RRSe + MUM ) ) * RRSe ) ,Min( ( MUC - MLU ) ,MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4196429393667371}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MDR ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( MUM,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09891907065698143}, {"determining": "Min( ( PN - MDR ) ,Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RRSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.08474014911888611}, {"determining": "( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM - MUM ) * ( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) / Max( MUC,RCSe ) ) ) / RCSe ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "Min( ( PN - MDR ) ,Max( AMS,MRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( Max( Max( CS,RCSe ),( MUR / CS ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06110697756677212}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.10184045117809169}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( Min( PN ,Const ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( MUR + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8212927756653993, "obj2": 0.05277694939005198}, {"determining": "Min( ( ( ( ARS / AMS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) ) ) ,( AMS - Const ) )", "choosing": "( ( Min( ( MUR / MUR ) ,( ( RMSe * MUC ) / MLU ) ) + Min( ( DS / CS ) ,Max( CS,RCSe ) ) ) - RMSe )", "obj1": 0.3821292775665399, "obj2": 0.43142794365628784}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11057205442295909}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( ( ACS + FirstVNF_Mem_Server ) + CRS ) ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - ( ( MUC - MUC ) - Max( DS,CS ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( RCSe / MUR ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07641357671543816}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( BR / PN ),( DDR - MDR ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( DS / ( ( MLU + MUC ) - Max( Min( MLU ,( RCSe + CS ) ),( ( Max( RMSe,MUM ) + MLU ) - MUR ) ) ) ) - Max( ( ( RMSe / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.003377401742485472}, {"determining": "( PN - Min( CRS ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( PN - ( MRS * FirstVNF_RAM_Server ) ) ,( ( DDR / Max( ( ARS / ( MRS - FirstVNF_RAM ) ),( ( RRS - FirstVNF_CPU ) + FirstVNF_CPU ) ) ) * ( ( Min( PN ,Const ) * Min( ( Min( ARS ,( AMS * FirstVNF_CPU ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( MUR - ( ( Min( MUM ,( MUC / Max( Min( RMSe ,Max( RRSe,RRSe ) ),( RMSe - ( MLU / RCSe ) ) ) ) ) * RCSe ) - Min( RCSe ,Max( Max( MUR,MLU ),MUM ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06527524943436389}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( Max( MUR,( ( MLU * DS ) - ( ( RRSe + MUR ) * RRSe ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25285171102661597, "obj2": 0.5042896545585661}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8158087335628165}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5029746787478695}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( ( DS - ( MUC * DS ) ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( ACS * RRS ) * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( Max( RMSe,( MUC - MUC ) ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.844106463878327, "obj2": 0.04989886012468139}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08041420562410775}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7870722433460076, "obj2": 0.06695098677305253}, {"determining": "Min( ( ( FirstVNF_RAM + MRS ) - BR ) ,Min( ( ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / BR ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * Min( RRSe ,( Min( MLU ,( MUM - MUR ) ) - RCSe ) ) ) - Max( RCSe,RRSe ) )", "obj1": 0.7053231939163498, "obj2": 0.1127045622356078}, {"determining": "Min( ( RRS - Max( ARS,Max( MDR,AMS ) ) ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * Min( ( Min( PN ,PN ) - ( PN + FirstVNF_CPU ) ) ,ARS ) ) * ACS ) ) )", "choosing": "( MUR - Max( ( ( MUC + Max( RCSe,( MUM * RCSe ) ) ) + ( MUC / MUM ) ),( RRSe * ( RCSe * Max( MUC,MUM ) ) ) ) )", "obj1": 0.9771863117870723, "obj2": 0.003105304863080336}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07654936175273798}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * Min( CRS ,Const ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,CRS ) ) + ( FirstVNF_Mem + BR ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( Max( Min( ( CS * RRSe ) ,( Max( MUR,CS ) * MUR ) ),Max( RCSe,( Min( Max( ( MUC / Max( MUM,DS ) ),Max( DS,MUM ) ) ,RCSe ) / ( ( CS - MUR ) * MUM ) ) ) ) - Min( Min( RRSe ,RRSe ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.37832699619771865, "obj2": 0.44342349543072346}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Min( RRS ,FirstVNF_CPU_Server ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( DS + MUM ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8365019011406845, "obj2": 0.05078988668405866}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( ACS * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.05031795430215405}, {"determining": "( ( ( PN - DDR ) * ARS ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) ) * Min( MUM ,RRSe ) ) - Max( MUR,( RRSe - RCSe ) ) ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( ( BR - ARS ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( ( MDR / AMS ) ,PN ) - ( PN + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( Min( ( RCSe + ( ( RRSe - MUR ) + MUC ) ) ,RRSe ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( RMSe ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8269961977186312, "obj2": 0.05088306442185057}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.11147374835852474}, {"determining": "( ( ( ( ( CRS / Max( RRS,FirstVNF_CPU ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Min( ( RMSe + ( RMSe / MLU ) ) ,( MLU * RRSe ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.050828015901876036}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( DDR * PN ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( CS / ( RRSe * ( RRSe + ( ( RCSe / RMSe ) / RMSe ) ) ) ) * RCSe ) )", "obj1": 0.8250950570342205, "obj2": 0.05137960374856276}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( FirstVNF_RAM ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * RMSe ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( ( RRSe + Max( MUM,MUM ) ) / ( MUR + CS ) ) ) )", "obj1": 0.8307984790874525, "obj2": 0.050828015901876036}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( CRS,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( RCSe,RCSe ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8250950570342205, "obj2": 0.05137960374856276}, {"determining": "( ( ( ( CRS - Max( ( DDR * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( AMS ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - ( ( RMSe / ( ( MLU * MLU ) / MUM ) ) * MUM ) ) - Max( ( RCSe + ( ( MUM / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( Min( CS ,RMSe ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( Min( RCSe ,MLU ) * MLU ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_CPU + ( ARS + FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_CPU + MDR ) ,FirstVNF_CPU ) ) ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,Min( ( MUR / ( ( Max( RRSe,MLU ) / ( RMSe * MLU ) ) * MUC ) ) ,Max( ( RRSe + CS ),( CS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) * ( ACS / AMS ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) * Min( RMSe ,RMSe ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - ( ( ARS * ( RRS / ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_Mem ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( ( Min( RMSe ,( CS * DS ) ) / CS ) - Max( ( MUM - Min( MUC ,MUR ) ),Max( RMSe,( MUC - MUC ) ) ) ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( ( ACS / ( FirstVNF_Mem_Server - BR ) ),Max( MRS,RRS ) ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( ( Max( MUM,Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ) - MUR ) ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + Const ) ,( ( CRS / Min( ( PN + BR ) ,FirstVNF_Mem_Server ) ) - MRS ) ) * ( FirstVNF_RAM / MDR ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,( MUR - ( MUR * MLU ) ) ) / ( RCSe / Min( MUC ,Max( CS,Max( MLU,( MUC - MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( FirstVNF_RAM / ( MDR - ACS ) ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU / Min( RMSe ,( ( RRSe + CS ) * MUR ) ) ) ,( RMSe - Max( DS,( Max( MUR,RMSe ) + ( CS / Max( Max( DS,DS ),CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + RRS ) * BR ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( ( RCSe - DS ) ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,Max( ACS,Max( PN,MRS ) ) ) ) / ( Max( Const,Const ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe - MLU ),( ( Min( RMSe ,( MUM - ( Min( RMSe ,MUR ) - MUR ) ) ) * Max( RRSe,Max( ( CS * ( MUC / RRSe ) ),MUM ) ) ) - RMSe ) ) + Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ,Min( CRS ,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( DS - ( RRSe / Max( MUR,MUR ) ) ) ),RCSe ) ,Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( MRS + MDR ) )", "choosing": "( Min( ( ( MLU / ( Max( RMSe,( ( MUM * MLU ) * MLU ) ) + MLU ) ) - Min( RMSe ,RCSe ) ) ,( ( MUM + RCSe ) / RRSe ) ) / ( RCSe / ( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( RMSe / ( DS - ( MLU - RRSe ) ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( ( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) - ( MUR * ( MUC / MUC ) ) ) - CS ) / RCSe ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + FirstVNF_CPU_Server ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) )", "obj1": 0.03231939163498099, "obj2": 0.8172327643730246}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11986720250105214}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_CPU_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( ( RMSe * RCSe ) - RCSe ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.5950570342205324, "obj2": 0.25691703609953614}, {"determining": "( ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - ( MLU + RMSe ) ) ) * MUC ) )", "obj1": 0.12357414448669202, "obj2": 0.6534093546591547}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.4372623574144487, "obj2": 0.368622181433353}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5551330798479087, "obj2": 0.28747335837756155}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8460076045627376, "obj2": 0.042637787291146534}, {"determining": "( PN - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5894903387713246}, {"determining": "( PN - ( Max( Min( ( ( RRS + DDR ) * ( PN + ACS ) ) ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.9068441064638784, "obj2": 0.025682097806027083}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( Min( PN ,Const ) * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - RCSe )", "obj1": 0.4011406844106464, "obj2": 0.4036465222793764}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,CRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * ( Max( Const,( ACS / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,( CS + RMSe ) ),( MUR / CS ) ) + Min( ( ( DS * Max( RCSe,RCSe ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.4220532319391635, "obj2": 0.3829096569582356}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ),CS ) ) / ( DS * CS ) )", "obj1": 0.06463878326996197, "obj2": 0.7453856309322395}, {"determining": "Min( Max( PN,( PN / MDR ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( Max( MLU,Min( ( DS * CS ) ,RRSe ) ) + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.31749049429657794, "obj2": 0.47960911725053545}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS * ( DS + MLU ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.034220532319391636, "obj2": 0.792614210389784}, {"determining": "( PN - ( ( ACS + ACS ) / ( ARS / Min( ( Min( PN ,PN ) - ( PN + Max( Const,( FirstVNF_RAM - ACS ) ) ) ) ,ARS ) ) ) )", "choosing": "Min( Min( RMSe ,Max( Min( Max( Max( RRSe,( ( MLU + RMSe ) * CS ) ),( MUR / MUM ) ) ,MLU ),Min( ( RRSe / CS ) ,RMSe ) ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,Max( DS,MLU ) ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.33840304182509506, "obj2": 0.46439713411324623}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( CRS * RRS ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( MUR,CS ) ) / ( DS * CS ) )", "obj1": 0.045627376425855515, "obj2": 0.7735709849384007}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( Min( Min( Max( DS,CS ) ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5602283578102216}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,RRS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.2965779467680608, "obj2": 0.4847508536743693}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5380228136882129, "obj2": 0.3232020101778079}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "Min( Max( ( FirstVNF_RAM * ( Min( ( Min( FirstVNF_RAM ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ACS ) ),Min( ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Min( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) ,MUR ),( MUR / CS ) ) + Min( ( ( DS * ( Max( RMSe,MUM ) + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3688212927756654, "obj2": 0.4394092928514344}, {"determining": "Min( ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( ( Max( BR,ACS ) + BR ) ,( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) ) ,( CRS - ( ( Max( FirstVNF_RAM_Server,Min( ( MRS / FirstVNF_CPU_Server ) ,MRS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( ( MUC - MUC ) - Max( DS,CS ) ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MLU / ( CS + MUR ) ) / RCSe ) / ( MUR + RMSe ) ) ) ) - ( ( Max( MUC,MLU ) / ( RCSe * ( MUR * DS ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.22676315771806854}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + ( Max( Min( MDR ,( FirstVNF_Mem_Server * ACS ) ),Max( MDR,( FirstVNF_RAM_Server * ACS ) ) ) / ARS ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( Max( ( MUC + ( DS * MLU ) ),( Max( MLU,RRSe ) / ( MUR * MLU ) ) ) / RMSe ) + ( ( DS * MUM ) - RMSe ) ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.055133079847908745, "obj2": 0.7584873711606878}, {"determining": "Min( Max( MDR,Min( ( ( FirstVNF_Mem / ( ARS + ( CRS * ARS ) ) ) * FirstVNF_RAM ) ,( MDR * ( RRS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Min( RRSe ,( ( CS * MLU ) / ( MUR / ( CS / RCSe ) ) ) ),CS ),( MUR / CS ) ) + Min( Min( ( ( RCSe * ( RRSe + MUM ) ) * RRSe ) ,Min( ( MUC - MLU ) ,MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4196429393667371}, {"determining": "Min( ( ( CRS + MDR ) * ( ACS / AMS ) ) ,( FirstVNF_RAM * ( ( ( MRS / ( FirstVNF_RAM * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) ) ) * ( MUM / MUC ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7026976922462079}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.6026615969581749, "obj2": 0.2267651198038786}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) + ( PN + FirstVNF_RAM ) )", "choosing": "( ( DS / RCSe ) * ( Max( MUC,( ( MUM - Max( RRSe,MLU ) ) * DS ) ) + Min( CS ,Min( ( RCSe * ( MUR + ( RCSe + MUR ) ) ) ,MUC ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "( ( Min( MDR ,( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - CRS ) ) - FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) + Max( ( ( RRS + DDR ) * ( PN + ACS ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( ACS * Max( ( ( FirstVNF_CPU_Server / Max( RRS,Const ) ) - FirstVNF_Mem_Server ),CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + Min( MLU ,MUM ) ) - ( ( MUC - ( MUM * MUC ) ) - ( ( MUC * Max( MLU,RRSe ) ) * RRSe ) ) ) * ( RCSe * RRSe ) ) ,Max( ( ( MUR + ( ( RRSe + ( RMSe * DS ) ) - DS ) ) - RCSe ),RRSe ) )", "obj1": 0.21482889733840305, "obj2": 0.55879414633193}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),( BR / MDR ) ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5116404661270628}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( ( PN / MDR ) ,( AMS + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,MUM ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07984790874524715, "obj2": 0.7178594793086719}, {"determining": "Min( ( ( ( ARS / AMS ) + Max( FirstVNF_Mem_Server,MRS ) ) / Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,MRS ),( CRS * RRS ) ) ) ,( AMS - Const ) )", "choosing": "( ( Min( ( MUR / MUR ) ,( ( RMSe * MUC ) / MLU ) ) + Min( ( DS / CS ) ,Max( CS,RCSe ) ) ) - RMSe )", "obj1": 0.3821292775665399, "obj2": 0.43142794365628784}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.31026861746123535}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( CRS / Max( ARS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06058568192845243}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ARS ,( AMS * FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08791579377699937}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MDR ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( MUM,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09891907065698143}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ( FirstVNF_RAM_Server * MRS ) ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( ( ( RMSe + MUC ) / ( DS + Min( RCSe ,MUC ) ) ),( CS * Max( ( Min( RCSe ,( RRSe + RRSe ) ) * CS ),RCSe ) ) ) - ( ( RRSe + Max( MUM,MUM ) ) / ( MUR + CS ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.05463042039855565}, {"determining": "( PN - Min( CRS ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,Min( ACS ,( DDR * RRS ) ) ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + RRSe ),MLU ) ) ,( ( RCSe + MUC ) + RRSe ) )", "obj1": 0.22433460076045628, "obj2": 0.5390255946080932}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( RCSe / MUR ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07641357671543816}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( BR / PN ),( DDR - MDR ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( DS / ( ( MLU + MUC ) - Max( Min( MLU ,( RCSe + CS ) ),( ( Max( RMSe,MUM ) + MLU ) - MUR ) ) ) ) - Max( ( ( RMSe / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.003377401742485472}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( PN - ( MRS * FirstVNF_RAM_Server ) ) ,( ( DDR / Max( ( ARS / ( MRS - FirstVNF_RAM ) ),( ( RRS - FirstVNF_CPU ) + FirstVNF_CPU ) ) ) * ( ( Min( PN ,Const ) * Min( ( Min( ARS ,( AMS * FirstVNF_CPU ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( MUR - ( ( Min( MUM ,( MUC / Max( Min( RMSe ,Max( RRSe,RRSe ) ),( RMSe - ( MLU / RCSe ) ) ) ) ) * RCSe ) - Min( RCSe ,Max( Max( MUR,MLU ),MUM ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06527524943436389}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Min( ( RRS - RRS ) ,BR ) * RRS ) * ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( DS ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( DS / ( DS - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.10780753108478239}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( Max( MUR,( ( MLU * DS ) - ( ( RRSe + MUR ) * RRSe ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25285171102661597, "obj2": 0.5042896545585661}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( ( Const - MDR ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,RRS ) ) )", "choosing": "Min( ( MUM + MUM ) ,( Max( MUR,RMSe ) / Max( DS,Max( ( RCSe + MUM ),( RCSe + Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( FirstVNF_CPU_Server * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * CS ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7490494296577946, "obj2": 0.0849267725865026}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5029746787478695}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( ( BR - ARS ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( ( MDR / AMS ) ,PN ) - ( PN + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( Min( ( RCSe + ( ( RRSe - MUR ) + MUC ) ) ,RRSe ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( RMSe ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( ( ACS + FirstVNF_Mem_Server ) + CRS ) ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11057205442295909}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.10264568064476334}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08041420562410775}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7870722433460076, "obj2": 0.06695098677305253}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( CS,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.10184045117809169}, {"determining": "Min( ( ( FirstVNF_RAM + MRS ) - BR ) ,Min( ( ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / BR ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * Min( RRSe ,( Min( MLU ,( MUM - MUR ) ) - RCSe ) ) ) - Max( RCSe,RRSe ) )", "obj1": 0.7053231939163498, "obj2": 0.1127045622356078}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( DDR,DDR ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,Min( MLU ,MLU ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8346007604562737, "obj2": 0.047973033085521206}, {"determining": "Min( ( RRS - Max( ARS,Max( MDR,AMS ) ) ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * Min( ( Min( PN ,PN ) - ( PN + FirstVNF_CPU ) ) ,ARS ) ) * ACS ) ) )", "choosing": "( MUR - Max( ( ( MUC + Max( RCSe,( MUM * RCSe ) ) ) + ( MUC / MUM ) ),( RRSe * ( RCSe * Max( MUC,MUM ) ) ) ) )", "obj1": 0.9771863117870723, "obj2": 0.003105304863080336}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8384030418250951, "obj2": 0.04580634888822886}, {"determining": "Min( ( PN - MDR ) ,Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RRSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.08474014911888611}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07654936175273798}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,MRS ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,( CS + RRSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8212927756653993, "obj2": 0.05254969882092198}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( ( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( RMSe,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.844106463878327, "obj2": 0.04501985321824584}, {"determining": "Min( ( PN - MDR ) ,( ( BR + ( FirstVNF_RAM / RRS ) ) - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( Max( MLU,MUM ) - ( CS * RMSe ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ),Min( DS ,RCSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8288973384030418, "obj2": 0.04924301013900105}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * ( RRS + ARS ) ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + Max( ( MUM + DS ),CS ) ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7832699619771863, "obj2": 0.07067245489011069}, {"determining": "( ( ( PN - DDR ) * ARS ) + ( ( PN - DDR ) / MRS ) )", "choosing": "( ( DS / RCSe ) * ( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) ) * Min( MUM ,RRSe ) ) - Max( MUR,( RRSe - RCSe ) ) ) - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.019490410354304988}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.11147374835852474}, {"determining": "( ( ( ( ( CRS / Max( RRS,FirstVNF_CPU ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) ) / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Min( ( RMSe + ( RMSe / MLU ) ) ,( MLU * RRSe ) )", "obj1": 0.967680608365019, "obj2": 0.014809504594785873}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - ( ( MUC - MUC ) - Max( DS,CS ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( PN * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( MUR + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( MUM * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.052246721974034946}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8269961977186312, "obj2": 0.05088306442185057}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( CRS,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( RCSe,RCSe ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8250950570342205, "obj2": 0.05137960374856276}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( MUM - DS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( CS + RRSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.8269961977186312, "obj2": 0.05088306442185057}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( DDR * PN ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( CS / ( RRSe * ( RRSe + ( ( RCSe / RMSe ) / RMSe ) ) ) ) * RCSe ) )", "obj1": 0.8250950570342205, "obj2": 0.05137960374856276}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( FirstVNF_Mem_Server + RRS ) ,Min( AMS ,RRS ) ) ) / Min( ( BR * ARS ) ,( DDR + Const ) ) ) ,Max( MRS,Const ) )", "choosing": "Min( ( RRSe + Max( MUC,MLU ) ) ,Min( Max( ( RMSe + CS ),MUR ) ,( ( CS + Max( CS,Min( Min( MUR ,( RMSe + CS ) ) ,Min( Max( RMSe,DS ) ,( RRSe / MUC ) ) ) ) ) + ( MLU / ( Min( RRSe ,Min( ( RRSe * RMSe ) ,RMSe ) ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - Max( ( DDR * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) - Max( ACS,( Min( AMS ,ARS ) / ARS ) ) ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC - ( ( RMSe / ( ( MLU * MLU ) / MUM ) ) * MUM ) ) - Max( ( RCSe + ( ( MUM / ( ( MUR * DS ) - ( RCSe - CS ) ) ) - Min( Min( CS ,RMSe ) ,( RMSe + CS ) ) ) ),CS ) ) / Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( Min( BR ,( FirstVNF_RAM_Server - ACS ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( Min( RCSe ,MLU ) * MLU ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / ( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) * ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( Max( MUM,Min( MUR ,MUC ) ) - MUR ) / ( Max( Min( MUC ,CS ),( MUM - RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,Min( FirstVNF_Mem ,Max( FirstVNF_Mem,AMS ) ) ) / Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Min( CRS ,Const ) ) )", "choosing": "( RCSe / ( ( ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MUM ) ) / ( CS + MUM ) ) ) / MUC ) / ( MUR * MUC ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + ( RRSe / MUC ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Min( CRS ,Const ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + Max( CS,RCSe ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( Min( Max( RCSe,MUC ) ,( ( DS * ( DS + MLU ) ) / ( CS + MUM ) ) ) * RMSe ) ) ) ,( ( RMSe / ( DS - ( MLU - RRSe ) ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + FirstVNF_CPU_Server ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) )", "obj1": 0.03231939163498099, "obj2": 0.8172327643730246}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( RRS,Const ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ACS ,RRS ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( Min( MLU ,MUM ) ,( MUC + Max( MUM,CS ) ) ) ) - RMSe )", "obj1": 0.6901140684410646, "obj2": 0.19573612911877764}, {"determining": "Min( ( Const - MDR ) ,( PN - Min( CRS ,Const ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,MUC ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.5722433460076045, "obj2": 0.2539218232947658}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "Min( ( PN - MDR ) ,DDR )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11980940092954216}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.4372623574144487, "obj2": 0.368622181433353}, {"determining": "( ( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( ( ( MLU - DS ) / Min( RCSe ,Min( CS ,MLU ) ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.13307984790874525, "obj2": 0.6444470353219159}, {"determining": "( PN - Min( FirstVNF_RAM ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,Max( ( CS + RRSe ),MLU ) ) ) / ( Max( MLU,MUR ) / Max( Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ),MLU ) ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5889370511561534}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( Min( PN ,Const ) * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - RCSe )", "obj1": 0.4011406844106464, "obj2": 0.4036465222793764}, {"determining": "Min( ( PN + RRS ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( FirstVNF_CPU ,Min( CRS ,Const ) ) + Min( Max( ACS,PN ) ,RRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Max( ( MUC - MUR ),MLU ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( Min( ( RMSe + DS ) ,RRSe ) + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8498098859315589, "obj2": 0.04134467131783107}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5551330798479087, "obj2": 0.28747335837756155}, {"determining": "( PN - ( Max( Min( ( ( RRS + DDR ) * ( PN + ACS ) ) ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.9068441064638784, "obj2": 0.025682097806027083}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,CRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * ( Max( Const,( ACS / FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( CS,( CS + RMSe ) ),( MUR / CS ) ) + Min( ( ( DS * Max( RCSe,RCSe ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.4220532319391635, "obj2": 0.3829096569582356}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( Max( PN,( PN / MDR ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( Max( MLU,Min( ( DS * CS ) ,RRSe ) ) + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.31749049429657794, "obj2": 0.47960911725053545}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.6026615969581749, "obj2": 0.2267651198038786}, {"determining": "( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ),CS ) ) / ( DS * CS ) )", "obj1": 0.06463878326996197, "obj2": 0.7453856309322395}, {"determining": "Min( Max( Min( CRS ,FirstVNF_CPU ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,CRS )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / ( ( RMSe - RCSe ) * CS ) ) ) + Min( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.33079847908745247, "obj2": 0.45410090803869446}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,RRS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.2965779467680608, "obj2": 0.4847508536743693}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ARS,FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RRSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5152091254752852, "obj2": 0.312134012048651}, {"determining": "Min( Max( MDR,Min( ( ( FirstVNF_Mem / ( ARS + ( CRS * ARS ) ) ) * FirstVNF_RAM ) ,( MDR * ( RRS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Min( RRSe ,( ( CS * MLU ) / ( MUR / ( CS / RCSe ) ) ) ),CS ),( MUR / CS ) ) + Min( Min( ( ( RCSe * ( RRSe + MUM ) ) * RRSe ) ,Min( ( MUC - MLU ) ,MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4196429393667371}, {"determining": "Min( ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( ( Max( BR,ACS ) + BR ) ,( FirstVNF_Mem_Server / ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) ) ,( CRS - ( ( Max( FirstVNF_RAM_Server,Min( ( MRS / FirstVNF_CPU_Server ) ,MRS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( ( MUC - MUC ) - Max( DS,CS ) ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MLU / ( CS + MUR ) ) / RCSe ) / ( MUR + RMSe ) ) ) ) - ( ( Max( MUC,MLU ) / ( RCSe * ( MUR * DS ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.22676315771806854}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( ( CS + RRSe ) + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.02098852175554014}, {"determining": "Min( ( ( CRS + MDR ) * ( ACS / AMS ) ) ,( FirstVNF_RAM * ( ( ( MRS / ( FirstVNF_RAM * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) ) ) * ( MUM / MUC ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7026976922462079}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * PN ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + Max( RRSe,( RMSe * DS ) ) ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1920152091254753, "obj2": 0.5575183814218057}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( CRS * RRS ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( MUR,CS ) ) / ( DS * CS ) )", "obj1": 0.045627376425855515, "obj2": 0.7735709849384007}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.31026861746123535}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,PN ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( Min( Min( Max( DS,CS ) ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Max( CS,MUC ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5490427042889041}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS * ( DS + MLU ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.034220532319391636, "obj2": 0.792614210389784}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),( BR / MDR ) ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5116404661270628}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( ( PN / MDR ) ,( AMS + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,MUM ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07984790874524715, "obj2": 0.7178594793086719}, {"determining": "Min( Min( PN ,MRS ) ,( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + Min( ( ( ( DS - Max( MLU,Min( RCSe ,DS ) ) ) * MLU ) + RMSe ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.376425855513308, "obj2": 0.43084610287204755}, {"determining": "( ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( RMSe / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - ( MLU + RMSe ) ) ) * MUC ) )", "obj1": 0.12357414448669202, "obj2": 0.6534093546591547}, {"determining": "Min( Max( ( FirstVNF_RAM * ( Min( ( Min( FirstVNF_RAM ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ACS ) ),Min( ( ( Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Min( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) ,MUR ),( MUR / CS ) ) + Min( ( ( DS * ( Max( RMSe,MUM ) + MLU ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3688212927756654, "obj2": 0.4394092928514344}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + ( Max( Min( MDR ,( FirstVNF_Mem_Server * ACS ) ),Max( MDR,( FirstVNF_RAM_Server * ACS ) ) ) / ARS ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( Max( ( MUC + ( DS * MLU ) ),( Max( MLU,RRSe ) / ( MUR * MLU ) ) ) / RMSe ) + ( ( DS * MUM ) - RMSe ) ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.03802281368821293, "obj2": 0.7875204773755263}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ARS ,( AMS * FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08791579377699937}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Min( Max( PN,( PN / MDR ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( Max( MLU,Min( ( DS * CS ) ,RRSe ) ) + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3574144486692015, "obj2": 0.447000922013173}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MDR ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( MUM,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09891907065698143}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + ( Max( Min( MDR ,( FirstVNF_Mem_Server * ACS ) ),Max( MDR,( FirstVNF_RAM_Server * ACS ) ) ) / ARS ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( Max( ( MUC + ( DS * MLU ) ),( Max( MLU,RRSe ) / ( MUR * MLU ) ) ) / RMSe ) + ( ( DS * MUM ) - RMSe ) ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.055133079847908745, "obj2": 0.7584873711606878}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( CRS / Max( ARS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06058568192845243}, {"determining": "Max( Min( ( Max( ( ( Min( PN ,Const ) * ( CRS - PN ) ) * ACS ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( ( MLU - DS ),RMSe ) ) / ( DS * CS ) )", "obj1": 0.053231939163498096, "obj2": 0.7605221698094136}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,Min( ACS ,( DDR * RRS ) ) ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + RRSe ),MLU ) ) ,( ( RCSe + MUC ) + RRSe ) )", "obj1": 0.22433460076045628, "obj2": 0.5390255946080932}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( Min( Max( PN,( PN / MDR ) ) ,( FirstVNF_RAM_Server * BR ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - Min( ( ( DS * RMSe ) / ( Max( MLU,Min( ( DS * CS ) ,RRSe ) ) + MUM ) ) ,( MUC + RRSe ) ) )", "obj1": 0.9543726235741445, "obj2": 0.01909496622910983}, {"determining": "( PN - Min( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) ,Const ) )", "choosing": "Min( ( CS - CS ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.012327495586765299}, {"determining": "( PN - Min( CRS ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( PN - ( MRS * FirstVNF_RAM_Server ) ) ,( ( DDR / Max( ( ARS / ( MRS - FirstVNF_RAM ) ),( ( RRS - FirstVNF_CPU ) + FirstVNF_CPU ) ) ) * ( ( Min( PN ,Const ) * Min( ( Min( ARS ,( AMS * FirstVNF_CPU ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( MUR - ( ( Min( MUM ,( MUC / Max( Min( RMSe ,Max( RRSe,RRSe ) ),( RMSe - ( MLU / RCSe ) ) ) ) ) * RCSe ) - Min( RCSe ,Max( Max( MUR,MLU ),MUM ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06527524943436389}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Min( ( RRS - RRS ) ,BR ) * RRS ) * ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( DS ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( DS / ( DS - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.10780753108478239}, {"determining": "Min( ( FirstVNF_Mem * Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( MUR ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_CPU_Server + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7756653992395437, "obj2": 0.07282272507962759}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,Min( ACS ,( DDR * RRS ) ) ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + RRSe ),MLU ) ) ,( ( RCSe + MUC ) + RRSe ) )", "obj1": 0.1920152091254753, "obj2": 0.5575183814218057}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( BR / PN ),( DDR - MDR ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( DS / ( ( MLU + MUC ) - Max( Min( MLU ,( RCSe + CS ) ),( ( Max( RMSe,MUM ) + MLU ) - MUR ) ) ) ) - Max( ( ( RMSe / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.003377401742485472}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( Max( MUR,( ( MLU * DS ) - ( ( RRSe + MUR ) * RRSe ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25285171102661597, "obj2": 0.5042896545585661}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( FirstVNF_CPU_Server * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * CS ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7490494296577946, "obj2": 0.0849267725865026}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_Mem )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( RCSe,RCSe ) - ( ( RRSe + RCSe ) / ( MUR + CS ) ) ) )", "obj1": 0.8098859315589354, "obj2": 0.057355230873306864}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( ( Min( MDR ,FirstVNF_RAM ) - Min( RRS ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( DS - ( CS - RMSe ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06817179772605036}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5029746787478695}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( ( ACS + FirstVNF_Mem_Server ) + CRS ) ),FirstVNF_RAM ) ,Min( CRS ,Const ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11057205442295909}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.10264568064476334}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ( FirstVNF_RAM_Server * MRS ) ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( ( ( RMSe + MUC ) / ( DS + Min( RCSe ,MUC ) ) ),( CS * Max( ( Min( RCSe ,( RRSe + RRSe ) ) * CS ),RCSe ) ) ) - ( ( RRSe + Max( MUM,MUM ) ) / ( MUR + CS ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.05463042039855565}, {"determining": "Min( ( PN - MDR ) ,Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( RCSe * ( RRSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.07418354906813998}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / ( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) ) ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RMSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7243346007604563, "obj2": 0.09995029128626784}, {"determining": "Min( ( ( FirstVNF_RAM + MRS ) - BR ) ,Min( ( ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / BR ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * Min( RRSe ,( Min( MLU ,( MUM - MUR ) ) - RCSe ) ) ) - Max( RCSe,RRSe ) )", "obj1": 0.7053231939163498, "obj2": 0.1127045622356078}, {"determining": "Min( ( RRS - Max( ARS,Max( MDR,AMS ) ) ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * Min( ( Min( PN ,PN ) - ( PN + FirstVNF_CPU ) ) ,ARS ) ) * ACS ) ) )", "choosing": "( MUR - Max( ( ( MUC + Max( RCSe,( MUM * RCSe ) ) ) + ( MUC / MUM ) ),( RRSe * ( RCSe * Max( MUC,MUM ) ) ) ) )", "obj1": 0.9771863117870723, "obj2": 0.003105304863080336}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07654936175273798}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( ( ( Const / FirstVNF_RAM_Server ) / AMS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * RCSe ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * CS ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.752851711026616, "obj2": 0.08302987059011227}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( ( ( ACS - RRS ) * ( RRS * FirstVNF_Mem_Server ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( RMSe,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.844106463878327, "obj2": 0.04501985321824584}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7870722433460076, "obj2": 0.06695098677305253}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8193916349809885, "obj2": 0.05347028280689554}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8460076045627376, "obj2": 0.042637787291146534}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08041420562410775}, {"determining": "Min( ( PN - MDR ) ,( ( BR + ( FirstVNF_RAM / RRS ) ) - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( Max( MLU,MUM ) - ( CS * RMSe ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ),Min( DS ,RCSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8288973384030418, "obj2": 0.04924301013900105}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( ( RRS + FirstVNF_Mem_Server ) - BR ) ) * ARS ) * Min( AMS ,Max( ( AMS - MDR ),ACS ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( MUR - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),Min( RMSe ,Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.8326996197718631, "obj2": 0.04841249819871953}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( ( BR - ARS ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( ( MDR / AMS ) ,PN ) - ( PN + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( Min( ( RCSe + ( ( RRSe - MUR ) + MUC ) ) ,RRSe ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( RMSe ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( DDR,DDR ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,Min( MLU ,MLU ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8346007604562737, "obj2": 0.047973033085521206}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8365019011406845, "obj2": 0.04608407286576613}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8269961977186312, "obj2": 0.050690892184455154}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( ( RRS + Const ) - ( AMS * PN ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( RCSe - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8384030418250951, "obj2": 0.04580634888822886}, {"determining": "( PN - Min( FirstVNF_CPU ,Min( CRS ,( ( DDR - PN ) * ARS ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUR - MUR ),MLU ) ) ) )", "obj1": 0.24714828897338403, "obj2": 0.5114250306491708}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - ( FirstVNF_Mem + ( ( ( DDR - PN ) * ARS ) / ARS ) ) ) ) )", "choosing": "( ( ( ( Max( RRSe,MUM ) - ( ( RCSe - MUC ) / CS ) ) / Max( RMSe,( Max( RRSe,MUR ) * MLU ) ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7585551330798479, "obj2": 0.0796844509841431}], "13": [{"determining": "Min( ( PN - ( CRS * RRS ) ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( ( RRS + FirstVNF_Mem_Server ) - BR ) ) * ARS ) * Min( AMS ,Max( ( AMS - MDR ),ACS ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( MUR - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - ( MLU - RRSe ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),Min( RMSe ,Max( RRSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Const ) - Max( ( MRS + ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / FirstVNF_CPU ) ),( ( Min( ( Max( FirstVNF_CPU_Server,( ACS - MRS ) ) - ACS ) ,( CRS * FirstVNF_Mem ) ) - Const ) - ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( ( MUM + Max( CS,RCSe ) ) * MUM ) ),Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + FirstVNF_CPU_Server ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) )", "obj1": 0.03231939163498099, "obj2": 0.8172327643730246}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( RRS,Const ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,Min( ACS ,RRS ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( Min( MLU ,MUM ) ,( MUC + Max( MUM,CS ) ) ) ) - RMSe )", "obj1": 0.6901140684410646, "obj2": 0.19573612911877764}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "Min( ( Const - MDR ) ,( PN - Min( CRS ,Const ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,MUC ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.5722433460076045, "obj2": 0.2539218232947658}, {"determining": "Min( ARS ,( FirstVNF_RAM * ( ( ( ( Const * ARS ) + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * RMSe ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( Max( RMSe,DS ) ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.11787072243346007, "obj2": 0.643323808570746}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "Min( ( PN - MDR ) ,DDR )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * ( MUM - ( Min( RCSe ,MLU ) * MLU ) ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( RRSe,MUC ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11980940092954216}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.4372623574144487, "obj2": 0.368622181433353}, {"determining": "( PN - Min( FirstVNF_RAM ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,Max( ( CS + RRSe ),MLU ) ) ) / ( Max( MLU,MUR ) / Max( Min( ( Min( RCSe ,RRSe ) / MLU ) ,Min( ( CS / MLU ) ,( MUR * RCSe ) ) ),MLU ) ) ) )", "obj1": 0.1806083650190114, "obj2": 0.5889370511561534}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( Min( PN ,Const ) * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - RCSe )", "obj1": 0.4011406844106464, "obj2": 0.4036465222793764}, {"determining": "Min( ( PN + RRS ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( FirstVNF_CPU ,Min( CRS ,Const ) ) + Min( Max( ACS,PN ) ,RRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Max( ( MUC - MUR ),MLU ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( Min( ( RMSe + DS ) ,RRSe ) + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8498098859315589, "obj2": 0.04134467131783107}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5551330798479087, "obj2": 0.28747335837756155}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,RRS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.2965779467680608, "obj2": 0.4847508536743693}, {"determining": "( PN - ( Max( Min( ( ( RRS + DDR ) * ( PN + ACS ) ) ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.9068441064638784, "obj2": 0.025682097806027083}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( ( RRS * FirstVNF_CPU_Server ) * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( ( MUC - MUC ) - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.37998190264693205}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "( BR - Min( CRS ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ) ) )", "obj1": 0.6463878326996197, "obj2": 0.19875795664841026}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,RRS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.31749049429657794, "obj2": 0.46136860096689547}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ARS,FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RRSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5152091254752852, "obj2": 0.312134012048651}, {"determining": "Min( Max( MDR,Min( ( ( FirstVNF_Mem / ( ARS + ( CRS * ARS ) ) ) * FirstVNF_RAM ) ,( MDR * ( RRS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Min( RRSe ,( ( CS * MLU ) / ( MUR / ( CS / RCSe ) ) ) ),CS ),( MUR / CS ) ) + Min( Min( ( ( RCSe * ( RRSe + MUM ) ) * RRSe ) ,Min( ( MUC - MLU ) ,MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4196429393667371}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( CRS * RRS ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( MUR,CS ) ) / ( DS * CS ) )", "obj1": 0.045627376425855515, "obj2": 0.7735709849384007}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( RRS / ACS ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( CS - ( RCSe * CS ) ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( MUC * DS ) ) ),MLU ) ) )", "obj1": 0.6102661596958175, "obj2": 0.21929290943789576}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( ( CS + RRSe ) + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.02098852175554014}, {"determining": "Max( Min( ( ( FirstVNF_CPU / PN ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,DS ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.051330798479087454, "obj2": 0.7526048475346576}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( MDR ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,CRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( MUM / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.35361216730038025, "obj2": 0.4328454959357856}, {"determining": "( PN - ( ( ( Max( ARS,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * PN ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + Max( RRSe,( RMSe * ( MLU * DS ) ) ) ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1920152091254753, "obj2": 0.5575183814218057}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "Min( Min( PN ,MRS ) ,( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + Min( ( ( ( DS - Max( MLU,Min( RCSe ,DS ) ) ) * MLU ) + RMSe ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.376425855513308, "obj2": 0.43084610287204755}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.31026861746123535}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,PN ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( Min( Min( Max( DS,CS ) ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Max( CS,MUC ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5490427042889041}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),( BR / MDR ) ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5116404661270628}, {"determining": "Min( Max( Min( CRS ,FirstVNF_CPU ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,CRS )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / ( ( RMSe - RCSe ) * CS ) ) ) + Min( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.33079847908745247, "obj2": 0.45410090803869446}, {"determining": "( FirstVNF_RAM / ( ( Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * DS ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7213474893080574}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ),CS ) ) / ( DS * CS ) )", "obj1": 0.06463878326996197, "obj2": 0.7453856309322395}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS * ( DS + MLU ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.034220532319391636, "obj2": 0.792614210389784}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) * ARS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - RMSe ) ) ) ),MLU ) ) )", "obj1": 0.6026615969581749, "obj2": 0.2267651198038786}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.6026615969581749, "obj2": 0.2267651198038786}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + ( Max( Min( MDR ,( FirstVNF_Mem_Server * ACS ) ),Max( MDR,( FirstVNF_RAM_Server * ACS ) ) ) / ARS ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( Max( ( MUC + ( DS * MLU ) ),( Max( MLU,RRSe ) / ( MUR * MLU ) ) ) / RMSe ) + ( ( DS * MUM ) - RMSe ) ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.03802281368821293, "obj2": 0.7875204773755263}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ARS ,( AMS * FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08791579377699937}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,MDR )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,( MLU - DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7052583329105977}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MLU - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( ( PN / MDR ) ,( AMS + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,MUM ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07984790874524715, "obj2": 0.7178594793086719}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MDR ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( MUM,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09891907065698143}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( CRS / Max( ARS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06058568192845243}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),( ( Max( ( PN + FirstVNF_CPU_Server ),MRS ) - Max( MRS,CRS ) ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( Max( MUR,( Max( MLU,CS ) - ( ( RRSe + MUR ) * RRSe ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5042887995702524}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( ( CRS + MDR ) * ( ACS / AMS ) ) ,( FirstVNF_RAM * ( ( ( MRS / ( FirstVNF_RAM * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * Max( ( Max( MLU,DS ) - ( MUC / MLU ) ),MUC ) ) ) * ( MUM / MUC ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7026976922462079}, {"determining": "( PN - Min( CRS ,Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( Min( MLU ,CS ) * ( MLU * RCSe ) ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5029746787478695}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,Min( ACS ,( DDR * RRS ) ) ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + RRSe ),MLU ) ) ,( ( RCSe + MUC ) + RRSe ) )", "obj1": 0.22433460076045628, "obj2": 0.5390255946080932}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( Min( Max( PN,( PN / MDR ) ) ,( FirstVNF_RAM_Server * BR ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - Min( ( ( DS * RMSe ) / ( Max( MLU,Min( ( DS * CS ) ,RRSe ) ) + MUM ) ) ,( MUC + RRSe ) ) )", "obj1": 0.9543726235741445, "obj2": 0.01909496622910983}, {"determining": "( PN - Min( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) ,Const ) )", "choosing": "Min( ( CS - CS ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.012327495586765299}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( PN - ( MRS * FirstVNF_RAM_Server ) ) ,( ( DDR / Max( ( ARS / ( MRS - FirstVNF_RAM ) ),( ( RRS - FirstVNF_CPU ) + FirstVNF_CPU ) ) ) * ( ( Min( PN ,Const ) * Min( ( Min( ARS ,( AMS * FirstVNF_CPU ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( MUR - ( ( Min( MUM ,( MUC / Max( Min( RMSe ,Max( RRSe,RRSe ) ),( RMSe - ( MLU / RCSe ) ) ) ) ) * RCSe ) - Min( RCSe ,Max( Max( MUR,MLU ),MUM ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06527524943436389}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Min( ( RRS - RRS ) ,BR ) * RRS ) * ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( DS ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( DS / ( DS - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.10780753108478239}, {"determining": "Min( ( FirstVNF_Mem * Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( MUR ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_CPU_Server + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7756653992395437, "obj2": 0.07282272507962759}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * PN ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + Max( RRSe,( RMSe * DS ) ) ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1920152091254753, "obj2": 0.5575183814218057}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( BR / PN ),( DDR - MDR ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( DS / ( ( MLU + MUC ) - Max( Min( MLU ,( RCSe + CS ) ),( ( Max( RMSe,MUM ) + MLU ) - MUR ) ) ) ) - Max( ( ( RMSe / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.003377401742485472}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11057205442295909}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( Max( PN,( Min( ( PN - ARS ) ,FirstVNF_RAM ) - ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) ) - Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( MUR - Min( ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.000498517401845}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( FirstVNF_CPU_Server * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * CS ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7490494296577946, "obj2": 0.0849267725865026}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_Mem )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( RCSe,RCSe ) - ( ( RRSe + RCSe ) / ( MUR + CS ) ) ) )", "obj1": 0.8098859315589354, "obj2": 0.057355230873306864}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( ( Min( MDR ,FirstVNF_RAM ) - Min( RRS ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( DS - ( CS - RMSe ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06817179772605036}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - AMS ) ) ,( FirstVNF_CPU_Server + Const ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( MUC,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + Min( ( ( RMSe - MLU ) + ( RCSe * RMSe ) ) ,( Max( MUC,MUM ) / RMSe ) ) ) ),CS ) ) / ( DS * CS ) )", "obj1": 0.06463878326996197, "obj2": 0.7453856309322395}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( ( BR - ARS ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( PN + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( MLU ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( ( FirstVNF_RAM + MRS ) - BR ) ,Min( ( ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / BR ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * Min( RRSe ,( Min( MLU ,( MUM - MUR ) ) - RCSe ) ) ) - Max( RCSe,RRSe ) )", "obj1": 0.7053231939163498, "obj2": 0.1127045622356078}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.10264568064476334}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ( FirstVNF_RAM_Server * MRS ) ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( ( ( RMSe + MUC ) / ( DS + Min( RCSe ,MUC ) ) ),( CS * Max( ( Min( RCSe ,( RRSe + RRSe ) ) * CS ),RCSe ) ) ) - ( ( RRSe + Max( MUM,MUM ) ) / ( MUR + CS ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.05463042039855565}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / ( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) ) ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RMSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7243346007604563, "obj2": 0.09995029128626784}, {"determining": "Min( ( RRS - Max( ARS,Max( MDR,AMS ) ) ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * Min( ( Min( PN ,PN ) - ( PN + FirstVNF_CPU ) ) ,ARS ) ) * ACS ) ) )", "choosing": "( MUR - Max( ( ( MUC + Max( RCSe,( MUM * RCSe ) ) ) + ( MUC / MUM ) ),( RRSe * ( RCSe * Max( MUC,MUM ) ) ) ) )", "obj1": 0.9771863117870723, "obj2": 0.003105304863080336}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) - ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07593803248741263}, {"determining": "Min( ( PN - MDR ) ,Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( RCSe * ( RRSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.07418354906813998}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7509505703422054, "obj2": 0.08180265130960925}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8193916349809885, "obj2": 0.05347028280689554}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( FirstVNF_Mem_Server / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - Max( DS,RMSe ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8326996197718631, "obj2": 0.04765493761908753}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7870722433460076, "obj2": 0.06695098677305253}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( FirstVNF_CPU * ( ( RRS + FirstVNF_Mem_Server ) - BR ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( MUR - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( Min( MUR ,( MLU / RRSe ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.052293558757464054}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08041420562410775}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "Min( ( PN - MDR ) ,( ( BR + ( FirstVNF_RAM / RRS ) ) - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( Max( MLU,MUM ) - ( CS * RMSe ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ),Min( DS ,RCSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8288973384030418, "obj2": 0.04924301013900105}, {"determining": "Min( ( PN - MDR ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( PN ,Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ) ) + ( AMS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8460076045627376, "obj2": 0.042637787291146534}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_Mem_Server )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * RCSe ) - ( ( Max( RMSe,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.844106463878327, "obj2": 0.04437902053921701}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8365019011406845, "obj2": 0.04608407286576613}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / AMS ) ) * BR ) * ACS ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Max( ( MUC - MUR ),MLU ) ) - ( ( Max( MUR,Max( ( MUR + CS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.04503509959570821}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8269961977186312, "obj2": 0.050690892184455154}], "14": [{"determining": "Min( ( PN - ( ( DDR + AMS ) + PN ) ) ,FirstVNF_Mem_Server )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Max( CS,DS ) - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * RCSe ) - ( ( Max( RMSe,Max( Max( CS,DS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - ( CRS * RRS ) ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( ( RRS + FirstVNF_Mem_Server ) - BR ) ) * ARS ) * Min( AMS ,Max( ( AMS - MDR ),ACS ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( MUR - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Min( ( ( MUC - DS ) - ( MLU - RRSe ) ) ,Max( CS,RMSe ) ) ,MUC ) ) ) + Max( ( CS + RRSe ),Min( RMSe ,Max( RRSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( ( ( Max( ( PN + FirstVNF_CPU_Server ),MRS ) - Max( MRS,CRS ) ) * ( ( DDR + FirstVNF_CPU ) - CRS ) ) * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( MDR / ARS ) )", "choosing": "Max( ( ( ( MUM * RRSe ) + MLU ) / Min( ( MLU / MLU ) ,DS ) ),( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) )", "obj1": 0.03231939163498099, "obj2": 0.8172327643730246}, {"determining": "( BR - Min( CRS ,Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * RRSe ) ) ) ) ) )", "obj1": 0.6634980988593155, "obj2": 0.19129743195490084}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( RMSe * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.1140891681268965}, {"determining": "Min( ( Const - MDR ) ,( PN - Min( CRS ,Const ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,MUC ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.5722433460076045, "obj2": 0.2539218232947658}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( Max( MRS,MDR ) / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( DS + Min( ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.48098859315589354, "obj2": 0.34423252180244424}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - ( MUM / MUC ) )", "obj1": 0.4372623574144487, "obj2": 0.368622181433353}, {"determining": "Min( ( MDR - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( FirstVNF_RAM * ( ( Min( PN ,( DDR / Const ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( ( ( MUM - RMSe ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) - ( ( Max( ( MUC - RRSe ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUC / RRSe ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6061314877682731}, {"determining": "Min( ( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_CPU_Server + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) ,Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( RCSe * ( RRSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - Min( CS ,MUC ) )", "obj1": 0.15019011406844107, "obj2": 0.6395604651422894}, {"determining": "( PN - Min( CRS ,( CRS - ( ( Max( ( BR / PN ),( DDR - RRS ) ) * RRS ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.17300380228136883, "obj2": 0.5750108320971674}, {"determining": "Min( ( PN + RRS ) ,Min( ( FirstVNF_Mem_Server / BR ) ,( Min( FirstVNF_CPU ,Min( CRS ,Const ) ) + Min( Max( ACS,PN ) ,RRS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Max( ( MUC - MUR ),MLU ) ) - ( ( Max( MUR,Max( Max( CS,DS ),CS ) ) * MLU ) / ( Min( ( RMSe + DS ) ,RRSe ) + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8498098859315589, "obj2": 0.04134467131783107}, {"determining": "Min( Min( Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_Mem ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( ( ( ACS * ( BR / MDR ) ) / FirstVNF_Mem_Server ) * Max( ARS,BR ) ) ) ) ,FirstVNF_CPU )", "choosing": "( ( DS + Min( ( DS / Max( MUR,( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.5551330798479087, "obj2": 0.28747335837756155}, {"determining": "( PN - ( Max( Min( ( ( RRS + DDR ) * ( PN + ACS ) ) ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( RCSe * RRSe ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.9068441064638784, "obj2": 0.025682097806027083}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( ( RRS * FirstVNF_CPU_Server ) * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( ( MUC - MUC ) - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.37998190264693205}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,( RRS + DDR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5076045627376425, "obj2": 0.33149218817021886}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( Min( PN ,Const ) * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - RCSe )", "obj1": 0.4011406844106464, "obj2": 0.4036465222793764}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,ARS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( RMSe * ( MLU * DS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.2832699619771863, "obj2": 0.4810553909575431}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( RMSe + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.6349809885931559, "obj2": 0.20874075519812985}, {"determining": "Min( ARS ,( FirstVNF_RAM * ( ( ( ( Const * ARS ) + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * RMSe ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( Max( RMSe,DS ) ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.11787072243346007, "obj2": 0.643323808570746}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) ) ) ) - MUR )", "obj1": 0.3060836501901141, "obj2": 0.4636993145009437}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ARS,FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RRSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5152091254752852, "obj2": 0.312134012048651}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( CRS * RRS ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( MUR,CS ) ) / ( DS * CS ) )", "obj1": 0.045627376425855515, "obj2": 0.7735709849384007}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( RRS / ACS ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / ( CS - ( RCSe * CS ) ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( MUC * DS ) ) ),MLU ) ) )", "obj1": 0.6045627376425855, "obj2": 0.21799866675653765}, {"determining": "Max( Min( ( ( FirstVNF_CPU / PN ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,DS ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.051330798479087454, "obj2": 0.7526048475346576}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "( BR - Min( CRS ,Min( CRS ,CRS ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( ( MUR * MLU ) + ( MUM - ( ( MUC + MUC ) * ( RRSe * MUM ) ) ) ) ) ) )", "obj1": 0.6463878326996197, "obj2": 0.19875795664841026}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( MDR ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,CRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( MUM / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.35361216730038025, "obj2": 0.4328454959357856}, {"determining": "Min( Min( PN ,MRS ) ,( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + Min( ( ( ( DS - Max( MLU,Min( RCSe ,DS ) ) ) * MLU ) + RMSe ) ,( MUC + RRSe ) ) ) - RMSe )", "obj1": 0.376425855513308, "obj2": 0.43084610287204755}, {"determining": "Min( ( Max( ARS,Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem_Server * ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) ) ) / BR ) ,Const )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( Max( CS,Max( Min( MLU ,RMSe ),RRSe ) ) * CS ) / ( MUR * DS ) ) ,( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.31026861746123535}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),FirstVNF_RAM ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,PN ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( Min( Min( Max( DS,CS ) ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( Max( CS,MUC ) ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.20342205323193915, "obj2": 0.5490427042889041}, {"determining": "( FirstVNF_RAM / ( ( Min( MRS ,Max( ( ARS / DDR ),( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,( MUC - DS ) ) - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * DS ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7213474893080574}, {"determining": "( ( ( Min( Max( DDR,DDR ) ,PN ) - ( ( Max( BR,ARS ) * RRS ) * FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) + RRS )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( ( ( ( ( ( Min( MLU ,MLU ) / MLU ) / ( ( RMSe - RCSe ) / RMSe ) ) / ( MUR / ( MUC * MUC ) ) ) - Max( CS,Min( ( Max( RMSe,MUM ) + MUC ) ,MUR ) ) ) * DS ) / Max( MUC,CS ) ) )", "obj1": 0.5513307984790875, "obj2": 0.3044567455146391}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ),CS ) ) / ( DS * CS ) )", "obj1": 0.06463878326996197, "obj2": 0.7453856309322395}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS * ( DS + MLU ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.034220532319391636, "obj2": 0.792614210389784}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) * ARS ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - RMSe ) ) ) ),MLU ) ) )", "obj1": 0.6026615969581749, "obj2": 0.2267651198038786}, {"determining": "Min( Max( MDR,Min( ( ( FirstVNF_Mem / ( ARS + ( CRS * ARS ) ) ) * FirstVNF_RAM ) ,( MDR * ( RRS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Min( RRSe ,( ( CS * MLU ) / ( MUR / ( CS / RCSe ) ) ) ),CS ),( MUR / CS ) ) + Min( Min( ( ( RCSe * ( RRSe + MUM ) ) * RRSe ) ,Min( ( MUC - MLU ) ,MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.3840304182509506, "obj2": 0.4196429393667371}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,MRS ) ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.3916349809885932, "obj2": 0.4126975701696957}, {"determining": "( ( Min( AMS ,( CRS / FirstVNF_RAM ) ) * CRS ) + ( Max( FirstVNF_Mem,RRS ) / ( MDR / Const ) ) )", "choosing": "( ( MUM / MUM ) / Max( MLU,RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Min( ( Const - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) * ARS ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Max( CS,MUC ) * ( RMSe + CS ) ) + Max( ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ),MLU ) ) )", "obj1": 0.6026615969581749, "obj2": 0.2267651198038786}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + ( Max( Min( MDR ,( FirstVNF_Mem_Server * ACS ) ),Max( MDR,( FirstVNF_RAM_Server * ACS ) ) ) / ARS ) ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( Max( ( MUC + ( DS * MLU ) ),( Max( MLU,RRSe ) / ( MUR * MLU ) ) ) / RMSe ) + ( ( DS * MUM ) - RMSe ) ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.03802281368821293, "obj2": 0.7875204773755263}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ARS ,( AMS * FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08791579377699937}, {"determining": "Min( Max( Min( CRS ,FirstVNF_CPU ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,CRS )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / ( ( RMSe - RCSe ) * CS ) ) ) + Min( ( ( ( ( MLU - DS ) / Min( RCSe ,( RRSe + RCSe ) ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.33079847908745247, "obj2": 0.45410090803869446}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( Max( MUM,MUR ),RCSe ),( MUR / CS ) ) + Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( MUC + RRSe ) )", "obj1": 0.21863117870722434, "obj2": 0.5420374276656477}, {"determining": "Max( Min( ( Max( ( FirstVNF_Mem_Server / ( ACS / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ),( Min( FirstVNF_Mem_Server ,PN ) / Max( ( FirstVNF_CPU / PN ),( DDR - RRS ) ) ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( Min( ( ( ( ( DS * ( Max( RMSe,MUM ) + MLU ) ) / ( CS + MUM ) ) + CS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( DS * CS ) )", "obj1": 0.2376425855513308, "obj2": 0.5214080889270633}, {"determining": "( PN - ( ( ( Max( ARS,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * PN ) ) * ARS ) * PN ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + Max( RRSe,( Max( Max( CS,RCSe ),( MUR / CS ) ) * ( MLU * DS ) ) ) ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1920152091254753, "obj2": 0.5575183814218057}, {"determining": "( FirstVNF_RAM / ( ( Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( ( ( MUC - DS ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) - CS ),( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) / RMSe ) ) ) ,RMSe ) / ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ) )", "obj1": 0.11406844106463879, "obj2": 0.6607682353462818}, {"determining": "( Min( MRS ,Max( ( ARS / DDR ),FirstVNF_Mem ) ) - Min( CRS ,Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( ( ( DS / ( Max( DS,MLU ) - CS ) ) * MUC ),CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( Min( MLU ,CS ) * ( MLU * RCSe ) ) ) ) )", "obj1": 0.9296577946768061, "obj2": 0.023162846710281588}, {"determining": "( PN - Min( ( ( RRS / Max( FirstVNF_CPU_Server,PN ) ) * RRS ) ,Min( CRS ,Min( RRS ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) )", "obj1": 0.2585551330798479, "obj2": 0.4947071970499696}, {"determining": "( ( Min( Max( PN,FirstVNF_CPU ) ,Min( MRS ,Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUC - MUC ) - Max( DS,Min( Min( MUM ,( ( MUC / MUR ) * ( MUC / MLU ) ) ) ,RMSe ) ) ) / ( Max( MLU,MUR ) / Max( ( ( ( CS + RRSe ) + RCSe ) - MUR ),MLU ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.02098852175554014}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_Mem - ( ( Max( Max( ( ( DDR + AMS ) + PN ),( ( CRS * FirstVNF_RAM ) - MDR ) ),RRS ) * ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MDR ) ) * ( FirstVNF_Mem * Max( BR,PN ) ) ) / PN ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( RRSe ,DS ) ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MLU ) + MLU ) / Max( MUC,( Max( MUM,( CS / ( Max( MLU,CS ) - RCSe ) ) ) * Max( MLU,( ( CS * MUR ) / ( MUR * ( MUC + DS ) ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09891907065698143}, {"determining": "( PN - ( ( ( Max( ARS,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * PN ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + Max( RRSe,( RMSe * ( MLU * DS ) ) ) ),MLU ) ) ,Max( CS,RMSe ) )", "obj1": 0.1920152091254753, "obj2": 0.5575183814218057}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( CRS / Max( ARS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,Min( DS ,RCSe ) ) - ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8022813688212928, "obj2": 0.06058568192845243}, {"determining": "( PN - Min( Max( Max( FirstVNF_CPU,BR ),( ( Max( ( PN + FirstVNF_CPU_Server ),MRS ) - Max( MRS,CRS ) ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ,( PN - MDR ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( Max( MUR,( Max( MLU,CS ) - ( ( RRSe + MUR ) * RRSe ) ) ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5042887995702524}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) )", "choosing": "Min( ( MUM + RCSe ) ,( ( ( MUC + MUM ) + Max( ( MUM - ( RCSe - CS ) ),Min( Max( MUC,DS ) ,( ( Min( MLU ,CS ) * ( MLU * RCSe ) ) + ( DS / RMSe ) ) ) ) ) - ( CS * RMSe ) ) )", "obj1": 0.34980988593155893, "obj2": 0.44948439735811385}, {"determining": "Min( ( FirstVNF_Mem * Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( CRS - ARS ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( MUR ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( MUR * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.09125475285171103, "obj2": 0.6989966305021126}, {"determining": "( PN - Min( CRS ,Max( ( ARS * FirstVNF_Mem_Server ),Max( ( DDR * PN ),( FirstVNF_Mem / Const ) ) ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / ( Min( MLU ,CS ) * ( MLU * RCSe ) ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5029746787478695}, {"determining": "( PN - Min( Max( ( FirstVNF_RAM_Server / ( AMS + CRS ) ),( BR / MDR ) ) ,Min( CRS ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( ( MUC - CS ) - RMSe ) + MLU ) / ( Max( MLU,MUR ) / Max( Max( CS,RCSe ),( ( RCSe / ( RCSe + RRSe ) ) / CS ) ) ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5116404661270628}, {"determining": "( ( ARS + MRS ) - ( Max( Min( FirstVNF_Mem ,PN ),MDR ) * ( ARS / AMS ) ) )", "choosing": "Min( ( CS - RCSe ) ,( ( ( MUM + DS ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / CS ) ) )", "obj1": 0.908745247148289, "obj2": 0.024872109376018164}, {"determining": "( PN - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,Min( ACS ,( DDR * RRS ) ) ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * ARS ) * RRS ) )", "choosing": "Min( ( ( MUC - ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) ) - Max( ( CS + RRSe ),MLU ) ) ,( ( RCSe + MUC ) + RRSe ) )", "obj1": 0.22433460076045628, "obj2": 0.5390255946080932}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,FirstVNF_CPU_Server ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( BR ,FirstVNF_RAM ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) ) - MUM )", "obj1": 0.34600760456273766, "obj2": 0.4495293381772565}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( FirstVNF_RAM * ( ( ARS * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( CS ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * MUC ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.08745247148288973, "obj2": 0.7087599772748756}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( ( PN / MDR ) ,( AMS + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( ( MLU - DS ) - ( Min( RCSe ,MUM ) - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07984790874524715, "obj2": 0.7178594793086719}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( Min( Max( PN,( PN / MDR ) ) ,( FirstVNF_RAM_Server * BR ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - Min( ( ( DS * RMSe ) / ( Max( MLU,Min( ( DS * CS ) ,RRSe ) ) + MUM ) ) ,( MUC + RRSe ) ) )", "obj1": 0.9543726235741445, "obj2": 0.01909496622910983}, {"determining": "Min( Max( ( Min( ( ( ( DDR + ( BR - ARS ) ) * ( RRS / Max( FirstVNF_CPU_Server,PN ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) ,Max( AMS,MRS ) ) + BR ),Min( CRS ,Min( ( PN / BR ) ,RRS ) ) ) ,( FirstVNF_RAM_Server * Min( PN ,ACS ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( Min( ( ( MUM + RRSe ) - Max( DS,CS ) ) ,Max( CS,RMSe ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) - ( Min( ( CS / MLU ) ,MUC ) + RRSe ) )", "obj1": 0.31749049429657794, "obj2": 0.46136860096689547}, {"determining": "( PN - Min( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) ) ,Const ) )", "choosing": "Min( ( CS - CS ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.012327495586765299}, {"determining": "Min( ( PN - ( MRS * FirstVNF_RAM_Server ) ) ,( ( DDR / Max( ( ARS / ( MRS - FirstVNF_RAM ) ),( ( RRS - FirstVNF_CPU ) + FirstVNF_CPU ) ) ) * ( ( Min( PN ,Const ) * Min( ( Min( ARS ,( AMS * FirstVNF_CPU ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) * ACS ) ) )", "choosing": "( MUR - ( ( Min( MUM ,( MUC / Max( Min( RMSe ,Max( RRSe,RRSe ) ),( RMSe - ( MLU / RCSe ) ) ) ) ) * RCSe ) - Min( RCSe ,Max( Max( MUR,MLU ),MUM ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06527524943436389}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Min( ( RRS - RRS ) ,BR ) * RRS ) * ( Min( ACS ,( FirstVNF_RAM * ( Const / FirstVNF_CPU_Server ) ) ) - Const ) ) ) ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( DS ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( DS / ( DS - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.10780753108478239}, {"determining": "Min( ( PN - MDR ) ,( ( MDR / Max( FirstVNF_RAM,AMS ) ) - ( ( ( ( Min( ( FirstVNF_CPU_Server + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( PN - DDR ) / MRS ) ) * RRS ) * ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( ( RCSe * MUM ),( RRSe - RCSe ) ) ) ) ) )", "obj1": 0.7756653992395437, "obj2": 0.07282272507962759}, {"determining": "Min( Max( ( Min( ( ( ( FirstVNF_RAM + ACS ) * Min( CRS ,MRS ) ) / Min( FirstVNF_Mem_Server ,ARS ) ) ,FirstVNF_RAM_Server ) + BR ),Min( ( ( ( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) ) * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) ,FirstVNF_RAM ) ) ,CRS )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( ( Min( ( ( DS * RMSe ) / ( CS + MUM ) ) ,( MUC + RRSe ) ) * DS ) * Min( ( DS * RCSe ) ,( RMSe * ( MUM - MUM ) ) ) ) ,( MUC + RRSe ) ) ) - MUR )", "obj1": 0.32509505703422054, "obj2": 0.4597391306481617}, {"determining": "Min( ( PN - MDR ) ,( CRS / ( ( CRS - ( ( Max( ( BR / PN ),( DDR - MDR ) ) * RRS ) * FirstVNF_RAM ) ) / Min( ( Min( PN ,PN ) - ( ( ACS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) ,ARS ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * Min( DS ,( ( RRSe - RMSe ) / CS ) ) ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( DS / ( ( MLU + MUC ) - Max( Min( MLU ,( RCSe + CS ) ),( ( Max( RMSe,MUM ) + MLU ) - MUR ) ) ) ) - Max( ( ( RMSe / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.003377401742485472}, {"determining": "( PN - ( RRS + FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - MUC ) - ( MLU * MUR ) ) ,( ( RCSe + MLU ) / ( Max( MLU,MUR ) / Max( ( MUC - MUR ),MLU ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.00041345875697113796}, {"determining": "( ( AMS * ( ( CRS + ( CRS - MRS ) ) / ( ARS / Min( ( Min( PN ,PN ) - ( ( MDR + FirstVNF_RAM ) + FirstVNF_CPU ) ) ,ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,( Max( BR,RRS ) * RRS ) ) )", "choosing": "( ( Max( MUR,Min( ( Min( RMSe ,Max( ( CS * RRSe ),MUC ) ) * ( RMSe / MUR ) ) ,RCSe ) ) / Max( DS,MLU ) ) / Max( ( RCSe + ( RMSe * Max( MUR,Max( MUM,Min( MUR ,( MLU / RRSe ) ) ) ) ) ),( MUM - RRSe ) ) )", "obj1": 0.9638783269961977, "obj2": 0.01663253357853932}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( FirstVNF_CPU_Server * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * CS ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7490494296577946, "obj2": 0.0849267725865026}, {"determining": "Min( ( PN - MDR ) ,FirstVNF_Mem )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( RCSe,RCSe ) - ( ( RRSe + RCSe ) / ( MUR + CS ) ) ) )", "obj1": 0.8098859315589354, "obj2": 0.057355230873306864}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( ( Min( MDR ,FirstVNF_RAM ) - Min( RRS ,FirstVNF_RAM ) ) + FirstVNF_CPU ) ,FirstVNF_RAM_Server ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( DS - ( CS - RMSe ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( MUM / ( MUR + CS ) ) ) ) - ( Max( RCSe,RCSe ) - ( Max( DS,( MUC * ( RRSe / RMSe ) ) ) / CS ) ) )", "obj1": 0.7832699619771863, "obj2": 0.06817179772605036}, {"determining": "Max( Min( ( FirstVNF_CPU + ( CRS - ( ( Min( ARS ,( AMS * FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server + Const ) ),( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( ( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) ) / Max( Min( ( ( DS * ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) ) / ( CS + MUM ) ) ,( MUC + RRSe ) ),CS ) ) / ( DS * CS ) )", "obj1": 0.06463878326996197, "obj2": 0.7453856309322395}, {"determining": "Min( ( FirstVNF_Mem * Max( ( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( FirstVNF_Mem + ( BR / AMS ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) ),BR ) ) ,( FirstVNF_RAM * ( ( ARS * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,Min( MUR ,DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6934135997374977}, {"determining": "Min( ( PN - MDR ) ,( CRS / Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( MLU - RRSe ) - DS ) ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,( ( MLU * DS ) - ( MLU * RRSe ) ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( ( ( DS * ( DS + MLU ) ) / ( CS + ( Max( ( MUR / RMSe ),Max( RCSe,MUM ) ) / Max( MUM,Min( DS ,RCSe ) ) ) ) ) ,( MUC + RRSe ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.0015984984455258108}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,MDR )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( Min( MUC ,( MLU - DS ) ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7052583329105977}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / BR ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.10264568064476334}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7604562737642585, "obj2": 0.07913334066036583}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( Min( ( Min( ( FirstVNF_RAM_Server * MRS ) ,MDR ) - FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU ) ) * ( RRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( MUM * MLU ) / ( RCSe + RMSe ) ) ,RMSe ) + MUC ) - ( Max( ( ( RMSe + MUC ) / ( DS + Min( RCSe ,MUC ) ) ),( CS * Max( ( Min( RCSe ,( RRSe + RRSe ) ) * CS ),RCSe ) ) ) - ( ( RRSe + Max( MUM,MUM ) ) / ( MUR + CS ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.05463042039855565}, {"determining": "Min( ( PN - MDR ) ,Min( ( PN / ( FirstVNF_RAM / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem_Server ) - ( AMS * PN ) ) ) ) ) ,RRS ) )", "choosing": "( ( ( MUR / CS ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RMSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7243346007604563, "obj2": 0.09995029128626784}, {"determining": "( PN - Min( CRS ,Min( ( Min( CRS ,( RRS + MRS ) ) + ( RRS * FirstVNF_CPU_Server ) ) ,Const ) ) )", "choosing": "Min( ( ( MUC - MUC ) - Max( DS,CS ) ) ,( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( ( ( ( MUR / CS ) / ( MUR - ( MUM + CS ) ) ) - MUR ),MLU ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.4912005693493143}, {"determining": "Min( ( RRS - Max( ARS,Max( MDR,AMS ) ) ) ,( FirstVNF_RAM * ( ( Min( PN ,Const ) * Min( ( Min( PN ,PN ) - ( PN + FirstVNF_CPU ) ) ,ARS ) ) * ACS ) ) )", "choosing": "( MUR - Max( ( ( MUC + Max( RCSe,( MUM * RCSe ) ) ) + ( MUC / MUM ) ),( RRSe * ( RCSe * Max( MUC,MUM ) ) ) ) )", "obj1": 0.9771863117870723, "obj2": 0.003105304863080336}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS / CRS ) ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) - ( CS + Min( MUM ,( RMSe * ( MUM - MUM ) ) ) ) )", "obj1": 0.7661596958174905, "obj2": 0.07593803248741263}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( ( BR / ( FirstVNF_CPU - FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * Max( MRS,FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe * MUM ) - ( ( DS + ( ( CS - ( RCSe * CS ) ) * RMSe ) ) + RMSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( CS + RRSe ),MLU ) ) )", "obj1": 0.8193916349809885, "obj2": 0.05347028280689554}, {"determining": "Min( ( PN - MDR ) ,Min( Min( FirstVNF_RAM_Server ,( CRS / FirstVNF_CPU_Server ) ) ,Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( RCSe * ( RRSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( MUR + CS ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.07418354906813998}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7509505703422054, "obj2": 0.08180265130960925}, {"determining": "Min( ( PN - MDR ) ,( RRS / ( ( ( Min( FirstVNF_Mem_Server ,Max( CRS,BR ) ) * FirstVNF_Mem ) + FirstVNF_RAM_Server ) - PN ) ) )", "choosing": "( ( Min( ( ( MUM + ( RRSe * MUC ) ) / ( Min( Max( MUR,MUM ) ,MUM ) * DS ) ) ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( Max( MUR,Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( ( Min( CS ,MUC ) * ( DS / ( Min( MUM ,MUR ) - RRSe ) ) ) / ( RRSe + ( ( MUM * RRSe ) * Max( MUR,( RRSe - Max( Max( RMSe,CS ),MLU ) ) ) ) ) ) )", "obj1": 0.7566539923954373, "obj2": 0.08041420562410775}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ( PN - ( PN / ( ARS / FirstVNF_Mem_Server ) ) ) / MRS ) )", "choosing": "( Max( RMSe,Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) ) * ( ( MUR - CS ) - MLU ) )", "obj1": 0.9562737642585551, "obj2": 0.01845642777808824}, {"determining": "Min( Min( ( PN - MDR ) ,( CRS - ( ( Max( BR,RRS ) * RRS ) * FirstVNF_RAM ) ) ) ,Min( ( ( PN - MDR ) / BR ) ,RRS ) )", "choosing": "( ( Min( MLU ,MLU ) * ( ( ( ( ( Min( MLU ,MUR ) - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,RRSe ) ) - ( ( ( MUM - Min( MUC ,MUR ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Max( ( ( Max( Max( CS,RCSe ),( MUR / CS ) ) / ( DS / MUM ) ) * MUM ),( MUM - RRSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11057205442295909}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / ( FirstVNF_CPU / Const ) ) ) * BR ) * ACS ) ) )", "choosing": "( ( ( ( DS + RRSe ) / ( ( RRSe / ( Min( RCSe ,DS ) * ( RMSe / ( RRSe * MLU ) ) ) ) * MUM ) ) * ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * MUC ) ) ) ) ) - DS ) ) - ( Max( RCSe,RCSe ) - ( MUM / ( Min( MUC ,RCSe ) + CS ) ) ) )", "obj1": 0.7870722433460076, "obj2": 0.06695098677305253}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * FirstVNF_RAM ) * FirstVNF_RAM ) * RRS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * DS ) * Min( MUM ,( RMSe * ( MUM - ( CS * RMSe ) ) ) ) ) - ( ( Max( Max( MLU,MLU ),Max( MLU,CS ) ) * MLU ) / ( MUR + RMSe ) ) ),Min( DS ,RCSe ) ) - ( ( Min( Min( MUM ,CS ) ,( CS * CS ) ) + ( Max( CS,MUC ) * Min( MUC ,MUC ) ) ) + Max( ( Min( ( RCSe * Min( MUM ,RMSe ) ) ,Max( RRSe,( RMSe * DS ) ) ) + RRSe ),MLU ) ) )", "obj1": 0.8231939163498099, "obj2": 0.05138824157289874}, {"determining": "Min( ( ( FirstVNF_RAM + MRS ) - BR ) ,Min( ( ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) / BR ) ,Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUC ,MLU ) * Min( RRSe ,( Min( MLU ,( MUM - MUR ) ) - RCSe ) ) ) - Max( RCSe,RRSe ) )", "obj1": 0.7053231939163498, "obj2": 0.1127045622356078}, {"determining": "Max( Min( ( Max( ( FirstVNF_CPU + PN ),( Min( FirstVNF_Mem_Server ,PN ) / FirstVNF_RAM_Server ) ) + PN ) ,MRS ),( CRS * RRS ) )", "choosing": "( ( ( Max( MUM,( RMSe / ( DS - ( MLU - RRSe ) ) ) ) + MLU ) / RMSe ) / ( DS * CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7193344324463952}, {"determining": "Min( ( PN - MDR ) ,( FirstVNF_RAM * ( ( ( FirstVNF_Mem + ( BR / AMS ) ) * BR ) * ACS ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( ( ( ( MLU - DS ) / Min( Min( MLU ,CS ) ,RCSe ) ) * DS ) * Max( ( MUC - MUR ),MLU ) ) - ( ( Max( MUR,Max( ( MUR + CS ),CS ) ) * MLU ) / ( MUR + RMSe ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8403041825095057, "obj2": 0.04503509959570821}]}