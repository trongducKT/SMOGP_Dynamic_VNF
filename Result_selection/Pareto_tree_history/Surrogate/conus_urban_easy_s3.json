{"1": [{"determining": "Max( Max( FirstVNF_RAM_Server,( AMS * PN ) ),( FirstVNF_RAM / ACS ) )", "choosing": "( ( RCSe - MLU ) / ( CS - RCSe ) )", "obj1": 0.15779467680608364, "obj2": 0.7103356092544294}, {"determining": "( ( CRS - AMS ) + ( MDR - Const ) )", "choosing": "( ( RCSe * RCSe ) + ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + CRS ) - ( Const - ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( CS / CS ),( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,RRS ) - ( AMS - RRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Max( DS,Min( Min( Max( Min( RCSe ,RMSe ),Min( MUC ,DS ) ) ,( MUM / ( CS / MUC ) ) ) ,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( CRS + ACS ) )", "choosing": "Min( ( DS - MUR ) ,Max( ( Max( ( Max( MUR,( RMSe - RCSe ) ) + ( ( Min( MUC ,DS ) / ( DS + MLU ) ) - RRSe ) ),RCSe ) / MLU ),( MLU - ( Min( Max( Max( Min( DS ,RMSe ),( CS * DS ) ),( ( DS + RRSe ) / RCSe ) ) ,RMSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Const,Const ),Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.5874524714828897, "obj2": 0.3109167570921027}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) / ( ACS * ARS ) )", "choosing": "( Min( DS ,RRSe ) - Max( MUC,CS ) )", "obj1": 0.3688212927756654, "obj2": 0.5319779424192883}, {"determining": "Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + DS ) ,( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / RRSe ) / ( MUC - MUM ) )", "obj1": 0.2338403041825095, "obj2": 0.6949784611121721}, {"determining": "Max( ( MDR * FirstVNF_Mem ),( CRS * FirstVNF_CPU ) )", "choosing": "( ( CS * MUR ) / ( DS * RRSe ) )", "obj1": 0.04182509505703422, "obj2": 0.8542958730885548}, {"determining": "( ( RRS * FirstVNF_RAM ) - ( ( BR * ( MRS * Min( DDR ,ARS ) ) ) * BR ) )", "choosing": "( ( MUM + MLU ) / ( ( DS - RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR / MDR ) ,CRS ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( ACS * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * Max( MLU,( ( RRSe - ( RRSe * RCSe ) ) * Max( Max( ( Min( DS ,MLU ) * CS ),( CS + RCSe ) ),( ( RRSe * MUM ) - MUM ) ) ) ) ) * Min( MUC ,( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR * ARS ) ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MLU * MUM ) - ( ( CS - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.24334600760456274, "obj2": 0.6210291157726496}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( ( MDR * ( AMS + ARS ) ) - PN ),FirstVNF_CPU ) )", "choosing": "Max( ( MLU - RRSe ),( RMSe / MLU ) )", "obj1": 0.23954372623574144, "obj2": 0.6730902152067914}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - RCSe ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.4143127008541648}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,Min( ( AMS - Max( MDR,FirstVNF_CPU_Server ) ) ,( ARS / DDR ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( MLU / RRSe ) ,( Max( ( ( CS - RRSe ) - Max( CS,MUM ) ),MLU ) / RRSe ) ),( Min( RMSe ,MUM ) * ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( PN - FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( MUC - Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - ACS ) - ( ARS / ACS ) ) / ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / Min( ( ( DS / RRSe ) / Max( MUR,MUM ) ) ,( ( RRSe * DS ) + ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - CRS ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( ( ( ( RRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) / ARS ) / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( DS,MUR ) + Min( ( Min( RCSe ,RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8070923275952272}, {"determining": "( ( CRS / ( FirstVNF_Mem + ( FirstVNF_Mem * BR ) ) ) / ( FirstVNF_RAM_Server * ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS + DS ) + ( MUM - DS ) ) - Max( Max( CS,CS ),Max( MUC,RMSe ) ) ) * ( ( Max( RCSe,CS ) * Min( MUM ,MUM ) ) - ( ( MLU + MUM ) - ( DS * MUR ) ) ) )", "obj1": 0.26996197718631176, "obj2": 0.561596873084036}, {"determining": "( ( BR - MRS ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + MLU ) / Max( RRSe,MUM ) ) + ( ( MUM / DS ) * ( MUR - MUC ) ) ) + ( Max( ( MUR + RCSe ),Max( MUC,MUR ) ) + Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) ) )", "obj1": 0.5494296577946768, "obj2": 0.3764214644948335}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( ( ( ( RRS - MDR ) - Min( FirstVNF_RAM ,DDR ) ) + ( Max( MRS,BR ) / ( AMS / MDR ) ) ) / ( Max( ( FirstVNF_CPU / ARS ),Min( FirstVNF_Mem ,CRS ) ) - Min( ( FirstVNF_Mem + RRS ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS * MUR ) * ( DS + Max( RMSe,CS ) ) ) / ( RMSe - RMSe ) )", "obj1": 0.5760456273764258, "obj2": 0.3532425197527175}], "2": [{"determining": "( ( RRS * FirstVNF_RAM ) - ( ( BR * ( MRS * Min( DDR ,ARS ) ) ) * BR ) )", "choosing": "( ( MUM + MLU ) / ( ( DS - RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) + ( MDR - Const ) )", "choosing": "( ( RCSe * RCSe ) + ( MUC / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ( ACS * CRS ) ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( Max( ( MUC / DS ),RCSe ) + MUM ) - ( ( RRSe - MUC ) * ( ( MUR + CS ) - ( MLU / ( ( RCSe - MUC ) - Max( CS,Min( Min( CS ,MUC ) ,MUC ) ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8205206137749648}, {"determining": "( Min( Max( ( MDR * FirstVNF_Mem ),( CRS * FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / RRSe ) / ( CS * MUR ) )", "obj1": 0.25285171102661597, "obj2": 0.5249365775498857}, {"determining": "( Min( CRS ,Max( ( MDR - ARS ),( FirstVNF_CPU - FirstVNF_Mem_Server ) ) ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Min( ( Max( MLU,( Min( DS ,Min( ( RCSe + MLU ) ,( DS / RRSe ) ) ) - MUR ) ) - MUR ) ,Min( MLU ,RRSe ) )", "obj1": 0.3973384030418251, "obj2": 0.48561698489242}, {"determining": "( ( MDR - ( DDR * ARS ) ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MLU * MUM ) - ( ( CS - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.24334600760456274, "obj2": 0.6210291157726496}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - Min( ( Min( MRS ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server - RRS ) ) ,( AMS / DDR ) ) ) ) )", "choosing": "Max( ( ( MUR - RCSe ) * Max( ( DS * DS ),( RRSe + MUR ) ) ),( DS + MUC ) )", "obj1": 0.5133079847908745, "obj2": 0.405930401077982}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - RCSe ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( DS - MUR ) ,Min( MUM ,( ( Max( MUC,CS ) * MUC ) / ( CS - RCSe ) ) ) )", "obj1": 0.1920152091254753, "obj2": 0.6534950159827961}, {"determining": "( ( ( ( RRS - MDR ) - Min( FirstVNF_RAM ,DDR ) ) + ( Max( MRS,BR ) / ( AMS / MDR ) ) ) / ( Max( ( FirstVNF_CPU / Min( AMS ,FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem ,CRS ) ) - Min( ( FirstVNF_Mem + RRS ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS * MUR ) * ( DS + Max( RMSe,CS ) ) ) / MUC )", "obj1": 0.8288973384030418, "obj2": 0.12140897138202261}, {"determining": "( MRS - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( ( Max( RRS,PN ) - PN ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( ARS / PN ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / ( Min( ( MUM / ( Min( ( CS * MLU ) ,Min( Max( MUM,RCSe ) ,MUM ) ) / MUC ) ) ,DS ) - MUM ) )", "obj1": 0.9372623574144486, "obj2": 0.04967746704675348}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / CS ) * DS )", "obj1": 0.5988593155893536, "obj2": 0.26521182633118856}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5741444866920152, "obj2": 0.2751932113386663}, {"determining": "( Max( ACS,( BR + Min( PN ,FirstVNF_CPU ) ) ) + ( ( ( ( ( ( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_RAM,AMS ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / MRS ) ) / ARS ) / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUR,MUR ) + ( MUC + ( ( RMSe * MUC ) + MUC ) ) )", "obj1": 0.7737642585551331, "obj2": 0.1895883641294747}, {"determining": "( ( Const - FirstVNF_CPU ) - ( Max( ( MDR * FirstVNF_Mem ),( CRS * FirstVNF_CPU ) ) + CRS ) )", "choosing": "Max( ( CS * MUR ),Min( RMSe ,MUC ) )", "obj1": 0.870722433460076, "obj2": 0.0797489786708345}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + ( Max( DS,MUM ) * ( RCSe - DS ) ) ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.00041345875697113796}, {"determining": "( ( MDR - ( DDR * ARS ) ) + Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MLU * MUM ) - ( ( CS - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.4828897338403042, "obj2": 0.42564065731670886}, {"determining": "Max( ( ACS + FirstVNF_RAM ),( ( ( PN / MRS ) - FirstVNF_Mem_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / RRSe ) / ( MUC - ( DS * ( RMSe / ( ( CS - RRSe ) * ( MUR * MUM ) ) ) ) ) ) * MUR ) / ( ( ( MUM - ( ( ( MUC * ( RCSe - DS ) ) - ( Min( MUM ,MUM ) / ( DS + CS ) ) ) + Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( MUM,MLU ) ) ) ) ) * CS ) - RRSe ) )", "obj1": 0.10456273764258556, "obj2": 0.7537954832095819}, {"determining": "Max( ( FirstVNF_RAM * ACS ),( ( MDR + MRS ) - ( FirstVNF_CPU_Server + Const ) ) )", "choosing": "( ( DS * Min( ( MUC * RCSe ) ,Min( MUR ,RRSe ) ) ) / ( Max( ( Min( MLU ,RMSe ) * ( ( MUC - CS ) * RMSe ) ),RRSe ) / RCSe ) )", "obj1": 0.1482889733840304, "obj2": 0.7234079334820128}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) / ( Max( ( Const * FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) + ( Max( CRS,BR ) * ( Min( FirstVNF_RAM ,RRS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( ( ( CS * RCSe ) - Min( MUR ,MUM ) ) * ( ( ( ( RMSe + Max( RCSe,MUC ) ) / MUM ) - CS ) - MUM ) ) * ( RCSe - Min( RMSe ,DS ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.7021895186071894}, {"determining": "( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ) * Min( Min( Min( PN ,ACS ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( MUR / MUM ) + MUR ) + ( Max( RMSe,( RRSe + ( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) ) / ( RRSe / MLU ) ) ) - ( ( Max( RCSe,MUR ) + RCSe ) / RRSe ) )", "obj1": 0.08745247148288973, "obj2": 0.7703811386535756}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - CRS ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( ( ( ( RRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) / ARS ) / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( DS,MUR ) + Min( ( Min( RCSe ,RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( ( FirstVNF_RAM * Max( MRS,MDR ) ) - ( MRS / ACS ) ) - ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,MUC ) )", "obj1": 0.779467680608365, "obj2": 0.1522292583112555}, {"determining": "( ( ( Const - FirstVNF_CPU ) * PN ) - ( MRS / ACS ) )", "choosing": "( ( RRSe / RRSe ) - Min( RMSe ,MUC ) )", "obj1": 0.8041825095057035, "obj2": 0.1408553422863844}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM ) ,FirstVNF_Mem_Server ),Min( Min( ACS ,FirstVNF_RAM ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( RCSe * RCSe ) + ( MUC / MUC ) ) / MLU ) ,( RCSe / RMSe ) ) * ( CS / ( MUC + RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.4531067649139995}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( DDR * FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Max( ( MUC * DS ),( CS + RRSe ) ) / ( Min( RRSe ,RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.060836501901140684, "obj2": 0.8004298205574817}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,Min( ( AMS / Min( DDR ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "( Max( DS,MUM ) * ( MLU + RMSe ) )", "obj1": 0.8878326996197718, "obj2": 0.06790921317964799}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - CRS ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( ( ( ( RRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) / ARS ) / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( DS,MUR ) + Min( ( Min( RCSe ,RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7414448669201521, "obj2": 0.22542987834282902}, {"determining": "Max( Max( FirstVNF_RAM_Server,( AMS * PN ) ),( FirstVNF_RAM / ACS ) )", "choosing": "( ( RCSe - MLU ) / ( CS - RCSe ) )", "obj1": 0.15779467680608364, "obj2": 0.7103356092544294}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,Min( ( AMS - Max( FirstVNF_CPU_Server,MDR ) ) ,Max( PN,CRS ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.9125475285171103, "obj2": 0.05614472413564306}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) / ( MDR * ( AMS + ARS ) ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUR / MLU ) ,MLU ) * ( RCSe + DS ) )", "obj1": 0.44106463878326996, "obj2": 0.4602317216520606}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - CRS ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( ( ( ( RRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) / ARS ) / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( DS,MUR ) + Min( ( Min( RCSe ,RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7414448669201521, "obj2": 0.22542987834282902}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( RMSe + MUM ) / ( MUR / MUM ) )", "obj1": 0.9258555133079848, "obj2": 0.05265638642867256}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( Max( ( MUC / DS ),MUR ) + MUM ) - ( ( MUC - RMSe ) * ( RRSe - MUC ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8150077576564408}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( RMSe + MUM ) / ( DS / MUM ) )", "obj1": 0.9144486692015209, "obj2": 0.053048969397383926}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( ( MDR * ( AMS + ARS ) ) - PN ),FirstVNF_CPU ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.051330798479087454, "obj2": 0.80503892922553}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.04182509505703422, "obj2": 0.8088071454182406}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8019747198828171}, {"determining": "( ( FirstVNF_RAM * Const ) - ( Min( RRS ,FirstVNF_RAM_Server ) - FirstVNF_Mem ) )", "choosing": "( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) )", "obj1": 0.043726235741444866, "obj2": 0.8069659188483951}, {"determining": "( ( ACS + CRS ) - ( Const - ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( CS / CS ),( RCSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,RRS ) - ( AMS - RRS ) )", "choosing": "Min( Min( CS ,DS ) ,( Max( DS,Min( Min( Max( Min( RCSe ,RMSe ),Min( MUC ,DS ) ) ,( MUM / ( CS / MUC ) ) ) ,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( CRS + ACS ) )", "choosing": "Min( ( DS - MUR ) ,Max( ( Max( ( Max( MUR,( RMSe - RCSe ) ) + ( ( Min( MUC ,DS ) / ( DS + MLU ) ) - RRSe ) ),RCSe ) / MLU ),( MLU - ( Min( Max( Max( Min( DS ,RMSe ),( CS * DS ) ),( ( DS + RRSe ) / RCSe ) ) ,RMSe ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( RCSe + DS ) ,( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM ) - ( ( BR * ( MRS * Min( DDR ,ARS ) ) ) * BR ) )", "choosing": "( ( MUM + MLU ) / ( ( DS - RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR / MDR ) ,CRS ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( ACS * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * Max( MLU,( ( RRSe - ( RRSe * RCSe ) ) * Max( Max( ( Min( DS ,MLU ) * CS ),( CS + RCSe ) ),( ( RRSe * MUM ) - MUM ) ) ) ) ) * Min( MUC ,( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,Max( FirstVNF_CPU,Min( ( AMS - Max( MDR,FirstVNF_CPU_Server ) ) ,( ARS / DDR ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( MLU / RRSe ) ,( Max( ( ( CS - RRSe ) - Max( CS,MUM ) ),MLU ) / RRSe ) ),( Min( RMSe ,MUM ) * ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( PN - FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( MUC - Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const - ( FirstVNF_CPU * RRS ) ) - ( ACS + CRS ) )", "choosing": "Max( ( CS / CS ),( ( DS * Min( Min( Max( Min( RCSe ,RMSe ),Min( MUC ,DS ) ) ,( MUM - RMSe ) ) ,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM ) - ( ( BR * ( MRS * Min( DDR ,ARS ) ) ) * BR ) )", "choosing": "( ( MUM + MLU ) / ( ( DS - RMSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * FirstVNF_RAM_Server ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( Max( MUC,Max( MLU,MUC ) ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5731330450777464}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.6463878326996197, "obj2": 0.19681862086201987}, {"determining": "( Max( ACS,( BR + Min( PN ,FirstVNF_CPU ) ) ) + ( ( ( ( ( ( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_RAM,AMS ) ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / MRS ) ) / ARS ) / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MUR,MUR ) + ( MUC + ( ( RMSe * MUC ) + MUC ) ) )", "obj1": 0.7737642585551331, "obj2": 0.1895883641294747}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ACS ) ) ) * Min( Min( BR ,DDR ) ,RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( MUM + MLU ) / ( ( DS - RMSe ) + MUM ) ) / MUR ) ,( CS + MUC ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5211518867319092}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( Min( MRS ,FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( ( RMSe / MUR ) / ( MUC + RRSe ) ) )", "obj1": 0.5038022813688213, "obj2": 0.380808098904351}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Const ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + ( Min( ( ( ( RCSe * RCSe ) + ( MUC / MUC ) ) / MLU ) ,( RCSe / RMSe ) ) * ( RCSe + DS ) ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.25452038149143463}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM ) ,FirstVNF_Mem_Server ),Min( Min( ACS ,FirstVNF_RAM ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( RCSe * RCSe ) + ( MUC / MUC ) ) / MLU ) ,( RCSe / RMSe ) ) * ( CS / ( MUC + RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.4531067649139995}, {"determining": "( Max( ACS,FirstVNF_CPU ) * Max( FirstVNF_CPU,( ( MDR * ( AMS + ARS ) ) - ( ( BR / FirstVNF_CPU_Server ) / ( MDR - Max( ( ( RRS - AMS ) + Const ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + MUC ) ) / ( ( MUM / ( RMSe / MLU ) ) + MUM ) ) + Max( MLU,MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.505934232384113}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( MRS / BR ) )", "choosing": "( RCSe - ( DS - MLU ) )", "obj1": 0.8231939163498099, "obj2": 0.10985069290721029}, {"determining": "( ( FirstVNF_RAM * Const ) - Min( MDR ,PN ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3574144486692015, "obj2": 0.454458202063233}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5741444866920152, "obj2": 0.2751932113386663}, {"determining": "Max( Max( FirstVNF_RAM_Server,( AMS * PN ) ),( FirstVNF_RAM / ACS ) )", "choosing": "( ( RCSe - MLU ) / ( CS - RCSe ) )", "obj1": 0.1958174904942966, "obj2": 0.6524488012489154}, {"determining": "( ACS / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * RCSe ) / ( CS * MUR ) )", "obj1": 0.3155893536121673, "obj2": 0.4863365238485443}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.2990569905452398}, {"determining": "( ( ( FirstVNF_RAM * Max( MRS,MDR ) ) - ( MRS / ACS ) ) - ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,MUC ) )", "obj1": 0.779467680608365, "obj2": 0.1522292583112555}, {"determining": "( ( Const * FirstVNF_CPU ) - ( ( BR - AMS ) + PN ) )", "choosing": "Max( ( CS * ( MLU - MLU ) ),Min( CS ,MLU ) )", "obj1": 0.8650190114068441, "obj2": 0.08226634309899034}, {"determining": "( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "Min( ( DS - MUR ) ,Min( MUM ,( ( Max( MUC,CS ) * MUC ) / ( CS - RCSe ) ) ) )", "obj1": 0.1920152091254753, "obj2": 0.6534950159827961}, {"determining": "( ( Min( ( ARS / ( Min( ( ARS - Min( CRS ,DDR ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) / ( ( ( FirstVNF_Mem / FirstVNF_Mem ) * FirstVNF_RAM_Server ) + ( BR - Const ) ) ) ) ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / CS ) * Max( MLU,( ( RRSe - ( RRSe * RCSe ) ) * Max( Max( ( Min( DS ,MLU ) * CS ),( CS + RCSe ) ),Max( MUC,( MLU - DS ) ) ) ) ) )", "obj1": 0.35361216730038025, "obj2": 0.4673019238479855}, {"determining": "Min( ( BR + FirstVNF_CPU_Server ) ,( ( ( FirstVNF_RAM + Min( ACS ,DDR ) ) * FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MUM ) - ( ( CS - ( ( CS / MUR ) * ( DS - RMSe ) ) ) * ( DS * RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.01673040892274923}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( ( MUR - RCSe ) * RRSe ),( DS + MUC ) )", "obj1": 0.49429657794676807, "obj2": 0.4238312837329353}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) / ( Max( ( Const * FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) + ( Max( CRS,BR ) * ( Min( FirstVNF_RAM ,RRS ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( ( ( CS * RCSe ) - Min( MUR ,MUM ) ) * ( ( ( ( RMSe + Max( RCSe,MUC ) ) / MUM ) - CS ) - MUM ) ) * ( RCSe - Min( RMSe ,DS ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.7021895186071894}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,Min( ( AMS / Min( DDR ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "( Max( DS,MUM ) * ( MLU + RMSe ) )", "obj1": 0.8878326996197718, "obj2": 0.06790921317964799}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Min( ( DS - MUR ) ,Min( MLU ,( ( DS * MUC ) / ( CS - RCSe ) ) ) )", "obj1": 0.4600760456273764, "obj2": 0.43911839800276775}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + ( Max( DS,MUM ) * ( RCSe - DS ) ) ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.00041345875697113796}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.6463878326996197, "obj2": 0.19681862086201987}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,( ( ( MRS / BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe + DS ) / ( RMSe * MUR ) )", "obj1": 0.9543726235741445, "obj2": 0.03013521616144816}, {"determining": "( Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) ) * Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( RCSe * RCSe ) + ( MUC / MUC ) ) )", "obj1": 0.8079847908745247, "obj2": 0.13276715761534874}, {"determining": "Max( ( ACS + FirstVNF_RAM ),( ( ( PN / MRS ) - FirstVNF_Mem_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / RRSe ) / ( MUC - ( DS * ( RMSe / ( ( CS - RRSe ) * ( MUR * MUM ) ) ) ) ) ) * MUR ) / ( ( ( MUM - ( ( ( MUC * ( RCSe - DS ) ) - ( Min( MUM ,MUM ) / ( DS + CS ) ) ) + Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( MUM,MLU ) ) ) ) ) * CS ) - RRSe ) )", "obj1": 0.10456273764258556, "obj2": 0.7537954832095819}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( MUC - Max( DS,DS ) ) )", "obj1": 0.12547528517110265, "obj2": 0.7367347781142384}, {"determining": "( ( MDR - ( DDR * ARS ) ) + Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( MLU * MUM ) - ( ( CS - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.4828897338403042, "obj2": 0.42564065731670886}, {"determining": "( ( ( Const - FirstVNF_CPU ) * PN ) - ( MRS / ACS ) )", "choosing": "( ( RRSe / RRSe ) - Min( RMSe ,MUC ) )", "obj1": 0.8041825095057035, "obj2": 0.1408553422863844}, {"determining": "( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ) * Min( Min( Min( PN ,ACS ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( MUR / MUM ) + MUR ) + ( Max( RMSe,( RRSe + ( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) ) / ( RRSe / MLU ) ) ) - ( ( Max( RCSe,MUR ) + RCSe ) / RRSe ) )", "obj1": 0.08745247148288973, "obj2": 0.7703811386535756}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "( ( Max( PN,FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( ( PN * CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( ( MUM - MLU ) * MUR ) )", "obj1": 0.0817490494296578, "obj2": 0.7774289695790144}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,Min( ( AMS - Max( FirstVNF_CPU_Server,MDR ) ) ,Max( PN,CRS ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.9125475285171103, "obj2": 0.05614472413564306}, {"determining": "( Max( ( ( MDR * ( AMS + ARS ) ) - PN ),FirstVNF_CPU ) - ( MRS / Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( DS / MUM ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) ,CS ) / ( MUC - Min( CS ,( ( RMSe + DS ) * MUR ) ) ) ) ) - ( DS - MLU ) )", "obj1": 0.11406844106463879, "obj2": 0.7465261196443501}, {"determining": "( ( Const - FirstVNF_CPU ) - ( Max( ( MDR * FirstVNF_Mem ),( CRS * FirstVNF_CPU ) ) + CRS ) )", "choosing": "Max( ( CS * MUR ),Min( RMSe ,MUC ) )", "obj1": 0.870722433460076, "obj2": 0.0797489786708345}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( Max( ( CRS / ( Const + CRS ) ),( AMS - AMS ) ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,MRS ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS * RRSe ) / Max( MUR,MUM ) ) ),( ( ( ( CS * RCSe ) - Min( MUR ,Min( ( MUC / ( CS / CS ) ) ,MUC ) ) ) * ( ( ( ( RMSe + Max( RCSe,MUC ) ) / MUM ) - CS ) - MUM ) ) * ( RCSe - Min( RMSe ,DS ) ) ) )", "obj1": 0.14258555133079848, "obj2": 0.725974872874535}, {"determining": "Max( ( FirstVNF_RAM * ACS ),( ( MDR + MRS ) - ( FirstVNF_CPU_Server + Const ) ) )", "choosing": "( ( DS * Min( ( MUC * RCSe ) ,Min( MUR ,RRSe ) ) ) / ( Max( ( Min( MLU ,RMSe ) * ( ( MUC - CS ) * RMSe ) ),RRSe ) / RCSe ) )", "obj1": 0.1482889733840304, "obj2": 0.7234079334820128}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( RMSe + MUM ) / ( MUR / MUM ) )", "obj1": 0.9258555133079848, "obj2": 0.05122761128269543}, {"determining": "Max( Max( FirstVNF_RAM_Server,( AMS * PN ) ),( FirstVNF_RAM / ACS ) )", "choosing": "( ( RCSe - MLU ) / ( CS - RCSe ) )", "obj1": 0.15779467680608364, "obj2": 0.7103356092544294}, {"determining": "( MRS - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( ( Max( RRS,PN ) - PN ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( ARS / PN ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / ( Min( ( MUM / ( Min( ( CS * MLU ) ,Min( Max( MUM,RCSe ) ,MUM ) ) / MUC ) ) ,DS ) - MUM ) )", "obj1": 0.935361216730038, "obj2": 0.045505641832558785}, {"determining": "Min( ( FirstVNF_CPU * ( FirstVNF_Mem - BR ) ) ,( Min( Min( PN ,PN ) ,( CRS * ARS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUR ) / ( MUC + RRSe ) ) / Min( ( RRSe / MUC ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( MUC * MLU ) ) )", "obj1": 0.058935361216730035, "obj2": 0.7981150919144542}, {"determining": "( ( ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( Const * FirstVNF_RAM ),( PN / FirstVNF_RAM ) ) + ( Max( CRS,BR ) * ( ( FirstVNF_RAM / ( PN + MDR ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( MUR,MUM ) ) ),( ( ( ( ( DS / ( MUM + Min( DS ,MUM ) ) ) * RCSe ) - Min( MUR ,MUM ) ) * ( ( ( ( RMSe + Max( RCSe,MUC ) ) / MUM ) - CS ) - MUM ) ) * ( RCSe - Min( RMSe ,DS ) ) ) )", "obj1": 0.1596958174904943, "obj2": 0.7085902525420379}, {"determining": "( MRS - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( ( Max( RRS,PN ) - PN ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( ARS / PN ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / ( Min( ( MUM / ( Min( ( CS * MLU ) ,Min( Max( MUM,RCSe ) ,MUM ) ) / MUC ) ) ,DS ) - MUM ) )", "obj1": 0.935361216730038, "obj2": 0.045505641832558785}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( MUR,MUM ) ) ),( ( ( ( CS * RCSe ) - Min( MUR ,MUM ) ) * ( ( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) / ( MUM + RMSe ) ) + CS ) - MUM ) ) * ( RCSe - Min( RMSe ,DS ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.7021895186071894}], "4": [{"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( ( ( RRS * CRS ) / Max( Max( FirstVNF_Mem_Server,( PN - Min( RRS ,PN ) ) ),( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) )", "choosing": "( ( ( Min( ( ( ( MUC + MUR ) * ( ( MUM / MUM ) / MUM ) ) - ( RMSe + Max( RMSe,( DS / MUM ) ) ) ) ,MLU ) + CS ) - RCSe ) - Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_CPU * RRS ) ) - ( ACS + CRS ) )", "choosing": "Max( ( CS / CS ),( ( DS * Min( Min( Max( Min( RCSe ,RMSe ),Min( MUC ,DS ) ) ,( MUM - RMSe ) ) ,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - ( FirstVNF_CPU / ( PN - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + RCSe ) / ( MLU + RCSe ) ) - ( MUC - MLU ) )", "obj1": 0.7604562737642585, "obj2": 0.09357589824818878}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( ( ( CS * RCSe ) - Min( MUR ,MUM ) ) * ( ( ( ( RMSe + Max( RCSe,MUC ) ) / MUM ) - CS ) - MUM ) ) * ( RCSe - Min( RMSe ,DS ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.16138229425534503}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( Min( MRS ,FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( ( RMSe / MUR ) / ( MUC + RRSe ) ) )", "obj1": 0.5038022813688213, "obj2": 0.380808098904351}, {"determining": "Max( ( ACS + FirstVNF_RAM ),( ( ( PN / MRS ) - FirstVNF_Mem_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / RRSe ) / ( MUC - ( DS * ( RMSe / ( ( CS - RRSe ) * ( MUR * MUM ) ) ) ) ) ) * MUR ) / ( ( ( MUM - ( ( ( MUC * ( RCSe - DS ) ) - ( Min( MUM ,MUM ) / ( DS + CS ) ) ) + Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( MUM,MLU ) ) ) ) ) * CS ) - RRSe ) )", "obj1": 0.10456273764258556, "obj2": 0.7537954832095819}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Const ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + ( Min( ( ( ( RCSe * RCSe ) + ( MUC / MUC ) ) / MLU ) ,( RCSe / RMSe ) ) * ( RCSe + DS ) ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.25452038149143463}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.655893536121673, "obj2": 0.19632266134879817}, {"determining": "( ( Const * FirstVNF_CPU ) - ( ( BR - AMS ) + PN ) )", "choosing": "Max( ( CS * ( MLU - MLU ) ),Min( CS ,MLU ) )", "obj1": 0.8650190114068441, "obj2": 0.08226634309899034}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM ) ,FirstVNF_Mem_Server ),Min( Min( ACS ,FirstVNF_RAM ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( RCSe * RCSe ) + ( MUC / MUC ) ) / MLU ) ,( RCSe / RMSe ) ) * ( CS / ( MUC + RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.4531067649139995}, {"determining": "( ( FirstVNF_RAM * Const ) - Min( MDR ,PN ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3574144486692015, "obj2": 0.454458202063233}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ACS ) ) ) * Min( Min( BR ,DDR ) ,RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( MUM + MLU ) / ( ( DS - RMSe ) + MUM ) ) / MUR ) ,( CS + MUC ) ) )", "obj1": 0.23954372623574144, "obj2": 0.5211518867319092}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( Min( DS ,MUM ) + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.6368821292775665, "obj2": 0.20232346975087614}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM ) + ACS ) ) ) * ( ACS + RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4984354782761403}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( Max( ACS,FirstVNF_CPU ) * Max( FirstVNF_CPU,( ( MDR * ( AMS + ARS ) ) - ( ( BR / FirstVNF_CPU_Server ) / ( MDR - Max( ( ( RRS - AMS ) + Const ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + MUC ) ) / ( ( MUM / ( RMSe / MLU ) ) + MUM ) ) + Max( MLU,MLU ) )", "obj1": 0.1844106463878327, "obj2": 0.5879741138723046}, {"determining": "( Max( ACS,FirstVNF_CPU ) * Max( FirstVNF_CPU,( ( MDR * ( AMS + ARS ) ) - ( ( BR / FirstVNF_CPU_Server ) / ( MDR - Max( ( ( RRS - AMS ) + Const ),FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + MUC ) ) / ( ( MUM / ( RMSe / MLU ) ) + MUM ) ) + Max( MLU,MLU ) )", "obj1": 0.1844106463878327, "obj2": 0.5879741138723046}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( Max( ( Const * FirstVNF_RAM ),Min( ( MDR - PN ) ,ARS ) ) + ( DDR - MRS ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( RCSe - ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ) * ( Max( MLU,RCSe ) * ( ( Min( ( RMSe + Max( RCSe,MUC ) ) ,MUM ) - CS ) - MUM ) ) ) )", "obj1": 0.21863117870722434, "obj2": 0.5557826107616748}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - ACS ) )", "choosing": "Max( ( ( MUR - RCSe ) * RRSe ),( DS + MUC ) )", "obj1": 0.49429657794676807, "obj2": 0.4238312837329353}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.48427317158328953}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,Min( ( AMS / Min( DDR ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "( Max( DS,MUM ) * ( MLU + RMSe ) )", "obj1": 0.8878326996197718, "obj2": 0.06790921317964799}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * FirstVNF_RAM_Server ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( Max( MUC,Max( MLU,MUC ) ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5731330450777464}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5741444866920152, "obj2": 0.2751932113386663}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Min( ( DS - MUR ) ,Min( MLU ,( ( DS * MUC ) / ( CS - RCSe ) ) ) )", "obj1": 0.4600760456273764, "obj2": 0.43911839800276775}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,( ( ( MRS / BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe + DS ) / ( RMSe * MUR ) )", "obj1": 0.9790874524714829, "obj2": 0.011700931020509515}, {"determining": "( ( Min( ( ARS / ( Min( ( ARS - Min( CRS ,DDR ) ) ,Max( ACS,FirstVNF_CPU_Server ) ) / ( ( ( FirstVNF_Mem / FirstVNF_Mem ) * FirstVNF_RAM_Server ) + ( BR - Const ) ) ) ) ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / CS ) * Max( MLU,( ( RRSe - ( RRSe * RCSe ) ) * Max( Max( ( Min( DS ,MLU ) * CS ),( CS + RCSe ) ),Max( MUC,( MLU - DS ) ) ) ) ) )", "obj1": 0.35361216730038025, "obj2": 0.4673019238479855}, {"determining": "( ( Min( AMS ,FirstVNF_Mem_Server ) * FirstVNF_CPU ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( Max( ( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ),MDR ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / DS )", "obj1": 0.055133079847908745, "obj2": 0.8071673401130499}, {"determining": "( MRS - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( Max( ( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ),MDR ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / ( Min( ( MUM / ( RCSe / MUC ) ) ,CS ) - MUM ) )", "obj1": 0.9315589353612167, "obj2": 0.041094904443322304}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,( ( ( MRS / BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe + DS ) / ( RMSe * MUR ) )", "obj1": 0.9543726235741445, "obj2": 0.03013521616144816}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - ( ( ( ( FirstVNF_Mem - PN ) + ( Max( FirstVNF_Mem,FirstVNF_RAM ) / ACS ) ) / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,Min( ( AMS - Max( FirstVNF_CPU_Server,MDR ) ) ,Max( PN,CRS ) ) ) ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,( MUM + MUC ) ) )", "obj1": 0.908745247148289, "obj2": 0.045979488715414366}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( Min( MRS ,FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem ,PN ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( ( RMSe / MUR ) / ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) ) )", "obj1": 0.4752851711026616, "obj2": 0.4238389793565398}, {"determining": "( ACS / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * RCSe ) / ( CS * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4770942801460861}, {"determining": "( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ) * Min( Min( Min( PN ,ACS ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( MUR / MUM ) + MUR ) + ( Max( RMSe,( RRSe + ( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) ) / ( RRSe / MLU ) ) ) - ( ( Max( RCSe,MUR ) + RCSe ) / RRSe ) )", "obj1": 0.08745247148288973, "obj2": 0.7703811386535756}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "Min( ( BR + FirstVNF_CPU_Server ) ,( ( ( FirstVNF_RAM + Min( ACS ,DDR ) ) * FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MUM ) - ( ( CS - ( ( CS / MUR ) * ( DS - RMSe ) ) ) * ( DS * RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.01673040892274923}, {"determining": "( ( Max( PN,FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( ( PN * CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( ( MUM - MLU ) * MUR ) )", "obj1": 0.0817490494296578, "obj2": 0.7774289695790144}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) ) ) ) )", "obj1": 0.5532319391634981, "obj2": 0.28495434595978214}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + ( Max( DS,MUM ) * ( RCSe - DS ) ) ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.00041345875697113796}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.5703422053231939, "obj2": 0.2834408758498944}, {"determining": "( ( Const - FirstVNF_CPU ) - ( Max( ( MDR * FirstVNF_Mem ),( CRS * FirstVNF_CPU ) ) + CRS ) )", "choosing": "Max( ( CS * MUR ),Min( RMSe ,MUC ) )", "obj1": 0.8726235741444867, "obj2": 0.07762892760646431}, {"determining": "Min( ( FirstVNF_CPU * ( FirstVNF_Mem - BR ) ) ,( Min( Min( PN ,PN ) ,( CRS * ARS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe * MUR ) / ( MUC + RRSe ) ) / Min( ( RRSe / MUC ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( MUC * MLU ) ) )", "obj1": 0.058935361216730035, "obj2": 0.7981150919144542}, {"determining": "( MRS - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( Max( ( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ),MDR ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,MUC ) )", "obj1": 0.9144486692015209, "obj2": 0.04434050641897775}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ACS ) ) * Max( RRS,( PN * MDR ) ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( RCSe + DS ) - DS ) - Min( ( DS / MUR ) ,( CS + MUC ) ) ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.30367423663192344}, {"determining": "( ( AMS * PN ) / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RCSe ) / ( CS * MUR ) )", "obj1": 0.3231939163498099, "obj2": 0.48298321871550415}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5418250950570342, "obj2": 0.2893533719946444}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.2990569905452398}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.6444866920152091, "obj2": 0.19978470615213373}], "5": [{"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( ARS + FirstVNF_Mem_Server ),( AMS - FirstVNF_CPU ) ) ) / ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( Max( RMSe,( MUC * RMSe ) ) - Max( CS,RMSe ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( ( ( RRS * CRS ) / Max( Max( FirstVNF_Mem_Server,( PN - Min( RRS ,PN ) ) ),( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) )", "choosing": "( ( ( Min( ( ( ( MUC + MUR ) * ( ( MUM / MUM ) / MUM ) ) - ( RMSe + Max( RMSe,( DS / MUM ) ) ) ) ,MLU ) + CS ) - RCSe ) - Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.7167300380228137, "obj2": 0.12159148183939827}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.655893536121673, "obj2": 0.19632266134879817}, {"determining": "( ( FirstVNF_RAM * Const ) - Min( MDR ,PN ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3916349809885932, "obj2": 0.4295965061544505}, {"determining": "Max( ( ACS + FirstVNF_RAM ),( ( ( PN / MRS ) - FirstVNF_Mem_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / RRSe ) / ( MUC - ( DS * ( RMSe / ( ( CS - RRSe ) * ( MUR * MUM ) ) ) ) ) ) * MUR ) / ( ( ( MUM - ( ( ( MUC * ( RCSe - DS ) ) - ( Min( MUM ,MUM ) / ( DS + CS ) ) ) + Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( MUM,MLU ) ) ) ) ) * CS ) - RRSe ) )", "obj1": 0.10456273764258556, "obj2": 0.7537954832095819}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - ( FirstVNF_CPU / ( PN - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + RCSe ) / ( MLU + RCSe ) ) - ( MUC - MLU ) )", "obj1": 0.7604562737642585, "obj2": 0.09357589824818878}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( Min( MRS ,FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( ( RMSe / MUR ) / ( MUC + RRSe ) ) )", "obj1": 0.5038022813688213, "obj2": 0.380808098904351}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( ( Const * FirstVNF_CPU ) - ( ( BR - AMS ) + PN ) )", "choosing": "Max( ( CS * ( MLU - MLU ) ),Min( CS ,MLU ) )", "obj1": 0.8650190114068441, "obj2": 0.08226634309899034}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + MDR ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.14638783269961977, "obj2": 0.630415887482733}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / BR ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / CS ) ,Min( RMSe ,CS ) ) ) + Max( MLU,MLU ) ),RMSe ) ) * ( ( RMSe / MUR ) / ( MUC + RRSe ) ) )", "obj1": 0.35361216730038025, "obj2": 0.4500442346329626}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Const ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + ( Min( ( ( ( RCSe * RCSe ) + ( MUC / MUC ) ) / MLU ) ,( RCSe / RMSe ) ) * ( RCSe + DS ) ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.25452038149143463}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.7395437262357415, "obj2": 0.10207883060658873}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.4619771863117871, "obj2": 0.40645929629116023}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( Min( DS ,MUM ) + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.6368821292775665, "obj2": 0.20232346975087614}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( Min( MRS ,FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem ,PN ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( ( RMSe / MUR ) / ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) ) )", "obj1": 0.4847908745247148, "obj2": 0.40104967607487935}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.23827086712906798}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( ( ( CS * RCSe ) - Min( MUR ,MUM ) ) * ( ( ( ( RMSe + Max( RCSe,MUC ) ) / MUM ) - CS ) - MUM ) ) * ( RCSe - ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5459114088594453}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,Min( ( AMS / Min( DDR ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "( Max( DS,MUM ) * ( MLU + RMSe ) )", "obj1": 0.8878326996197718, "obj2": 0.06790921317964799}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) * Max( RRS,( PN * MDR ) ) )", "choosing": "( ( RCSe / CS ) * ( MLU * MUM ) )", "obj1": 0.9277566539923955, "obj2": 0.0335292352948948}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( Min( BR ,FirstVNF_CPU_Server ) ,( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6144497525888877}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5741444866920152, "obj2": 0.2751932113386663}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.48427317158328953}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - ( ( ( ( FirstVNF_Mem - PN ) + ( Max( FirstVNF_Mem,FirstVNF_RAM ) / ACS ) ) / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,Min( ( AMS - Max( FirstVNF_CPU_Server,MDR ) ) ,Max( PN,CRS ) ) ) ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,( MUM + MUC ) ) )", "obj1": 0.908745247148289, "obj2": 0.045979488715414366}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,( ( ( MRS / BR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe + DS ) / ( RMSe * MUR ) )", "obj1": 0.9790874524714829, "obj2": 0.011700931020509515}, {"determining": "( ACS / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * RCSe ) / ( CS * MUR ) )", "obj1": 0.33460076045627374, "obj2": 0.47190991882641453}, {"determining": "( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ) * Min( Min( Min( PN ,ACS ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( MUR / MUM ) + MUR ) + ( Max( RMSe,( RRSe + ( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) ) / ( RRSe / MLU ) ) ) - ( ( Max( RCSe,MUR ) + RCSe ) / RRSe ) )", "obj1": 0.08745247148288973, "obj2": 0.7703811386535756}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ),MDR ) - FirstVNF_Mem_Server ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,Max( RMSe,( MUR - RMSe ) ) ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.5998954031116303}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.4619771863117871, "obj2": 0.40645929629116023}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.11216730038022814, "obj2": 0.6469350761095062}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "( ( Max( PN,FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( ( PN * CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( ( MUM - MLU ) * MUR ) )", "obj1": 0.0817490494296578, "obj2": 0.7774289695790144}, {"determining": "( Min( ( FirstVNF_RAM_Server - Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM ) + ACS ) ) ) * ( ACS + RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe / CS ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4984354782761403}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) )", "obj1": 0.34790874524714827, "obj2": 0.46366937400417885}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04182509505703422, "obj2": 0.8103470008858731}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.30798479087452474, "obj2": 0.4729539512863567}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( Max( ( Const * FirstVNF_RAM ),Min( ( MDR - PN ) ,ARS ) ) + ( DDR - MRS ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( RCSe - ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ) * ( Max( MLU,RCSe ) * ( ( Min( ( RMSe + Max( RCSe,MUC ) ) ,MUM ) - CS ) - MUM ) ) ) )", "obj1": 0.21863117870722434, "obj2": 0.5557826107616748}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.19961977186311788, "obj2": 0.5845227186402603}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * FirstVNF_RAM_Server ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( Max( MUC,Max( MLU,MUC ) ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5731330450777464}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM ) + ACS ) ) ) ) * Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) + Min( DS ,( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) ) ) ) )", "obj1": 0.6121673003802282, "obj2": 0.24213966504421625}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.5703422053231939, "obj2": 0.2834408758498944}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,( Max( CRS,ACS ) / Max( Const,DDR ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( MUR ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / ( RMSe + MUR ) ) + DS ) ) ) ) ),Min( MUC ,MUC ) )", "obj1": 0.9923954372623575, "obj2": 0.002373966280588572}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.20912547528517111, "obj2": 0.5598450846945239}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( ( FirstVNF_RAM * Const ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5064807385146696}, {"determining": "( ( Min( AMS ,FirstVNF_Mem_Server ) * FirstVNF_CPU ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - ( Max( ( FirstVNF_RAM * Max( PN,FirstVNF_Mem_Server ) ),MDR ) - FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / DS )", "obj1": 0.055133079847908745, "obj2": 0.8071673401130499}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5418250950570342, "obj2": 0.2893533719946444}], "6": [{"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( ARS + FirstVNF_Mem_Server ),( AMS - FirstVNF_CPU ) ) ) / ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( Max( RMSe,( MUC * RMSe ) ) - Max( CS,RMSe ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.7167300380228137, "obj2": 0.12159148183939827}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,( Min( ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ,CS ) / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.655893536121673, "obj2": 0.19632266134879817}, {"determining": "Max( ( ACS + FirstVNF_RAM ),( ( ( PN / MRS ) - FirstVNF_Mem_Server ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU / RRSe ) / ( MUC - ( DS * ( RMSe / ( ( CS - RRSe ) * ( MUR * MUM ) ) ) ) ) ) * MUR ) / ( ( ( MUM - ( ( ( MUC * ( RCSe - DS ) ) - ( Min( MUM ,MUM ) / ( DS + CS ) ) ) + Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( MUM,MLU ) ) ) ) ) * CS ) - RRSe ) )", "obj1": 0.10456273764258556, "obj2": 0.7537954832095819}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Min( FirstVNF_Mem ,PN ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.8212927756653993, "obj2": 0.052848976257927956}, {"determining": "( ( FirstVNF_RAM * Const ) - Min( MDR ,PN ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3916349809885932, "obj2": 0.4295965061544505}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( ( BR * ARS ) + MDR ) + PN ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS + ( Min( DS ,Min( MUC ,RMSe ) ) + MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.37181276356373083}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - ( ( ( ( FirstVNF_Mem - PN ) + ( Max( FirstVNF_Mem,FirstVNF_RAM ) / ACS ) ) / FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,Min( ( AMS - Max( FirstVNF_CPU_Server,MDR ) ) ,Max( PN,CRS ) ) ) ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,( MUM + MUC ) ) )", "obj1": 0.908745247148289, "obj2": 0.045979488715414366}, {"determining": "( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( DS + ( Min( DS ,Min( MUC ,RMSe ) ) + MUM ) ) )", "obj1": 0.7984790874524715, "obj2": 0.08006355071635664}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6302499610642062}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - Min( MUM ,CS ) ) / ( ( DS - RMSe ) + MUM ) )", "obj1": 0.6140684410646388, "obj2": 0.1983365203578256}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - ( FirstVNF_CPU / ( PN - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + RCSe ) / ( MLU + RCSe ) ) - ( MUC - MLU ) )", "obj1": 0.7604562737642585, "obj2": 0.09357589824818878}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( Min( BR ,FirstVNF_CPU_Server ) ,( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6144497525888877}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server - Max( FirstVNF_CPU_Server,RRS ) ) ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM ) + ACS ) ) ) * ( ACS + RRS ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "( Max( DS,( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe / CS ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.9600760456273765, "obj2": 0.020753116057432436}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.7395437262357415, "obj2": 0.10207883060658873}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.4619771863117871, "obj2": 0.40645929629116023}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( ( Min( ( ( ACS * MDR ) - BR ) ,Max( FirstVNF_Mem,( ( FirstVNF_RAM * Const ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( MDR ,DDR ) ) ) ,ACS ) ) )", "choosing": "( ( ( Max( MUC,( RMSe - ( ( MLU / ( DS / MUR ) ) - Max( DS,RMSe ) ) ) ) + ( ( ( RCSe + DS ) - DS ) - Min( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ,( CS + MUC ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.23574144486692014, "obj2": 0.529310540553677}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( RRSe / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1844106463878327, "obj2": 0.5909642412734687}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) * Max( RRS,( PN * MDR ) ) )", "choosing": "( ( RCSe / CS ) * ( MLU * MUM ) )", "obj1": 0.9277566539923955, "obj2": 0.0335292352948948}, {"determining": "( ( PN / FirstVNF_Mem_Server ) / ( Max( ( Const * FirstVNF_RAM ),Min( ( MDR - PN ) ,ARS ) ) + ( DDR - MRS ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU * RRSe ) ) - ( ( DS / RRSe ) / Max( ( RRSe - MUR ),( ( RMSe - RRSe ) - MLU ) ) ) ),( ( RCSe - ( ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) + ( ( MUM / RCSe ) / MUC ) ) ) * ( Max( MLU,RCSe ) * ( ( Min( ( RMSe + Max( RCSe,MUC ) ) ,MUM ) - CS ) - MUM ) ) ) )", "obj1": 0.21863117870722434, "obj2": 0.5557826107616748}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4464062132947587}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ARS,( ( ( ( Min( Const ,FirstVNF_CPU_Server ) / Min( Min( CRS ,MRS ) ,FirstVNF_CPU_Server ) ) * ACS ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC / MLU ) ) / ( ( CS + RRSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5622676907447203}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.11216730038022814, "obj2": 0.6469350761095062}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( Min( MRS ,FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem ,PN ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( ( RMSe / MUR ) / ( ( ( RMSe + MUR ) + RRSe ) / RRSe ) ) )", "obj1": 0.4847908745247148, "obj2": 0.40104967607487935}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5418250950570342, "obj2": 0.2893533719946444}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6121673003802282, "obj2": 0.23679382254482031}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2718631178707224, "obj2": 0.4924192710235466}, {"determining": "( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ) * Min( Min( Min( PN ,ACS ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( MUR / MUM ) + MUR ) + ( Max( RMSe,( RRSe + ( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) ) / ( RRSe / MLU ) ) ) - ( ( Max( RCSe,MUR ) + RCSe ) / RRSe ) )", "obj1": 0.08745247148288973, "obj2": 0.7703811386535756}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.4619771863117871, "obj2": 0.40645929629116023}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.33079847908745247, "obj2": 0.46053083040361237}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5741444866920152, "obj2": 0.2751932113386663}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( ( Const * FirstVNF_RAM ) + ACS ) ) ) ) * Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) + Min( DS ,( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) ) ) ) )", "obj1": 0.5874524714828897, "obj2": 0.2577975314998632}, {"determining": "( ( Max( PN,FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( ( PN * CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( ( MUM - MLU ) * MUR ) )", "obj1": 0.0817490494296578, "obj2": 0.7774289695790144}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) * ( ARS * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) * ( ( RMSe + RCSe ) / Min( ( Min( ( ( ( RCSe - RRSe ) + ( CS + MUM ) ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) / RRSe ) ,Min( RMSe ,CS ) ) ) )", "obj1": 0.17300380228136883, "obj2": 0.5970651025772958}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( Max( CRS,BR ) * ( Min( FirstVNF_RAM ,RRS ) + FirstVNF_CPU_Server ) ) + PN ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS + ( Min( DS ,Min( MUC ,RMSe ) ) + MUM ) ) )", "obj1": 0.48859315589353614, "obj2": 0.38006187910903333}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5532319391634981, "obj2": 0.28495434595978214}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,( Max( CRS,ACS ) / Max( Const,DDR ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( MUR - RMSe ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( MUR ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / ( RMSe + MUR ) ) + DS ) ) ) ) ),Min( MUC ,MUC ) )", "obj1": 0.9923954372623575, "obj2": 0.002373966280588572}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,Min( ( BR / CRS ) ,Max( PN,CRS ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS / ( ( ( MLU * Max( RMSe,( RMSe + Max( MUM,RRSe ) ) ) ) - ( DS + ( RMSe * ( ( MUM / RRSe ) / Min( MLU ,MUC ) ) ) ) ) * ( ( CS * ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) ) / ( ( ( RCSe + ( CS - RCSe ) ) - RRSe ) / ( ( MUR / Min( RMSe ,MUR ) ) + DS ) ) ) ) ),Min( MLU ,MUC ) )", "obj1": 0.9258555133079848, "obj2": 0.04492746250728735}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Min( Min( Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ,DDR ) ,Min( DDR ,ACS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( Max( RCSe,( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) + RCSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6064638783269962, "obj2": 0.2403882369125596}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.5703422053231939, "obj2": 0.2834408758498944}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.20912547528517111, "obj2": 0.5598450846945239}], "7": [{"determining": "( Min( Const ,ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / MUC ) * Min( ( RCSe + ( MUM + DS ) ) ,Min( MUM ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( FirstVNF_RAM_Server - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4752851711026616, "obj2": 0.34435091184686073}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( RMSe * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.6387832699619772, "obj2": 0.18686553854362836}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12167365961248658}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( MDR + ( FirstVNF_Mem_Server / BR ) ) + ( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) + AMS ) ),RRS ) )", "choosing": "( Max( CS,RCSe ) * ( RRSe - ( RCSe + MUR ) ) )", "obj1": 0.4619771863117871, "obj2": 0.40645929629116023}, {"determining": "( Min( ( FirstVNF_RAM_Server - ARS ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + Max( FirstVNF_RAM_Server,MRS ) ) ) ) * Min( Min( Min( PN ,ACS ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( MUR / MUM ) + MUR ) + ( Max( RMSe,( RRSe + ( ( MUR - DS ) + ( Min( DS ,MUM ) + CS ) ) ) ) / ( RRSe / MLU ) ) ) - ( ( Max( RCSe,MUR ) + RCSe ) / RRSe ) )", "obj1": 0.08745247148288973, "obj2": 0.7703811386535756}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.10266159695817491, "obj2": 0.677350355765707}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) * Max( RRS,( PN * MDR ) ) )", "choosing": "( ( RCSe / CS ) * ( MLU * MUM ) )", "obj1": 0.9277566539923955, "obj2": 0.0335292352948948}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) * Max( ( ( ( Max( FirstVNF_CPU,( Max( Const,DDR ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) * MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42025504242824074}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6302499610642062}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( Min( BR ,FirstVNF_CPU_Server ) ,( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) ),RRS ) ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) - ( DS - MLU ) )", "obj1": 0.5703422053231939, "obj2": 0.24757734461288694}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Min( FirstVNF_Mem ,PN ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.8212927756653993, "obj2": 0.052798148614671046}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( Min( BR ,FirstVNF_CPU_Server ) ,( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6144497525888877}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4464062132947587}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2718631178707224, "obj2": 0.4924192710235466}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ARS,( ( ( ( Min( Const ,FirstVNF_CPU_Server ) / Min( Min( CRS ,MRS ) ,FirstVNF_CPU_Server ) ) * ACS ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC / MLU ) ) / ( ( CS + RRSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5622676907447203}, {"determining": "( Max( Min( Min( PN ,ACS ) ,DDR ),FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + MUR ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.5893204715531689}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / CS ) + ( ( MUM * ( DS * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.38593155893536124, "obj2": 0.42206914428405096}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - ( FirstVNF_CPU / ( PN - ( FirstVNF_CPU_Server / MRS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + RCSe ) / ( MLU + RCSe ) ) - ( MUC - MLU ) )", "obj1": 0.7604562737642585, "obj2": 0.09357589824818878}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( ( ( ( RCSe / CS ) * DS ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( Min( RRSe ,RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.051330798479087454, "obj2": 0.8046118061705947}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + FirstVNF_Mem ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,Min( MUM ,CS ) ) ) ) )", "obj1": 0.5551330798479087, "obj2": 0.283729679339649}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.11216730038022814, "obj2": 0.6469350761095062}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( MLU + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2585551330798479, "obj2": 0.500705339760169}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5418250950570342, "obj2": 0.2893533719946444}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6121673003802282, "obj2": 0.23679382254482031}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( FirstVNF_RAM * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - Min( MDR ,PN ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / ( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.9657794676806084, "obj2": 0.01398507080215497}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - Min( MUM ,CS ) ) / ( ( DS - RMSe ) + MUM ) )", "obj1": 0.6140684410646388, "obj2": 0.1983365203578256}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.7167300380228137, "obj2": 0.12159148183939827}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.9923954372623575, "obj2": 0.0021108871964499757}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.33079847908745247, "obj2": 0.46053083040361237}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ),( AMS - FirstVNF_CPU ) ) ) / ARS ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.9448669201520913, "obj2": 0.023727615126398007}, {"determining": "( ( Max( PN,FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( ( PN * CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( ( MUM - MLU ) * MUR ) )", "obj1": 0.0817490494296578, "obj2": 0.7774289695790144}, {"determining": "( Max( FirstVNF_RAM,AMS ) - ( Min( FirstVNF_RAM_Server ,( MDR - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / ( RRS * MDR ) ) )", "choosing": "( ( ( ( ( RCSe * CS ) / Max( ( CS * ( MUC * DS ) ),( ( MUC * MUC ) - Max( MLU,CS ) ) ) ) + ( ( MUR - RCSe ) + RCSe ) ) - MUM ) - Min( MUM ,RCSe ) )", "obj1": 0.7338403041825095, "obj2": 0.10296841812702118}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Min( FirstVNF_Mem ,PN ) ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( ( ( ( ( ( RMSe + DS ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.8288973384030418, "obj2": 0.05034666698093357}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( ( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( ( FirstVNF_RAM * Const ) + ( FirstVNF_RAM + ARS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) ,ACS ) ) )", "choosing": "( ( ( ( ( ( RCSe + DS ) - DS ) - Min( ( ( RMSe + RCSe ) / Min( ( CS / RRSe ) ,Min( RMSe ,CS ) ) ) ,( CS + MUC ) ) ) + DS ) - DS ) - ( CS * MUR ) )", "obj1": 0.22433460076045628, "obj2": 0.533891228002264}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + Min( Min( BR ,( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) ,Min( DDR ,ACS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( Max( RCSe,Min( RRSe ,( CS / ( RRSe + RCSe ) ) ) ) + RCSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5988593155893536, "obj2": 0.24366911104303277}, {"determining": "( ( ( FirstVNF_RAM_Server / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( Min( RRSe ,RMSe ) * ( CS + RRSe ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.03612167300380228, "obj2": 0.8194771804899981}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( Max( FirstVNF_CPU_Server,CRS ) * ( ARS * DDR ) )", "choosing": "( ( ( ( ( RMSe + DS ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) * ( ( RMSe + RCSe ) / Min( ( Min( ( ( ( RCSe - RRSe ) + ( CS + MUM ) ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) / RRSe ) ,Min( RMSe ,CS ) ) ) )", "obj1": 0.17300380228136883, "obj2": 0.5970651025772958}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( ( Min( ( ( ACS * MDR ) - BR ) ,Max( FirstVNF_Mem,( ( FirstVNF_RAM * Const ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( MDR ,DDR ) ) ) ,ACS ) ) )", "choosing": "( ( ( Max( MUC,( RMSe - ( ( MLU / ( DS / MUR ) ) - Max( DS,RMSe ) ) ) ) + ( ( ( RCSe + DS ) - DS ) - Min( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ,( CS + MUC ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.23574144486692014, "obj2": 0.529310540553677}], "8": [{"determining": "( Min( Const ,ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / MUC ) * Min( ( RCSe + ( MUM + DS ) ) ,Min( MUM ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / MUC ) * Min( ( RCSe + ( MUM + DS ) ) ,Min( MUM ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( RMSe * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.6387832699619772, "obj2": 0.18686553854362836}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12167365961248658}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( Min( BR ,FirstVNF_CPU_Server ) ,( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) ),RRS ) ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) - ( DS - MLU ) )", "obj1": 0.5703422053231939, "obj2": 0.24757734461288694}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.5893536121673004, "obj2": 0.19002984947465176}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( ( MDR / FirstVNF_Mem_Server ) - ( BR * DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RCSe + RMSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MLU ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,( Max( MUR,MUR ) - ( RCSe - MUR ) ) ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6906055360039862}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3048580652237398}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4448669201520912, "obj2": 0.35912766453325845}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU / ( Max( Const,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,Min( RRS ,Min( FirstVNF_Mem ,MDR ) ) ) - ( ACS / FirstVNF_CPU ) ) ) * MDR ),RRS ) * ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( DS + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * ( ( ( MUM + RCSe ) / ( MUM + MUM ) ) / ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7687281326244428}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( FirstVNF_RAM_Server - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.47718631178707227, "obj2": 0.3410173932547337}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( MDR + ( FirstVNF_Mem_Server / BR ) ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.9220532319391636, "obj2": 0.033770486795190145}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6070953009452844}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + FirstVNF_Mem ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( MUM + Min( DS ,Min( MUM ,CS ) ) ) ) )", "obj1": 0.5551330798479087, "obj2": 0.283729679339649}, {"determining": "( Max( FirstVNF_RAM,AMS ) - ( Min( FirstVNF_RAM_Server ,( MDR - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / ( RRS * MDR ) ) )", "choosing": "( ( ( ( ( RCSe * CS ) / Max( ( CS * ( MUC * DS ) ),( ( MUC * MUC ) - Max( MLU,CS ) ) ) ) + ( ( MUR - RCSe ) + RCSe ) ) - MUM ) - Min( MUM ,RCSe ) )", "obj1": 0.7338403041825095, "obj2": 0.10296841812702118}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( Min( Max( ( PN + ( PN + ( PN / ARS ) ) ),RRS ) ,( PN + ( PN + MDR ) ) ) * Max( Max( CRS,Max( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM ),AMS ) ),Const ) )", "choosing": "( ( RCSe / CS ) + ( ( MUM * ( DS * ( MUC / ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) ) ) ) - MUR ) )", "obj1": 0.4296577946768061, "obj2": 0.3953527480993616}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.7604562737642585, "obj2": 0.09275834017329834}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2718631178707224, "obj2": 0.4924192710235466}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( PN * MDR ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.21673003802281368, "obj2": 0.5516711779026663}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.11216730038022814, "obj2": 0.6469350761095062}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ),( AMS - FirstVNF_CPU ) ) ) / ARS ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.9448669201520913, "obj2": 0.023727615126398007}, {"determining": "( Min( RRS ,( PN + ( PN * MDR ) ) ) * Min( Max( ( FirstVNF_RAM * CRS ),BR ) ,( DDR + ACS ) ) )", "choosing": "( ( ( Min( MUC ,Min( RMSe ,MUR ) ) + MUC ) / ( CS + MUC ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.36311787072243346, "obj2": 0.4429613813025213}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( FirstVNF_RAM_Server - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4752851711026616, "obj2": 0.34435091184686073}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.7167300380228137, "obj2": 0.12159148183939827}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( RRS ,( PN + ( PN + MDR ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6302499610642062}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.19011406844106463, "obj2": 0.5695164004862914}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( Max( Min( Min( PN ,ACS ) ,DDR ),FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + MUR ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.5893204715531689}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.33079847908745247, "obj2": 0.46053083040361237}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ARS,( ( ( ( Min( Const ,FirstVNF_CPU_Server ) / Min( Min( CRS ,MRS ) ,FirstVNF_CPU_Server ) ) * ACS ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC / MLU ) ) / ( ( CS + RRSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5622676907447203}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6302499610642062}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( ( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( ( FirstVNF_RAM * Const ) + ( FirstVNF_RAM + ARS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) ,ACS ) ) )", "choosing": "( ( ( ( ( ( RCSe + DS ) - DS ) - Min( ( ( RMSe + RCSe ) / Min( ( CS / RRSe ) ,Min( RMSe ,CS ) ) ) ,( CS + MUC ) ) ) + DS ) - DS ) - ( CS * MUR ) )", "obj1": 0.22433460076045628, "obj2": 0.533891228002264}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.10266159695817491, "obj2": 0.677350355765707}, {"determining": "( Min( RRS ,( PN + ( PN + MDR ) ) ) * Max( Max( CRS,Max( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM ),AMS ) ),Const ) )", "choosing": "( ( RCSe / CS ) + ( ( MUM * ( DS * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.40874524714828897, "obj2": 0.40682370497655235}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7813688212927756, "obj2": 0.07016965170830473}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) * Max( ( ( ( Max( FirstVNF_CPU,( Max( Const,DDR ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) * MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42025504242824074}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,( Max( Const,DDR ) / ( ( ( ( MRS / BR ) + ( MDR / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( ( Min( MLU ,MUR ) + MUM ),RRSe ) * MUR ) - RCSe ) / ( RMSe * MUR ) ) )", "obj1": 0.9828897338403042, "obj2": 0.00918876145344066}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( CS * ( MUC * MUR ) ) ,MUM ) ) ) )", "obj1": 0.7984790874524715, "obj2": 0.061698867625072935}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( MLU + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2585551330798479, "obj2": 0.500705339760169}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( ( Min( ( ( ACS * MDR ) - BR ) ,Max( FirstVNF_Mem,( ( FirstVNF_RAM * Const ) + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( MDR ,DDR ) ) ) ,ACS ) ) )", "choosing": "( ( ( Max( MUC,( RMSe - ( ( MLU / ( DS / MUR ) ) - Max( DS,RMSe ) ) ) ) + ( ( ( RCSe + DS ) - DS ) - Min( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ,( CS + MUC ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.23574144486692014, "obj2": 0.529310540553677}, {"determining": "( Max( FirstVNF_CPU_Server,( BR + CRS ) ) * ( FirstVNF_Mem + CRS ) )", "choosing": "( Min( RCSe ,CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( RRSe - MUM ) ) ) )", "obj1": 0.5418250950570342, "obj2": 0.2893533719946444}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM ) )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( ( MUC / RRSe ) + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.30247508014781893}], "9": [{"determining": "( Min( DDR ,ACS ) - ( FirstVNF_RAM_Server * ( ( DDR - ARS ) + RRS ) ) )", "choosing": "( ( ( ( MUC + MUR ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) - ( ( MUR - MUR ) * ( MUM / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / MUC ) * Min( ( RCSe + ( MUM + DS ) ) ,Min( MUM ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ) - ( Min( ( ( ( ( FirstVNF_CPU_Server + PN ) - PN ) * FirstVNF_Mem ) - MDR ) ,( MDR - ( AMS - ( ACS * AMS ) ) ) ) / Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe + DS ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( MUM ,DS ) ) ) / ( ( MLU / MUR ) + Max( ( ( ( ( RRSe / MUM ) + MUM ) + DS ) + RMSe ),MUR ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.23373945722233644}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( FirstVNF_RAM_Server - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.47718631178707227, "obj2": 0.3410173932547337}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.5893536121673004, "obj2": 0.19002984947465176}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU / ( Max( Const,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,Min( RRS ,Min( FirstVNF_Mem ,MDR ) ) ) - ( ACS / FirstVNF_CPU ) ) ) * MDR ),RRS ) * ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( DS + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * ( ( ( MUM + RCSe ) / ( MUM + MUM ) ) / ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7687281326244428}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( ( MDR / FirstVNF_Mem_Server ) - ( BR * DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RCSe + RMSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MLU ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,( Max( MUR,MUR ) - ( RCSe - MUR ) ) ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6906055360039862}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.655893536121673, "obj2": 0.16409457899763097}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6749049429657795, "obj2": 0.1450279454538541}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.6121673003802282, "obj2": 0.1765352239227295}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4448669201520912, "obj2": 0.35912766453325845}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( MDR + ( FirstVNF_Mem_Server / BR ) ) ) ) )", "choosing": "( ( ( Max( CS,RCSe ) + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.9220532319391636, "obj2": 0.033770486795190145}, {"determining": "( Min( ARS ,MDR ) - ( FirstVNF_CPU_Server / Min( ( ARS - AMS ) ,( MDR - PN ) ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC + Max( RCSe,CS ) ) ,Min( CS ,Max( MLU,RMSe ) ) ) ) - ( MUC - DS ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.8231939163498099, "obj2": 0.052239803766575055}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12167365961248658}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RMSe * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( RRSe ,( CS / ( RRSe + RCSe ) ) ) ) ) )", "obj1": 0.747148288973384, "obj2": 0.08754155963965789}, {"determining": "( Max( FirstVNF_RAM,AMS ) - ( Min( FirstVNF_RAM_Server ,( MDR - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / ( RRS * MDR ) ) )", "choosing": "( ( ( ( ( RCSe * CS ) / Max( ( CS * ( MUC * DS ) ),( ( MUC * MUC ) - Max( MLU,CS ) ) ) ) + ( ( MUR - RCSe ) + RCSe ) ) - MUM ) - Min( MUM ,RCSe ) )", "obj1": 0.7338403041825095, "obj2": 0.10296841812702118}, {"determining": "( Min( RRS ,( PN + ( PN * MDR ) ) ) * Min( Max( ( FirstVNF_RAM * CRS ),BR ) ,( DDR + ACS ) ) )", "choosing": "( ( ( Min( MUC ,Min( RMSe ,MUR ) ) + MUC ) / ( CS + MUC ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.36311787072243346, "obj2": 0.4429613813025213}, {"determining": "( Min( RRS ,( PN + ( PN + MDR ) ) ) * Max( Max( CRS,Max( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM ),AMS ) ),Const ) )", "choosing": "( ( RCSe / CS ) + ( ( MUM * ( DS * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.40874524714828897, "obj2": 0.40682370497655235}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( RRS ,( PN + ( PN + MDR ) ) ),RRS ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.15399239543726237, "obj2": 0.6104745872847226}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3821292775665399, "obj2": 0.42666863455429344}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.11216730038022814, "obj2": 0.6469350761095062}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.3806580407743139}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( Min( ARS ,( MDR - PN ) ) / ( PN + ( PN + MDR ) ) ),( AMS - FirstVNF_CPU ) ) ) / ARS ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( RRSe * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.9695817490494296, "obj2": 0.01965586980043679}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( FirstVNF_RAM_Server - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4752851711026616, "obj2": 0.34435091184686073}, {"determining": "( ( FirstVNF_RAM - Max( FirstVNF_CPU,( Max( Const,DDR ) / ( ( ( ( MRS / BR ) + ( MDR / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem_Server ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( ( Min( MLU ,MUR ) + MUM ),RRSe ) * MUR ) - RCSe ) / ( RMSe * MUR ) ) )", "obj1": 0.9828897338403042, "obj2": 0.00918876145344066}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) * FirstVNF_RAM_Server ) + FirstVNF_CPU ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( BR / FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) ) )", "choosing": "( ( ( ( ( ( MUC / MUR ) / RRSe ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + Min( CS ,RRSe ) ) ,( Min( MUC ,MUC ) + MUC ) ) / ( ( RRSe / RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7924483341465572}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2718631178707224, "obj2": 0.4924192710235466}, {"determining": "Min( ( PN / ACS ) ,( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM ) * AMS ) )", "choosing": "( ( ( ( ( ( RCSe / CS ) * CS ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( ( ( DS * RRSe ) + DS ) / ( Min( RRSe ,RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7911287127857964}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) * Max( ( ( ( Max( FirstVNF_CPU,( Max( Const,DDR ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) * MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.39543726235741444, "obj2": 0.42025504242824074}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.33079847908745247, "obj2": 0.46053083040361237}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.2908745247148289, "obj2": 0.48428895699336033}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,MLU ) ) ) - ( MUC - MLU ) )", "obj1": 0.10266159695817491, "obj2": 0.677350355765707}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7813688212927756, "obj2": 0.07016965170830473}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6302499610642062}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( RRS ,( PN + ( PN + MDR ) ) ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6302499610642062}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ),( AMS - FirstVNF_CPU ) ) ) / ARS ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.9448669201520913, "obj2": 0.023727615126398007}, {"determining": "( Max( Min( Min( PN ,ACS ) ,DDR ),FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + MUR ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.5893204715531689}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU / ( Max( Const,FirstVNF_RAM_Server ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,Min( RRS ,Min( FirstVNF_Mem ,MDR ) ) ) - ( ACS / FirstVNF_CPU ) ) ) * MDR ),RRS ) * ( ( MDR * FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( ( DS + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * ( ( ( MUM + RCSe ) / ( MUM + MUM ) ) / ( MLU + RCSe ) ) ) ) ) )", "obj1": 0.04182509505703422, "obj2": 0.8091996011384929}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( RCSe / ( RRSe + RCSe ) ) ) - ( DS - MLU ) )", "obj1": 0.7129277566539924, "obj2": 0.11526156696891265}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.22813688212927757, "obj2": 0.5279891756273419}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6070953009452844}, {"determining": "( ( ( ( Min( DDR ,Const ) + PN ) - ARS ) / FirstVNF_CPU_Server ) - ( AMS + ( Const + CRS ) ) )", "choosing": "( ( ( ( ( Min( ( MUC / ( RMSe * RMSe ) ) ,Min( ( MUC * MUM ) ,CS ) ) / ( RMSe + RCSe ) ) - ( MUC - MLU ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.188212927756654, "obj2": 0.5742706812307081}], "10": [{"determining": "( Min( ( DDR + MDR ) ,ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Max( MLU,MUR ) ,Min( RMSe ,CS ) ) / ( RMSe * RCSe ) ) - ( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,ACS ) - ( FirstVNF_RAM_Server * ( ( DDR - ARS ) + RRS ) ) )", "choosing": "( ( ( ( MUC + MUR ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) - ( ( MUR - MUR ) * ( MUM / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ) - ( Min( ( ( ( ( FirstVNF_CPU_Server + PN ) - PN ) * FirstVNF_Mem ) - MDR ) ,( MDR - ( AMS - ( ACS * AMS ) ) ) ) / Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe + DS ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( MUM ,DS ) ) ) / ( ( MLU / MUR ) + Max( ( ( ( ( RRSe / MUM ) + MUM ) + DS ) + RMSe ),MUR ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.23373945722233644}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3350076857133849}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM_Server,( Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) * CRS ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,Max( Min( ( ARS + FirstVNF_Mem ) ,FirstVNF_RAM ),AMS ) )", "choosing": "( ( ( ( ( ( RCSe / CS ) * DS ) + RRSe ) / ( RMSe / MUR ) ) / Min( ( MUC / MUM ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,( Min( ( ( MUC - RCSe ) + CS ) ,( Min( MUR ,MUC ) + MUC ) ) / ( Min( RRSe ,RMSe ) * ( CS + RRSe ) ) ) ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.07984790874524715, "obj2": 0.7821617893028542}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.5893536121673004, "obj2": 0.19002984947465176}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.21900923848451762}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6749049429657795, "obj2": 0.1450279454538541}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.6121673003802282, "obj2": 0.1765352239227295}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4448669201520912, "obj2": 0.35912766453325845}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ARS * ( ( FirstVNF_RAM - PN ) * ( FirstVNF_CPU + MDR ) ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( Min( Min( CS ,MUR ) ,MUC ) ,( MUC / ( ( MUR / RCSe ) - ( MLU - MUM ) ) ) ) ,( ( ( ( MUM / CS ) + Min( RCSe ,MUC ) ) * CS ) / ( ( Max( MUM,CS ) + DS ) / MUR ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9201520912547528, "obj2": 0.034571180672306794}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - ( FirstVNF_CPU_Server - ( ACS * AMS ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11975781364857674}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.22813688212927757, "obj2": 0.5279891756273419}, {"determining": "( Max( Min( Min( PN ,ACS ) ,DDR ),FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + MUR ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.5893204715531689}, {"determining": "( Min( RRS ,( PN + ( PN * MDR ) ) ) * Min( Max( ( FirstVNF_RAM * CRS ),BR ) ,( DDR + ACS ) ) )", "choosing": "( ( ( Min( MUC ,Min( RMSe ,MUR ) ) + MUC ) / ( CS + MUC ) ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * MUR ) ) ) )", "obj1": 0.36311787072243346, "obj2": 0.4429613813025213}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU_Server / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.3806580407743139}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,( MDR - PN ) ) / ( Max( Max( MDR,MDR ),DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe * ( ( RMSe - MLU ) / ( MUM + Min( ( CS / ( RRSe + RCSe ) ) ,RRSe ) ) ) )", "obj1": 0.720532319391635, "obj2": 0.10254599346813799}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3821292775665399, "obj2": 0.42666863455429344}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( Max( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + Max( FirstVNF_RAM,( ( PN - PN ) / ( ACS - FirstVNF_RAM ) ) ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( ( CS - ( MLU - ( ( ( MLU / DS ) + DS ) * DS ) ) ) * ( ( Max( RCSe,MUR ) + RCSe ) + Min( MUR ,MUM ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.16878433790638706}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),Min( ( ( RRS - DDR ) - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / ( RMSe + MLU ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RCSe ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6400520526085005}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.655893536121673, "obj2": 0.16409457899763097}, {"determining": "( Max( ( BR / CRS ),FirstVNF_CPU_Server ) * Max( RRS,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( MUR - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( ( MLU + MUM ) ,MUC ) )", "obj1": 0.21863117870722434, "obj2": 0.5509631779344262}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( FirstVNF_RAM_Server - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.4714828897338403, "obj2": 0.3416574699494465}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Min( DDR ,ACS ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.9790874524714829, "obj2": 0.008650727245706816}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.387794320893829}, {"determining": "( Min( ARS ,MDR ) - ( FirstVNF_CPU_Server / Min( ( ARS - AMS ) ,( MDR - PN ) ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC + Max( RCSe,CS ) ) ,Min( CS ,Max( MLU,RMSe ) ) ) ) - ( MUC - DS ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.8231939163498099, "obj2": 0.052239803766575055}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( Min( ARS ,( MDR - PN ) ) / ( PN + ( PN + MDR ) ) ),( AMS - FirstVNF_CPU ) ) ) / ARS ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( RRSe * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.9695817490494296, "obj2": 0.01965586980043679}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( Max( ( RMSe - RCSe ),( DS + Max( DS,( RRSe * Max( ( DS - Min( RRSe ,MUM ) ),RMSe ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.39825401166438545}, {"determining": "( ( ( FirstVNF_CPU - Const ) * PN ) - ( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * CRS ),Max( ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ),( AMS - FirstVNF_CPU ) ) ) / ARS ) ) )", "choosing": "( ( ( ( ( ( MUM / RMSe ) + ( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) - RCSe ) ) / Max( ( CS * ( CS * MUR ) ),( ( MUC * MUC ) - Max( CS,MLU ) ) ) ) + CS ) - MUM ) - Min( RMSe ,MUC ) )", "obj1": 0.9448669201520913, "obj2": 0.023727615126398007}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( Max( ( RRS * FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( AMS - Min( BR ,DDR ) ) ) ) / ARS ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.3288973384030418, "obj2": 0.4546267748144273}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6070953009452844}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.2908745247148289, "obj2": 0.48428895699336033}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,( PN + ( PN + MDR ) ) ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUR * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.14638783269961977, "obj2": 0.6194698861369504}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( ( ( Min( DDR ,Const ) + PN ) - ARS ) / FirstVNF_CPU_Server ) - ( AMS + ( Const + CRS ) ) )", "choosing": "( ( ( ( ( Min( ( MUC / ( RMSe * RMSe ) ) ,Min( ( MUC * MUM ) ,CS ) ) / ( RMSe + RCSe ) ) - ( MUC - MLU ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.188212927756654, "obj2": 0.5742706812307081}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ) - ( Min( ( ( ( ( FirstVNF_CPU_Server + PN ) - PN ) * FirstVNF_Mem ) - MDR ) ,( MDR - ( AMS - ( ACS * AMS ) ) ) ) / Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MLU / MUR ) ) ) )", "obj1": 0.8174904942965779, "obj2": 0.054949835039181785}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2718631178707224, "obj2": 0.4924192710235466}, {"determining": "( FirstVNF_RAM_Server - ( Min( ARS ,( MDR - DDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) - ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.1958174904942966, "obj2": 0.5696105691670333}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8076871265117758}], "11": [{"determining": "( Min( ( Min( MRS ,Min( FirstVNF_Mem ,Max( MRS,FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Max( DS,RMSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR + MDR ) ,ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Max( MLU,MUR ) ,Min( RMSe ,CS ) ) / ( RMSe * RCSe ) ) - ( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * AMS )", "choosing": "( ( RCSe / CS ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5171102661596958, "obj2": 0.30335656926621857}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * ( ARS + FirstVNF_Mem ) ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RMSe * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / Min( DS ,MUR ) ) )", "obj1": 0.4467680608365019, "obj2": 0.3323317880317636}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( PN / ARS ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.051330798479087454, "obj2": 0.7333337603347888}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ) - ( Min( ( ( ( ( FirstVNF_CPU_Server + PN ) - PN ) * FirstVNF_Mem ) - MDR ) ,( MDR - ( AMS - ( ACS * AMS ) ) ) ) / Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe + DS ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( MUM ,DS ) ) ) / ( ( MLU / MUR ) + Max( ( ( ( ( RRSe / MUM ) + MUM ) + DS ) + RMSe ),MUR ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.23373945722233644}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6749049429657795, "obj2": 0.1450279454538541}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.5893536121673004, "obj2": 0.19002984947465176}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / Min( DS ,MUM ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11459145522771468}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8076871265117758}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.21900923848451762}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( Max( ( RMSe - RCSe ),( DS + Max( DS,( RRSe * Max( ( DS - Min( RRSe ,MUM ) ),RMSe ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.39825401166438545}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9448669201520913, "obj2": 0.022336442840985873}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3821292775665399, "obj2": 0.42666863455429344}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ARS * ( ( FirstVNF_RAM - PN ) * ( FirstVNF_CPU + MDR ) ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( Min( Min( CS ,MUR ) ,MUC ) ,( MUC / ( ( MUR / RCSe ) - ( MLU - MUM ) ) ) ) ,( ( ( ( MUM / CS ) + Min( RCSe ,MUC ) ) * CS ) / ( ( Max( MUM,CS ) + DS ) / MUR ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9144486692015209, "obj2": 0.0412136082663668}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,( MDR - PN ) ) / ( Max( Max( MDR,MDR ),DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe * ( ( RMSe - MLU ) / ( MUM + Min( ( CS / ( RRSe + RCSe ) ) ,RRSe ) ) ) )", "obj1": 0.720532319391635, "obj2": 0.10254599346813799}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( ( ( MRS - MDR ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / Max( DS,Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( MUR ,Min( RRSe ,MLU ) ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.42585551330798477, "obj2": 0.3443118158565766}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6070953009452844}, {"determining": "( ( RRS - ( PN + ( PN + MDR ) ) ) * Max( Max( ( BR - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_RAM ,( ARS + FirstVNF_Mem ) ),AMS ) ),Const ) )", "choosing": "( ( RCSe / Max( MUR,Max( CS,Max( ( ( Max( RRSe,MUM ) - ( MUR / RRSe ) ) / DS ),( ( RMSe * MUC ) * RMSe ) ) ) ) ) * ( ( MUM * ( ( MLU + RMSe ) * ( MUC / RRSe ) ) ) - MUR ) )", "obj1": 0.10646387832699619, "obj2": 0.6586978219970234}, {"determining": "( Min( RRS ,( PN + ( PN + MDR ) ) ) * Max( ( Min( ( FirstVNF_Mem - BR ) ,( ( ( MDR + FirstVNF_CPU ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ),Const ) )", "choosing": "( ( ( Min( MUC ,Min( DS ,MUR ) ) + MUC ) / CS ) * ( MLU * ( ( RMSe + DS ) / ( RMSe * Max( ( DS / MUR ),( CS * Max( MLU,MUR ) ) ) ) ) ) )", "obj1": 0.42395437262357416, "obj2": 0.3690447586880807}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - BR ) ) / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( ( MUC / Max( CS,RCSe ) ) + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9695817490494296, "obj2": 0.004846587763641554}, {"determining": "( Max( Min( Min( PN ,ACS ) ,DDR ),FirstVNF_RAM_Server ) * Max( RRS,( ( ( ACS * ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) - RRS ) + FirstVNF_RAM ) ) )", "choosing": "( ( ( RMSe + MUR ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUC - MLU ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.5893204715531689}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.7946768060836502, "obj2": 0.06800713185496318}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.655893536121673, "obj2": 0.16409457899763097}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.41634980988593157, "obj2": 0.387794320893829}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( Max( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + Max( FirstVNF_RAM,( ( PN - PN ) / ( ACS - FirstVNF_RAM ) ) ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( ( CS - ( MLU - ( ( ( MLU / DS ) + DS ) * DS ) ) ) * ( ( Max( RCSe,MUR ) + RCSe ) + Min( MUR ,MUM ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.16878433790638706}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4407468284338854}, {"determining": "( Max( FirstVNF_CPU_Server,( BR / CRS ) ) * Max( RRS,( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) * MDR ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.2908745247148289, "obj2": 0.48428895699336033}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),Min( ( ( RRS - DDR ) - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / ( RMSe + MLU ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RCSe ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6400520526085005}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,( PN + ( PN + MDR ) ) ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUR * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.14638783269961977, "obj2": 0.6194698861369504}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC + Max( RCSe,CS ) ) ,Min( CS ,Max( MLU,RMSe ) ) ) ) - ( MUC - DS ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.6159695817490495, "obj2": 0.1734444864955509}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.12547528517110265, "obj2": 0.6354848639912735}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2718631178707224, "obj2": 0.4924192710235466}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.14068441064638784, "obj2": 0.6264709300391573}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_CPU - ( RRS / AMS ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) - ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) )", "obj1": 0.9277566539923955, "obj2": 0.0330725369403432}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}], "12": [{"determining": "( FirstVNF_RAM_Server - ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_Mem ) - BR ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MRS ,Min( FirstVNF_Mem ,Max( MRS,FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ACS ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Max( DS,RMSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8076871265117758}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.21900923848451762}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN / ARS ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.051330798479087454, "obj2": 0.7321999158367704}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( Max( ( RMSe - RCSe ),( DS + Max( DS,( RRSe * Max( ( DS - Min( RRSe ,MUM ) ),RMSe ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.39825401166438545}, {"determining": "( ( Min( ( Max( FirstVNF_Mem,( Max( PN,Min( FirstVNF_CPU ,Const ) ) + ACS ) ) - BR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.5874524714828897, "obj2": 0.18976699542411957}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ,( MDR - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / Min( DS ,MUM ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7034220532319392, "obj2": 0.11459145522771468}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3821292775665399, "obj2": 0.42666863455429344}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( ( ( MRS - MDR ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / Max( DS,Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( MUR ,Min( RRSe ,MLU ) ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.42585551330798477, "obj2": 0.3443118158565766}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,RMSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 0.41254752851711024, "obj2": 0.35734014959415106}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6749049429657795, "obj2": 0.1450279454538541}, {"determining": "( ( Min( FirstVNF_Mem ,Min( BR ,DDR ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_Mem_Server - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC + Max( RCSe,CS ) ) ,Min( RRSe ,RRSe ) ) ) - ( DS - MUC ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( RCSe / RCSe ) )", "obj1": 0.8250950570342205, "obj2": 0.051626822731424306}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( Min( ( FirstVNF_Mem - BR ) ,( ( ( CRS + ( Const - ( RRS + ARS ) ) ) + Const ) * ( FirstVNF_CPU + Max( FirstVNF_Mem_Server,AMS ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( Min( MUM ,( RMSe + RRSe ) ) - ( Max( ( DS / ( ( ( CS - Max( DS,RCSe ) ) / MUM ) + RRSe ) ),( CS * Max( MLU,MUR ) ) ) * MUR ) )", "obj1": 0.32509505703422054, "obj2": 0.4726954189115569}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,( MDR - PN ) ) / ( Max( Max( MDR,MDR ),DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe * ( ( RMSe - MLU ) / ( MUM + Min( ( CS / ( RRSe + RCSe ) ) ,RRSe ) ) ) )", "obj1": 0.720532319391635, "obj2": 0.10254599346813799}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( FirstVNF_CPU - ( ARS * ( ( FirstVNF_RAM - PN ) * ( FirstVNF_CPU + MDR ) ) ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( Min( Min( CS ,MUR ) ,MUC ) ,( MUC / ( ( MUR / RCSe ) - ( MLU - MUM ) ) ) ) ,( ( ( ( MUM / CS ) + Min( RCSe ,MUC ) ) * CS ) / ( ( Max( MUM,CS ) + DS ) / MUR ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9144486692015209, "obj2": 0.0412136082663668}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09505703422053231, "obj2": 0.6497147395247511}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4407468284338854}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,( FirstVNF_Mem - Min( ( FirstVNF_Mem * ARS ) ,CRS ) ) ) ) - ( Min( ( ( ( ( FirstVNF_CPU_Server + PN ) - PN ) * FirstVNF_Mem ) - MDR ) ,( MDR - ( AMS - ( ACS * AMS ) ) ) ) / Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe + DS ) / MUC ) * ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( MUM ,DS ) ) ) / ( ( MLU / MUR ) + Max( ( ( ( ( RRSe / MUM ) + MUM ) + DS ) + RMSe ),MUR ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.23373945722233644}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( ( CRS - FirstVNF_RAM ) * CRS ) - ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( MDR - PN ) ) / AMS ) )", "choosing": "( ( ( ( RCSe + DS ) - ( RMSe / ( MLU / CS ) ) ) - ( CS * MUR ) ) * ( ( MLU * DS ) / CS ) )", "obj1": 0.19391634980988592, "obj2": 0.5768780715063105}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - BR ) ) / AMS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( ( MUC / Max( CS,RCSe ) ) + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9695817490494296, "obj2": 0.004846587763641554}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Max( ACS,MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( Min( Max( ( DS / Max( ( RCSe + MUC ),Max( MUC,RRSe ) ) ),( MLU / Min( Max( RMSe,MUC ) ,RRSe ) ) ) ,Min( RMSe ,CS ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9448669201520913, "obj2": 0.022222520539002685}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( Max( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + Max( FirstVNF_RAM,( ( PN - PN ) / ( ACS - FirstVNF_RAM ) ) ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( ( CS - ( MLU - ( ( ( MLU / DS ) + DS ) * DS ) ) ) * ( ( Max( RCSe,MUR ) + RCSe ) + Min( MUR ,MUM ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.16878433790638706}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.8022813688212928, "obj2": 0.0653398388995089}, {"determining": "( ( ( MDR * Const ) - FirstVNF_CPU ) * Max( ( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( CS + Min( ( ( CS + MUC ) / ( ( RMSe * DS ) * ( RCSe + MUR ) ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7642585551330798, "obj2": 0.08605816321637345}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.12547528517110265, "obj2": 0.6354848639912735}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6653992395437263, "obj2": 0.15030074985688513}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( Const * MDR ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,( ( RMSe + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.14068441064638784, "obj2": 0.6264709300391573}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.655893536121673, "obj2": 0.16409457899763097}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ARS ) ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6070953009452844}, {"determining": "( Max( FirstVNF_CPU_Server,( PN * FirstVNF_CPU ) ) * Max( ( FirstVNF_RAM - PN ),Min( Min( DDR ,ACS ) ,Min( BR ,DDR ) ) ) )", "choosing": "( ( Min( ( DS * RRSe ) ,RCSe ) - ( MUR / ( CS / Max( RMSe,MUC ) ) ) ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( Min( ( MUC / ( ( MUR - RCSe ) - ( MLU - MUM ) ) ) ,Min( Min( CS ,MUR ) ,MUC ) ) ,MUM ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.5713817877049802}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.7946768060836502, "obj2": 0.06800713185496318}, {"determining": "( Min( ( DDR + MDR ) ,ACS ) - ( ( FirstVNF_CPU + ARS ) * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( Max( MLU,MUR ) ,Min( RMSe ,CS ) ) / ( RMSe * RCSe ) ) - ( MUC - ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0013256134154024338}], "13": [{"determining": "( Min( ( Min( MRS ,Min( FirstVNF_Mem ,Max( MRS,FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( ( DS + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_Mem ) - BR ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) - ( MUC - MLU ) ) + ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) - ( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU + ARS ) ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / MUM ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.49429657794676807, "obj2": 0.25586780656103625}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8076871265117758}, {"determining": "( Max( FirstVNF_CPU_Server,( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN / ARS ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.051330798479087454, "obj2": 0.7321999158367704}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MLU + ( ( MUR * CS ) / MUC ) ) ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9011406844106464, "obj2": 0.04105967006337002}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Max( ACS,MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( Min( Max( ( DS / Max( ( RCSe + MUC ),Max( MUC,RRSe ) ) ),( MLU / Min( Max( RMSe,MUC ) ,RRSe ) ) ) ,Min( RMSe ,CS ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9448669201520913, "obj2": 0.022222520539002685}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( ( ( MRS - MDR ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / Max( DS,Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( MUR ,Min( RRSe ,MLU ) ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.42585551330798477, "obj2": 0.3443118158565766}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4031620711578665}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU - ( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( Max( ( RMSe - RCSe ),( DS + Max( DS,( RRSe * Max( ( DS - Min( RRSe ,MUM ) ),RMSe ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.39825401166438545}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09505703422053231, "obj2": 0.6497147395247511}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.3593155893536122, "obj2": 0.4267761196154571}, {"determining": "( ( ( CRS - FirstVNF_RAM ) * CRS ) - ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( MDR - PN ) ) / AMS ) )", "choosing": "( ( ( ( RCSe + DS ) - ( RMSe / ( MLU / CS ) ) ) - ( CS * MUR ) ) * ( ( MLU * DS ) / CS ) )", "obj1": 0.19391634980988592, "obj2": 0.5768780715063105}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.20723938238660844}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Max( DS,RMSe ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.596403920698014}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.12577687716667307}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,RMSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 0.41254752851711024, "obj2": 0.35734014959415106}, {"determining": "( ( Const + PN ) - ( Min( Min( MDR ,PN ) ,( ARS - DDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( Min( CS ,RCSe ) / RRSe ) * MUR ) + ( ( ( ( RCSe + MUM ) - Min( MUC ,RCSe ) ) / Min( RCSe ,MUM ) ) / RRSe ) ) ,DS ) * DS ) * ( RCSe / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.41064638783269963, "obj2": 0.3801980994115205}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Max( ( PN + MDR ),RRS ),RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / ( RCSe + DS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.058935361216730035, "obj2": 0.7049890435564008}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( Max( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + Max( FirstVNF_RAM,( ( PN - PN ) / ( ACS - FirstVNF_RAM ) ) ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( ( CS - ( MLU - ( ( ( MLU / DS ) + DS ) * DS ) ) ) * ( ( Max( RCSe,MUR ) + RCSe ) + Min( MUR ,MUM ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.16878433790638706}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.21900923848451762}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( ACS * AMS ) - ( Min( ARS ,( Max( DDR,( MDR / FirstVNF_Mem ) ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( AMS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( RRSe + RMSe ) * RCSe ) / ( CS * MUR ) ) + ( CS * Max( ( DS * RMSe ),Max( MUM,DS ) ) ) ) / RRSe ) - ( MUM + ( MUC - MLU ) ) ) / Max( Min( ( CS + ( Max( CS,MUC ) + RMSe ) ) ,CS ),RRSe ) ) )", "obj1": 0.30798479087452474, "obj2": 0.46318224017179777}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,( MDR - PN ) ) / ( Max( Max( MDR,MDR ),DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe * ( ( RMSe - MLU ) / ( MUM + Min( ( CS / ( RRSe + RCSe ) ) ,RRSe ) ) ) )", "obj1": 0.720532319391635, "obj2": 0.10254599346813799}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU / CRS ) ) * AMS ) - Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( RCSe + DS ) - ( RMSe / ( MLU / CS ) ) ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + ( ( RMSe + RCSe ) / Min( ( MUC / ( Min( CS ,MUR ) - RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5099822909909006}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( PN * Min( BR ,DDR ) ) + MDR ) )", "choosing": "( ( ( RCSe + DS ) / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6408011655741782}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( PN * Max( ARS,MRS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( MLU ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9600760456273765, "obj2": 0.016199485964643698}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.12927756653992395, "obj2": 0.6232299045663484}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.8269961977186312, "obj2": 0.050508187142091175}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.08365019011406843, "obj2": 0.6873323960629756}, {"determining": "( ( Min( ( PN + MDR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6539923954372624, "obj2": 0.1604420593411311}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.155893536121673, "obj2": 0.5969006799955304}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.8003802281368821, "obj2": 0.06498665340257312}], "14": [{"determining": "( Min( ( Min( MRS ,Min( FirstVNF_Mem ,Max( MRS,FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ( Min( Min( ( ARS - MDR ) ,( MDR - PN ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( ( DS + RCSe ) / Min( CS ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MRS ,Min( FirstVNF_Mem ,Max( MRS,FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( ( DS + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU + ARS ) ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / MUM ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.49429657794676807, "obj2": 0.25586780656103625}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.2873442701912098}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.41254752851711024, "obj2": 0.33709757520466754}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) - ( RRSe + RMSe ) ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,( MLU / MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7997719136063873}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.7292991644125706}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( ACS * AMS ) - ( Min( ARS ,( Max( DDR,( MDR / FirstVNF_Mem ) ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( AMS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( RRSe + RMSe ) * RCSe ) / ( CS * MUR ) ) + ( CS * Max( ( DS * RMSe ),Max( MUM,DS ) ) ) ) / RRSe ) - ( MUM + ( MUC - MLU ) ) ) / Max( Min( ( CS + ( Max( CS,MUC ) + RMSe ) ) ,CS ),RRSe ) ) )", "obj1": 0.30798479087452474, "obj2": 0.46318224017179777}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.12577687716667307}, {"determining": "( ( Const + PN ) - ( Min( Min( MDR ,PN ) ,( ARS - DDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( ( Min( CS ,RCSe ) / RRSe ) * MUR ) + ( ( ( ( RCSe + MUM ) - Min( MUC ,RCSe ) ) / Min( RCSe ,MUM ) ) / RRSe ) ) ,DS ) * DS ) * ( RCSe / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.41064638783269963, "obj2": 0.3801980994115205}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.3593155893536122, "obj2": 0.4267761196154571}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( ( Min( ( PN + MDR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6615969581749049, "obj2": 0.15414572422800368}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MLU + ( ( MUR * CS ) / MUC ) ) ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9011406844106464, "obj2": 0.04105967006337002}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4031620711578665}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( RCSe + DS ) - ( RRSe * Max( MUM,MUC ) ) ) - Min( ( ( ( RCSe - RRSe ) + RCSe ) / ( ( MUC / RRSe ) - Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2376425855513308, "obj2": 0.51265593196444}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( PN * Max( ARS,MRS ) ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( MLU ,CS ) ) ) ) - ( MUC - ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.9638783269961977, "obj2": 0.014943591104333905}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( PN * Min( BR ,DDR ) ) + MDR ) )", "choosing": "( ( ( RCSe + DS ) / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.14258555133079848, "obj2": 0.623053620776252}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Max( ACS,MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( Min( Max( ( DS / Max( ( RCSe + MUC ),Max( MUC,RRSe ) ) ),( MLU / Min( Max( RMSe,MUC ) ,RRSe ) ) ) ,Min( RMSe ,CS ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9448669201520913, "obj2": 0.022222520539002685}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.38593155893536124, "obj2": 0.3947606481209324}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( PN * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RMSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5247148288973384, "obj2": 0.22245666923811183}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.155893536121673, "obj2": 0.5969006799955304}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( FirstVNF_CPU_Server ,( MDR - PN ) ) / ( Max( Max( MDR,MDR ),DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe * ( ( RMSe - MLU ) / ( MUM + Min( ( CS / ( RRSe + RCSe ) ) ,RRSe ) ) ) )", "obj1": 0.720532319391635, "obj2": 0.10254599346813799}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( Max( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + Max( FirstVNF_RAM,( ( PN - PN ) / ( ACS - FirstVNF_RAM ) ) ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( MLU + ( ( MLU / DS ) * Max( RCSe,MUM ) ) ) * ( ( CS - ( MLU - ( ( ( MLU / DS ) + DS ) * DS ) ) ) * ( ( Max( RCSe,MUR ) + RCSe ) + Min( MUR ,MUM ) ) ) )", "obj1": 0.6482889733840305, "obj2": 0.16878433790638706}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( FirstVNF_CPU_Server / Max( MDR,DDR ) ) - ( Min( ARS ,( Const - PN ) ) / ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUC + RCSe ) / RRSe ) - ( RCSe - Min( ( Min( Max( CS,RCSe ) ,MUM ) + MUM ) ,RCSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07647362281254982}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( ( PN - FirstVNF_RAM ) ,FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - FirstVNF_RAM ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( DS,RMSe ) / ( ( Min( RMSe ,( DS - MUC ) ) - CS ) - RMSe ) )", "obj1": 0.7110266159695817, "obj2": 0.11747901419995138}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU / CRS ) ) * AMS ) - Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( RCSe + DS ) - ( RMSe / ( MLU / CS ) ) ) - ( CS * MUR ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + ( ( RMSe + RCSe ) / Min( ( MUC / ( Min( CS ,MUR ) - RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5099822909909006}, {"determining": "( ( Max( ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,( MUC / Max( RCSe,CS ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9277566539923955, "obj2": 0.03710956024524713}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( ( Min( FirstVNF_Mem ,PN ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RRSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7642585551330798, "obj2": 0.07953001097287594}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09505703422053231, "obj2": 0.6497147395247511}, {"determining": "( ( ( CRS - FirstVNF_RAM ) * CRS ) - ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( MDR - PN ) ) / AMS ) )", "choosing": "( ( ( ( RCSe + DS ) - ( RMSe / ( MLU / CS ) ) ) - ( CS * MUR ) ) * ( ( MLU * DS ) / CS ) )", "obj1": 0.19391634980988592, "obj2": 0.5768780715063105}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,CS ) ) ,MUC ) ) ) - Min( RCSe ,RMSe ) )", "obj1": 0.7965779467680608, "obj2": 0.0673991100527968}, {"determining": "( ( ( Max( Min( FirstVNF_Mem ,CRS ),( PN + MDR ) ) - ( Min( ARS ,Min( ( ARS - MDR ) ,( MDR - PN ) ) ) / FirstVNF_CPU_Server ) ) * ( CRS / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + ( ( ACS / RRS ) + FirstVNF_Mem ) ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( RMSe + MLU ) ) + RCSe ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ,Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,( RCSe * DS ) ) ,MUC ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.39923954372623577, "obj2": 0.38674423894950066}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.8269961977186312, "obj2": 0.050508187142091175}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}], "15": [{"determining": "( ( Min( FirstVNF_Mem_Server ,Max( ACS,MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( Min( Max( ( DS / Max( ( RCSe + MUC ),Max( MUC,RRSe ) ) ),( MLU / Min( Max( DS,MUC ) ,RRSe ) ) ) ,Min( RMSe ,CS ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MRS ,Min( FirstVNF_Mem ,Max( MRS,FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + ( Min( Min( ( ARS - MDR ) ,( MDR - PN ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) * Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( ( ( DS + RCSe ) / Min( CS ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) + RCSe ) / ( ( DS - RMSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.41254752851711024, "obj2": 0.33709757520466754}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) - ( RRSe + RMSe ) ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,( MLU / MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7997719136063873}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.37072243346007605, "obj2": 0.37049020812736855}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( ( CRS - FirstVNF_RAM ) * CRS ) - ( Min( Min( FirstVNF_Mem_Server ,BR ) ,( MDR - PN ) ) / AMS ) )", "choosing": "( ( ( ( RCSe + DS ) - ( RMSe / ( MLU / CS ) ) ) - ( CS * MUR ) ) * ( ( MLU * DS ) / CS ) )", "obj1": 0.19391634980988592, "obj2": 0.5768780715063105}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.7292991644125706}, {"determining": "( ( ( FirstVNF_Mem * ( ARS + ( RRS / ( RRS / FirstVNF_CPU ) ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) * Max( RRS,( ACS - ACS ) ) )", "choosing": "( ( DS / RRSe ) * ( MLU - ( ( MUR * RMSe ) / ( ( Max( ( ( RMSe - MUR ) * MUM ),RRSe ) * ( MUM - MUM ) ) - RCSe ) ) ) )", "obj1": 0.34790874524714827, "obj2": 0.45104311145426124}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.155893536121673, "obj2": 0.5969006799955304}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( Min( ( RRS - FirstVNF_RAM ) ,Max( FirstVNF_Mem,( Max( Min( BR ,Const ),PN ) + ACS ) ) ) * Max( Const,Max( ( FirstVNF_CPU + ( RRS * ( DDR / AMS ) ) ),Min( ( ( ARS - ACS ) * CRS ) ,Const ) ) ) )", "choosing": "( ( ( RCSe + ( ( ( ( MUR - ( CS - CS ) ) * ( RMSe / ( RMSe / RMSe ) ) ) + MLU ) / Max( Max( CS,( ( RCSe / RMSe ) + ( CS - MUM ) ) ),Min( MLU ,Min( CS ,RRSe ) ) ) ) ) - DS ) - ( CS * MUR ) )", "obj1": 0.3060836501901141, "obj2": 0.48171803561914417}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.12577687716667307}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MLU + ( ( MUR * CS ) / MUC ) ) ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9011406844106464, "obj2": 0.04105967006337002}, {"determining": "( ( ( RRS + MDR ) * Min( ( Min( FirstVNF_Mem ,CRS ) * ( MDR + PN ) ) ,( Min( ARS ,( ( ( PN - RRS ) - PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + ( ( RMSe + RCSe ) / Min( ( ( ( MLU / CS ) / RMSe ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RRSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Max( CS,( CS + MUM ) ) )", "obj1": 0.23193916349809887, "obj2": 0.508280235244111}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( ACS * AMS ) - ( Min( ARS ,( Max( DDR,( MDR / FirstVNF_Mem ) ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( AMS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( RRSe + RMSe ) * RCSe ) / ( CS * MUR ) ) + ( CS * Max( ( DS * RMSe ),Max( MUM,DS ) ) ) ) / RRSe ) - ( MUM + ( MUC - MLU ) ) ) / Max( Min( ( CS + ( Max( CS,MUC ) + RMSe ) ) ,CS ),RRSe ) ) )", "obj1": 0.30798479087452474, "obj2": 0.46318224017179777}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.36311787072243346, "obj2": 0.4031620711578665}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( PN * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RMSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5247148288973384, "obj2": 0.22245666923811183}, {"determining": "( ( Min( ( ( ( FirstVNF_RAM - BR ) - Min( ( MDR * CRS ) ,( PN + FirstVNF_RAM ) ) ) - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) - PN )", "choosing": "( ( RCSe / CS ) * ( Min( ( MUC / DS ) ,MUM ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.4714828897338403, "obj2": 0.2579404513861339}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.3593155893536122, "obj2": 0.4267761196154571}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( ( PN + MDR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6615969581749049, "obj2": 0.15414572422800368}, {"determining": "( ( ( DDR * Const ) - ( FirstVNF_Mem_Server * ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) - ARS ) ) ) * ( Min( PN ,MRS ) + ARS ) )", "choosing": "( Max( DS,( ( MLU + CS ) * Min( ( MLU / ( Min( MUC ,( RMSe / RRSe ) ) / CS ) ) ,MUM ) ) ) * ( ( RCSe / ( MUC - ( MUM * DS ) ) ) - ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.14258555133079848, "obj2": 0.608561047306648}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09505703422053231, "obj2": 0.6497147395247511}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( Max( ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,( MUC / Max( RCSe,CS ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9277566539923955, "obj2": 0.03710956024524713}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / Min( MLU ,CS ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6269994133110421}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / CRS ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUM - Max( MUM,RCSe ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06414721556997013}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * ( ( Min( BR ,FirstVNF_CPU_Server ) * MDR ) + RRS ) )", "choosing": "( ( ( Min( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) ,( MUC - MLU ) ) + RCSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( Max( RCSe,DS ) ,CS ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - Min( ( MUR + RMSe ) ,MUM ) ) )", "obj1": 0.8155893536121673, "obj2": 0.05232800492815371}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR / PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( PN ,FirstVNF_Mem ) * Max( ( MDR - PN ),Max( FirstVNF_RAM,Min( ( ( DDR * DDR ) * ARS ) ,Min( ARS ,Min( RRS ,( RRS * AMS ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( DS + Min( Min( ( MUC / ( ( MUR / RCSe ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,( ( RMSe * MUR ) * DS ) ) ) ,( ( ( ( MUC - MUM ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.1252936285370351}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( PN * Min( BR ,DDR ) ) + MDR ) )", "choosing": "( ( ( RCSe + DS ) / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6484010825277213}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.11977186311787072, "obj2": 0.6345822726163981}, {"determining": "( ( Min( FirstVNF_Mem ,( ( MDR * BR ) / RRS ) ) * Max( AMS,Max( FirstVNF_CPU,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( MUR / ( Min( Min( RMSe ,CS ) ,( Max( MUM,RMSe ) * ( ( RRSe * MUR ) + MUM ) ) ) + CS ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11154809058475668}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.8269961977186312, "obj2": 0.050508187142091175}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( ( Min( FirstVNF_Mem ,PN ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RRSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7642585551330798, "obj2": 0.07953001097287594}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe + DS ) / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.0994838043699115}], "16": [{"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * ( DDR * FirstVNF_Mem ) )", "choosing": "( ( MUR + CS ) / ( ( DS - RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Max( ACS,MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( ( ( RMSe + RCSe ) / ( Min( Max( ( DS / Max( ( RCSe + MUC ),Max( MUC,RRSe ) ) ),( MLU / Min( Max( DS,MUC ) ,RRSe ) ) ) ,Min( RMSe ,CS ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( ( MDR + PN ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( ( ARS * ( ( MDR - Min( FirstVNF_RAM_Server ,ARS ) ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( Max( RCSe,MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Min( Max( Min( CS ,( ( ( MLU + ( RRSe - MUM ) ) / Min( RRSe ,MUM ) ) + RMSe ) ),( ( MUM + RMSe ) - ( RCSe * ( RMSe / ( MUM * ( MUM / RRSe ) ) ) ) ) ) ,( ( ( ( RRSe + ( ( DS * RRSe ) + ( RMSe / RCSe ) ) ) + DS ) + RCSe ) / MUR ) ) )", "obj1": 0.3060836501901141, "obj2": 0.4424081906356887}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.37072243346007605, "obj2": 0.37049020812736855}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) - ( RRSe + RMSe ) ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,( MLU / MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7997719136063873}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,ACS ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MUC + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.967680608365019, "obj2": 0.014060921258418263}, {"determining": "( Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) * Max( ( PN + Min( FirstVNF_RAM ,ACS ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( MUM * DS ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.29277566539923955, "obj2": 0.49409838343681106}, {"determining": "( ( FirstVNF_CPU_Server * Max( CRS,FirstVNF_CPU_Server ) ) * ( ARS / Min( ( BR - RRS ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( RCSe + DS ) / CS ) * ( ( ( ( ( ( DS * RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) + RCSe ) / RRSe ) - ( Min( DS ,MUM ) + MUM ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.9239543726235742, "obj2": 0.03296934049184949}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.7292991644125706}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.155893536121673, "obj2": 0.5969006799955304}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.40874524714828897, "obj2": 0.34010965681976996}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( RRS + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( MDR + PN ) ) - ( Min( ARS ,( ( ( PN - RRS ) - PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Max( CS,( CS + MUM ) ) )", "obj1": 0.18631178707224336, "obj2": 0.5733104820497744}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MLU + ( ( MUR * CS ) / MUC ) ) ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9011406844106464, "obj2": 0.04105967006337002}, {"determining": "( ( ( RRS + MDR ) * Min( ( Min( FirstVNF_Mem ,CRS ) * ( MDR + PN ) ) ,( Min( ARS ,( ( ( PN - RRS ) - PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + ( ( RMSe + RCSe ) / Min( ( ( ( MLU / CS ) / RMSe ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RRSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Max( CS,( CS + MUM ) ) )", "obj1": 0.23193916349809887, "obj2": 0.508280235244111}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.6825095057034221, "obj2": 0.12577687716667307}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( PN * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RMSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5247148288973384, "obj2": 0.22245666923811183}, {"determining": "( ( Min( ( ( ( FirstVNF_RAM - BR ) - Min( ( MDR * CRS ) ,( PN + FirstVNF_RAM ) ) ) - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) - PN )", "choosing": "( ( RCSe / CS ) * ( Min( ( MUC / DS ) ,MUM ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.4714828897338403, "obj2": 0.2579404513861339}, {"determining": "( ( ( DDR * Const ) - ( FirstVNF_Mem_Server * ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) - ARS ) ) ) * ( Min( PN ,MRS ) + ARS ) )", "choosing": "( Max( DS,( ( MLU + CS ) * Min( ( MLU / ( Min( MUC ,( RMSe / RRSe ) ) / CS ) ) ,MUM ) ) ) * ( ( RCSe / ( MUC - ( MUM * DS ) ) ) - ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.14258555133079848, "obj2": 0.608561047306648}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4372623574144487, "obj2": 0.3206033941441053}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.09815793946376174}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MLU ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5475285171102662, "obj2": 0.2163355622394543}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( Min( ( PN + MDR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6692015209125475, "obj2": 0.1505222517319464}, {"determining": "( ( ( FirstVNF_Mem_Server * ( MRS - ARS ) ) - ( MDR * Const ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,ARS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / AMS ) ) / ( ACS - RRS ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS * ( ( MLU - CS ) * Min( Min( RRSe ,( MUR / MLU ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + Min( RMSe ,MUM ) ) ) ) ) )", "obj1": 0.12357414448669202, "obj2": 0.6227100284148896}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.4695817490494297, "obj2": 0.270570570703575}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.41254752851711024, "obj2": 0.33709757520466754}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Min( FirstVNF_Mem ,( ( MDR * BR ) / RRS ) ) * Max( AMS,Max( FirstVNF_CPU,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( MUR / ( Min( Min( RMSe ,CS ) ,( Max( MUM,RMSe ) * ( ( RRSe * MUR ) + MUM ) ) ) + CS ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11154809058475668}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) - DS ) - ( CS * MUR ) ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.8269961977186312, "obj2": 0.050508187142091175}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( Max( FirstVNF_RAM,( Max( Const,DDR ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.7756653992395437, "obj2": 0.06964113644774694}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.11977186311787072, "obj2": 0.6345822726163981}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( ( RRS - FirstVNF_CPU ),( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( RCSe + ( ( ( MUM * ( RRSe + RMSe ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8141542467604949}], "17": [{"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * ( DDR * FirstVNF_Mem ) )", "choosing": "( ( MUR + CS ) / ( ( DS - RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.37072243346007605, "obj2": 0.37049020812736855}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server / MRS ) ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,DDR ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MLU + ( ( MUR * CS ) / MUC ) ) ) ) + DS ) ) - ( MUC - MLU ) )", "obj1": 0.9011406844106464, "obj2": 0.04105967006337002}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ACS ) ) ) ) * ( AMS * Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - ( Min( Min( CRS ,FirstVNF_CPU_Server ) ,( Const - FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Min( ( DS + RCSe ) ,Min( Min( CS ,CS ) ,( RCSe / Max( RCSe,CS ) ) ) ) - ( MUC - RMSe ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,( ( MUR + MLU ) * ( Min( Min( RMSe ,MLU ) ,CS ) * MUR ) ) ) ) ) - Min( RCSe ,( ( RRSe * ( MUM / ( RCSe / ( MUC - Max( RCSe,CS ) ) ) ) ) * RMSe ) ) )", "obj1": 0.30228136882129275, "obj2": 0.4887384492594254}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + DS ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.8098859315589354, "obj2": 0.05789177608733677}, {"determining": "( ( Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ,FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem * ( FirstVNF_CPU / ARS ) ) ) * Max( AMS,Max( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( Min( RCSe ,( Min( CS ,( ( Max( Min( RRSe ,RRSe ),MLU ) / Min( ( MUC - MUM ) ,RRSe ) ) * RCSe ) ) / RRSe ) ) * ( ( ( ( ( Min( DS ,Min( DS ,MUR ) ) - ( ( MLU / RMSe ) + ( RCSe * MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.4049429657794677, "obj2": 0.3621672290882669}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) * ( Min( ARS ,( MDR - PN ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( MUM * ( RRSe + MLU ) ) - ( CS * MUR ) ) + RCSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.9486692015209125, "obj2": 0.032043047962085396}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( ( PN + MDR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6692015209125475, "obj2": 0.1505222517319464}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( FirstVNF_CPU_Server / PN ) ) ) ) - ( Min( DDR ,FirstVNF_Mem ) * Max( ( ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,ACS ) ) - PN ),Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + RMSe ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( RCSe ,RMSe ) ) ,( ( Min( RRSe ,( DS - MUR ) ) + ( MLU + RCSe ) ) / ( MUC + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.967680608365019, "obj2": 0.014060921258418263}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( DDR + FirstVNF_RAM_Server ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.7292991644125706}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.31821071486660024}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ),Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server / ( FirstVNF_CPU * ARS ) ) - Min( DDR ,MRS ) ) ) ) ) - ( Min( ( MDR - PN ) ,Max( ARS,MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( Max( CS,MUR ) + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.11037480248300431}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( Max( FirstVNF_RAM,( Max( Const,DDR ) / ( ACS - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.7756653992395437, "obj2": 0.06964113644774694}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server * ( MRS - ARS ) ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MLU ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.5475285171102662, "obj2": 0.2163355622394543}, {"determining": "( ( FirstVNF_CPU_Server * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7718631178707225, "obj2": 0.07570106102069728}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( Max( Max( FirstVNF_CPU,( FirstVNF_Mem + ( FirstVNF_Mem_Server / PN ) ) ),ARS ) / ( MDR * FirstVNF_Mem ) ) / CRS ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( CS + MUR ) - ( RRSe + RMSe ) ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,( MLU / MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7997719136063873}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.11977186311787072, "obj2": 0.6345822726163981}, {"determining": "( ( ( ( ARS * FirstVNF_RAM_Server ) * Const ) - ( FirstVNF_Mem_Server * Min( MRS ,ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + Min( ( MLU - CS ) ,Min( Min( RRSe ,( ( DS / RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ) ,MUM ) ) ) * ( MLU * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.045627376425855515, "obj2": 0.7713192718810964}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.578081986084128}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.09815793946376174}, {"determining": "( Max( FirstVNF_CPU_Server,( ( PN - ( CRS / PN ) ) * ( BR / ( ARS * ( FirstVNF_CPU_Server - AMS ) ) ) ) ) * ( ( FirstVNF_Mem_Server / BR ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( Min( CS ,RRSe ),RRSe ) * MUR ) - RMSe ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) * Max( ( PN + Min( FirstVNF_RAM ,ACS ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( MUM * DS ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.29277566539923955, "obj2": 0.49409838343681106}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) * Max( ( PN + Min( FirstVNF_RAM ,ACS ) ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( MUM * DS ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( DS ,CS ) ) ) ,( CS + MUC ) ) )", "obj1": 0.2623574144486692, "obj2": 0.5068848874629621}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( ( DDR * Const ) - ( FirstVNF_Mem_Server * ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_RAM_Server / FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) ) - ARS ) ) ) * ( Min( PN ,MRS ) + ARS ) )", "choosing": "( Max( DS,( ( MLU + CS ) * Min( ( MLU / ( Min( MUC ,( RMSe / RRSe ) ) / CS ) ) ,MUM ) ) ) * ( ( RCSe / ( MUC - ( MUM * DS ) ) ) - ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.14258555133079848, "obj2": 0.608561047306648}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.41254752851711024, "obj2": 0.3367765985971419}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( ( ( MDR * Const ) - ( ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) - ARS ) * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN + ( FirstVNF_CPU_Server / BR ) ) ) * ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( RCSe - DS ) * ( ( ( MUC - ( MUM * RMSe ) ) / RCSe ) * ( ( MUM - ( CS + MLU ) ) / RCSe ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5950381850465731}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,( Const - MRS ) ) ) ) - ( Min( ( DDR - MDR ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( RCSe ,DS ) ) + RCSe ) / RRSe ) - ( MUM + ( RMSe / ( DS / CS ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.6730038022813688, "obj2": 0.1361376637172191}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}], "18": [{"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.37072243346007605, "obj2": 0.37049020812736855}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + ( FirstVNF_Mem * ARS ) ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.3354213331272354}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUM * ( RRSe + MUR ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.9163498098859315, "obj2": 0.02373809590313746}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,RRSe ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.30988593155893535, "obj2": 0.43652962250410454}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.876425855513308, "obj2": 0.035556909975886654}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ACS ) ) ) ) * ( AMS * Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - ( Min( Min( CRS ,FirstVNF_CPU_Server ) ,( Const - FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Min( ( DS + RCSe ) ,Min( Min( CS ,CS ) ,( RCSe / Max( RCSe,CS ) ) ) ) - ( MUC - RMSe ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,( ( MUR + MLU ) * ( Min( Min( RMSe ,MLU ) ,CS ) * MUR ) ) ) ) ) - Min( RCSe ,( ( RRSe * ( MUM / ( RCSe / ( MUC - Max( RCSe,CS ) ) ) ) ) * RMSe ) ) )", "obj1": 0.30228136882129275, "obj2": 0.4887384492594254}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) / ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) * ( PN + MDR ) ) - ( ( ( CRS - CRS ) + MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RCSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Max( ( MUM + Min( MUC ,Max( ( MUC / MLU ),MUR ) ) ),MUR ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5113132809933484}, {"determining": "( ( ( MDR * Const ) - ( ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) - ARS ) * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * ( FirstVNF_Mem / BR ) ) ) * ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * ( Min( RRSe ,( Min( ( RCSe + MUR ) ,DS ) - ( MUR / Min( CS ,CS ) ) ) ) * MUM ) ) ) * ( ( ( MUC - ( MUM * DS ) ) / RCSe ) * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.14068441064638784, "obj2": 0.6286678156404629}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) - ( ( Min( ARS ,MDR ) / ( ( Max( CRS,( ( FirstVNF_CPU_Server - PN ) - ( ARS + MDR ) ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS - Min( RCSe ,MUC ) ) ,RMSe ) - Min( ( ( DS - RCSe ) - ( MUR / ( MUR + RRSe ) ) ) ,RRSe ) )", "obj1": 0.9543726235741445, "obj2": 0.015479807281581404}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.11977186311787072, "obj2": 0.6345822726163981}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) * ( Max( MRS,ARS ) + MDR ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU - ( ( ( MUM / ( DS * MLU ) ) + MLU ) / RRSe ) ) )", "obj1": 0.14258555133079848, "obj2": 0.5998585385626435}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.5655220507761519}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ARS ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( Min( RRSe ,( ( DS / RCSe ) - Min( RMSe ,CS ) ) ) ,MUM ) ) ) * ( ( RCSe / ( MUC - ( MUM * DS ) ) ) * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7041942186862196}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / CRS ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,( MLU / MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7953646130718343}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( MUM + Min( DS ,MUM ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7224334600760456, "obj2": 0.09815793946376174}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.578081986084128}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * FirstVNF_RAM ) - ( Min( ARS ,( MDR - PN ) ) / ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) / ( AMS / DDR ) ) ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + Min( DS ,MUM ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.04519755280539064}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,( Const - MRS ) ) ) ) - ( Min( ( DDR - MDR ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( RCSe ,DS ) ) + RCSe ) / RRSe ) - ( MUM + ( RMSe / ( DS / CS ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.6730038022813688, "obj2": 0.1361376637172191}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + ( CS * MUR ) ) / RRSe ) - ( MUM + ( RMSe / ( MLU / CS ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( MDR * Const ) - ( ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) - ARS ) * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN + ( FirstVNF_CPU_Server / BR ) ) ) * ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( RCSe - DS ) * ( ( ( MUC - ( MUM * RMSe ) ) / RCSe ) * ( ( MUM - ( CS + MLU ) ) / RCSe ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5950381850465731}, {"determining": "( ( ( FirstVNF_Mem + PN ) * FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( CS,( MUC + ( ( MUM - RCSe ) - MUM ) ) ),MUR ) * ( DS / ( ( Max( RCSe,MUR ) + RCSe ) + ( RRSe + ( ( MUC / MUR ) / DS ) ) ) ) )", "obj1": 0.8536121673003803, "obj2": 0.04145319976907726}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / FirstVNF_CPU ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MUC * CS ) * RCSe ) - ( CS * MLU ) ) + RCSe ) / RRSe ) - ( MUM + ( DS * MUC ) ) ) / ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.5057034220532319, "obj2": 0.23490588087996403}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Min( RMSe ,MUM ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + MLU ) / RRSe ) * ( Min( ( ( RRSe + ( RRSe * MUC ) ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.078213644092627}, {"determining": "( ( ( MDR + MDR ) - Min( CRS ,AMS ) ) * Max( ( ( ( Max( FirstVNF_RAM,( DDR * Const ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) * ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( RMSe ,RCSe ) ) ) - ( MLU - ( MLU / CS ) ) )", "obj1": 0.7908745247148289, "obj2": 0.06379442509655148}, {"determining": "( ( Min( ( PN + MDR ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) * ( DS / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6692015209125475, "obj2": 0.1505222517319464}, {"determining": "( Min( FirstVNF_Mem ,PN ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( DS ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.03612167300380228, "obj2": 0.8167547503574658}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}], "19": [{"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + ( FirstVNF_Mem * ARS ) ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.3354213331272354}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( ( MLU / RMSe ) + ( MUR + DS ) ) - Min( DS ,Min( DS ,MUR ) ) ) + ( CS * MUR ) ) / RRSe ) - ( MUM + ( RMSe / ( MLU / CS ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.578081986084128}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) / ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) * ( PN + MDR ) ) - ( ( ( CRS - CRS ) + MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RCSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Max( ( MUM + Min( MUC ,Max( ( MUC / MLU ),MUR ) ) ),MUR ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5113132809933484}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / CRS ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,( MLU / MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7953646130718343}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + ( FirstVNF_Mem * ARS ) ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( MUM * ( RRSe + MUR ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.3288973384030418, "obj2": 0.41633737853755576}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * RRS ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + ( MUM * ( MUC + RRSe ) ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUR / MUM ) ) ) )", "obj1": 0.3041825095057034, "obj2": 0.48528270724280603}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( ( MDR * Const ) - ( ( Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) - ARS ) * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN + ( FirstVNF_CPU_Server / BR ) ) ) * ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ),ARS ) )", "choosing": "( ( RCSe - DS ) * ( ( ( MUC - ( MUM * RMSe ) ) / RCSe ) * ( ( MUM - ( CS + MLU ) ) / RCSe ) ) )", "obj1": 0.16159695817490494, "obj2": 0.5950381850465731}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Min( RMSe ,MUM ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + MLU ) / RRSe ) * ( Min( ( ( RRSe + ( RRSe * MUC ) ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.078213644092627}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.6976130353618968}, {"determining": "( ( ( Const * MDR ) - ( MRS * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_RAM,( PN * Max( ARS,ACS ) ) ) + ( ( AMS * Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),Min( PN ,MRS ) ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / MLU ) ) ) )", "obj1": 0.060836501901140684, "obj2": 0.7023505438558794}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.023453563943326556}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.5655220507761519}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( Max( FirstVNF_CPU_Server,BR ) * ( Max( MRS,ARS ) + MDR ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU - ( ( ( MUM / ( DS * MLU ) ) + MLU ) / RRSe ) ) )", "obj1": 0.14258555133079848, "obj2": 0.5998585385626435}, {"determining": "( ( Min( FirstVNF_Mem ,( ( ( ( Const + FirstVNF_RAM_Server ) * RRS ) + MRS ) / Max( ARS,FirstVNF_RAM_Server ) ) ) * Max( AMS,( FirstVNF_Mem + ( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( FirstVNF_RAM / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( ( Const * CRS ) - MDR ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / MUM ) * ( ( ( RRSe / ( Max( ( MUM * ( MUC + CS ) ),( MUR * Max( CS,RRSe ) ) ) + RCSe ) ) - ( RMSe / MUR ) ) / ( MUM + Min( DS ,( ( RMSe + RCSe ) + CS ) ) ) ) )", "obj1": 0.8840304182509505, "obj2": 0.032616608185953314}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ACS ) ) ) ) * ( AMS * Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - ( Min( Min( CRS ,FirstVNF_CPU_Server ) ,( Const - FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Min( ( DS + RCSe ) ,Min( Min( CS ,CS ) ,( RCSe / Max( RCSe,CS ) ) ) ) - ( MUC - RMSe ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( RMSe ,( ( MUR + MLU ) * ( Min( Min( RMSe ,MLU ) ,CS ) * MUR ) ) ) ) ) - Min( RCSe ,( ( RRSe * ( MUM / ( RCSe / ( MUC - Max( RCSe,CS ) ) ) ) ) * RMSe ) ) )", "obj1": 0.30228136882129275, "obj2": 0.4887384492594254}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + CS ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( RMSe / MUR ) ) / Min( DS ,Min( DS ,MUR ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.11301963811708186}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( MRS - DDR ) ) ) * Max( Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( AMS * FirstVNF_Mem ) ) / ( MDR - PN ) ),MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( MUC,Min( CS ,( MLU - MLU ) ) ) ) ,Min( RMSe ,CS ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.11977186311787072, "obj2": 0.6345822726163981}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - PN ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUM + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.006952110687124378}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + Max( ( ( DDR + MRS ) * Min( ARS ,FirstVNF_RAM ) ),ARS ) ) ) - ( Min( ARS ,( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / ( MUM + Min( DS ,MUM ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( RCSe - MLU ) ) ) ,( Min( CS ,Max( RCSe,DS ) ) * MUC ) ) ,Min( RRSe ,MUM ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3593155893536122, "obj2": 0.3713746406293728}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( ( PN + MDR ) * Max( ( Min( Const ,CRS ) * ( PN + MDR ) ),( ARS * PN ) ) ) - Max( Max( ACS,FirstVNF_CPU ),MDR ) )", "choosing": "( ( ( RMSe + Max( RCSe,( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) - Min( RMSe ,CS ) ) ) ) / ( DS + ( MLU * Min( MUM ,Max( ( ( RMSe + CS ) - Max( MUR,MUR ) ),MLU ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.431519556121141}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( MLU / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.7973369634148313}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.7775665399239544, "obj2": 0.06892131251904787}, {"determining": "( ( ( MDR + MDR ) - Min( CRS ,AMS ) ) * Max( ( ( ( Max( FirstVNF_RAM,( DDR * Const ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) * ( MDR - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( RMSe ,MUM ) ) ) - ( MLU - ( MLU / CS ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6385905436993207}], "20": [{"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + ( RMSe - RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS - CS ) ,RMSe ) - ( ( ( ( CS + RCSe ) - MLU ) + ( CS - MLU ) ) + Min( ( MUC / RRSe ) ,Min( ( ( MUR + MUC ) - CS ) ,CS ) ) ) )", "obj1": 0.8269961977186312, "obj2": 0.05095036341151877}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Min( FirstVNF_Mem ,( ( ( ( Const + FirstVNF_RAM_Server ) * RRS ) + MRS ) / Max( ARS,FirstVNF_RAM_Server ) ) ) * Max( AMS,( FirstVNF_Mem + ( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( FirstVNF_RAM / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( ( Const * CRS ) - MDR ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / MUM ) * ( ( ( RRSe / ( Max( ( MUM * ( MUC + CS ) ),( MUR * Max( CS,RRSe ) ) ) + RCSe ) ) - ( RMSe / MUR ) ) / ( MUM + Min( DS ,( ( RMSe + RCSe ) + CS ) ) ) ) )", "obj1": 0.8840304182509505, "obj2": 0.032616608185953314}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ),Min( Min( ( ( ( RRSe * ( MUR / MUR ) ) + RRSe ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) ,( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6539923954372624, "obj2": 0.16203442555912337}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.023453563943326556}, {"determining": "( ( ( MDR + MDR ) - ( ARS - FirstVNF_CPU ) ) * Max( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + Max( FirstVNF_RAM,( ( MRS - BR ) / CRS ) ) ) * ( ( FirstVNF_RAM_Server - DDR ) - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( RCSe + ( Max( RMSe,Min( ( ( MLU + ( MUM + MLU ) ) / Max( Max( RMSe,DS ),MUC ) ) ,( ( ( CS / MUM ) - RCSe ) * ( Max( DS,DS ) * Min( RCSe ,MUC ) ) ) ) ) - RMSe ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4895264587871877}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.785171102661597, "obj2": 0.06655195162253749}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * ( ( ( Min( MDR ,( MDR - ( PN - FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * Min( ( AMS / Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM ) ) ,PN ) ) - ARS ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( MUC / Min( RCSe ,DS ) ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,Min( RMSe ,Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( RRSe,RMSe ) ) ,MUM ) - Min( Min( ( MUM - RCSe ) ,DS ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.039923954372623575, "obj2": 0.7844159714829952}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) / ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) * ( PN + MDR ) ) - ( ( ( CRS - CRS ) + MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RCSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Max( ( MUM + Min( MUC ,Max( ( MUC / MLU ),MUR ) ) ),MUR ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5113132809933484}, {"determining": "( Min( RRS ,( FirstVNF_Mem_Server / Const ) ) - ( ( ARS + Min( RRS ,( RRS * AMS ) ) ) / ( Max( BR,( ( AMS - ( FirstVNF_CPU_Server - Min( ACS ,ACS ) ) ) - MRS ) ) / ( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( DS / Max( MLU,RCSe ) ),Max( RCSe,RMSe ) ) - ( MLU + Min( ( ( ( RMSe * DS ) * ( RCSe + RRSe ) ) / ( CS + MUC ) ) ,RRSe ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.7395437262357415, "obj2": 0.08721375339862555}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Min( RMSe ,MUM ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + MLU ) / RRSe ) * ( Min( ( ( RRSe + ( RRSe * MUC ) ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.078213644092627}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + CS ) ) - ( DS - CS ) ) + RCSe ) / RRSe ) - ( RMSe / MUR ) ) / Min( DS ,Min( DS ,MUR ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.020443767822803827}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( ( MDR + MDR ) - Min( CRS ,AMS ) ) * Max( ( ( ( Max( FirstVNF_RAM,( DDR * Const ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) * ( MDR - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( RMSe ,MUM ) ) ) - ( MLU - ( MLU / CS ) ) )", "obj1": 0.13688212927756654, "obj2": 0.6223845672266018}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( ( PN + MDR ) * Max( ( Min( Const ,CRS ) * ( PN + MDR ) ),( ARS * PN ) ) ) - Max( Max( ACS,FirstVNF_CPU ),MDR ) )", "choosing": "( ( ( RMSe + Max( RCSe,( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) - Min( RMSe ,CS ) ) ) ) / ( DS + ( MLU * Min( MUM ,Max( ( ( RMSe + CS ) - Max( MUR,MUR ) ),MLU ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.431519556121141}, {"determining": "( ( ( Const * MDR ) - ( MRS * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_RAM,( PN * Max( ARS,ACS ) ) ) + ( ( AMS * Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),Min( PN ,MRS ) ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / MLU ) ) ) )", "obj1": 0.060836501901140684, "obj2": 0.7023505438558794}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + ( FirstVNF_Mem * ARS ) ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.4049429657794677, "obj2": 0.3354213331272354}, {"determining": "( ( Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) * ( ( Max( MRS,FirstVNF_CPU ) * ( PN + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server * PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR - DS ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) / ( RMSe + Min( DS ,MUM ) ) ) ,Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.33460076045627374, "obj2": 0.41583842698394546}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( ( Max( FirstVNF_CPU,( PN * Max( ARS,MRS ) ) ) + ( ( Min( MDR ,FirstVNF_CPU ) * AMS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),( PN - MRS ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.0779467680608365, "obj2": 0.6976130353618968}, {"determining": "( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + PN ) ) - ( Min( ( ARS - MDR ) ,( PN - MDR ) ) / Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( RCSe / MUC ) * ( ( ( ( ( ( RCSe - RCSe ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( MUM ,DS ) ) ) )", "obj1": 0.7281368821292775, "obj2": 0.09560370452116565}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5703623075814636}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + ( FirstVNF_Mem * ARS ) ) ) - ( Min( ARS ,( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / ( MUM + Min( DS ,MUM ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3593155893536122, "obj2": 0.3713746406293728}, {"determining": "( ( ( Const * ( ( ACS / MDR ) + ( ( DDR - ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU * ACS ) / ARS ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + MUR ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17680608365019013, "obj2": 0.578081986084128}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + ( ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM_Server ) * ARS ) ) ) - ( Min( ARS ,( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,DS ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3897338403041825, "obj2": 0.3425072412837875}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU - BR ) / Max( ( BR + ( Const - CRS ) ),( Max( RRS,MRS ) - MRS ) ) ) * ( PN + ( FirstVNF_Mem * ARS ) ) ) - ( Min( ARS ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( ( MLU / CS ) / RMSe ) / Max( CS,RCSe ) ) ,Min( RMSe ,MUC ) ) ) ) / ( Max( DS,( MUM + MLU ) ) + MUR ) ) - ( MUC - MLU ) )", "obj1": 0.42015209125475284, "obj2": 0.32775887932722625}], "21": [{"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),FirstVNF_CPU ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + ( RMSe - RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),BR ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + ( RMSe - RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Min( FirstVNF_Mem ,( ( ( ( Const + FirstVNF_RAM_Server ) * RRS ) + MRS ) / Max( ARS,FirstVNF_RAM_Server ) ) ) * Max( AMS,( FirstVNF_Mem + ( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( FirstVNF_RAM / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( ( Const * CRS ) - MDR ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / MUM ) * ( ( ( RRSe / ( Max( ( MUM * ( MUC + CS ) ),( MUR * Max( CS,RRSe ) ) ) + RCSe ) ) - ( RMSe / MUR ) ) / ( MUM + Min( DS ,( ( RMSe + RCSe ) + CS ) ) ) ) )", "obj1": 0.8840304182509505, "obj2": 0.032616608185953314}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ),Min( Min( ( ( ( RRSe * ( MUR / MUR ) ) + RRSe ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) ,( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6539923954372624, "obj2": 0.16203442555912337}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( MDR + MDR ) - ( ARS - FirstVNF_CPU ) ) * Max( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + Max( FirstVNF_RAM,( ( MRS - BR ) / CRS ) ) ) * ( ( FirstVNF_RAM_Server - DDR ) - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( RCSe + ( Max( RMSe,Min( ( ( MLU + ( MUM + MLU ) ) / Max( Max( RMSe,DS ),MUC ) ) ,( ( ( CS / MUM ) - RCSe ) * ( Max( DS,DS ) * Min( RCSe ,MUC ) ) ) ) ) - RMSe ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4895264587871877}, {"determining": "( ( ( MDR + MDR ) - Min( CRS ,AMS ) ) * Max( ( ( ( Max( FirstVNF_RAM,( DDR * Const ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) * ( MDR - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( RMSe ,MUM ) ) ) - ( MLU - ( MLU / CS ) ) )", "obj1": 0.13688212927756654, "obj2": 0.6223845672266018}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) / ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) * ( PN + MDR ) ) - ( ( ( CRS - CRS ) + MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RCSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Max( ( MUM + Min( MUC ,Max( ( MUC / MLU ),MUR ) ) ),MUR ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5113132809933484}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( Min( ( ACS * ( Max( ( FirstVNF_RAM - DDR ),FirstVNF_CPU ) - PN ) ) ,FirstVNF_Mem ) * ( ( DDR + FirstVNF_RAM ) / CRS ) ) - ( ARS - Const ) )", "choosing": "( ( ( ( ( ( Max( Min( RMSe ,MUM ),MUR ) * ( MUM - Max( MUM,RCSe ) ) ) / Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) * ( MUC - MLU ) ) + ( ( MUC / ( MUR - MUC ) ) / ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Max( MUC,( RMSe - MUR ) ) ) ) ) / ( RMSe * DS ) ) - Max( MUC,RCSe ) )", "obj1": 0.20722433460076045, "obj2": 0.5558267841662887}, {"determining": "( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + PN ) ) - ( Min( ( ARS - MDR ) ,( PN - MDR ) ) / Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( RCSe / MUC ) * ( ( ( ( ( ( RCSe - RCSe ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( MUM ,DS ) ) ) )", "obj1": 0.7281368821292775, "obj2": 0.09560370452116565}, {"determining": "( ( FirstVNF_CPU_Server * Max( AMS,Max( FirstVNF_Mem,Min( ( ( PN / FirstVNF_Mem_Server ) * DDR ) ,( FirstVNF_Mem * ARS ) ) ) ) ) - ( ( MDR - PN ) / ( Min( FirstVNF_Mem ,PN ) * Max( ( MDR - PN ),Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( Min( ( ( RRSe + ( RRSe * MUC ) ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.11538534798182203}, {"determining": "( Min( DDR ,FirstVNF_Mem ) * ( ( ( Min( MDR ,( MDR - ( PN - FirstVNF_Mem_Server ) ) ) * FirstVNF_RAM ) * Min( ( AMS / Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM ) ) ,PN ) ) - ARS ) )", "choosing": "( ( ( DS - ( RCSe + DS ) ) - ( MUC / Min( RCSe ,DS ) ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,Min( RMSe ,Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( RRSe,RMSe ) ) ,MUM ) - Min( Min( ( MUM - RCSe ) ,DS ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.039923954372623575, "obj2": 0.7844159714829952}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / AMS ) ) ) ) - ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( MUC / MLU ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.1482889733840304, "obj2": 0.5925192593498922}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const + Const ) ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ),RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( MUR ,( RMSe + ( MUC * CS ) ) ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + CS ) ) - ( DS - CS ) ) + RCSe ) / RRSe ) - ( RMSe / MUR ) ) / Min( DS ,Min( DS ,MUR ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.020443767822803827}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Min( RMSe ,MUM ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + MLU ) / RRSe ) * ( Min( ( ( RRSe + ( RRSe * MUC ) ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.078213644092627}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( ( Const * MDR ) - ( MRS * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_RAM,( PN * Max( ARS,ACS ) ) ) + ( ( AMS * Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),Min( PN ,MRS ) ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / MLU ) ) ) )", "obj1": 0.060836501901140684, "obj2": 0.7023505438558794}, {"determining": "( ( ( PN + MDR ) * Max( ( Min( Const ,CRS ) * ( PN + MDR ) ),( ARS * PN ) ) ) - Max( Max( ACS,FirstVNF_CPU ),MDR ) )", "choosing": "( ( ( RMSe + Max( RCSe,( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) - Min( RMSe ,CS ) ) ) ) / ( DS + ( MLU * Min( MUM ,Max( ( ( RMSe + CS ) - Max( MUR,MUR ) ),MLU ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.431519556121141}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Const / PN ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,Max( MRS,Min( ( PN - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( MUC,MLU ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM + Min( DS ,MUM ) ) / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5654235695901326}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7755375421333051}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( Min( FirstVNF_Mem ,( PN + ( FirstVNF_Mem * ARS ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Const / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RCSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.16539923954372623, "obj2": 0.5808493456186501}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUM + Min( DS ,MUM ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.17490494296577946, "obj2": 0.573438280345741}, {"determining": "( ( Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) * ( ( Max( MRS,FirstVNF_CPU ) * ( PN + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server * PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR - DS ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) / ( RMSe + Min( DS ,MUM ) ) ) ,Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.33460076045627374, "obj2": 0.41583842698394546}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( ( MRS + FirstVNF_Mem ) / Const ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,DS ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.14068441064638784, "obj2": 0.6124765954992974}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.023453563943326556}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.785171102661597, "obj2": 0.06655195162253749}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}], "22": [{"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUR / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( Max( ( MRS - MRS ),FirstVNF_CPU ) - FirstVNF_Mem ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),Min( ACS ,RRS ) ) ) ) - ( FirstVNF_CPU - ( RRS * ARS ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + ( RMSe - RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( MDR + MDR ) - ( ARS - FirstVNF_CPU ) ) * Max( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + Max( FirstVNF_RAM,( ( MRS - BR ) / CRS ) ) ) * ( ( FirstVNF_RAM_Server - DDR ) - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( RCSe + ( Max( RMSe,Min( ( ( MLU + ( MUM + MLU ) ) / Max( Max( RMSe,DS ),MUC ) ) ,( ( ( CS / MUM ) - RCSe ) * ( Max( DS,DS ) * Min( RCSe ,MUC ) ) ) ) ) - RMSe ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4895264587871877}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.7816180683653475}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( Min( FirstVNF_Mem ,( ( ( ( Const + FirstVNF_RAM_Server ) * RRS ) + MRS ) / Max( ARS,FirstVNF_RAM_Server ) ) ) * Max( AMS,( FirstVNF_Mem + ( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( FirstVNF_RAM / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( ( Const * CRS ) - MDR ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / MUM ) * ( ( ( RRSe / ( Max( ( MUM * ( MUC + CS ) ),( MUR * Max( CS,RRSe ) ) ) + RCSe ) ) - ( RMSe / MUR ) ) / ( MUM + Min( DS ,( ( RMSe + RCSe ) + CS ) ) ) ) )", "obj1": 0.8840304182509505, "obj2": 0.032616608185953314}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const + Const ) ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ),RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( MUR ,( RMSe + ( MUC * CS ) ) ) ) ) )", "obj1": 0.0741444866920152, "obj2": 0.6963401280417242}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( Max( MRS,Min( ( PN - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( MDR - ( Const * CRS ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( MUC ,CS ) ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) ) )", "obj1": 0.9619771863117871, "obj2": 0.012300574627020432}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / MLU ) ) ) )", "obj1": 0.7490494296577946, "obj2": 0.08728418087109217}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.20722433460076045, "obj2": 0.5548236436707963}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ),Min( Min( ( ( ( RRSe * ( MUR / MUR ) ) + RRSe ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) ,( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6539923954372624, "obj2": 0.16203442555912337}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) * ( ( Max( MRS,FirstVNF_CPU ) * ( PN + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server * PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR - DS ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) / ( RMSe + Min( DS ,MUM ) ) ) ,Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.33460076045627374, "obj2": 0.41583842698394546}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / AMS ) ) ) ) - ( ( FirstVNF_RAM_Server * MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( MUC / MLU ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.8745247148288974, "obj2": 0.04549859530360724}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,Min( RMSe ,MUM ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + MLU ) / RRSe ) * ( Min( ( ( RRSe + ( RRSe * MUC ) ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.7680608365019012, "obj2": 0.078213644092627}, {"determining": "( ( ( Const * MDR ) - ( MRS * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_RAM,( PN * Max( ARS,ACS ) ) ) + ( ( AMS * Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),Min( PN ,MRS ) ),ARS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.12927756653992395, "obj2": 0.6330344813536554}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7755375421333051}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) / ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) * ( PN + MDR ) ) - ( ( ( CRS - CRS ) + MRS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RCSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Max( ( MUM + Min( MUC ,Max( ( MUC / MLU ),MUR ) ) ),MUR ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5113132809933484}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11058356651083075}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.023453563943326556}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( RRSe + CS ) ) - ( DS - CS ) ) + RCSe ) / RRSe ) - ( RMSe / MUR ) ) / Min( DS ,Min( DS ,MUR ) ) ) )", "obj1": 0.9543726235741445, "obj2": 0.020443767822803827}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( RMSe + Max( MLU,RMSe ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.811787072243346, "obj2": 0.05674676864735771}, {"determining": "( ( ( PN + MDR ) * Max( ( Min( Const ,CRS ) * ( PN + MDR ) ),( ARS * PN ) ) ) - Max( Max( ACS,FirstVNF_CPU ),MDR ) )", "choosing": "( ( ( RMSe + Max( RCSe,( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) - Min( RMSe ,CS ) ) ) ) / ( DS + ( MLU * Min( MUM ,Max( ( ( RMSe + CS ) - Max( MUR,MUR ) ),MLU ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.431519556121141}, {"determining": "( Min( FirstVNF_Mem ,PN ) - ( ( ( ARS - MDR ) / ( ( Max( CRS,( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS - CS ) ,( ( MUM + Min( DS ,RMSe ) ) / Max( RCSe,CS ) ) ) - ( ( ( ( CS + RCSe ) - MLU ) + ( CS - MLU ) ) + Min( ( MUC / RRSe ) ,Min( ( ( MUR + MUC ) - CS ) ,CS ) ) ) )", "obj1": 0.6844106463878327, "obj2": 0.1496158017156282}, {"determining": "( ( ( MDR * Const ) - ( FirstVNF_Mem_Server * ( Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ARS ) ) ) * Max( ( Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ARS ),ARS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( Min( ( RCSe / ( MUC - ( MUM * DS ) ) ) ,( ( DS / RCSe ) - Min( RMSe ,CS ) ) ) ,MUM ) ) ) * ( ( RCSe / ( MUC - ( MUM * DS ) ) ) * ( RCSe / ( MUM - ( CS + MLU ) ) ) ) )", "obj1": 0.060836501901140684, "obj2": 0.7023505438558794}], "23": [{"determining": "( ( ( Max( FirstVNF_Mem,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,MDR ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( Min( MUC ,CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( DS ,MUM ) - ( RCSe + MUR ) ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / RRS ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUR / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( ( Const * MDR ) - ( MRS * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_RAM,( PN * Max( ARS,ACS ) ) ) + ( ( AMS * Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),Min( PN ,MRS ) ),ARS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.12927756653992395, "obj2": 0.6330344813536554}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( MDR + MDR ) - ( ARS - FirstVNF_CPU ) ) * Max( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + Max( FirstVNF_RAM,( ( MRS - BR ) / CRS ) ) ) * ( ( FirstVNF_RAM_Server - DDR ) - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( RCSe + ( Max( RMSe,Min( ( ( MLU + ( MUM + MLU ) ) / Max( Max( RMSe,DS ),MUC ) ) ,( ( ( CS / MUM ) - RCSe ) * ( Max( DS,DS ) * Min( RCSe ,MUC ) ) ) ) ) - RMSe ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4895264587871877}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + ARS ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1520912547528517, "obj2": 0.599080857480429}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11058356651083075}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.20722433460076045, "obj2": 0.5548236436707963}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( ( ( ( ( Min( RRSe ,DS ) + ( MUR + DS ) ) - Min( MLU ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( CS ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.7775665399239544, "obj2": 0.07114369977703165}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.023453563943326556}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM + Min( DS ,RMSe ) ) / Max( RCSe,CS ) ) ,Min( CS ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.5744924893293119}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.7816180683653475}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) * ( ( Max( MRS,FirstVNF_CPU ) * ( PN + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server * PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR - DS ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) / ( RMSe + Min( DS ,MUM ) ) ) ,Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.33460076045627374, "obj2": 0.41583842698394546}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( RMSe + Max( MLU,RMSe ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.811787072243346, "obj2": 0.05674676864735771}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( Max( FirstVNF_RAM_Server,( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( Max( FirstVNF_CPU_Server,ARS ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,( RRSe / DS ) ) ) ,( ( Min( DS ,MUR ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9543726235741445, "obj2": 0.01947301123261529}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ),Min( Min( ( ( ( RRSe * ( MUR / MUR ) ) + RRSe ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) ,( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6539923954372624, "obj2": 0.16203442555912337}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Max( PN,( RRS * AMS ) ) * ( AMS / Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) / ( MLU + ( MUM * ( ( MUM * ( ( RRSe - RMSe ) / MUM ) ) + RRSe ) ) ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.1958174904942966, "obj2": 0.566736329792291}, {"determining": "( ( ( PN + MDR ) * Max( ( Min( Const ,CRS ) * ( PN + MDR ) ),( ARS * PN ) ) ) - Max( Max( ACS,FirstVNF_CPU ),MDR ) )", "choosing": "( ( ( RMSe + Max( RCSe,( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) - Min( RMSe ,CS ) ) ) ) / ( DS + ( MLU * Min( MUM ,Max( ( ( RMSe + CS ) - Max( MUR,MUR ) ),MLU ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.431519556121141}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09431965142030212}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( MDR * FirstVNF_CPU ) ) / CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,Min( ( MDR / ( ( FirstVNF_Mem - MRS ) / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,BR ) ,( MDR - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( RCSe ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) + Min( ( ( MUM + Min( DS ,RMSe ) ) / Max( RCSe,CS ) ) ,Min( CS ,( RMSe / MUM ) ) ) ) - Min( DS ,( ( MUC / MUC ) * Max( Min( MUR ,Max( DS,MUC ) ),RCSe ) ) ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.155893536121673, "obj2": 0.5903109297548093}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( ( MDR - Min( Const ,MDR ) ) ,Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUR / MUM ) ) ) )", "obj1": 0.9657794676806084, "obj2": 0.012127915430947166}, {"determining": "( Min( FirstVNF_CPU_Server ,( Const + ( PN - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * ( PN + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( Max( ( ( ( MUM * ( RRSe + RMSe ) ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ),RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( MUR ,( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) + ( MUC * CS ) ) ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007856924996254546}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}], "24": [{"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU - PN ) ,( MDR / ( RRS / Max( ARS,FirstVNF_RAM ) ) ) ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( MUM + ( MUR / MUM ) ) / ( ( RRSe / ( ( Min( RRSe ,MUM ) - Min( RCSe ,( RRSe / RRSe ) ) ) + RCSe ) ) - Min( MUM ,Min( DS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_Mem,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( FirstVNF_CPU_Server ,MDR ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( Min( MUC ,CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( DS ,MUM ) - ( RCSe + MUR ) ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( MUR - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9163498098859315, "obj2": 0.023453563943326556}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( ( ( ( ( Min( RRSe ,DS ) + ( MUR + DS ) ) - Min( MLU ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) - ( MUM + Min( CS ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.7775665399239544, "obj2": 0.07114369977703165}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ARS - Const ) ) ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( MDR - ( Const * CRS ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / Min( ( MUC / RRSe ) ,Min( MUC ,CS ) ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( MUC - ( RMSe * DS ) ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( MDR + MDR ) - ( ARS - FirstVNF_CPU ) ) * Max( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + Max( FirstVNF_RAM,( ( MRS - BR ) / CRS ) ) ) * ( ( FirstVNF_RAM_Server - DDR ) - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( RCSe + ( Max( RMSe,Min( ( ( MLU + ( MUM + MLU ) ) / Max( Max( RMSe,DS ),MUC ) ) ,( ( ( CS / MUM ) - RCSe ) * ( Max( DS,DS ) * Min( RCSe ,MUC ) ) ) ) ) - RMSe ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4895264587871877}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09431965142030212}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 0.7091254752851711, "obj2": 0.11058356651083075}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * Const ) ) ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,FirstVNF_Mem_Server ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( MUM + DS ) - DS ) - Min( ( ( ( Min( Max( Max( MUM,DS ),MUC ) ,MLU ) - ( RMSe / ( CS / DS ) ) ) + Min( RMSe ,RMSe ) ) / Min( Min( CS ,CS ) ,( MUC / RRSe ) ) ) ,( ( ( DS * Max( DS,RCSe ) ) - RMSe ) - Max( MLU,RMSe ) ) ) )", "obj1": 0.26425855513307983, "obj2": 0.4968465535490025}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) * ( ( Max( MRS,FirstVNF_CPU ) * ( PN + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server * PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR - DS ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) / ( RMSe + Min( DS ,MUM ) ) ) ,Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.33460076045627374, "obj2": 0.41583842698394546}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "Max( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ),Min( Min( ( ( ( RRSe * ( MUR / MUR ) ) + RRSe ) - RRSe ) ,Min( Min( RCSe ,( MUM / DS ) ) ,MLU ) ) ,( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.6539923954372624, "obj2": 0.16203442555912337}, {"determining": "( ( ( Const * MDR ) - ( MRS * FirstVNF_Mem_Server ) ) * Max( Max( ( ( Max( FirstVNF_RAM,( PN * Max( ARS,ACS ) ) ) + ( ( AMS * Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU_Server - PN ) ),Min( PN ,MRS ) ),ARS ) )", "choosing": "( ( ( RMSe + RCSe ) / ( DS + Min( ( MUC / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) - ( ( MLU + CS ) - MLU ) )", "obj1": 0.12927756653992395, "obj2": 0.6330344813536554}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + MDR ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM + Min( DS ,RMSe ) ) / Max( RCSe,CS ) ) ,Min( CS ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.5744924893293119}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Max( FirstVNF_RAM_Server,( ( MRS + FirstVNF_Mem ) / Const ) ) / ACS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( Max( RRSe,RCSe ) - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9296577946768061, "obj2": 0.01904284606756091}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + ARS ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1520912547528517, "obj2": 0.599080857480429}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Max( PN,( RRS * AMS ) ) * ( AMS / Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) / ( MLU + ( MUM * ( ( MUM * ( ( RRSe - RMSe ) / MUM ) ) + RRSe ) ) ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.1958174904942966, "obj2": 0.566736329792291}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,Max( FirstVNF_CPU,PN ) ) + ( Max( FirstVNF_RAM_Server,( ( MRS + FirstVNF_Mem ) / Const ) ) / ACS ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) * Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RMSe + Min( ( ( MUC * ( CS * Max( MUM,RMSe ) ) ) / RCSe ) ,( Max( MLU,RMSe ) * ( Min( RRSe ,DS ) - MUR ) ) ) ) / Max( DS,Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.20912547528517111, "obj2": 0.5537364591034533}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7300380228136882, "obj2": 0.09485176732178162}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) * ( Max( FirstVNF_RAM_Server,( MRS / Max( ACS,ACS ) ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( Max( ARS,FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - DS ) / ( DS + ( MUM * ( RRSe - Min( RRSe ,MLU ) ) ) ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.9866920152091255, "obj2": 0.006083532343405431}], "25": [{"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( ( ( PN + MDR ) + ( FirstVNF_RAM / MDR ) ) - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( MUC / CS ) * Max( RRSe,RMSe ) ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU - PN ) ,( MDR / ( RRS / Max( ARS,FirstVNF_RAM ) ) ) ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( MUM + ( MUR / MUM ) ) / ( ( RRSe / ( ( Min( RRSe ,MUM ) - Min( RCSe ,( RRSe / RRSe ) ) ) + RCSe ) ) - Min( MUM ,Min( DS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( RRS / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( MDR - ( Const * CRS ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUM * ( ( MLU + MUR ) + RMSe ) ) - ( CS * MUR ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUC ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.8992395437262357, "obj2": 0.0368272612040224}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( MDR + MDR ) - ( ARS - FirstVNF_CPU ) ) * Max( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + Max( FirstVNF_RAM,( ( MRS - BR ) / CRS ) ) ) * ( ( FirstVNF_RAM_Server - DDR ) - PN ) ) * FirstVNF_CPU_Server ),RRS ) )", "choosing": "( ( RCSe + ( Max( RMSe,Min( ( ( MLU + ( MUM + MLU ) ) / Max( Max( RMSe,DS ),MUC ) ) ,( ( ( CS / MUM ) - RCSe ) * ( Max( DS,DS ) * Min( RCSe ,MUC ) ) ) ) ) - RMSe ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4895264587871877}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - ( ( ( MDR - PN ) + ( ARS - MDR ) ) / ( Max( FirstVNF_RAM_Server,( ( MRS + FirstVNF_Mem ) / Const ) ) / ACS ) ) )", "choosing": "( ( Max( MLU,Max( CS,( MUR + MUC ) ) ) / ( Min( Min( ( MUC / ( ( MLU / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( ( MUR * MUC ) + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( Max( RRSe,RCSe ) - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9600760456273765, "obj2": 0.008646402448803598}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( ( RMSe / ( MLU / CS ) ) - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.7775665399239544, "obj2": 0.0683031844267868}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + ARS ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1520912547528517, "obj2": 0.599080857480429}, {"determining": "( ( Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) * ( ( Max( MRS,FirstVNF_CPU ) * ( PN + ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server * PN ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR - DS ) / ( DS + Min( ( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,RRSe ) ) ) / ( RMSe + Min( DS ,MUM ) ) ) ,Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.33460076045627374, "obj2": 0.41583842698394546}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( Max( PN,( RRS * AMS ) ) * ( AMS / Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) / ( MLU + ( MUM * ( ( MUM * ( ( RRSe - RMSe ) / MUM ) ) + RRSe ) ) ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.1958174904942966, "obj2": 0.566736329792291}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6298528290450757}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( ( FirstVNF_RAM_Server - ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) * ( Max( FirstVNF_RAM_Server,( MRS / Max( ACS,ACS ) ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) ) - ( Max( ARS,FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe - DS ) / ( DS + ( MUM * ( RRSe - Min( RRSe ,MLU ) ) ) ) ) - ( MUR - ( MLU / CS ) ) )", "obj1": 0.9866920152091255, "obj2": 0.006083532343405431}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 0.7642585551330798, "obj2": 0.08858711929846583}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.8079847908745247, "obj2": 0.057708450925415995}, {"determining": "( ( ( MDR - PN ) / ( ( MDR + MRS ) * ( ( MDR - PN ) / Max( FirstVNF_Mem,Min( ( DDR * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_CPU_Server * Max( AMS,Max( ( FirstVNF_Mem_Server + ( ACS - ( FirstVNF_Mem_Server * DDR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) * DDR ) - ( FirstVNF_Mem * ARS ) ) ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM + Min( DS ,RMSe ) ) / Max( RCSe,CS ) ) ,Min( CS ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.5744924893293119}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - ( MDR - PN ) ) ) / Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / ( Max( FirstVNF_RAM_Server,( ( MRS + FirstVNF_Mem ) / Const ) ) / ACS ) ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( Max( RRSe,RCSe ) - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9296577946768061, "obj2": 0.01904284606756091}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + MDR ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09389323512195116}], "26": [{"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU - PN ) ,( MDR / ( RRS / Max( ARS,FirstVNF_RAM ) ) ) ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( MUM + ( MUR / MUM ) ) / ( ( RRSe / ( ( Min( RRSe ,MUM ) - Min( RCSe ,( RRSe / RRSe ) ) ) + RCSe ) ) - Min( MUM ,Min( DS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + MDR ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( ( ( PN + MDR ) + ( FirstVNF_RAM / MDR ) ) - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( ( ( MUC / CS ) * Max( RRSe,RMSe ) ) - Min( Min( RRSe ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( FirstVNF_RAM - ARS ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_RAM_Server - PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / RCSe ) + MUR ) * ( ( ( ( ( ( ( RRSe - RMSe ) * ( CS - CS ) ) - Min( Min( MUR ,DS ) ,RCSe ) ) + RMSe ) / RRSe ) - ( MUM + Max( Max( MLU,MUM ),( MUM / DS ) ) ) ) / ( CS / Min( MUM ,DS ) ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6728501367391067}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MUC - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.27756653992395436, "obj2": 0.47835316435766845}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.8897338403041825, "obj2": 0.042498085697190574}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / Max( ARS,Const ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / ( CS * CS ) ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6298528290450757}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + MDR ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RMSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( ( BR + FirstVNF_Mem ),FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,MLU ) ) / Min( MLU ,( RMSe / Max( MUM,MLU ) ) ) ) ) + ( ( Min( MUM ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.10987476732376937}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 0.7642585551330798, "obj2": 0.08858711929846583}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.8079847908745247, "obj2": 0.057708450925415995}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - ( ( ( MDR - PN ) + ( ARS - MDR ) ) / ( Max( FirstVNF_RAM_Server,( ( MRS + FirstVNF_Mem ) / Const ) ) / ACS ) ) )", "choosing": "( ( Max( MLU,Max( CS,( MUR + MUC ) ) ) / ( Min( Min( ( MUC / ( ( MLU / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( ( MUR * MUC ) + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( Max( RRSe,RCSe ) - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.9600760456273765, "obj2": 0.008646402448803598}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09389323512195116}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( ( FirstVNF_Mem * MDR ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + AMS ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * Min( FirstVNF_CPU ,MRS ) ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,( ( RCSe / Max( CS,MUR ) ) * DS ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09715123673404297}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.7965779467680608, "obj2": 0.062253448430245724}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) - ( Min( ( ARS - MDR ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MUR + MUC ),CS ) ) / ( Min( Min( ( MUC / ( ( MUR / MUM ) - ( MLU - RCSe ) ) ) ,Min( Min( Min( CS ,RMSe ) ,( MUM * RRSe ) ) ,MUC ) ) ,( RRSe / ( MUM + Min( DS ,MUM ) ) ) ) + DS ) ) - Max( CS,( Min( ( ( RMSe / ( MLU / CS ) ) - MUR ) ,RCSe ) + MUM ) ) )", "obj1": 0.7775665399239544, "obj2": 0.0683031844267868}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( Min( DDR ,MDR ) - Const ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe / Min( ( ( RCSe / CS ) + MUR ) ,Min( RMSe ,CS ) ) ) + RMSe ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.34600760456273766, "obj2": 0.4142186539392434}, {"determining": "( ( ( ( FirstVNF_Mem * ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_CPU ) * FirstVNF_RAM ) ) / ARS ) ) - PN ) / ARS ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUR + MUR ) ) - ( CS * MUR ) ) - RCSe ) / RRSe ) - ( Min( ( RCSe + CS ) ,( ( RCSe + MLU ) + ( Max( MLU,RMSe ) - MUR ) ) ) + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5880446621215034}, {"determining": "( Min( ( FirstVNF_CPU_Server / BR ) ,( ( ( ( BR - DDR ) + ( ARS * Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) - ( RRS - FirstVNF_CPU_Server ) ) + ARS ) ) * Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),Min( Min( BR ,DDR ) ,Min( DDR ,ACS ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,CS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1520912547528517, "obj2": 0.599080857480429}], "27": [{"determining": "( ( BR + FirstVNF_RAM_Server ) - ( ( DDR - ( RRS * ( BR / DDR ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS - ( DS - Min( Max( ( ( MUC - RRSe ) * ( MUC / RMSe ) ),( DS / DS ) ) ,Max( ( MUM / RMSe ),CS ) ) ) ) ,RMSe ) - ( ( ( ( CS + RCSe ) - MLU ) + ( MUM + MLU ) ) + Max( ( RRSe / MUC ),( Max( RMSe,RMSe ) + ( CS * Max( Max( RCSe,RMSe ),( DS + MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU - PN ) ,( MDR / ( RRS / Max( ARS,FirstVNF_RAM ) ) ) ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( MUM + ( MUR / MUM ) ) / ( ( RRSe / ( ( Min( RRSe ,MUM ) - Min( RCSe ,( RRSe / RRSe ) ) ) + RCSe ) ) - Min( MUM ,Min( DS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( MDR + FirstVNF_CPU ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / Min( CRS ,FirstVNF_Mem ) ) * MDR ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS + ( ( MLU - CS ) - Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( CS,RRSe ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.6880889338934509}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.8897338403041825, "obj2": 0.042498085697190574}, {"determining": "( ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MUC - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.27756653992395436, "obj2": 0.47835316435766845}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6298528290450757}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 0.7642585551330798, "obj2": 0.08858711929846583}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server * Const ) * Const ) ) * Max( AMS,Max( FirstVNF_Mem,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( CRS,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ,( MDR + PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( RRSe,DS ) ) ) ,MLU ) ) + Min( ( MUC / ( ( RCSe / MUR ) - ( MUM - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ) ) * Min( MUR ,( MUR - ( MUC * RCSe ) ) ) )", "obj1": 0.19961977186311788, "obj2": 0.564024698380819}, {"determining": "( ( ( Min( AMS ,ACS ) + PN ) * ( ( Max( MRS,Max( ( PN - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ),FirstVNF_CPU ) ) / ARS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( MUR ,Max( RMSe,( ( RRSe + MLU ) * MUC ) ) ) ) ) / ( DS + Min( Min( ( ( ( RCSe / MUR ) - ( MLU - RCSe ) ) / MUC ) ,Min( Min( CS ,( DS + RCSe ) ) ,MUC ) ) ,( RRSe / ( MUM + ( DS + MUM ) ) ) ) ) ) - ( ( ( MUC - Max( ( RRSe / DS ),RMSe ) ) + ( ( MUR / RRSe ) + RMSe ) ) - MLU ) )", "obj1": 0.3060836501901141, "obj2": 0.4385828800632686}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( Min( DDR ,MDR ) - Const ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe / Min( ( ( RCSe / CS ) + MUR ) ,Min( RMSe ,CS ) ) ) + RMSe ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.34600760456273766, "obj2": 0.4142186539392434}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ARS / Min( Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ,( MDR - ( Const * FirstVNF_Mem_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.17870722433460076, "obj2": 0.5750186091810111}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( ( ( ( FirstVNF_Mem * ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_CPU ) * FirstVNF_RAM ) ) / ARS ) ) - PN ) / ARS ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUR + MUR ) ) - ( CS * MUR ) ) - RCSe ) / RRSe ) - ( Min( ( RCSe + CS ) ,( ( RCSe + MLU ) + ( Max( MLU,RMSe ) - MUR ) ) ) + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5880446621215034}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ARS - Const ) ) - ( FirstVNF_CPU - ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( MLU,( ( ( ( MLU + RCSe ) - DS ) + ( RCSe - Min( MLU ,MUM ) ) ) / RRSe ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.9163498098859315, "obj2": 0.03993001369952316}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * Max( DDR,FirstVNF_CPU ) ) - ( Min( ARS ,( ( PN * MDR ) - ( ( RRS + FirstVNF_Mem ) - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RRSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( RMSe / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( ( ( MDR - Const ) / FirstVNF_CPU ),( Min( FirstVNF_RAM_Server ,Min( ( ( ACS - FirstVNF_RAM_Server ) / FirstVNF_CPU ) ,FirstVNF_CPU ) ) + FirstVNF_Mem ) ) ) - ( Min( ( ( ARS * DDR ) - PN ) ,ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,Max( ( DS / RRSe ),( MUC + MLU ) ) ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * Min( MUC ,Min( RMSe ,MUR ) ) )", "obj1": 0.9771863117870723, "obj2": 0.007870314044780797}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) * Max( ( PN + ( PN + ( PN / ( DDR * Const ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) + RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM + Min( DS ,RMSe ) ) / Max( RCSe,CS ) ) ,Min( CS ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.1520912547528517, "obj2": 0.5975686109528278}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.9277566539923955, "obj2": 0.032721657208713034}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM * Const ),AMS ) ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + ACS ) + ( FirstVNF_RAM / MDR ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( MUM / DS ) ,RCSe ) + ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Max( ( ( MUC / MLU ) * MUM ),RMSe ) ) ) + ( ( Min( ( RMSe + Max( MLU,MUR ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09389323512195116}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.056492535552434026}], "28": [{"determining": "( ( ( Min( ( PN * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MLU ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM_Server ) - ( ( DDR - ( RRS * ( BR / DDR ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS - ( DS - Min( Max( ( ( MUC - RRSe ) * ( MUC / RMSe ) ),( DS / DS ) ) ,Max( ( MUM / RMSe ),CS ) ) ) ) ,RMSe ) - ( ( ( ( CS + RCSe ) - MLU ) + ( MUM + MLU ) ) + Max( ( RRSe / MUC ),( Max( RMSe,RMSe ) + ( CS * Max( Max( RCSe,RMSe ),( DS + MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 0.7642585551330798, "obj2": 0.08858711929846583}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.056492535552434026}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.49049429657794674, "obj2": 0.2625152455209228}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.8897338403041825, "obj2": 0.042498085697190574}, {"determining": "( ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MUC - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.27756653992395436, "obj2": 0.47835316435766845}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * Max( DDR,FirstVNF_CPU ) ) - ( Min( ARS ,( ( PN * MDR ) - ( ( RRS + FirstVNF_Mem ) - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RRSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( RMSe / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + ACS ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( ( MUM * ( ( MLU + MUR ) + RMSe ) ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.6912796466428225}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - Min( BR ,FirstVNF_RAM_Server ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / DS ) )", "obj1": 0.7034220532319392, "obj2": 0.1141275322253924}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6298528290450757}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU - PN ) ,( MDR / ( RRS / Max( ARS,FirstVNF_RAM ) ) ) ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( MUM + ( MUR / MUM ) ) / ( ( RRSe / ( ( Min( RRSe ,MUM ) - Min( RCSe ,( RRSe / RRSe ) ) ) + RCSe ) ) - Min( MUM ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.9448669201520913, "obj2": 0.024379596789348937}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),( FirstVNF_RAM - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) - Min( ARS ,( BR - MDR ) ) )", "choosing": "( ( ( RCSe + ( DS - ( Min( ( Min( MUR ,RMSe ) - Min( MUM ,RRSe ) ) ,Max( Min( MLU ,CS ),Min( RMSe ,CS ) ) ) + RCSe ) ) ) / ( DS + ( MUM * ( RRSe + MUR ) ) ) ) - Max( Min( MLU ,RMSe ),( CS - CS ) ) )", "obj1": 0.5304182509505704, "obj2": 0.22486524586673123}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( ( FirstVNF_Mem * ( Max( MDR,( ( FirstVNF_RAM * FirstVNF_CPU ) * FirstVNF_RAM ) ) / ARS ) ) - PN ) / ARS ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUR + MUR ) ) - ( CS * MUR ) ) - RCSe ) / RRSe ) - ( Min( ( RCSe + CS ) ,( ( RCSe + MLU ) + ( Max( MLU,RMSe ) - MUR ) ) ) + Min( DS ,MUM ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5880446621215034}, {"determining": "( ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_Mem ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) + MDR ) ) * Max( ( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( Min( DDR ,ARS ) + MDR ) ) + ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Min( ( ( MLU - CS ) * Min( Max( RCSe,DS ) ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ,DS ) * ( Min( MUR ,DS ) - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( ( Max( MUM,Min( MUC ,RRSe ) ) + RCSe ) + RRSe ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09716731704171094}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( BR,( PN * PN ) ) / PN ) ,Max( FirstVNF_Mem,Min( ( CRS * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( Min( ( FirstVNF_CPU - PN ) ,( MDR / ( RRS / Max( ARS,FirstVNF_RAM ) ) ) ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( DS * ( ( MUM + ( MUR / MUM ) ) / ( ( RRSe / ( ( Min( RRSe ,MUM ) - Min( RCSe ,( RRSe / RRSe ) ) ) + RCSe ) ) - Min( MUM ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.967680608365019, "obj2": 0.014400421657906158}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.09389323512195116}, {"determining": "( ( MDR + FirstVNF_CPU ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / Min( CRS ,FirstVNF_Mem ) ) * MDR ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS + ( ( MLU - CS ) - Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( CS,RRSe ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.6880889338934509}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * ARS ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / ( Max( ( MRS / BR ),Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) ) )", "choosing": "( ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( RCSe,MUM ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RRSe ) ) ,MUM ) - Min( Min( MUC ,Max( MUR,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) * ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ARS - Const ) ) - ( FirstVNF_CPU - ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( MLU,( ( ( ( MLU + RCSe ) - DS ) + ( RCSe - Min( MLU ,MUM ) ) ) / RRSe ) ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.9163498098859315, "obj2": 0.03993001369952316}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( Min( DDR ,MDR ) - Const ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe / Min( ( ( RCSe / CS ) + MUR ) ,Min( RMSe ,CS ) ) ) + RMSe ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.34600760456273766, "obj2": 0.4142186539392434}], "29": [{"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( FirstVNF_Mem,( PN * PN ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RRSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + Min( ( MUC / CS ) ,Max( RRSe,RMSe ) ) ) ) / ( Min( MUM ,Min( DS ,MUM ) ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MLU ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * Max( DDR,FirstVNF_CPU ) ) - ( Min( ARS ,( ( PN * MDR ) - ( ( RRS + FirstVNF_Mem ) - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RRSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( RMSe / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.8897338403041825, "obj2": 0.042498085697190574}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 0.7642585551330798, "obj2": 0.08858711929846583}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.49049429657794674, "obj2": 0.2625152455209228}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * ARS ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / ( Max( ( MRS / BR ),Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) ) )", "choosing": "( ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( RCSe,MUM ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RRSe ) ) ,MUM ) - Min( Min( MUC ,Max( MUR,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) * ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + ACS ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( ( MUM * ( ( MLU + MUR ) + RMSe ) ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.6912796466428225}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - Min( BR ,FirstVNF_RAM_Server ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / DS ) )", "obj1": 0.7034220532319392, "obj2": 0.1141275322253924}, {"determining": "( Min( DDR ,( ( ( FirstVNF_CPU_Server - PN ) / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * RCSe )", "obj1": 0.16730038022813687, "obj2": 0.5977409790993087}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,( PN - AMS ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server / Const ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MLU ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( DS + RRSe ) ,( MUR / ( MUR / Max( DS,MUC ) ) ) ) ) ) )", "obj1": 0.4714828897338403, "obj2": 0.2767551229599003}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( ( AMS + AMS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - RCSe ) - ( Max( ( ( CS + RCSe ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,Min( ( ( MUR + MUC ) - CS ) ,CS ) ) ) )", "obj1": 0.188212927756654, "obj2": 0.5722921138611511}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( Min( DDR ,MDR ) - Const ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe / Min( ( ( RCSe / CS ) + MUR ) ,Min( RMSe ,CS ) ) ) + RMSe ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.34600760456273766, "obj2": 0.4142186539392434}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( MDR + FirstVNF_CPU ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / Min( CRS ,FirstVNF_Mem ) ) * MDR ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS + ( ( MLU - CS ) - Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( Max( CS,RRSe ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.07604562737642585, "obj2": 0.6880889338934509}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( FirstVNF_Mem + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.9144486692015209, "obj2": 0.03991912535485429}, {"determining": "( ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_Mem ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) + MDR ) ) * Max( ( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( Min( DDR ,ARS ) + MDR ) ) + ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Min( ( ( MLU - CS ) * Min( Max( RCSe,DS ) ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ,DS ) * ( Min( MUR ,DS ) - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( ( Max( MUM,Min( MUC ,RRSe ) ) + RCSe ) + RRSe ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09716731704171094}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + ( PN + MDR ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / RMSe ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11787072243346007, "obj2": 0.6307752841546432}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.5209125475285171, "obj2": 0.22662364773884375}, {"determining": "( ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MDR - FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( Min( Min( MDR ,Const ) ,Min( BR ,FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MLU ) - Min( MUR ,Min( MUM ,RMSe ) ) )", "obj1": 0.27566539923954375, "obj2": 0.48381044416679525}, {"determining": "( ( Min( ( RRS + ( ( FirstVNF_CPU * ( ( DDR * Const ) + FirstVNF_CPU_Server ) ) * ( Const + Min( ( ARS / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) ,PN ) - ( MDR + Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( ( MLU - MUR ) / MUR ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RRSe ) ) + Min( RMSe ,MUR ) ) )", "obj1": 0.7585551330798479, "obj2": 0.0915875956646926}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + MDR ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.8136882129277566, "obj2": 0.056492535552434026}], "30": [{"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( Max( FirstVNF_Mem,( PN * PN ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) / ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / CS ) * ( ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MLU,RRSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + Min( ( MUC / CS ) ,Max( RRSe,RMSe ) ) ) ) / ( Min( MUM ,Min( DS ,MUM ) ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.9885931558935361, "obj2": 0.0045127827761826025}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( MRS ,( FirstVNF_Mem + DDR ) ) / ( ( MRS * ( CRS * AMS ) ) * FirstVNF_Mem ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR * CS ) + RMSe ) / ( Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,CS ) ) ) ) + DS ) ) - ( ( RMSe + RMSe ) - MLU ) )", "obj1": 0.9239543726235742, "obj2": 0.03242168658981083}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - Min( Min( ( MDR - ARS ) ,( PN - MDR ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( Min( Min( CS ,Min( MUR ,RMSe ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RMSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.1634980988593156, "obj2": 0.5913142662834001}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.8897338403041825, "obj2": 0.042498085697190574}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * Max( DDR,FirstVNF_CPU ) ) - ( Min( ARS ,( ( PN * MDR ) - ( ( RRS + FirstVNF_Mem ) - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RRSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( RMSe / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + ( PN + MDR ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / RMSe ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11787072243346007, "obj2": 0.6307752841546432}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_Mem ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) + MDR ) ) * Max( ( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( Min( DDR ,ARS ) + MDR ) ) + ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Min( ( ( MLU - CS ) * Min( Max( RCSe,DS ) ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ,DS ) * ( Min( MUR ,DS ) - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( ( Max( MUM,Min( MUC ,RRSe ) ) + RCSe ) + RRSe ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09716731704171094}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.49049429657794674, "obj2": 0.2625152455209228}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 0.7642585551330798, "obj2": 0.08858711929846583}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,( PN - AMS ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server / Const ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MLU ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( DS + RRSe ) ,( MUR / ( MUR / Max( DS,MUC ) ) ) ) ) ) )", "obj1": 0.4714828897338403, "obj2": 0.2767551229599003}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + ACS ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( ( MUM * ( ( MLU + MUR ) + RMSe ) ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.6912796466428225}, {"determining": "( ( ( ( Max( ( MDR * PN ),FirstVNF_RAM ) - FirstVNF_RAM_Server ) * FirstVNF_Mem ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) + MDR ) ) * Max( ( ( ( ( Min( DDR ,ARS ) + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Min( ( ( MLU - CS ) * Min( Max( RCSe,DS ) ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ,DS ) * ( Min( MUR ,MUM ) - ( Max( ( Max( RRSe,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.7927756653992395, "obj2": 0.06399486234466707}, {"determining": "( ( AMS + AMS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - RCSe ) - ( Max( ( ( CS + RCSe ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,Min( ( ( MUR + MUC ) - CS ) ,CS ) ) ) )", "obj1": 0.188212927756654, "obj2": 0.5722921138611511}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( ( Max( ACS,MRS ) + CRS ) + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem / Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( RRSe ,RRSe ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - ( MUC - MUM ) )", "obj1": 0.279467680608365, "obj2": 0.4811393098321956}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.5209125475285171, "obj2": 0.22662364773884375}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( Min( ( RRS + ( ( FirstVNF_CPU * ( ( DDR * Const ) + FirstVNF_CPU_Server ) ) * ( Const + Min( ( ARS / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) ,PN ) - ( MDR + Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( ( MLU - MUR ) / MUR ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RRSe ) ) + Min( RMSe ,MUR ) ) )", "obj1": 0.7585551330798479, "obj2": 0.0915875956646926}, {"determining": "( ( ( PN + Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Max( RMSe,DS ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3155893536121673, "obj2": 0.44152385062207866}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,CRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * Max( AMS,Max( ( ( FirstVNF_Mem / ACS ) * FirstVNF_Mem_Server ),Min( ( Max( BR,( PN * PN ) ) / PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( Max( BR,( Max( FirstVNF_CPU,( ACS + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Const ) ) ,( MDR / ( ARS / Min( ( MDR - ( Const * FirstVNF_Mem_Server ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,AMS ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * Min( ( ( Max( MUC,DS ) * CS ) * ( DS - ( MUM * MUM ) ) ) ,MUM ) )", "obj1": 0.49429657794676807, "obj2": 0.23765075060727922}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( ( ( MDR * FirstVNF_Mem ) - ( MDR + Max( AMS,Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.7072243346007605, "obj2": 0.1114969956110662}, {"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( RMSe / MUC ) ) - Min( MUC ,Min( DS ,MUR ) ) ),RCSe ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( ( MUM / MUM ) / Max( CS,RCSe ) ) ,Min( MUR ,( RMSe / MUM ) ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.5, "obj2": 0.23235407535210093}], "31": [{"determining": "( ( ( Min( ( MRS * MDR ) ,Const ) * ( FirstVNF_RAM * ( Const + Min( FirstVNF_RAM ,( ARS / AMS ) ) ) ) ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( BR * ( FirstVNF_CPU * MDR ) ) * CRS ) ,FirstVNF_RAM_Server ) ) ) ) - Min( ARS ,( MDR + PN ) ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( MUR / ( MLU - MUR ) ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RMSe ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) * Min( Min( ( CRS + FirstVNF_Mem_Server ) ,DDR ) ,Min( MRS ,Max( ( AMS * ( ( ( DDR - MRS ) - ARS ) + MRS ) ),DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) / ( ( MLU - Min( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) ,RMSe ) ) + MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8216981448067439}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( ( Min( PN ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server * ( MRS / AMS ) ) + ARS ) ) * Max( RRS,MDR ) ) ) - ( MDR + Max( FirstVNF_Mem,Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe * DS ) - ( Min( Max( MUC,( RCSe + Max( CS,MUR ) ) ) ,MUR ) * ( Min( RCSe ,Min( MUC ,Max( MUC,DS ) ) ) * RMSe ) ) ) ) * ( ( ( ( MUC * MLU ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.3726235741444867, "obj2": 0.36241400502411714}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + ( Max( FirstVNF_RAM_Server,( Const / ( MRS - FirstVNF_Mem ) ) ) / ACS ) ),FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( CS * DS ) * Max( MLU,( RMSe / Min( Max( ( Max( ( MUC * RMSe ),( MUM / DS ) ) / Max( RRSe,RRSe ) ),( MUC - RMSe ) ) ,MUM ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.3955426498695933}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,DS ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / Min( DS ,MUM ) ) ) + ( Max( DS,( Min( MUM ,CS ) + MLU ) ) * MUR ) ) ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) )", "obj1": 0.8897338403041825, "obj2": 0.042498085697190574}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( BR + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( MUR + RMSe ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Max( RRSe,RCSe ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MLU + MUC ) )", "obj1": 0.41064638783269963, "obj2": 0.3258560271507465}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RMSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.15779467680608364, "obj2": 0.5896047180057258}, {"determining": "( ( ( DDR + MDR ) * Min( ( Min( ( FirstVNF_Mem - Max( ( MRS - MRS ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ,CRS ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.6806083650190115, "obj2": 0.14978990783129198}, {"determining": "( ( ( DDR + MDR ) * Min( ( ( MDR + PN ) * ( PN + MDR ) ) ,Max( ( FirstVNF_RAM - CRS ),( ( FirstVNF_CPU / ( FirstVNF_RAM_Server / Max( DDR,RRS ) ) ) + Min( RRS ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) ) ) ) - ( ( ( ( CRS - ( PN - FirstVNF_Mem ) ) + ( MDR * FirstVNF_Mem ) ) - PN ) / ( ARS - MDR ) ) )", "choosing": "( ( ( ( MUC + MUR ) - CS ) - DS ) - Min( ( ( ( ( RMSe / ( CS / DS ) ) - Min( Max( ( DS / RCSe ),MUC ) ,MLU ) ) + Min( RMSe ,RMSe ) ) / Min( ( ( DS / RCSe ) - Min( RMSe ,CS ) ) ,( MUC / RRSe ) ) ) ,( CS * RMSe ) ) )", "obj1": 0.9790874524714829, "obj2": 0.009605594517711199}, {"determining": "( ( RRS * FirstVNF_CPU ) * Max( FirstVNF_CPU_Server,Max( ( Const - ARS ),Max( Min( ( Max( Max( BR,PN ),( MDR * PN ) ) - FirstVNF_RAM_Server ) ,Const ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUR / ( RCSe - ( DS * RCSe ) ) ) - DS ),( ( ( DS / RCSe ) - Min( MLU ,RRSe ) ) * RRSe ) ) - ( MUC - ( DS * DS ) ) )", "obj1": 0.13498098859315588, "obj2": 0.6132337597965138}, {"determining": "( ( AMS * FirstVNF_CPU ) - ( Min( ( MDR - ACS ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS * MUR ) - ( MUM * Min( ( MUR + RCSe ) ,Max( DS,MUR ) ) ) ) + RCSe ) / RRSe ) - ( RMSe + Min( DS ,MUM ) ) ) * ( ( ( RMSe + Min( RMSe ,( Max( Min( MUR ,MLU ),MUC ) - ( ( RMSe / MUM ) - Min( MUR ,MUR ) ) ) ) ) * MLU ) / Max( ( RMSe / ( MLU / CS ) ),Min( DS ,MUM ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.16691147189815875}, {"determining": "( ( ( Const * ( ( MDR / ACS ) + ( ( DDR / ( Max( FirstVNF_Mem,PN ) - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) / ( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( Max( Min( RCSe ,CS ),( MUC + MLU ) ) + Max( RCSe,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.21102661596958175, "obj2": 0.5486949254911189}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( MRS ,( FirstVNF_Mem + DDR ) ) / ( ( MRS * ( CRS * AMS ) ) * FirstVNF_Mem ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR * CS ) + RMSe ) / ( Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,CS ) ) ) ) + DS ) ) - ( ( RMSe + RMSe ) - MLU ) )", "obj1": 0.9239543726235742, "obj2": 0.03242168658981083}, {"determining": "( Max( ( PN + ( PN + ( PN / ( CRS * DDR ) ) ) ),Min( Min( BR ,DDR ) ,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * ( ( ( Max( Max( DS,RMSe ),( ( RRSe + ( MUM / MUR ) ) - RCSe ) ) / RRSe ) - ( MUM + Min( DS ,MUM ) ) ) + ( MUM + Min( DS ,MUM ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.7255881678413919}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + ACS ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( ( MUM * ( ( MLU + MUR ) + RMSe ) ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.06653992395437262, "obj2": 0.6912796466428225}, {"determining": "( ( ( ( ACS * FirstVNF_RAM_Server ) - ( Min( ARS ,( ( FirstVNF_Mem - Min( MRS ,ARS ) ) - PN ) ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server - ( AMS * FirstVNF_Mem ) ) ) - ( ( CRS + Const ) / PN ) )", "choosing": "( ( MUC - CS ) * Min( MUR ,( MUR - ( CS - Min( ( Min( MUC ,MUC ) - ( MLU - ( RCSe - RCSe ) ) ) ,MLU ) ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5227497144919961}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,Max( ( ( ( ( PN + ( PN + MDR ) ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( RMSe / RMSe ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( ( ( ( RMSe + RCSe ) / RRSe ) - Min( DS ,Min( DS ,MUR ) ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) ) )", "obj1": 0.11787072243346007, "obj2": 0.6307752841546432}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MDR - PN ) ),MDR ),RRS ) * ( ( MDR * Const ) - ( MRS * ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * ( FirstVNF_CPU_Server * PN ) ) ) ) ) )", "choosing": "( ( ( DS + ( ( MUC / Max( MUC,( RRSe / DS ) ) ) - Max( Min( RCSe ,Min( ( MUR - RCSe ) ,( MUC / MLU ) ) ),Min( ( MUC / MLU ) ,Max( ( MUR + RRSe ),MLU ) ) ) ) ) / ( RCSe + RMSe ) ) - ( MUC - MLU ) )", "obj1": 0.09885931558935361, "obj2": 0.6460414042678211}, {"determining": "( ( ( ( MDR - Min( FirstVNF_RAM ,( ACS / Min( MRS ,BR ) ) ) ) * PN ) * Max( AMS,Max( FirstVNF_CPU,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - Max( ( Const + RRS ),FirstVNF_RAM_Server ) ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,( ( Min( ( RRSe * ( RRSe + ( MUR / MUC ) ) ) ,RMSe ) / Min( ( MUR / ( MUR / Max( DS,MUC ) ) ) ,MLU ) ) + DS ) ) * ( ( ( Min( RMSe ,DS ) * ( RCSe - CS ) ) - RCSe ) / RRSe ) )", "obj1": 0.24334600760456274, "obj2": 0.5110885076397745}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3269961977186312, "obj2": 0.42495993853962716}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * ( Min( ARS ,( MDR - PN ) ) / Max( ( RRS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( RRS * Min( AMS ,FirstVNF_Mem ) ) / ( AMS * ARS ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,Min( DS ,MUR ) ) - ( Min( RRSe ,DS ) + ( MUR + DS ) ) ) + RCSe ) / RRSe ) - ( Max( MUM,Max( RMSe,( RRSe * DS ) ) ) + Min( MUC ,Max( ( ( CS * CS ) - RMSe ),( CS + RCSe ) ) ) ) ) / ( Min( DS ,MUM ) / MUM ) ) * ( RCSe / CS ) )", "obj1": 0.688212927756654, "obj2": 0.1215287873371677}, {"determining": "( ( FirstVNF_CPU - Max( ARS,FirstVNF_RAM ) ) - ( ( PN + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( ( FirstVNF_CPU_Server * MRS ) ,CRS ) * Min( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * CRS ) ,FirstVNF_RAM_Server ) ) ,MDR ) ) - ( Min( FirstVNF_RAM ,( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe + ( Max( MUC,( RMSe / RCSe ) ) / Min( ( ( RMSe / ( MLU / CS ) ) / Max( Max( DS,RRSe ),CS ) ) ,Min( MLU ,CS ) ) ) ) / ( DS + Min( Min( ( MUC + ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,( CS * DS ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - ( MUC / MLU ) )", "obj1": 0.25285171102661597, "obj2": 0.49063278240970654}, {"determining": "( ( ( ( FirstVNF_RAM * CRS ) * FirstVNF_Mem ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) + MDR ) ) * Max( ( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) + ( Min( DDR ,ARS ) + MDR ) ) + ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Min( ( ( MLU - CS ) * Min( Max( RCSe,DS ) ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ,DS ) * ( Min( MUR ,DS ) - ( Max( ( Max( DS,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( ( Max( MUM,Min( MUC ,RRSe ) ) + RCSe ) + RRSe ) ) ) ) )", "obj1": 0.7262357414448669, "obj2": 0.09716731704171094}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( MDR,Max( FirstVNF_Mem,Min( ( ( Const - ARS ) * ARS ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( Min( FirstVNF_Mem ,PN ) - PN ) ) / Min( PN ,ACS ) ) )", "choosing": "( ( MUC / CS ) * Max( RRSe,RMSe ) )", "obj1": 0.045627376425855515, "obj2": 0.7454526011566074}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( ARS * ( FirstVNF_RAM_Server * ( MDR / FirstVNF_RAM_Server ) ) ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.49049429657794674, "obj2": 0.2625152455209228}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( ( ( ARS * ( ARS / PN ) ) * ARS ) ,( ARS + Min( Const ,BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server * BR ) / ( MDR - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MUC / RCSe ) * ( ( Min( ( Min( CS ,( Max( MUM,RMSe ) * MUR ) ) - ( MUR * DS ) ) ,Min( MLU ,CS ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( Max( ( ( MUC + RRSe ) - Max( Max( MUR,MUR ),MUC ) ),RMSe ) + ( MUM / CS ) ) ) )", "obj1": 0.4505703422053232, "obj2": 0.28427012183615863}, {"determining": "( ( Min( ( ( ( FirstVNF_CPU + ARS ) / FirstVNF_RAM_Server ) - Min( AMS ,BR ) ) ,PN ) * Max( AMS,Max( FirstVNF_Mem,Min( Max( RRS,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( AMS - ARS ) + FirstVNF_CPU ) )", "choosing": "( ( RCSe / CS ) * ( ( ( ( ( ( MUM * ( MUC + MUC ) ) - ( CS * MUR ) ) + RCSe ) / ( MUR / MUM ) ) - ( MUM + Min( MUM ,MUR ) ) ) / ( MUM + ( RRSe / ( RCSe + MUC ) ) ) ) )", "obj1": 0.5570342205323194, "obj2": 0.2009005448314873}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,CRS ) )", "choosing": "( ( ( Min( RCSe ,( MUM / DS ) ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( RCSe + RMSe ) ) / Max( CS,RCSe ) ) / Min( MLU ,( RMSe + Max( MUM,RRSe ) ) ) ) ) + ( ( Min( ( RMSe + Max( MUR,RRSe ) ) ,MUM ) - Min( Min( MUC ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) + ( ( MUC / CS ) * Max( RRSe,RMSe ) ) ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7895907084456092}, {"determining": "( ( ( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) + ( ( DDR - ( ARS - Const ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) * MDR ) * Max( ARS,AMS ) ) - ( Min( ( MDR - ARS ) ,( MDR / PN ) ) + ( ( PN + FirstVNF_RAM ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUC - MLU ) - ( ( DS + RCSe ) / ( ( ( RCSe * RMSe ) - MUM ) + RRSe ) ) ) + CS ) / Min( Max( Min( MUR ,( ( Min( MUM ,MUR ) / ( DS * RCSe ) ) - RCSe ) ),RRSe ) ,Min( MUC ,CS ) ) ) - ( RMSe * CS ) )", "obj1": 0.5779467680608364, "obj2": 0.19307064527377996}, {"determining": "( ( ( ( ( FirstVNF_Mem * CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( ( ARS * DDR ) - PN ) ) / FirstVNF_CPU_Server ) ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( Max( ( ( AMS * ( MDR - FirstVNF_RAM_Server ) ) + Max( PN,ACS ) ),ARS ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( ( RMSe + RCSe ) / Min( ( ( MUR / ( MUM + CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( ( MUC / ( ( RCSe / MUR ) - ( MLU - RCSe ) ) ) ,Min( Min( CS ,Max( DS,RCSe ) ) ,( RRSe / DS ) ) ) ,( ( ( RRSe / ( RMSe + RCSe ) ) - ( MUM + Min( DS ,MUM ) ) ) / ( MUM + ( MUC + MUR ) ) ) ) ) ) - Min( RMSe ,MLU ) )", "obj1": 0.4467680608365019, "obj2": 0.31371801203934235}, {"determining": "( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_RAM_Server ) ,( ( ( MDR + PN ) + ( ARS / PN ) ) / ( ( FirstVNF_Mem * Const ) - MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( MUM / RRSe ) - ( RCSe + DS ) ) - ( CS / MUR ) ) * ( DS / ( ( RMSe / ( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) / Min( MUR ,( RMSe / Max( MUM,RRSe ) ) ) ) ) + ( ( ( MUC / CS ) * ( RMSe / RRSe ) ) + ( Min( ( ( MUC - DS ) + Max( MLU,RMSe ) ) ,( RMSe + Max( MLU,RMSe ) ) ) - Min( Min( MUM ,Max( RMSe,DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7724089206495839}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( FirstVNF_Mem,( Min( MDR ,FirstVNF_CPU ) * AMS ) ) ) ) - ( Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( ( Max( ARS,RRS ) / FirstVNF_Mem_Server ) / Min( Min( AMS ,( ACS - FirstVNF_RAM_Server ) ) ,( MDR - ( Const * FirstVNF_RAM_Server ) ) ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( DS + RCSe ) / ( CS + RRSe ) ) - ( MUC - MLU ) ) + RCSe ) / ( CS + RMSe ) ) - Min( RCSe ,( RMSe * ( RRSe * ( MUM / ( RCSe / ( ( MUM * MUC ) - MUC ) ) ) ) ) ) )", "obj1": 0.8346007604562737, "obj2": 0.04690219989366889}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( FirstVNF_RAM_Server ,Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,FirstVNF_CPU ) ),FirstVNF_Mem ) ) ) - ( Max( ( MDR / ( RRS / Min( ( ( MRS + ARS ) - Min( Const ,MDR ) ) ,Min( ( ACS - FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) ) ),( MDR + PN ) ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.5361216730038023, "obj2": 0.21517224906315993}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_CPU ) * Max( MRS,Max( FirstVNF_Mem,Min( Min( Const ,PN ) ,FirstVNF_RAM_Server ) ) ) ) - ( Min( ( ARS - MDR ) ,( ( DDR * FirstVNF_Mem ) - MRS ) ) / ACS ) )", "choosing": "( ( Min( Min( RCSe ,MUM ) ,( CS * MUC ) ) * Min( MUC ,CS ) ) - ( RMSe / MUC ) )", "obj1": 0.5988593155893536, "obj2": 0.17921388403077582}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) * Max( AMS,Max( Min( MRS ,( PN - AMS ) ),FirstVNF_Mem ) ) ) - ( Min( ARS ,( ( FirstVNF_CPU_Server / Const ) - PN ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) * ( Min( ( Min( RRSe ,MUM ) - Min( MLU ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / ( MUM + Min( ( DS + RRSe ) ,( MUR / ( MUR / Max( DS,MUC ) ) ) ) ) ) )", "obj1": 0.4714828897338403, "obj2": 0.2767551229599003}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * Max( DDR,FirstVNF_CPU ) ) - ( Min( ARS ,( ( PN * MDR ) - ( ( RRS + FirstVNF_Mem ) - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RRSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( RMSe / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.29277566539923955, "obj2": 0.4493722873117123}, {"determining": "( ( AMS + AMS ) - ( BR + RRS ) )", "choosing": "( ( Max( ( ( CS + MLU ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,( ( Max( MUR,CS ) * MLU ) + RRSe ) ) ) - ( MUC - RCSe ) )", "obj1": 0.6197718631178707, "obj2": 0.17273678088183334}, {"determining": "( ( ( ACS / Min( ( PN * ( Const + RRS ) ) ,( FirstVNF_RAM - CRS ) ) ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Max( RMSe,DS ) ) ) ) ) ) - ( ( ( RCSe * RMSe ) - MUM ) - MLU ) )", "obj1": 0.7775665399239544, "obj2": 0.0708726442507544}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RRSe - MUR ) * Max( Min( RCSe ,RCSe ),( ( MLU + RMSe ) * MUC ) ) ) * ( RCSe / CS ) )", "obj1": 0.09125475285171103, "obj2": 0.6716178854321756}, {"determining": "( ( ( ( Max( ACS,MRS ) + CRS ) + ( ( DDR - ( ARS - Const ) ) * ( MRS - FirstVNF_Mem_Server ) ) ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem / Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( Min( Min( MDR ,Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS + Min( RRSe ,RRSe ) ) / ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) ) - ( MUC - MUM ) )", "obj1": 0.279467680608365, "obj2": 0.4811393098321956}, {"determining": "( ( AMS + AMS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - RCSe ) - ( Max( ( ( CS + RCSe ) - MLU ),( CS + MLU ) ) + Min( ( MUC / RRSe ) ,Min( ( ( MUR + MUC ) - CS ) ,CS ) ) ) )", "obj1": 0.188212927756654, "obj2": 0.5722921138611511}, {"determining": "( ( ( ( Max( ( MDR * PN ),FirstVNF_RAM ) - FirstVNF_RAM_Server ) * FirstVNF_Mem ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) + MDR ) ) * Max( ( ( ( ( Min( DDR ,ARS ) + MDR ) + ( ( DDR - ( ARS - Const ) ) / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Min( ( ( MLU - CS ) * Min( Max( RCSe,DS ) ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ,DS ) * ( Min( MUR ,MUM ) - ( Max( ( Max( RRSe,DS ) - RCSe ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( CS * DS ) ) ) ) ) ) )", "obj1": 0.8079847908745247, "obj2": 0.059751297266622254}, {"determining": "( ( ( ( MDR + ( AMS + AMS ) ) * PN ) * Max( ( FirstVNF_Mem_Server + CRS ),Max( FirstVNF_Mem,( Min( ( MDR + Const ) ,( MDR - PN ) ) / FirstVNF_CPU_Server ) ) ) ) - ( Min( ( MDR - ARS ) ,( PN - MDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( ( MUC / RRSe ),RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( Min( Min( Min( CS ,Max( RCSe,DS ) ) ,MUC ) ,Max( Min( RMSe ,( MUM / RMSe ) ),MLU ) ) ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,MUM ) ) ) ) ) ) - Max( MUC,MLU ) )", "obj1": 0.18631178707224336, "obj2": 0.5727663931503767}, {"determining": "( ( ( PN + MDR ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( RRSe ,MUM ) - Min( MUC ,Min( DS ,MUR ) ) ) ,Max( Min( CS ,CS ),MUM ) ) / RRSe ) * ( ( ( ( RMSe + RCSe ) / Min( ( MUC / Max( RCSe,( MLU - DS ) ) ) ,Min( CS ,CS ) ) ) - ( MUC - MLU ) ) / ( ( RMSe / ( MLU / CS ) ) + ( MUC * MUR ) ) ) )", "obj1": 0.2870722433460076, "obj2": 0.47178979621032413}, {"determining": "( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( ARS - ( FirstVNF_CPU + ( FirstVNF_Mem * DDR ) ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) * ( ( ( RMSe + DS ) / DS ) / ( MUM + Min( ( MUM + Max( MUR,RRSe ) ) ,MUM ) ) ) )", "obj1": 0.42585551330798477, "obj2": 0.3204159237583482}, {"determining": "( ( ( PN + Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) * ( ( Min( FirstVNF_CPU ,CRS ) * ( Max( FirstVNF_Mem,Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM_Server ) ) + MDR ) ) - ( Min( ARS ,( ( MDR - PN ) - ( ACS - ACS ) ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe + ( RCSe / Min( ( ( RMSe / ( MLU / CS ) ) / Max( CS,RCSe ) ) ,Min( RMSe ,CS ) ) ) ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Max( RMSe,DS ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.3155893536121673, "obj2": 0.44152385062207866}, {"determining": "( ( Min( ( RRS + ( ( FirstVNF_CPU * ( ( DDR * Const ) + FirstVNF_CPU_Server ) ) * ( Const + Min( ( ARS / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) ) ) ) ,PN ) - ( MDR + Max( AMS,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) * Max( ( ( ( ( PN + MDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( MDR - PN ) ) * MDR ),RRS ) )", "choosing": "( Max( DS,( ( ( MLU + DS ) - ( MLU * ( ( MLU - MUR ) / MUR ) ) ) / MUM ) ) / ( ( MLU - ( Max( ( MUR * ( ( CS / DS ) * MUM ) ),MUR ) - RRSe ) ) + Min( RMSe ,MUR ) ) )", "obj1": 0.7585551330798479, "obj2": 0.0915875956646926}, {"determining": "( Min( DDR ,( ( PN / FirstVNF_Mem_Server ) * DDR ) ) * Max( FirstVNF_CPU_Server,( ( ARS - Const ) / Max( FirstVNF_Mem,Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,( ( ( PN + ACS ) + ( FirstVNF_RAM / MDR ) ) / ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( DS + ( ( MLU - CS ) * Min( MUM ,Min( RRSe ,( ( DS / RCSe ) - Min( MLU ,CS ) ) ) ) ) ) * ( RMSe - ( Max( ( ( MUM * ( ( MLU + MUR ) + RMSe ) ) - ( CS * MUR ) ),( MLU / ( MUC - ( MLU - MUR ) ) ) ) / ( CS / ( RCSe / ( MUC - ( MUM * DS ) ) ) ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.6801934659529881}, {"determining": "( ( Max( Const,FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,CRS ) * ( PN + MDR ) ) - ( Min( ARS ,( FirstVNF_Mem + DDR ) ) / FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RCSe / Min( ( ( RCSe / CS ) + MUR ) ,Min( RMSe ,CS ) ) ) + RMSe ) / ( DS + Min( MUM ,( Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) / ( MUM + Min( DS ,( RMSe - RMSe ) ) ) ) ) ) ) - ( MUC - MLU ) )", "obj1": 0.9220532319391636, "obj2": 0.03330961928300122}]}