{"1": [{"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.29239766081871343, "obj2": 0.719174651373761}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Min( MDR ,( PN - CRS ) ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( RRSe * ( ( DS - ( Max( ( DS / CS ),DS ) - MLU ) ) - MUM ) ) / RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051846}, {"determining": "Min( ( PN - AMS ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) )", "choosing": "Min( ( CS + RMSe ) ,Max( MUM,MLU ) )", "obj1": 0.3079922027290448, "obj2": 0.7064157771686811}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * FirstVNF_CPU ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( CS * ( ( Min( MUR ,( RMSe - MLU ) ) - MUR ) - MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ACS ) )", "choosing": "Min( ( MLU - ( MLU * MUR ) ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "Min( Max( DDR,MRS ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,Max( FirstVNF_CPU,Const ) ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR + AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUM + MUC ) ,Max( ( ( DS - Min( ( CS / MLU ) ,DS ) ) - Min( CS ,( ( MUC * ( RCSe - RRSe ) ) * ( MLU / ( RMSe / RCSe ) ) ) ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,( Max( RCSe,MUM ) * ( Max( ( ( MUR - CS ) / Max( DS,MUC ) ),CS ) + MUR ) ) ) + RCSe ) ,Max( ( RRSe * CS ),( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,ARS ) * MRS ) + Min( RRS ,MDR ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + RCSe ) / MUM ) )", "obj1": 0.3060428849902534, "obj2": 0.7066222571030545}, {"determining": "( ( ( FirstVNF_RAM * RRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * ( AMS - ACS ) )", "choosing": "( ( DS * ( MUM / Min( MUC ,( MLU + MUC ) ) ) ) / ( ( RCSe + RCSe ) - ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ARS ) - Max( ACS,MRS ) )", "choosing": "Max( ( ( MLU * DS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6986246516279042}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( FirstVNF_RAM / AMS ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + Min( DS ,RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * Min( CS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM - ACS ) + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( CS / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,CRS ),( ARS * FirstVNF_CPU ) ) / ( ACS / MRS ) )", "choosing": "( ( RCSe * RCSe ) - ( ( RRSe * ( ( ( RRSe * DS ) / MUC ) - ( RRSe / RMSe ) ) ) * ( DS * Min( ( CS * CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * ( MDR - PN ) )", "choosing": "( ( ( MUC / RRSe ) - Min( CS ,MLU ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.5477582846003899, "obj2": 0.5647916629219912}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * Min( ( ( Const * FirstVNF_Mem ) / ( RRS - BR ) ) ,ARS ) ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,( CS + ( DS / ( Min( Max( MLU,MLU ) ,Max( MUR,MUM ) ) * MUM ) ) ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( RRS ,AMS ) ) ),Min( ( ( FirstVNF_RAM_Server - RRS ) * ( ARS + FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MLU - MUC ) ,( MUC - MUR ) ) * ( ( RCSe - RCSe ) - ( MUR + MUC ) ) ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR - AMS ) ) ) - Max( ( AMS + ( FirstVNF_Mem_Server * AMS ) ),( Min( BR ,AMS ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( ( Max( MUR,RRSe ) + ( MUM - MLU ) ) - ( Max( ( ( MUM + MUR ) / ( RRSe + RMSe ) ),RRSe ) - RRSe ) ) * Max( MLU,CS ) ) / Min( ( RMSe * MUM ) ,Max( DS,DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * ( FirstVNF_CPU + ARS ) ) + ( Max( RRS,MRS ) + ( ( BR * ( CRS - Min( ARS ,FirstVNF_RAM_Server ) ) ) * ARS ) ) ) + Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_CPU,Const ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( MUR,( ( MUR + Max( RMSe,MUR ) ) + CS ) ) ,Max( MLU,( RMSe - RRSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7169536776887305}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_CPU ,MDR ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS - CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) )", "choosing": "( Max( RCSe,Min( ( Max( ( Min( RRSe ,RRSe ) / MUC ),RCSe ) - CS ) ,RRSe ) ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}], "2": [{"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - AMS ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( Max( Min( BR ,AMS ),DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUC * CS ) / MLU ) / Min( Max( RCSe,RMSe ) ,MLU ) ) ,( CS * RRSe ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( ( ( FirstVNF_Mem / RRS ) + ( MRS / FirstVNF_CPU_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,MUM )", "obj1": 0.4522417153996101, "obj2": 0.5964932272317409}, {"determining": "( ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) - ( FirstVNF_RAM_Server * ( AMS * MRS ) ) )", "choosing": "( ( ( Max( ( ( RCSe - CS ) * ( Max( MUR,( RCSe / MUR ) ) + CS ) ),RCSe ) * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6672032949840871}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( ( PN - ACS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM - RMSe ) ,( CS / RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( DDR - ACS ) ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( RCSe * ( RMSe / RMSe ) ) ) - ( RRSe * CS ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230729}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ( ( BR + FirstVNF_CPU_Server ) * Max( ( PN + AMS ),( ( ( MRS - ( FirstVNF_Mem_Server - ACS ) ) * FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / ( DS * MUC ) ) / Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230729}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_CPU ,MDR ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS - CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( Min( FirstVNF_CPU ,MDR ) - FirstVNF_RAM ) ,( CRS + Max( ( FirstVNF_Mem / MRS ),Max( Min( ARS ,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / ( MLU + MUC ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS + CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( Min( PN ,( Max( ACS,FirstVNF_CPU ) - DDR ) ) / ( BR / Max( ACS,BR ) ) )", "choosing": "( ( RRSe - ( ( CS * RCSe ) + Max( MUR,MUM ) ) ) + Min( ( Min( ( MUC - Min( ( MLU + MUR ) ,MUC ) ) ,Min( DS ,( ( RRSe + ( DS + MUR ) ) - RCSe ) ) ) - MUM ) ,( ( MUM - CS ) + RMSe ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "( Min( Max( AMS,Min( ( MRS + CRS ) ,FirstVNF_CPU ) ) ,Max( Min( ( PN - FirstVNF_Mem_Server ) ,Min( MDR ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),RRSe ) - ( RMSe - MUM ) ) / ( ( DS / RCSe ) + ( MUM * RMSe ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( RRS + ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "Min( Max( Max( Min( FirstVNF_CPU_Server ,RRS ),RRS ),MRS ) ,( PN + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ACS / FirstVNF_CPU ) )", "choosing": "( ( RCSe * MUC ) / ( MLU / MUM ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) )", "choosing": "( Max( RCSe,Min( ( Max( ( Min( RRSe ,RRSe ) / MUC ),RCSe ) - CS ) ,RRSe ) ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * CS ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.30994152046783624, "obj2": 0.692398925263033}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * ( FirstVNF_CPU + ARS ) ) + ( Max( RRS,MRS ) + ( ( BR * ( CRS - Min( ARS ,FirstVNF_RAM_Server ) ) ) * ARS ) ) ) + Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_CPU,Const ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( MUR,( ( MUR + Max( RMSe,MUR ) ) + CS ) ) ,Max( MLU,( RMSe - RRSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7169536776887305}, {"determining": "( Max( FirstVNF_Mem,RRS ) / Max( PN,Const ) )", "choosing": "( Max( DS,MUR ) * Max( RCSe,( ( ( DS / MUC ) * MUC ) - MUM ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Min( Max( DDR,MRS ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( Max( RMSe,MLU ) * CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( ( BR - AMS ) / ( FirstVNF_RAM / ( MDR / ACS ) ) )", "choosing": "( Min( ( CS / RRSe ) ,Max( RRSe,DS ) ) / Min( ( MUC + CS ) ,( MUR - RMSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( Max( MRS,FirstVNF_CPU ) + CRS ) ),( FirstVNF_Mem_Server + Const ) ) / ( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ) - ( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( MUC + Min( ( Max( RMSe,MUM ) - RCSe ) ,DS ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ACS ) )", "choosing": "Min( ( MLU - ( MLU * MUR ) ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "( ( FirstVNF_Mem / RRS ) + ( MRS / ( RRS + AMS ) ) )", "choosing": "Max( ( MUC * DS ),Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( Const - Const ) + ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) ) * ARS ) )", "choosing": "Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( PN,DDR ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( RRS ,AMS ) ) ) )", "choosing": "Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.71795855805889}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.71993177246209}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR - AMS ) ) ) - Max( ( AMS + ( FirstVNF_Mem_Server * AMS ) ),( Min( BR ,AMS ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( ( Max( MUR,RRSe ) + ( MUM - MLU ) ) - ( Max( ( ( MUM + MUR ) / ( RRSe + RMSe ) ),RRSe ) - RRSe ) ) * Max( MLU,CS ) ) / Min( ( RMSe * MUM ) ,Max( DS,DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) / Max( ( FirstVNF_Mem_Server * ( AMS - ( ACS * MRS ) ) ),( FirstVNF_CPU * FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,MLU ) + ( MUM * MLU ) )", "obj1": 0.29434697855750486, "obj2": 0.7173647660103832}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * FirstVNF_CPU ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( CS * ( ( Min( MUR ,( RMSe - MLU ) ) - MUR ) - MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( FirstVNF_RAM_Server + ( MRS / FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * DS ),Min( ( DS * CS ) ,( MLU + RMSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * ( FirstVNF_CPU + ARS ) ) + ( Max( RRS,MRS ) + ( RRS * RRS ) ) ) + Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7169536776887305}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,Max( FirstVNF_CPU,Const ) ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR + AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUM + MUC ) ,Max( ( ( DS - Min( ( CS / MLU ) ,DS ) ) - Min( CS ,( ( MUC * ( RCSe - RRSe ) ) * ( MLU / ( RMSe / RCSe ) ) ) ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,( Max( RCSe,MUM ) * ( Max( ( ( MUR - CS ) / Max( DS,MUC ) ),CS ) + MUR ) ) ) + RCSe ) ,Max( ( RRSe * CS ),( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * ( AMS - ACS ) )", "choosing": "( ( DS * ( MUM / Min( MUC ,( MLU + MUC ) ) ) ) / ( ( RCSe + RCSe ) - ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( FirstVNF_RAM / AMS ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + Min( DS ,RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * Min( CS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM - ACS ) + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( CS / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,CRS ),( ARS * FirstVNF_CPU ) ) / ( ACS / MRS ) )", "choosing": "( ( RCSe * RCSe ) - ( ( RRSe * ( ( ( RRSe * DS ) / MUC ) - ( RRSe / RMSe ) ) ) * ( DS * Min( ( CS * CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * Min( ( ( Const * FirstVNF_Mem ) / ( RRS - BR ) ) ,ARS ) ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,( CS + ( DS / ( Min( Max( MLU,MLU ) ,Max( MUR,MUM ) ) * MUM ) ) ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + BR ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( CRS / CRS ) ) + Max( ( ( ( ( ( FirstVNF_RAM / Const ) - CRS ) + DDR ) - MRS ) + CRS ),PN ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( MUR ,DS ) ,( MUR * MUM ) ) / Max( Min( CS ,MLU ),( MLU / Max( MUR,( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( MRS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUC * DS ),( MUR + MUM ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * Max( DDR,FirstVNF_CPU ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( MUM * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) )", "choosing": "( ( MLU / RMSe ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,DDR ) * ( BR - ACS ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * RRS ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + ( Max( MUR,DS ) * ( RCSe - DS ) ) ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Max( DDR,FirstVNF_Mem_Server ) * Max( BR,ACS ) ) )", "choosing": "( Max( MUR,( DS + RCSe ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Max( ( FirstVNF_RAM + CRS ),ARS ) ) * Max( Min( Min( Const ,FirstVNF_Mem ) ,( MDR * FirstVNF_RAM ) ),( ( BR / DDR ) - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,Max( MUR,( ( ( MUC + Min( RRSe ,RCSe ) ) / MUC ) + RCSe ) ) ) / MUR ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUR,( ( MUR + MUM ) + CS ) ) ,Max( MLU,( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - Max( ( ( ARS / Const ) + ( MDR / FirstVNF_RAM ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( MUR + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Min( FirstVNF_CPU ,DDR ) )", "choosing": "Min( ( ( Min( MUC ,( Max( MUC,CS ) - MLU ) ) * ( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( ( MLU + MLU ) - Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( ( ( FirstVNF_CPU_Server * ( MDR - CRS ) ) + FirstVNF_CPU ) ,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) + MDR ) ,RRS ) - Max( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * Max( FirstVNF_Mem,( MDR - DDR ) ) ),MDR ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( MUM,( MUC + Min( DS ,MUM ) ) ) / RCSe ) - ( Min( RMSe ,MUC ) - ( MLU - DS ) ) ) ) / ( ( ( ( DS * RCSe ) / Max( MLU,MUC ) ) - ( ( RRSe - RRSe ) + ( MLU + MLU ) ) ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,PN ) ) * ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) - Const )", "choosing": "( ( ( ( MUC - CS ) / Max( MUR,CS ) ) / ( ( RRSe * MUR ) * ( MUC - RRSe ) ) ) / ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( RCSe * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - AMS ) - ( MDR - FirstVNF_CPU ) ) + ( Min( RRS ,PN ) - ( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + ( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "( ( ( ( MUC - CS ) / Max( MUR,CS ) ) / ( ( RRSe * MUR ) * ( MUC - RRSe ) ) ) / ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MUM * RCSe ) + ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( ( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( ( MUM * MUC ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ACS ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - DS ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,( Min( DS ,MLU ) / ( DS * RCSe ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,MDR ) - AMS ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - AMS ) ,( ACS * RRS ) )", "choosing": "( Max( MUM,RRSe ) - Max( RCSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) * AMS ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,RRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * ( ( MLU * DS ) - RRSe ) ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( MDR / ( Min( FirstVNF_CPU_Server ,( Const / ARS ) ) * ARS ) ) / Max( FirstVNF_Mem_Server,( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Min( ( MLU - ( ( ( MUR - CS ) / RCSe ) * MUC ) ) ,( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * MRS ) ) )", "choosing": "( ( Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) - ( AMS / PN ) )", "choosing": "( Min( ( MUC + Min( ( RMSe / ( MUM * RRSe ) ) ,MLU ) ) ,RMSe ) - ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( ( ( DS / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - ( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,( ( CS / MLU ) - ( MLU * RRSe ) ) ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( DDR,Max( ARS,MRS ) ) - ( AMS / PN ) )", "choosing": "( ( Min( MUR ,MUC ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_RAM * MRS ),FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server - ( RRS / ( Max( DDR,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) ,( ACS * RRS ) )", "choosing": "( Min( Max( ( MUC - RRSe ),CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) - Max( ( ( PN - ACS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM - RMSe ) ,RCSe )", "obj1": 0.631578947368421, "obj2": 0.439503158657352}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( ( PN * DDR ) + ( ( MDR - ( ( BR / Max( CRS,BR ) ) - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( AMS ,RRS ) ) ) )", "choosing": "Min( ( Min( RMSe ,RRSe ) / ( ( Max( RCSe,( ( RRSe / ( MUM * CS ) ) * MUM ) ) - Max( MUM,RRSe ) ) - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.6588693957115009, "obj2": 0.3759758254186611}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.26233392004648903}, {"determining": "( Max( Min( BR ,AMS ),DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUC * CS ) / MLU ) / Min( Max( RCSe,RMSe ) ,MLU ) ) ,( CS * RRSe ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,MUR ) + ( RRSe - DS ) ) / Min( ( MUC * CS ) ,( MUR - RMSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( Min( Max( Const,( ( BR - ( DDR * FirstVNF_RAM_Server ) ) - ARS ) ) ,( ( MDR - ACS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) / ( ( Max( ACS,ACS ) * Max( Const,FirstVNF_Mem_Server ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( Max( ( ( ( Min( MUR ,DS ) / ( CS + MLU ) ) - Min( RMSe ,( RCSe * CS ) ) ) / ( MUC / RCSe ) ),RMSe ) - ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( ( ( FirstVNF_Mem / RRS ) + ( MRS / FirstVNF_CPU_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,MUM )", "obj1": 0.442495126705653, "obj2": 0.6047203186707969}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.38011695906432746, "obj2": 0.6297959436178638}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( ( ( FirstVNF_Mem / RRS ) + ( MRS / FirstVNF_CPU_Server ) ),( Min( AMS ,BR ) / ( ARS * Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) ) ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / Max( CS,DS ) ),Min( MUC ,MUM ) ) ) ,MUM )", "obj1": 0.4678362573099415, "obj2": 0.5799815300067246}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / RRS ) ) / Max( ( MDR / ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * BR ) ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * ( RMSe / Min( MLU ,Max( DS,RRSe ) ) ) ) - RMSe ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230727}, {"determining": "( ( ARS - FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( Min( Max( Const,( ( BR - ( DDR * FirstVNF_RAM_Server ) ) - ARS ) ) ,( ( MDR - ACS ) * ( FirstVNF_CPU - ( FirstVNF_Mem_Server * PN ) ) ) ) / ( ( Max( ACS,ACS ) * Max( Const,FirstVNF_Mem_Server ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) * Max( BR,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * Min( ( MUC * RMSe ) ,RRSe ) ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230727}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( MUC + ( RMSe + MUM ) ) + ( DS - DS ) ) - ( ( MUR / RRSe ) * ( DS * MUR ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( BR - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.38011695906432746, "obj2": 0.6297959436178638}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( ( PN - ACS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM - RMSe ) ,( CS / RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_CPU ,MDR ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS - CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "( ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) - ( FirstVNF_RAM_Server * ( AMS * MRS ) ) )", "choosing": "( ( ( Max( ( ( RCSe - CS ) * ( Max( MUR,( RCSe / MUR ) ) + CS ) ),RCSe ) * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6672032949840871}, {"determining": "Min( Max( ARS,( AMS / PN ) ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( ( MUC * MLU ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6672032949840871}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( ( ( FirstVNF_Mem / RRS ) + ( MRS / FirstVNF_CPU_Server ) ),( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( Min( DS ,MLU ) / ( DS * RCSe ) ),Min( MUC ,MUM ) ) ) ,MUM )", "obj1": 0.4580896686159844, "obj2": 0.5917737484112432}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( ( ( FirstVNF_Mem / RRS ) + ( MRS / FirstVNF_CPU_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,MUM )", "obj1": 0.4522417153996101, "obj2": 0.5964932272317409}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( ( PN - ACS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( Min( FirstVNF_CPU ,MDR ) - FirstVNF_RAM ) ,( CRS + Max( ( FirstVNF_Mem / MRS ),Max( Min( ARS ,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / ( MLU + MUC ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS + CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( ( BR - PN ) * ( ( RRS - ARS ) - ( DDR + RRS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - Max( ( MLU * MUM ),MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( MUM,Min( CS ,RRSe ) ) ) - Max( CS,RCSe ) ) - Max( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ),RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_CPU ,MDR ) - ( RRS - MDR ) ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / MUM ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( ( ( FirstVNF_CPU / ( ( Min( ( PN * FirstVNF_Mem ) ,Max( PN,FirstVNF_RAM_Server ) ) * ( BR / MRS ) ) - ( ARS / CRS ) ) ) + FirstVNF_Mem_Server ) + ( Max( ACS,( Max( Max( FirstVNF_Mem_Server,ARS ),BR ) - ACS ) ) - DDR ) ) / ( ARS / MRS ) )", "choosing": "( Min( ( RCSe * CS ) ,Max( DS,Max( DS,RCSe ) ) ) + ( MUM / RRSe ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "Min( Max( Max( Min( FirstVNF_CPU_Server ,RRS ),RRS ),MRS ) ,( PN + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) )", "choosing": "( Max( RCSe,Min( ( Max( ( Min( RRSe ,RRSe ) / MUC ),RCSe ) - CS ) ,RRSe ) ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( Max( RMSe,MLU ) * CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7301445975717812}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6997563387201908}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( Min( Max( AMS,Min( ( MRS + CRS ) ,FirstVNF_CPU ) ) ,Max( Min( ( PN - FirstVNF_Mem_Server ) ,Min( MDR ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),RRSe ) - ( RMSe - MUM ) ) / ( ( DS / RCSe ) + ( MUM * RMSe ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( Max( DDR,MRS ) ,( PN + ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / ( ( RCSe - Max( MLU,MUC ) ) + RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Max( PN,DDR ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( RRS ,AMS ) ) ) )", "choosing": "Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.71795855805889}, {"determining": "( ( PN + ( ( Max( Const,AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( Min( ( ( MUM / Max( ( DS - MUC ),Max( MUC,RRSe ) ) ) / Max( DS,MLU ) ) ,MUR ) + RMSe ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) )", "choosing": "Max( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( FirstVNF_RAM_Server + ( MRS / FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUC * DS ),Min( ( DS * CS ) ,( MLU + RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ACS / FirstVNF_CPU ) )", "choosing": "( ( RCSe * MUC ) / ( MLU / MUM ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * CS ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.30994152046783624, "obj2": 0.692398925263033}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ACS ) )", "choosing": "Min( ( MLU - ( MLU * MUR ) ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * DDR ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC / MLU ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( ARS - ( MDR / ACS ) ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + MUC ) ,( CS * RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,RRSe ) - Max( MUR,CS ) )", "obj1": 0.2884990253411306, "obj2": 0.7198485059212267}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.30994152046783624, "obj2": 0.692398925263033}, {"determining": "( Max( FirstVNF_Mem,RRS ) / Max( PN,Const ) )", "choosing": "( Max( DS,MUR ) * Max( RCSe,( ( ( DS / MUC ) * MUC ) - MUM ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( Min( PN ,( Max( ACS,FirstVNF_CPU ) - DDR ) ) / ( BR / Max( ACS,BR ) ) )", "choosing": "( ( RRSe - ( ( CS * RCSe ) + Max( MUR,MUM ) ) ) + Min( ( Min( ( MUC - Min( ( MLU + MUR ) ,MUC ) ) ,Min( DS ,( ( RRSe + ( DS + MUR ) ) - RCSe ) ) ) - MUM ) ,( ( MUM - CS ) + RMSe ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( Max( MRS,FirstVNF_CPU ) + CRS ) ),( FirstVNF_Mem_Server + Const ) ) / ( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ) - ( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( MUC + Min( ( Max( RMSe,MUM ) - RCSe ) ,DS ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS - CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( FirstVNF_CPU_Server * ( CRS + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( MUM / MUR ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( ( RRS + ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( Max( PN,DDR ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( MUR + RRSe ) ) ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.71795855805889}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * FirstVNF_CPU ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( CS * ( ( Min( MUR ,( RMSe - MLU ) ) - MUR ) - MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( Max( RMSe,MLU ) * CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "( ( BR - AMS ) / ( FirstVNF_RAM / ( MDR / ACS ) ) )", "choosing": "( Min( ( CS / RRSe ) ,Max( RRSe,DS ) ) / Min( ( MUC + CS ) ,( MUR - RMSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) )", "choosing": "( ( MUM - DS ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6997563387201908}, {"determining": "Min( ( PN - AMS ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,Max( FirstVNF_CPU,Const ) ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR + AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUM + MUC ) ,Max( ( ( DS - Min( ( CS / MLU ) ,DS ) ) - Min( CS ,( ( MUC * ( RCSe - RRSe ) ) * ( MLU / ( RMSe / RCSe ) ) ) ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,( Max( RCSe,MUM ) * ( Max( ( ( MUR - CS ) / Max( DS,MUC ) ),CS ) + MUR ) ) ) + RCSe ) ,Max( ( RRSe * CS ),( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * ( AMS - ACS ) )", "choosing": "( ( DS * ( MUM / Min( MUC ,( MLU + MUC ) ) ) ) / ( ( RCSe + RCSe ) - ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( FirstVNF_RAM / AMS ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + Min( DS ,RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * Min( CS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM - ACS ) + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( CS / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,CRS ),( ARS * FirstVNF_CPU ) ) / ( ACS / MRS ) )", "choosing": "( ( RCSe * RCSe ) - ( ( RRSe * ( ( ( RRSe * DS ) / MUC ) - ( RRSe / RMSe ) ) ) * ( DS * Min( ( CS * CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * Min( ( ( Const * FirstVNF_Mem ) / ( RRS - BR ) ) ,ARS ) ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,( CS + ( DS / ( Min( Max( MLU,MLU ) ,Max( MUR,MUM ) ) * MUM ) ) ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + BR ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( CRS / CRS ) ) + Max( ( ( ( ( ( FirstVNF_RAM / Const ) - CRS ) + DDR ) - MRS ) + CRS ),PN ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( MUR ,DS ) ,( MUR * MUM ) ) / Max( Min( CS ,MLU ),( MLU / Max( MUR,( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( MRS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUC * DS ),( MUR + MUM ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * Max( DDR,FirstVNF_CPU ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( MUM * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) )", "choosing": "( ( MLU / RMSe ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,DDR ) * ( BR - ACS ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * RRS ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + ( Max( MUR,DS ) * ( RCSe - DS ) ) ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Max( DDR,FirstVNF_Mem_Server ) * Max( BR,ACS ) ) )", "choosing": "( Max( MUR,( DS + RCSe ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Max( ( FirstVNF_RAM + CRS ),ARS ) ) * Max( Min( Min( Const ,FirstVNF_Mem ) ,( MDR * FirstVNF_RAM ) ),( ( BR / DDR ) - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,Max( MUR,( ( ( MUC + Min( RRSe ,RCSe ) ) / MUC ) + RCSe ) ) ) / MUR ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUR,( ( MUR + MUM ) + CS ) ) ,Max( MLU,( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - Max( ( ( ARS / Const ) + ( MDR / FirstVNF_RAM ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( MUR + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Const ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Min( FirstVNF_CPU ,DDR ) )", "choosing": "Min( ( ( Min( MUC ,( Max( MUC,CS ) - MLU ) ) * ( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( ( MLU + MLU ) - Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( ( ( FirstVNF_CPU_Server * ( MDR - CRS ) ) + FirstVNF_CPU ) ,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) + MDR ) ,RRS ) - Max( ( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * Max( FirstVNF_Mem,( MDR - DDR ) ) ),MDR ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( MUM,( MUC + Min( DS ,MUM ) ) ) / RCSe ) - ( Min( RMSe ,MUC ) - ( MLU - DS ) ) ) ) / ( ( ( ( DS * RCSe ) / Max( MLU,MUC ) ) - ( ( RRSe - RRSe ) + ( MLU + MLU ) ) ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,PN ) ) * ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) - Const )", "choosing": "( ( ( ( MUC - CS ) / Max( MUR,CS ) ) / ( ( RRSe * MUR ) * ( MUC - RRSe ) ) ) / ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( RCSe * Max( MUM,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( MRS + FirstVNF_RAM ) / ( FirstVNF_RAM + Const ) )", "choosing": "( Min( Max( MUR,( ( MUM + MUR ) + CS ) ) ,Max( MLU,( DS - Max( RCSe,Max( ( ( MUM + RMSe ) - RCSe ),( DS / Min( RRSe ,MUM ) ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,Max( ARS,MRS ) ) - ( AMS / PN ) )", "choosing": "( ( Min( MUR ,MUC ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_RAM * MRS ),FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server - ( RRS / ( Max( DDR,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) ,( ACS * RRS ) )", "choosing": "( Min( Max( ( MUC - RRSe ),CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( ( RRS * ARS ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_Mem_Server ) ,( ACS + ARS ) ) ) ,( ( PN / FirstVNF_RAM ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC * MLU ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.346196589833168}, {"determining": "( Max( Min( BR ,AMS ),DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUC * CS ) / MLU ) / Min( Max( RCSe,RMSe ) ,MLU ) ) ,( CS * RRSe ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.723196881091618, "obj2": 0.2745525046908205}, {"determining": "( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( Min( ACS ,Const ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) + ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + ( ( MUM + ( MLU / DS ) ) - CS ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5945623694669783}, {"determining": "( ( PN * DDR ) + ( ( MDR - ( ( BR / Max( CRS,BR ) ) - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( AMS ,RRS ) ) ) )", "choosing": "Min( ( Min( RMSe ,RRSe ) / ( ( Max( RCSe,( ( RRSe / ( MUM * CS ) ) * MUM ) ) - Max( MUM,RRSe ) ) - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.7699805068226121, "obj2": 0.250019822685646}, {"determining": "( ( PN * DDR ) + ( ( MDR - ( ( BR / Max( CRS,BR ) ) - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( AMS ,RRS ) ) ) )", "choosing": "Min( ( Min( RMSe ,RRSe ) / ( ( Max( RCSe,( ( RRSe / ( MUM * CS ) ) * MUM ) ) - Max( MUM,RRSe ) ) - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.7699805068226121, "obj2": 0.250019822685646}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,Max( ARS,FirstVNF_CPU ) ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5605779178857282}, {"determining": "( ( ARS - FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ( Min( Max( Const,( ( BR - ( DDR * FirstVNF_RAM_Server ) ) - ARS ) ) ,( ( MDR - ACS ) * ( FirstVNF_RAM_Server - ( PN * FirstVNF_Mem_Server ) ) ) ) / ( ( Max( ACS,ACS ) * Max( Const,FirstVNF_Mem_Server ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230727}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / RRS ) ) / Max( ( MDR / ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * BR ) ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS * ( RMSe / Min( MLU ,Max( DS,RRSe ) ) ) ) - RMSe ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230727}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 0.38011695906432746, "obj2": 0.6297959436178638}, {"determining": "( ( BR - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( ( PN - ACS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM - RMSe ) ,( CS / RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "( Max( Max( MDR,MRS ),RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( CS / RRSe ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( Max( MUM,Min( CS ,RRSe ) ) + ( MUR - RCSe ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.44639376218323584, "obj2": 0.5672296951403032}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.26233392004648903}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_CPU ,MDR ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS - CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( MRS + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - ( RCSe * RCSe ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6438928691147244}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.38011695906432746, "obj2": 0.6297959436178638}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( Min( ( DDR - ARS ) ,Const ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + ( MUR + Max( CS,MUR ) ) ) + MUR ) + ( Max( ( Min( ( RMSe * MLU ) ,RCSe ) - ( DS / ( MUM / CS ) ) ),CS ) / DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.648692891723126}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6325109535375274}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( ( PN - ACS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS - CS ) ) ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( MUC + ( RMSe + MUM ) ) + ( DS - DS ) ) - ( ( MUR / RRSe ) * ( DS * MUR ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) - ( FirstVNF_RAM_Server * ( AMS * MRS ) ) )", "choosing": "( ( ( Max( ( ( RCSe - CS ) * ( Max( MUR,( RCSe / MUR ) ) + CS ) ),RCSe ) * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6672032949840871}, {"determining": "( ( Max( BR,Max( ( CRS - Const ),Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ( ARS + FirstVNF_RAM ),ACS ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( MUC + Min( ( DS * MUM ) ,RRSe ) ),( CS - CS ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.26713264430624784}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( Max( MUR,DS ) * ( RCSe - ( ( RRSe * CS ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.670354009308861}, {"determining": "Min( Max( DDR,MRS ) ,( ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( Max( Min( RCSe ,CS ),RCSe ) * DS ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.29434697855750486, "obj2": 0.7084829105946099}, {"determining": "( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) )", "choosing": "Max( Min( Min( MUC ,RCSe ) ,( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) ) ),( MLU - Min( RMSe ,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( Min( FirstVNF_CPU ,MDR ) - FirstVNF_RAM ) ,( CRS + Max( ( FirstVNF_Mem / MRS ),Max( Min( ARS ,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / ( MLU + MUC ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS + CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Min( Max( MRS,DDR ) ,( Max( BR,FirstVNF_RAM ) + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_Mem_Server + CRS ) ,Min( ( FirstVNF_Mem / Max( CRS,CRS ) ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( ( MLU + ( RCSe - ( ( MUC - ( RMSe + Max( RMSe,RMSe ) ) ) - Max( ( MLU + Min( MUR ,MLU ) ),MUC ) ) ) ) / RMSe ) - Max( RCSe,Min( RRSe ,RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620576}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( ( ( ( MUC - CS ) * RRSe ) * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6752485751129508}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( Max( PN,DDR ) + ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( RRS ,AMS ) ) ) )", "choosing": "Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.71795855805889}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( ( MLU / MUM ) + RRSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) ) ,( PN + ( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + RMSe ) - ( RCSe / ( ( RCSe - CS ) + RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6967700205200456}, {"determining": "( ( PN + ( ( Max( Const,AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( Min( ( ( MUM / Max( ( DS - MUC ),Max( MUC,RRSe ) ) ) / Max( DS,MLU ) ) ,MUR ) + RMSe ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( DDR,FirstVNF_Mem_Server ) * Max( BR,ACS ) ) )", "choosing": "( Max( MUR,( DS + Min( ( MUC / MUM ) ,( MUM * DS ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.2807017543859649, "obj2": 0.7291999138466826}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( Min( Max( Const,( ( BR - ( DDR * FirstVNF_RAM_Server ) ) - ARS ) ) ,( ( MDR - ACS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) / ( ( Max( ACS,ACS ) * Max( Const,FirstVNF_Mem_Server ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) ) ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( Max( ( ( ( Min( MUR ,DS ) / ( CS + MLU ) ) - Min( RMSe ,( RCSe * CS ) ) ) / ( MUC / RCSe ) ),RMSe ) - ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( BR - PN ) * ( ( RRS - ARS ) - ( DDR + RRS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - Max( ( MLU * MUM ),MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( MUM,Min( CS ,RRSe ) ) ) - Max( CS,RCSe ) ) - Max( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ),RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ( MDR + ARS ) / ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) ) - ( FirstVNF_RAM_Server * ( AMS * MRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6672032949840871}, {"determining": "Min( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server / CRS ) ) * DDR ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS - ( MUR - MUM ) ) * Max( Min( ( Min( ( RRSe * RMSe ) ,( ( ( MLU * RMSe ) / ( MUR - CS ) ) / ( ( MUR + CS ) / ( MUC * DS ) ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( Max( FirstVNF_Mem,RRS ) / Max( PN,Const ) )", "choosing": "( Max( DS,MUR ) * Max( RCSe,( ( ( DS / MUC ) * MUC ) - MUM ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( ( ( ( FirstVNF_CPU / ( ( Min( ( PN * FirstVNF_Mem ) ,Max( PN,FirstVNF_RAM_Server ) ) * ( BR / MRS ) ) - ( ARS / CRS ) ) ) + FirstVNF_Mem_Server ) + ( Max( ACS,( Max( Max( FirstVNF_Mem_Server,ARS ),BR ) - ACS ) ) - DDR ) ) / ( ARS / MRS ) )", "choosing": "( Min( ( RCSe * CS ) ,Max( DS,Max( DS,RCSe ) ) ) + ( MUM / RRSe ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "( ( ( Max( ACS,( PN - ACS ) ) - DDR ) - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - Max( MUR,MUM ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "( ( BR - AMS ) / ( FirstVNF_RAM / ( MDR / ACS ) ) )", "choosing": "( Min( ( CS / RRSe ) ,Max( RRSe,DS ) ) / Min( ( MUC + CS ) ,( MUR - RMSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( FirstVNF_Mem * RRS ) ) )", "choosing": "( Max( MUM,RRSe ) - Max( MUR,CS ) )", "obj1": 0.2884990253411306, "obj2": 0.7198485059212267}, {"determining": "( Max( ( ( RRS * FirstVNF_CPU ) + AMS ),( FirstVNF_CPU_Server / RRS ) ) * Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( CS / MUC ),( Min( ( MUC * RCSe ) ,( DS * Max( RMSe,RRSe ) ) ) / CS ) ) / ( Max( CS,RMSe ) / Max( RMSe,CS ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( Max( Max( Min( FirstVNF_CPU_Server ,RRS ),RRS ),MRS ) ,( PN + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( Max( MRS,FirstVNF_CPU ) + CRS ) ),( FirstVNF_Mem_Server + Const ) ) / ( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ) - ( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( MUC + Min( ( Max( RMSe,MUM ) - RCSe ) ,DS ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6989777459754538}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RRSe * CS ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( ( ARS - ( MDR / ACS ) ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + MUC ) ,( CS * RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_Mem_Server * PN ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / ( CS * ( MUR / Min( ( RRSe + RCSe ) ,Min( RCSe ,RMSe ) ) ) ) ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( ( DS / CS ) ,( DS + CS ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.71795855805889}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * FirstVNF_CPU ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( CS * ( ( Min( MUR ,( RMSe - MLU ) ) - MUR ) - MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( MUR + RRSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6989777459754538}, {"determining": "( Min( Max( AMS,Min( ( MRS + CRS ) ,FirstVNF_CPU ) ) ,Max( Min( ( PN - FirstVNF_Mem_Server ) ,Min( MDR ,FirstVNF_CPU ) ),FirstVNF_CPU ) ) * Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUR + MUM ),RRSe ) - ( RMSe - MUM ) ) / ( ( DS / RCSe ) + ( MUM * RMSe ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * DDR ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC / MLU ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( Max( DDR,MRS ) ,( PN + ( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) )", "choosing": "( ( MUM - DS ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - AMS ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,Max( FirstVNF_CPU,Const ) ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR + AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUM + MUC ) ,Max( ( ( DS - Min( ( CS / MLU ) ,DS ) ) - Min( CS ,( ( MUC * ( RCSe - RRSe ) ) * ( MLU / ( RMSe / RCSe ) ) ) ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,( Max( RCSe,MUM ) * ( Max( ( ( MUR - CS ) / Max( DS,MUC ) ),CS ) + MUR ) ) ) + RCSe ) ,Max( ( RRSe * CS ),( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * ( AMS - ACS ) )", "choosing": "( ( DS * ( MUM / Min( MUC ,( MLU + MUC ) ) ) ) / ( ( RCSe + RCSe ) - ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( FirstVNF_RAM / AMS ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + Min( DS ,RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * Min( CS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM - ACS ) + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( CS / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,CRS ),( ARS * FirstVNF_CPU ) ) / ( ACS / MRS ) )", "choosing": "( ( RCSe * RCSe ) - ( ( RRSe * ( ( ( RRSe * DS ) / MUC ) - ( RRSe / RMSe ) ) ) * ( DS * Min( ( CS * CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * Min( ( ( Const * FirstVNF_Mem ) / ( RRS - BR ) ) ,ARS ) ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,( CS + ( DS / ( Min( Max( MLU,MLU ) ,Max( MUR,MUM ) ) * MUM ) ) ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + BR ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( CRS / CRS ) ) + Max( ( ( ( ( ( FirstVNF_RAM / Const ) - CRS ) + DDR ) - MRS ) + CRS ),PN ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( MUR ,DS ) ,( MUR * MUM ) ) / Max( Min( CS ,MLU ),( MLU / Max( MUR,( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( MRS / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUC * DS ),( MUR + MUM ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * Max( DDR,FirstVNF_CPU ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( MUM * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) )", "choosing": "( ( MLU / RMSe ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,DDR ) * ( BR - ACS ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * RRS ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + ( Max( MUR,DS ) * ( RCSe - DS ) ) ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Max( DDR,FirstVNF_Mem_Server ) * Max( BR,ACS ) ) )", "choosing": "( Max( MUR,( DS + RCSe ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Max( ( FirstVNF_RAM + CRS ),ARS ) ) * Max( Min( Min( Const ,FirstVNF_Mem ) ,( MDR * FirstVNF_RAM ) ),( ( BR / DDR ) - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,Max( MUR,( ( ( MUC + Min( RRSe ,RCSe ) ) / MUC ) + RCSe ) ) ) / MUR ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "Min( Max( MUR,( ( MUR + MUM ) + CS ) ) ,Max( MLU,( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( AMS * ( ( MRS - ( ARS / ( FirstVNF_Mem + Min( ( ( MRS - FirstVNF_CPU_Server ) / ( DDR - AMS ) ) ,MRS ) ) ) ) / AMS ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_RAM ) / ( FirstVNF_RAM + Const ) )", "choosing": "( Min( Max( MUR,( ( MUM + MUR ) + CS ) ) ,Max( MLU,( DS - Max( RCSe,Max( ( ( MUM + RMSe ) - RCSe ),( DS / Min( RRSe ,MUM ) ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_RAM * MRS ),FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server - ( RRS / ( Max( DDR,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) ,( ACS * RRS ) )", "choosing": "( ( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + Max( Min( FirstVNF_CPU_Server ,AMS ),AMS ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( DS * ( ( RMSe / CS ) + ( ( CS + Max( RCSe,( MUR * MUC ) ) ) * MUM ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.4356980422183057}, {"determining": "( ( BR - Min( ( ( Min( BR ,MRS ) / FirstVNF_CPU ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( RRSe + ( MUM / Min( DS ,RCSe ) ) ) * MLU ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7563352826510721, "obj2": 0.2098147010959578}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,ARS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.057011249647045424}, {"determining": "( Max( ( ( RRS * ARS ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_Mem_Server ) ,( ACS + ARS ) ) ) ,( ( PN / FirstVNF_RAM ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC * MLU ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.346196589833168}, {"determining": "( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Min( ( RRSe + MUC ) ,( CS * RRSe ) )", "obj1": 0.8576998050682261, "obj2": 0.16091842291925776}, {"determining": "( ( BR - ( Min( AMS ,FirstVNF_Mem ) / ( ( ARS * MDR ) * ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / MRS ) ) / AMS ) * MRS ) ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUC ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.300870258975519}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( ( ( Max( FirstVNF_Mem,RRS ) + FirstVNF_Mem ) / ( Min( ( FirstVNF_CPU * RRS ) ,FirstVNF_RAM_Server ) * ( ( CRS + ACS ) - FirstVNF_CPU ) ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * RMSe ) * MLU ) - ( MUR * MUR ) )", "obj1": 0.4405458089668616, "obj2": 0.557042325380139}, {"determining": "( Max( Min( BR ,AMS ),DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUC * CS ) / MLU ) / Min( Max( RCSe,RMSe ) ,MLU ) ) ,( CS * RRSe ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( Max( FirstVNF_Mem,RRS ) - ( MRS / ( FirstVNF_Mem + Const ) ) ) / AMS ) )", "choosing": "( ( ( Max( ( Min( ( Max( RCSe,DS ) / DS ) ,Max( CS,( RCSe - MUR ) ) ) / MUR ),MUM ) * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3840155945419103, "obj2": 0.618832786373578}, {"determining": "( Min( ACS ,Const ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) + ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + ( ( MUM + ( MLU / DS ) ) - CS ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5945623694669783}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM / CS ) - ( RCSe * RCSe ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( ( BR - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) ) ,( PN + ( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + RMSe ) - ( RCSe / ( ( Min( MUR ,CS ) - CS ) + RMSe ) ) )", "obj1": 0.98635477582846, "obj2": 0.006451615140874729}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.26233392004648903}, {"determining": "( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.8615984405458089, "obj2": 0.1572487010352082}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.723196881091618, "obj2": 0.2745525046908205}, {"determining": "Min( Max( ARS,FirstVNF_RAM ) ,( Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( MUC + ( RMSe + ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( MUR + RRSe ) ) ) ) + ( DS - DS ) ) - ( ( MUR / RRSe ) * ( DS * MUR ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.341130604288499, "obj2": 0.665676918805961}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Max( ( ( Min( MRS ,( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / AMS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( Max( ( Min( ( MLU * MUM ) ,RCSe ) - ( DS / ( MUR * MUM ) ) ),CS ) * DS ) + ( ( RRSe + MLU ) + MUR ) ) * CS ) )", "obj1": 0.723196881091618, "obj2": 0.2745525046908205}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3645224171539961, "obj2": 0.6333501456603051}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5945623694669783}, {"determining": "( ( FirstVNF_CPU + AMS ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS / ( FirstVNF_Mem + Const ) ) ) - AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( Min( ( ( RCSe - Max( MUM,MLU ) ) + RMSe ) ,( MUM / Min( RMSe ,( MUM / RMSe ) ) ) ) - ( MLU - MUC ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( Max( DDR,DDR ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,MUC ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.26233392004648903}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( AMS / FirstVNF_Mem ) / ARS ) ) / AMS ) )", "choosing": "( ( RCSe * ( Min( ( ( MUM + RRSe ) - DS ) ,MUC ) / ( CS - DS ) ) ) * ( ( MUM / CS ) / ( RCSe * RCSe ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6475748068307318}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Const ) / ARS ) ) / AMS ) )", "choosing": "( Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6475748068307318}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6325109535375274}, {"determining": "Min( Max( DDR,MRS ) ,( ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( Max( Min( RCSe ,CS ),RCSe ) * DS ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.29434697855750486, "obj2": 0.7084829105946099}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7309941520467836, "obj2": 0.2689898248812306}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 0.38011695906432746, "obj2": 0.6297959436178638}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( Max( MUR,DS ) * ( RCSe - ( ( RRSe * CS ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.670354009308861}, {"determining": "Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,PN ) ) ),Const ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC - MLU ) ) * ( ( MUM * ( Min( RMSe ,MLU ) - ( ( Max( MLU,RCSe ) - Max( ( MLU + MUR ),( RMSe / DS ) ) ) / MUR ) ) ) - ( DS / RMSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7138262797043283}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7307423544433143}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RRSe / RRSe ) * MLU ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Min( ( AMS - ACS ) ,( PN + ( DDR - Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( RCSe + RCSe ) + MLU ) ) - Max( RCSe,MLU ) )", "obj1": 0.31189083820662766, "obj2": 0.6900972184428555}, {"determining": "( MRS + ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( ( ( ( MUC - ( RCSe * ( RMSe / RMSe ) ) ) * RRSe ) * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6752485751129508}, {"determining": "( ( PN + ( ( Max( Const,AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( Min( ( ( MUM / Max( ( DS - MUC ),Max( MUC,RRSe ) ) ) / Max( DS,MLU ) ) ,MUR ) + RMSe ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "( Max( DDR,( ARS + MRS ) ) - ( AMS / ( ( ( Const * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server - ( CRS / MDR ) ) * MDR ) ) / ( MDR + ARS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) + MUM ) / ( MUC + MUC ) ) - ( Min( MUR ,MUC ) * ( RMSe / RRSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7170945764511906}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( Max( MUM,MUR ) + Max( MLU,MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( Max( BR,Max( ( CRS - Const ),Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ( ARS + FirstVNF_RAM ),ACS ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( MUC + Min( ( DS * MUM ) ,RRSe ) ),( CS - CS ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.26713264430624784}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( DS + Min( ( MUC / MUM ) ,( MUM * DS ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "Min( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server / CRS ) ) * DDR ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS - ( MUR - MUM ) ) * Max( Min( ( Min( ( RRSe * RMSe ) ,( ( ( MLU * RMSe ) / ( MUR - CS ) ) / ( ( MUR + CS ) / ( MUC * DS ) ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) ) ,( ( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) ) + ( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + RMSe ) - ( RCSe / Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 0.8596491228070176, "obj2": 0.1574721475876064}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "Min( Max( MRS,DDR ) ,( Max( BR,FirstVNF_RAM ) + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_Mem_Server + CRS ) ,Min( ( FirstVNF_Mem / Max( CRS,CRS ) ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( ( MLU + ( RCSe - ( ( MUC - ( RMSe + Max( RMSe,RMSe ) ) ) - Max( ( MLU + Min( MUR ,MLU ) ),MUC ) ) ) ) / RMSe ) - Max( RCSe,Min( RRSe ,RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620576}, {"determining": "( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) )", "choosing": "Max( Min( Min( MUC ,RCSe ) ,( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) ) ),( MLU - Min( RMSe ,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.38011695906432746, "obj2": 0.6297959436178638}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server )", "choosing": "( ( ( RMSe - CS ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( ( MLU / MUM ) + RRSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( ( ( ( MUC - CS ) * RRSe ) * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6752485751129508}, {"determining": "Min( Max( DDR,MRS ) ,( PN + ( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 0.3391812865497076, "obj2": 0.670354009308861}, {"determining": "( ( ( ( FirstVNF_CPU / ( ( Min( ( PN * FirstVNF_Mem ) ,Max( PN,FirstVNF_RAM_Server ) ) * ( BR / MRS ) ) - ( ARS / CRS ) ) ) + FirstVNF_Mem_Server ) + ( Max( ACS,( Max( Max( FirstVNF_Mem_Server,ARS ),BR ) - ACS ) ) - DDR ) ) / ( ARS / MRS ) )", "choosing": "( Min( ( RCSe * CS ) ,Max( DS,Max( DS,RCSe ) ) ) + ( MUM / RRSe ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "( ( PN + ( Max( ACS,( PN - ACS ) ) - DDR ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,MUM ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6989777459754538}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( Min( Max( Const,( ( BR - ( DDR * FirstVNF_RAM_Server ) ) - ARS ) ) ,( ( MDR - ACS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) / ( ( Max( ACS,ACS ) * Max( Const,FirstVNF_Mem_Server ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) ) ) )", "choosing": "( Max( MLU,Min( MUM ,( CS * ( ( Min( MUR ,( RMSe - MLU ) ) - MUR ) - MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( Max( ( ( RRS * FirstVNF_CPU ) + AMS ),( FirstVNF_CPU_Server / RRS ) ) * Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( Max( Max( Min( FirstVNF_CPU_Server ,RRS ),RRS ),MRS ) ,( PN + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * DDR ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "Max( Min( Min( MUC ,RCSe ) ,( Min( MLU ,RMSe ) - ( MUC * MLU ) ) ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( ( MLU / MUM ) + RRSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( MRS,DDR ) ,( Max( BR,FirstVNF_RAM ) + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_Mem_Server + CRS ) ,Min( ( FirstVNF_Mem / Max( CRS,CRS ) ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( ( MLU + ( RCSe - ( ( MUC - ( RMSe + Max( RMSe,RMSe ) ) ) - Max( ( MLU + Min( MUR ,MLU ) ),MUC ) ) ) ) / RMSe ) - Max( RCSe,Min( RRSe ,RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620576}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( MUR,( ( MUR + MUM ) + CS ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.26713264430624784}, {"determining": "( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) )", "choosing": "Max( Min( Min( MUC ,RCSe ) ,( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) ) ),( MLU - Min( RMSe ,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( Min( Min( MUR ,DS ) ,( MUR * MUM ) ) / Max( Min( CS ,MLU ),( MLU / Max( MUR,( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( BR - PN ) * ( ( RRS - ARS ) - ( DDR + RRS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - Max( ( MLU * MUM ),MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( MUM,Min( CS ,RRSe ) ) ) - Max( CS,RCSe ) ) - Max( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ),RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( Max( MRS,FirstVNF_CPU ) + CRS ) ),( FirstVNF_Mem_Server + Const ) ) / ( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ) - ( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( MUM,MUM ) - ( MUC + Min( ( Max( RMSe,MUM ) - RCSe ) ,DS ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.30409356725146197, "obj2": 0.6989777459754538}, {"determining": "( Max( ( ( RRS * FirstVNF_CPU ) + AMS ),( FirstVNF_CPU_Server / RRS ) ) * Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( CS / MUC ),( Min( ( MUC * RCSe ) ,( DS * Max( RMSe,RRSe ) ) ) / CS ) ) / ( Max( CS,RMSe ) / Max( RMSe,CS ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( Max( DDR,MRS ) ,Max( Const,( ( BR - ( DDR * FirstVNF_RAM_Server ) ) - ARS ) ) )", "choosing": "Min( ( DS * CS ) ,( MUR + RMSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6325109535375274}, {"determining": "( Max( DDR,Max( ARS,MRS ) ) - ( AMS / PN ) )", "choosing": "( ( Min( MUR ,MUC ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - AMS ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,Max( FirstVNF_CPU,Const ) ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR + AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUM + MUC ) ,Max( ( ( DS - Min( ( CS / MLU ) ,DS ) ) - Min( CS ,( ( MUC * ( RCSe - RRSe ) ) * ( MLU / ( RMSe / RCSe ) ) ) ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,( Max( RCSe,MUM ) * ( Max( ( ( MUR - CS ) / Max( DS,MUC ) ),CS ) + MUR ) ) ) + RCSe ) ,Max( ( RRSe * CS ),( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * ( AMS - ACS ) )", "choosing": "( ( DS * ( MUM / Min( MUC ,( MLU + MUC ) ) ) ) / ( ( RCSe + RCSe ) - ( MUR - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( FirstVNF_RAM / AMS ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + Min( DS ,RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * Min( CS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM - ACS ) + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( CS / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - MDR ) * ( Max( ARS,FirstVNF_CPU ) - Min( ( MRS / FirstVNF_RAM_Server ) ,ACS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,CRS ),( ARS * FirstVNF_CPU ) ) / ( ACS / MRS ) )", "choosing": "( ( RCSe * RCSe ) - ( ( RRSe * ( ( ( RRSe * DS ) / MUC ) - ( RRSe / RMSe ) ) ) * ( DS * Min( ( CS * CS ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( FirstVNF_RAM_Server * Min( ( ( Const * FirstVNF_Mem ) / ( RRS - BR ) ) ,ARS ) ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( MUC,( CS + ( DS / ( Min( Max( MLU,MLU ) ,Max( MUR,MUM ) ) * MUM ) ) ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + BR ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS * ( ( MRS - ( ARS / ( FirstVNF_Mem + Min( ( ( MRS - FirstVNF_CPU_Server ) / ( DDR - AMS ) ) ,MRS ) ) ) ) / AMS ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( FirstVNF_RAM * MRS ),FirstVNF_Mem_Server ),( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server - ( RRS / ( Max( DDR,FirstVNF_RAM_Server ) + AMS ) ) ) ) ) ,( ACS * RRS ) )", "choosing": "( ( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) )", "obj1": 0.8401559454191033, "obj2": 0.1343388459825373}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( ( RCSe - DS ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7582846003898636, "obj2": 0.20891353083400402}, {"determining": "( ( ( Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) / AMS ) - FirstVNF_CPU ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( PN - DDR ) + ( BR - ACS ) ) ) - MDR ) )", "choosing": "Min( ( Max( RMSe,RRSe ) + ( ( ( ( Max( Max( MUR,RCSe ),MUM ) + Min( MUM ,( RCSe - RRSe ) ) ) + MUC ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.9044834307992202, "obj2": 0.09665515241513574}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( PN - DDR ) ) ) / AMS ) )", "choosing": "( ( ( ( DS * MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.11717952433763452}, {"determining": "( ( BR - Min( ( ( Min( BR ,MRS ) / FirstVNF_CPU ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( RRSe + ( MUM / Min( DS ,RCSe ) ) ) * MLU ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.4446270194323751}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( Max( ( ( ( Const * FirstVNF_Mem_Server ) + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MLU * RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.41115288779179976}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) ) ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - ( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5765536212708973}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS + ARS ) - Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - MUC ) / CS ) ,Min( MUR ,MLU ) )", "obj1": 0.39571150097465885, "obj2": 0.6103369077721927}, {"determining": "( ( BR - ( PN + RRS ) ) * Min( FirstVNF_Mem ,AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe / MUM ) ) / ( Max( ( ( ( Max( ( RCSe * CS ),DS ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.2798639482777481}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( ( ( Max( FirstVNF_Mem,RRS ) + FirstVNF_Mem ) / ( Min( ( FirstVNF_CPU * RRS ) ,FirstVNF_RAM_Server ) * ( ( CRS + ACS ) - FirstVNF_CPU ) ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * RMSe ) * MLU ) - ( MUR * MUR ) )", "obj1": 0.4405458089668616, "obj2": 0.557042325380139}, {"determining": "( ( BR - ( Min( AMS ,FirstVNF_Mem ) / ( ( ARS * MDR ) * ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / MRS ) ) / AMS ) * MRS ) ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUC ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.300870258975519}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.47953216374269003, "obj2": 0.5423134104669536}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,ARS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.057011249647045424}, {"determining": "( PN - ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "Max( Min( Min( MUC ,MUM ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7504873294346979, "obj2": 0.2530850494987581}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU + ( RCSe - ( ( MUC - ( RMSe + Max( RMSe,RMSe ) ) ) - Max( ( MLU + Min( MUR ,MLU ) ),MUC ) ) ) ) / RMSe ) - Max( RCSe,Min( RRSe ,RMSe ) ) )", "obj1": 0.4853801169590643, "obj2": 0.5327766393847232}, {"determining": "( ( BR - Min( ( ( Min( BR ,MRS ) / FirstVNF_CPU ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( RRSe + ( MUM / Min( DS ,RCSe ) ) ) * MLU ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.4446270194323751}, {"determining": "( ( ( ( ( ACS - ARS ) + FirstVNF_RAM ) / FirstVNF_CPU ) - ARS ) * ( ( MRS - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 0.631578947368421, "obj2": 0.3849083900730762}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.6393762183235867, "obj2": 0.3552808773884474}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5477582846003899, "obj2": 0.4356980422183057}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) - BR ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( RCSe - RCSe ) - RCSe ) ) / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6569200779727096, "obj2": 0.32272368705761706}, {"determining": "( ( Max( DDR,PN ) + ( ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - AMS ) ) + ( ( FirstVNF_Mem + ( AMS + RRS ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( ( RMSe / ( MUC - Min( Max( CS,RCSe ) ,RRSe ) ) ) - Min( CS ,MUR ) ) + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9824561403508771, "obj2": 0.02006749387028548}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( FirstVNF_Mem_Server - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * RCSe ) )", "obj1": 0.6120857699805068, "obj2": 0.389229807063809}, {"determining": "( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) )", "choosing": "( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.7563352826510721, "obj2": 0.2098147010959578}, {"determining": "( ( BR - ( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,CS ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.311080602858484}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( ( ( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) )", "choosing": "( ( MUR + RRSe ) * ( DS * ( DS - DS ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,ARS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.057011249647045424}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + Max( Min( FirstVNF_CPU_Server ,AMS ),AMS ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( DS * ( ( RMSe / CS ) + ( ( CS + Max( RCSe,( MUR * MUC ) ) ) * MUM ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.4356980422183057}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( Const - ACS ) + ( MDR * DDR ) ) ) * ( ( CRS / MRS ) * PN ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( MLU * ( Max( RMSe,MUM ) + Min( DS ,RMSe ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( ( ( MUR * CS ) / Max( DS,MUC ) ) ,RRSe ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.346196589833168}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Max( ARS,FirstVNF_RAM ) ,( Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( MUC + ( RMSe + ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( MUR + RRSe ) ) ) ) + ( DS - DS ) ) - ( ( MUR / RRSe ) * ( DS * MUR ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ARS - AMS ) ,( Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) ,ACS ) ) * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,( ( RMSe - RRSe ) + ( Min( ( MLU - Max( MUC,Max( DS,DS ) ) ) ,( RCSe - Min( RCSe ,CS ) ) ) - RCSe ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2735534415972324}, {"determining": "( Max( ( ( RRS * ARS ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_Mem_Server ) ,( ACS + ARS ) ) ) ,( ( PN / FirstVNF_RAM ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC * MLU ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( Max( FirstVNF_Mem,RRS ) - ( MRS / ( FirstVNF_Mem + Const ) ) ) / AMS ) )", "choosing": "( ( ( Max( ( Min( ( Max( RCSe,DS ) / DS ) ,Max( CS,( RCSe - MUR ) ) ) / MUR ),MUM ) * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3840155945419103, "obj2": 0.618832786373578}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 0.43859649122807015, "obj2": 0.5728937493895849}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUC * MLU ) ) ) - DS ) ) )", "obj1": 0.7426900584795322, "obj2": 0.25965150610665527}, {"determining": "( ( Min( DDR ,AMS ) - MDR ) / ( ( CRS - Max( DDR,DDR ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6513204656118844}, {"determining": "( Min( ACS ,ACS ) - Max( DDR,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,RMSe ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ),DS ) * MLU ) )", "obj1": 0.34307992202729043, "obj2": 0.6651829136364281}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( MRS + Max( Const,FirstVNF_CPU_Server ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - ( RCSe * RCSe ) ) * ( RCSe * ( RMSe / ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.6306431997245162}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( Min( AMS ,FirstVNF_RAM ),RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( ( MUC * RMSe ) + RRSe ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,DS ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3898635477582846, "obj2": 0.6112540923815678}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Max( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.2668975367624908}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( RCSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6237766463769904}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6491228070175439, "obj2": 0.346196589833168}, {"determining": "Min( Max( DDR,MRS ) ,( ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( Max( Min( RCSe ,CS ),RCSe ) * DS ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.29434697855750486, "obj2": 0.7084829105946099}, {"determining": "( ( BR - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( MUM + CS ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6234372111826968}, {"determining": "Min( Max( DDR,MRS ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "Min( RRSe ,( Min( RCSe ,RMSe ) / RMSe ) )", "obj1": 0.33528265107212474, "obj2": 0.6737181234149917}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,PN ) ) ),Const ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC - MLU ) ) * ( ( MUM * ( Min( RMSe ,MLU ) - ( ( Max( MLU,RCSe ) - Max( ( MLU + MUR ),( RMSe / DS ) ) ) / MUR ) ) ) - ( DS / RMSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7138262797043283}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.26233392004648903}, {"determining": "( ( Max( BR,Max( FirstVNF_RAM_Server,( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) ) ) * ARS ) - Max( ACS,Max( ARS,MRS ) ) )", "choosing": "Max( Min( Min( MUC ,MLU ) ,( MUC + MUC ) ),( RMSe - Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.26233392004648903}, {"determining": "( ( Max( ( Max( BR,FirstVNF_RAM_Server ) - ( ARS / FirstVNF_RAM ) ),( ( BR - FirstVNF_CPU_Server ) - ( BR + FirstVNF_CPU_Server ) ) ) - AMS ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( MUM,Min( CS ,RRSe ) ) ) - Max( CS,RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - MUC ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7157851383066179}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( FirstVNF_CPU + AMS ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS / ( FirstVNF_Mem + Const ) ) ) - AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( Min( ( ( RCSe - Max( MUM,MLU ) ) + RMSe ) ,( MUM / Min( RMSe ,( MUM / RMSe ) ) ) ) - ( MLU - MUC ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( AMS / FirstVNF_Mem ) / ARS ) ) / AMS ) )", "choosing": "( ( RCSe * ( Min( ( ( MUM + RRSe ) - DS ) ,MUC ) / ( CS - DS ) ) ) * ( ( MUM / CS ) / ( RCSe * RCSe ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6475748068307318}, {"determining": "( ( MDR - Min( ( Min( CRS ,( ( RRS / ARS ) * Max( Const,FirstVNF_CPU_Server ) ) ) * Min( PN ,FirstVNF_CPU ) ) ,( MDR - FirstVNF_CPU_Server ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + ( ( MLU * ( ( CS / ( MLU - RRSe ) ) * CS ) ) + Min( RCSe ,RRSe ) ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.341130604288499, "obj2": 0.6656505898932016}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / DDR )", "choosing": "( Max( ( MUM - RMSe ),( MUR / MLU ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6784977774581038}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( Max( MUR,DS ) * ( RCSe - ( ( RRSe * CS ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.670354009308861}, {"determining": "( ( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( RMSe * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7205855502971608}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Const ) / ARS ) ) / AMS ) )", "choosing": "( Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6503757818867859}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( ( ( ( MUC - CS ) * RRSe ) * CS ) ,( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6803466679379738}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( PN + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( ( ( ( MUC - CS ) * RRSe ) * CS ) ,Min( ( DS * CS ) ,( MLU + RMSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6752485751129508}, {"determining": "Min( Max( MRS,DDR ) ,( PN + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + Const ) / ARS ) ) ) ) )", "choosing": "( ( RMSe / ( MLU + ( RCSe - ( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ) - ( ( MLU + Min( MUR ,MLU ) ) * MUC ) ) ) ) ) - Max( RCSe,MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620576}, {"determining": "Min( ( AMS - ACS ) ,( PN + ( DDR - Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( RCSe + RCSe ) + MLU ) ) - Max( RCSe,MLU ) )", "obj1": 0.31189083820662766, "obj2": 0.6900972184428555}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( BR - Min( ( ( Min( BR ,MRS ) / FirstVNF_CPU ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( RRSe + ( MUM / Min( DS ,RCSe ) ) ) * MLU ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7563352826510721, "obj2": 0.2098147010959578}, {"determining": "( ( ARS - FirstVNF_CPU ) * ( ( AMS * DDR ) / AMS ) )", "choosing": "( Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( ( Min( ( MUR - MLU ) ,MUM ) / RMSe ) + RCSe ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6475748068307318}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3645224171539961, "obj2": 0.6333501456603051}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( ( MLU / MUM ) + RRSe ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( ( FirstVNF_CPU / ( ( Min( ( PN * FirstVNF_Mem ) ,Max( PN,FirstVNF_RAM_Server ) ) * ( BR / MRS ) ) - ( ARS / CRS ) ) ) + FirstVNF_Mem_Server ) + ( Max( ACS,( Max( Max( FirstVNF_Mem_Server,ARS ),BR ) - ACS ) ) - DDR ) ) / ( ARS / MRS ) )", "choosing": "( Min( ( RCSe * CS ) ,Max( DS,Max( DS,RCSe ) ) ) + ( MUM / RRSe ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6844938284523152}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RRSe / RRSe ) * MLU ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6989777459754538}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7307423544433143}, {"determining": "Min( Max( ARS,FirstVNF_RAM ) ,( Min( ( PN - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ,Min( ARS ,FirstVNF_Mem ) ) + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( ( MLU / MUM ) + RRSe ) ) ) - ( ( MUR / RRSe ) * ( DS * MUR ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( ( PN + ( ( Max( Const,AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( Min( ( ( MUM / Max( ( DS - MUC ),Max( MUC,RRSe ) ) ) / Max( DS,MLU ) ) ,MUR ) + RMSe ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}, {"determining": "( ( Min( ARS ,MRS ) + FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,Max( ( MUR / MUC ),( MLU + MUC ) ) ) - ( Max( ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ),DS ) * MLU ) )", "obj1": 0.43859649122807015, "obj2": 0.5728937493895849}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.3391812865497076, "obj2": 0.670354009308861}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) / ARS ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MUC ,MUC ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7307423544433143}, {"determining": "( Max( ( BR / ( MRS / Max( Max( ACS,( Const - ( PN - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem ) ) ),( RRS / FirstVNF_CPU_Server ) ) * Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MUR ,( ( RRSe + Max( ( RRSe / MLU ),( MUC - DS ) ) ) - ( RMSe - MUM ) ) ) - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + CS ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( Max( Max( Min( FirstVNF_CPU_Server ,RRS ),RRS ),MRS ) ,( PN + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.3645224171539961, "obj2": 0.6333501456603051}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RRSe / RRSe ) * MLU ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server )", "choosing": "( ( ( RMSe - CS ) * ( RCSe * CS ) ) * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) - ( ( MLU / MUM ) + RRSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( Min( Min( MUR ,DS ) ,( MUR * MUM ) ) / Max( Min( CS ,MLU ),( MLU / ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( MDR - MDR ) ,( ( AMS * ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( Max( MUM,MUR ) + Max( MLU,MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "Min( ( MDR / MRS ) ,( ( Min( ( ( FirstVNF_CPU_Server - AMS ) + DDR ) ,( ( AMS - FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) / ACS ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( ( Min( ( ( MLU * RRSe ) - DS ) ,( MUM + Max( ( CS - RRSe ),CS ) ) ) * DS ),( ( MUM / ( ( ( RMSe * RCSe ) / MUR ) / MUM ) ) * MUR ) ) / Min( ( MUR + MLU ) ,( DS - MUC ) ) ) ,( Max( ( RMSe + CS ),( RRSe / RRSe ) ) - Min( RRSe ,( DS - CS ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.682090375075458}], "7": [{"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),AMS ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Min( RRS ,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe - DS ) * RCSe ) - ( RRSe * ( DS - ( ( RMSe / CS ) + ( ( CS + Max( RCSe,( MUR * MUC ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU * Const ) ,( PN * MRS ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( ( MUM * RRSe ) + Min( DS ,MLU ) ) ) ,( MUM / ( DS + ( CS + Min( ( ( Max( RRSe,DS ) + DS ) + Max( DS,( DS * RCSe ) ) ) ,( CS + Min( MUR ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,( ACS * RRS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( CS - DS ) )", "obj1": 0.4678362573099415, "obj2": 0.5258906620092522}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( ARS * ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) ) - Min( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( RCSe * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUC * MLU ) ) ) - DS ) ) )", "obj1": 0.7875243664717348, "obj2": 0.18814699480477315}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS - RRS ) ) / Min( ( Const - MRS ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( BR ,PN ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / DS ) ) ) - CS ) ,RMSe ) - ( Min( RCSe ,( Min( RCSe ,MUC ) + RCSe ) ) * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.05695640959597004}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem + Const ) / ARS ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7309941520467836, "obj2": 0.24138919878086207}, {"determining": "( ( ( Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) / AMS ) - FirstVNF_CPU ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( PN - DDR ) + ( BR - ACS ) ) ) - MDR ) )", "choosing": "Min( ( Max( RMSe,RRSe ) + ( ( ( ( Max( Max( MUR,RCSe ),MUM ) + Min( MUM ,( RCSe - RRSe ) ) ) + MUC ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.9044834307992202, "obj2": 0.09665515241513574}, {"determining": "( ( PN + ( ( ( ( MRS - ( Max( ARS,ARS ) / MRS ) ) / AMS ) + AMS ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * ( ( RRSe - MUC ) / MUR ) ) ,( ( RCSe - Min( ( Min( CS ,CS ) + MUR ) ,( MUM + ( Min( CS ,RCSe ) + MUC ) ) ) ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8401559454191033, "obj2": 0.1343388459825373}, {"determining": "( ( BR - ( PN + RRS ) ) * Min( FirstVNF_Mem ,AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe / MUM ) ) / ( Max( ( ( ( Max( ( RCSe * CS ),DS ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.2798639482777481}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) ) - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.6101364522417154, "obj2": 0.3840482260013694}, {"determining": "( ( BR - ( Min( AMS ,FirstVNF_Mem ) / ( ( ARS * MDR ) * ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / MRS ) ) / AMS ) * MRS ) ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUC ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.300870258975519}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) )", "obj1": 0.8401559454191033, "obj2": 0.1343388459825373}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Min( ( Max( DDR,ARS ) - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe * MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( MUM - CS ) ) ) ,( MLU + RMSe ) )", "obj1": 0.41130604288499023, "obj2": 0.5962891415069065}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4522417153996101, "obj2": 0.5291253773811851}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) ) ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - ( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5765536212708973}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( ( ( Max( FirstVNF_Mem,RRS ) + FirstVNF_Mem ) / ( Min( ( FirstVNF_CPU * RRS ) ,FirstVNF_RAM_Server ) * ( ( CRS + ACS ) - FirstVNF_CPU ) ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * RMSe ) * MLU ) - ( MUR * MUR ) )", "obj1": 0.4405458089668616, "obj2": 0.557042325380139}, {"determining": "( Max( ( ( ( Const * FirstVNF_Mem_Server ) + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MLU * RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.41115288779179976}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( BR - Min( ( ( Max( BR,MRS ) / FirstVNF_CPU ) - ( ( ( ( FirstVNF_Mem + ACS ) / ARS ) - MRS ) / AMS ) ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC * MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( ( Max( MLU,RCSe ) - ( MUM * RMSe ) ) * ( MUM - RRSe ) ) )", "obj1": 0.7758284600389863, "obj2": 0.19867029391243918}, {"determining": "( ( Max( DDR,PN ) + ( ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - AMS ) ) + ( ( FirstVNF_Mem + ( AMS + RRS ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( ( RMSe / ( MUC - Min( Max( CS,RCSe ) ,RRSe ) ) ) - Min( CS ,MUR ) ) + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9824561403508771, "obj2": 0.02006749387028548}, {"determining": "( ( ( ACS / PN ) - MDR ) * ( Max( ( FirstVNF_Mem + Const ),FirstVNF_CPU ) - Min( ( Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) / FirstVNF_RAM_Server ) ,MDR ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( RCSe - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,( Max( MUC,MUR ) + ( MUC * ( MUC - CS ) ) ) ) ) ) )", "obj1": 0.6491228070175439, "obj2": 0.33953294340260537}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS + ARS ) - Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - MUC ) / CS ) ,Min( MUR ,MLU ) )", "obj1": 0.39571150097465885, "obj2": 0.6103369077721927}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Max( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.2668975367624908}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.6393762183235867, "obj2": 0.3552808773884474}, {"determining": "( ( Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( BR - MDR ) * ( ( FirstVNF_CPU / Const ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( MLU ,( ( RMSe - RRSe ) + RMSe ) )", "obj1": 0.7563352826510721, "obj2": 0.2098147010959578}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - MLU ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.6393762183235867, "obj2": 0.3552808773884474}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( ( ( ( AMS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) + FirstVNF_RAM ) - AMS ) )", "choosing": "( ( MUR + RRSe ) * ( DS * ( DS - DS ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( BR - ( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,CS ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.311080602858484}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( Const - ( FirstVNF_Mem_Server * CRS ) ) + Max( CRS,PN ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - RRSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.9044834307992202, "obj2": 0.09665515241513574}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) - BR ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( RCSe - RCSe ) - RCSe ) ) / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6569200779727096, "obj2": 0.32272368705761706}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5594541910331384, "obj2": 0.4283427947786939}, {"determining": "( ( BR - ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6042884990253411, "obj2": 0.39103731240885575}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * RRSe ) * MLU ) )", "obj1": 0.4327485380116959, "obj2": 0.56121107647759}, {"determining": "( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) )", "choosing": "( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.7563352826510721, "obj2": 0.2098147010959578}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( Max( MLU,RRSe ) - RCSe ) + ( MUM / Min( CS ,CS ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.645224171539961, "obj2": 0.35267440034571657}, {"determining": "( ( Min( DDR ,AMS ) - MDR ) / ( ( CRS - Max( DDR,DDR ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6513204656118844}, {"determining": "( Max( ( ( RRS * ARS ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_Mem_Server ) ,( ACS + ARS ) ) ) ,( ( PN / FirstVNF_RAM ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC * MLU ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( RCSe,MUC ) - ( MUC * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Min( MDR ,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( MUC + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUC ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( DS * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( MLU * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6623143445997597}, {"determining": "Min( ( ARS - AMS ) ,( Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) ,ACS ) ) * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,( ( RMSe - RRSe ) + ( Min( ( MLU - Max( MUC,Max( DS,DS ) ) ) ,( RCSe - Min( RCSe ,CS ) ) ) - RCSe ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2735534415972324}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) )", "obj1": 0.5497076023391813, "obj2": 0.43288238929351036}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - RMSe )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7582846003898636, "obj2": 0.20891353083400402}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( AMS - ( ( FirstVNF_Mem + ( Max( ARS,FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + Max( MUR,( MLU / CS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( RRSe + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6298040736588937}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( Max( FirstVNF_Mem,RRS ) - ( MRS / ( FirstVNF_Mem + Const ) ) ) / AMS ) )", "choosing": "( ( ( Max( ( Min( ( Max( RCSe,DS ) / DS ) ,Max( CS,( RCSe - MUR ) ) ) / MUR ),MUM ) * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3840155945419103, "obj2": 0.618832786373578}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( Const - ACS ) + ( MDR * DDR ) ) ) * ( ( CRS / MRS ) * PN ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,RRSe ) ) ) - MUM ) - ( ( MLU * ( Max( RMSe,MUM ) + Min( DS ,RMSe ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( ( ( MUR * CS ) / Max( DS,MUC ) ) ,RRSe ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6627680311890838, "obj2": 0.31629055560256136}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - ( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) / ( ( Min( MUR ,RMSe ) * ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.6112540923815678}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( MUM + CS ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( MRS + Max( Const,FirstVNF_CPU_Server ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - ( RCSe * RCSe ) ) * ( RCSe * ( RMSe / ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.6306431997245162}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5477582846003899, "obj2": 0.4356980422183057}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.31960002269091736}, {"determining": "( ( ( Const - RRS ) + MDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.3235867446393762, "obj2": 0.6775572599462859}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( ( RCSe - DS ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7582846003898636, "obj2": 0.20891353083400402}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( Const - RRS ) + MDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) )", "choosing": "( ( RCSe * RRSe ) - MLU )", "obj1": 0.3333333333333333, "obj2": 0.6669195341479721}, {"determining": "( ( ( Const - RRS ) + AMS ) * ( ( Min( FirstVNF_RAM ,( Max( Min( ( FirstVNF_CPU_Server * FirstVNF_CPU ) ,Const ),FirstVNF_Mem ) + ACS ) ) - BR ) + ( ACS - Min( BR ,PN ) ) ) )", "choosing": "( Max( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) + Min( MUC ,CS ) ),Min( ( RCSe - MLU ) ,( MUM * DS ) ) ) + Min( ( ( ( ( Max( RCSe,( RRSe / CS ) ) - ( ( RCSe / RMSe ) - Max( MUC,DS ) ) ) - ( ( ( CS * MUC ) + CS ) * MUR ) ) - MUC ) - MUC ) ,Max( MUR,RRSe ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6815677572814409}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( PN + FirstVNF_CPU_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * ( MUC / RCSe ) ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RRSe / RRSe ) * MLU ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7035109102741688}, {"determining": "Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,PN ) ) ),Const ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC - MLU ) ) * ( ( MUM * ( Min( RMSe ,MLU ) - ( ( Max( MLU,RCSe ) - Max( ( MLU + MUR ),( RMSe / DS ) ) ) / MUR ) ) ) - ( DS / RMSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7138262797043283}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( PN + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( ( ( ( MUC - CS ) * RRSe ) * CS ) ,Min( ( DS * CS ) ,( MLU + RMSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6752485751129508}, {"determining": "Min( ( ARS - AMS ) ,Max( AMS,BR ) )", "choosing": "Min( ( Max( ( Min( ( ( MLU * RRSe ) - ( Min( DS ,MLU ) - RCSe ) ) ,( MUM + Max( ( CS - RRSe ),CS ) ) ) * DS ),( ( MUM / ( ( ( RMSe * RCSe ) / MUR ) / MUM ) ) * MUR ) ) / Min( ( MUR + MLU ) ,( DS - MUC ) ) ) ,( Max( ( RMSe + CS ),( RMSe / RRSe ) ) - Min( RRSe ,( DS - CS ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2735534415972324}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,CS ) )", "obj1": 0.5477582846003899, "obj2": 0.4356980422183057}, {"determining": "( ( Max( ( Max( BR,FirstVNF_RAM_Server ) - ( ARS / FirstVNF_RAM ) ),( ( BR - FirstVNF_CPU_Server ) - ( BR + FirstVNF_CPU_Server ) ) ) - AMS ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( MUM,Min( CS ,RRSe ) ) ) - Max( CS,RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - MUC ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7157851383066179}, {"determining": "( ( FirstVNF_CPU + AMS ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS / ( FirstVNF_Mem + Const ) ) ) - AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( Min( ( ( RCSe - Max( MUM,MLU ) ) + RMSe ) ,( MUM / Min( RMSe ,( MUM / RMSe ) ) ) ) - ( MLU - MUC ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ARS - Max( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) ) ) * CS ) )", "obj1": 0.31773879142300193, "obj2": 0.6834697389784845}, {"determining": "Min( Max( DDR,MRS ) ,Min( MRS ,( Min( FirstVNF_Mem_Server ,ACS ) / ( Min( FirstVNF_RAM_Server ,CRS ) - Const ) ) ) )", "choosing": "Min( ( MUC + ( ( Min( MLU ,RRSe ) + ( DS * ( MLU - MUM ) ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.29434697855750486, "obj2": 0.7084829105946099}, {"determining": "( ( MDR - Min( ( Min( CRS ,( ( RRS / ARS ) * Max( Const,FirstVNF_CPU_Server ) ) ) * Min( PN ,FirstVNF_CPU ) ) ,( MDR - FirstVNF_CPU_Server ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + ( ( MLU * ( ( CS / ( MLU - RRSe ) ) * CS ) ) + Min( RCSe ,RRSe ) ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.341130604288499, "obj2": 0.6656505898932016}, {"determining": "( ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( MUM + DS ) / ( RMSe / ( RRSe / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6989777459754538}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Max( Max( Min( FirstVNF_CPU_Server ,RRS ),RRS ),MRS ) ,( PN + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7031225654485446}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - AMS ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( DS + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9824561403508771, "obj2": 0.02006749387028548}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Const ,DDR ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( Min( ( ( Min( BR ,MRS ) / FirstVNF_CPU ) - PN ) ,( ( FirstVNF_Mem + Const ) / ARS ) ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( ( Max( MUR,( MUC / MUR ) ) + CS ) * ( RCSe - CS ) ),RCSe ) * RRSe ) / RCSe ) * RMSe )", "obj1": 0.3840155945419103, "obj2": 0.618832786373578}, {"determining": "Min( ( Max( FirstVNF_Mem,( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) ) ) * DDR ) ,( RRS * FirstVNF_RAM_Server ) )", "choosing": "Min( DS ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( RRSe ,( DS - CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6850477182930351}, {"determining": "Min( ( AMS - ACS ) ,( PN + ( DDR - Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( RCSe + RCSe ) + MLU ) ) - Max( RCSe,MLU ) )", "obj1": 0.31189083820662766, "obj2": 0.6900972184428555}, {"determining": "Min( Max( DDR,MRS ) ,( ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( DDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RMSe / ( ( Max( Min( RCSe ,CS ),RCSe ) * DS ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.29434697855750486, "obj2": 0.7084829105946099}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( Min( AMS ,FirstVNF_RAM ),RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( ( MUC * RMSe ) + RRSe ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,DS ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3898635477582846, "obj2": 0.6112540923815678}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - ( FirstVNF_RAM / MRS ) ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * Max( MLU,DS ) ) ) ) ) * Min( MLU ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( AMS * ( ( MRS - ( ARS / ( FirstVNF_Mem + Min( ( ( MRS - FirstVNF_CPU_Server ) / ( DDR - AMS ) ) ,MRS ) ) ) ) / AMS ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6667563838478586}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( ( FirstVNF_CPU + MRS ) + MDR ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RMSe - Min( CS ,Max( MUM,RCSe ) ) ) * MLU ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( ACS - FirstVNF_CPU ) / ( MDR - ( FirstVNF_CPU_Server / ACS ) ) )", "choosing": "( ( ( ( ( ( ( DS - ( MUR / CS ) ) / ( RCSe / RCSe ) ) * MUM ) * DS ) + RMSe ) / DS ) - Max( RCSe,MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.7307423544433143}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,( CRS - AMS ) ) - MDR ) ,( ( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) * ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( Max( MUR,Min( ( ( RMSe + RRSe ) - DS ) ,MLU ) ) + Max( MLU,MUR ) ) ) ) - ( RRSe - MUR ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7307423544433143}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "Min( Max( MRS,DDR ) ,( PN + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + Const ) / ARS ) ) ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620576}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RRSe / RRSe ) * MLU ) ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7205855502971608}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}], "8": [{"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),AMS ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Min( RRS ,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe - DS ) * RCSe ) - ( RRSe * ( DS - ( ( RMSe / CS ) + ( ( CS + Max( RCSe,( MUR * MUC ) ) ) * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( PN - ACS ) + ( ACS - BR ) ) ) / Min( Max( MRS,DDR ) ,( PN + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + Const ) / ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS - RRS ) ) / Min( ( Const - MRS ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( BR ,PN ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / DS ) ) ) - CS ) ,RMSe ) - ( Min( RCSe ,( Min( RCSe ,MUC ) + RCSe ) ) * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.05695640959597004}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,( ( RCSe - CS ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( PN - DDR ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( DS - DS ) )", "obj1": 0.7855750487329435, "obj2": 0.17183102964684355}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.1345378018991368}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5243664717348928, "obj2": 0.47344445602880536}, {"determining": "( ( BR - ( PN + RRS ) ) * Min( FirstVNF_Mem ,AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe / MUM ) ) / ( Max( ( ( ( Max( ( RCSe * CS ),DS ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.2798639482777481}, {"determining": "( ( BR - ( Min( AMS ,FirstVNF_Mem ) / ( ( ARS * MDR ) * ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / MRS ) ) / AMS ) * MRS ) ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUC ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.300870258975519}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + PN ) / ARS ) ) / FirstVNF_CPU ) + ( ( FirstVNF_Mem * Min( BR ,MDR ) ) - ( ARS * FirstVNF_RAM_Server ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * Max( MUM,( ( RMSe - ( ( CS - RRSe ) - DS ) ) / MUC ) ) ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.6237816764132553, "obj2": 0.3424645705167323}, {"determining": "( ( BR - Min( ( ( Max( BR,MRS ) / FirstVNF_CPU ) - ( ( ( ( FirstVNF_Mem + ACS ) / ARS ) - MRS ) / AMS ) ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC * MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( ( Max( MLU,RCSe ) - ( MUM * RMSe ) ) * ( MUM - RRSe ) ) )", "obj1": 0.7758284600389863, "obj2": 0.19867029391243918}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Min( ( Max( DDR,ARS ) - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe * MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( MUM - CS ) ) ) ,( MLU + RMSe ) )", "obj1": 0.41130604288499023, "obj2": 0.5962891415069065}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4951736399020604}, {"determining": "( ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( Min( ACS ,Const ) - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) - Max( DDR,DDR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( Max( DS,CS ) / Min( ( MUM + MUC ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4191033138401559, "obj2": 0.5738303679022095}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * Max( MDR,Const ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6159844054580896, "obj2": 0.3755279360506942}, {"determining": "( ( BR - AMS ) * ( Max( DDR,DDR ) - ( Max( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),PN ) - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( CS * ( ( MUR / MUC ) * MUR ) ) + MLU ) ,Min( CS ,MUC ) ) / Min( MUC ,RCSe ) )", "obj1": 0.7446393762183235, "obj2": 0.22365678730581995}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( ( ACS / PN ) - MDR ) * ( Max( ( FirstVNF_Mem + Const ),FirstVNF_CPU ) - Min( ( Max( FirstVNF_RAM_Server,Min( ( Const / BR ) ,DDR ) ) / FirstVNF_RAM_Server ) ,MDR ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( RCSe - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,( Max( MUC,MUR ) + ( MUC * ( MUC - CS ) ) ) ) ) ) )", "obj1": 0.6491228070175439, "obj2": 0.33953294340260537}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4697855750487329, "obj2": 0.5175796797713641}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( ( ( Max( FirstVNF_Mem,RRS ) + FirstVNF_Mem ) / ( Min( ( FirstVNF_CPU * RRS ) ,FirstVNF_RAM_Server ) * ( ( CRS + ACS ) - FirstVNF_CPU ) ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * RMSe ) * MLU ) - ( MUR * MUR ) )", "obj1": 0.4405458089668616, "obj2": 0.557042325380139}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4522417153996101, "obj2": 0.5291253773811851}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( PN - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ( ( PN - DDR ) + Min( FirstVNF_RAM ,MRS ) ) * ARS ) ) / ( ARS + AMS ) ) )", "choosing": "( ( Min( ( ( MUM - CS ) / MUR ) ,MUM ) * DS ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + MUM ) ) )", "obj1": 0.49317738791423, "obj2": 0.5015082573331507}, {"determining": "( ( FirstVNF_Mem - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + ( ( CRS + ARS ) - Min( BR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - MUC ) / CS ) ,Min( MUR ,MLU ) )", "obj1": 0.39571150097465885, "obj2": 0.6103369077721927}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( ( Max( DDR,PN ) + ( ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - AMS ) ) + ( ( FirstVNF_Mem + ( AMS + RRS ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( ( RMSe / ( MUC - Min( Max( CS,RCSe ) ,RRSe ) ) ) - Min( CS ,MUR ) ) + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9824561403508771, "obj2": 0.02006749387028548}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( PN + ( ( ( ( MRS - DDR ) / ( MRS - ( ( FirstVNF_Mem + MDR ) / ARS ) ) ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * ( ( ( CS / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( RCSe * CS ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( PN,DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * RRSe ) * MLU ) )", "obj1": 0.4327485380116959, "obj2": 0.56121107647759}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Const ,DDR ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.5886939571150097, "obj2": 0.41420699249891174}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * DS ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.27264048406476227}, {"determining": "( ( ( MDR - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem + Const ) / ARS ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( MUC / Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7290448343079922, "obj2": 0.2423501609423112}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( BR - ( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( MUC / MUM ) ) + Max( MUM,Min( CS ,CS ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.311080602858484}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7582846003898636, "obj2": 0.20683290370662297}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) - BR ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( RCSe - RCSe ) - RCSe ) ) / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6569200779727096, "obj2": 0.32272368705761706}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( RRSe * ( RCSe - DS ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "( ( BR - ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6042884990253411, "obj2": 0.39103731240885575}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) ) - FirstVNF_CPU ) + ( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.6101364522417154, "obj2": 0.3840482260013694}, {"determining": "( Max( ( ( RRS * ARS ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Min( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_Mem_Server ) ,( ACS + ARS ) ) ) ,( ( PN / FirstVNF_RAM ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( MUC,RMSe ) - ( MUC * MLU ) )", "obj1": 0.6023391812865497, "obj2": 0.40561409495577844}, {"determining": "( ( BR - MDR ) * ( Max( Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ),DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( RRSe ,( ( RMSe + MUC ) + RMSe ) )", "obj1": 0.7543859649122807, "obj2": 0.21075938482105627}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( Min( DDR ,AMS ) - MDR ) / ( ( CRS - Max( DDR,DDR ) ) - FirstVNF_CPU ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6513204656118844}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( Max( ( ( RRS + ARS ) - Min( FirstVNF_Mem ,( ( AMS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ),DDR ) - ( AMS - PN ) )", "choosing": "( Min( RMSe ,Max( ( ( ( DS / DS ) - MUM ) * RCSe ),( ( RMSe - RRSe ) - MUC ) ) ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.5906432748538012, "obj2": 0.40633420020868505}, {"determining": "Max( ( ( Max( ACS,( MDR - FirstVNF_CPU ) ) + FirstVNF_RAM ) / FirstVNF_CPU ),( Max( PN,FirstVNF_Mem_Server ) * ( Const * AMS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "Min( ( ARS - AMS ) ,( Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) ,ACS ) ) * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,( ( RMSe - RRSe ) + ( Min( ( MLU - Max( MUC,Max( DS,DS ) ) ) ,( RCSe - Min( RCSe ,CS ) ) ) - RCSe ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2735534415972324}, {"determining": "( ( ( ( ( FirstVNF_Mem + Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( RCSe + RCSe ) + MLU ) ,RRSe ) - Min( RRSe ,CS ) )", "obj1": 0.5458089668615984, "obj2": 0.4417933919019623}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem + Const ) / ARS ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7309941520467836, "obj2": 0.24138919878086207}, {"determining": "( ( PN + ( ( ( ( MRS - ( Max( ARS,ARS ) / MRS ) ) / AMS ) + AMS ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * ( ( RRSe - MUC ) / MUR ) ) ,( ( RCSe - Min( ( Min( CS ,CS ) + MUR ) ,( MUM + ( Min( CS ,RCSe ) + MUC ) ) ) ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8401559454191033, "obj2": 0.1343388459825373}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4580896686159844, "obj2": 0.5188815016638816}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5594541910331384, "obj2": 0.4283427947786939}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) - MLU )", "obj1": 0.45614035087719296, "obj2": 0.5219616525674364}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Min( MDR ,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( MUC + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUC ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( DS * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "( ( Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ( ( FirstVNF_RAM - CRS ) - CRS ) - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * Min( ( CS * CS ) ,MUC ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.4239597905416349}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem + Const ) / ARS ) ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.7309941520467836, "obj2": 0.24138919878086207}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( MUM + CS ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( MLU * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6623143445997597}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,( CRS - AMS ) ) - MDR ) ,( ( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) * ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( Max( MUR,Min( ( ( RMSe + RRSe ) - DS ) ,MLU ) ) + Max( MLU,MUR ) ) ) ) - ( RRSe - MUR ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( RCSe - MUR ) + RMSe ) ) - Max( RCSe,MLU ) )", "obj1": 0.5477582846003899, "obj2": 0.4338270730186089}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.31960002269091736}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5555555555555556, "obj2": 0.43025481540475213}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( FirstVNF_Mem + ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / ( Max( Min( ( MLU * RMSe ) ,RCSe ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6299706113072492}, {"determining": "Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,PN ) ) ),Const ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC - MLU ) ) * ( ( MUM * ( Min( RMSe ,MLU ) - ( ( Max( MLU,RCSe ) - Max( ( MLU + MUR ),( RMSe / DS ) ) ) / MUR ) ) ) - ( DS / RMSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7138262797043283}, {"determining": "Min( ( CRS + Max( ( FirstVNF_Mem / MRS ),( FirstVNF_Mem_Server + ( BR - ( PN + FirstVNF_CPU_Server ) ) ) ) ) ,( Min( FirstVNF_CPU ,RRS ) - ( RRS - MDR ) ) )", "choosing": "Min( ( ( ( RCSe * ( MUC / RCSe ) ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Min( RRSe ,( MUC - CS ) ) - Max( Max( CS,RMSe ),Min( MUC ,( ( RRSe / RRSe ) * MLU ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7035109102741688}, {"determining": "( ARS - Max( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + ( ACS - BR ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RRSe ) - ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) ) ) * CS ) )", "obj1": 0.31773879142300193, "obj2": 0.6834697389784845}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,( DDR * MRS ) ) ) + ( FirstVNF_RAM - MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( RMSe / ( ( ( ( RMSe - ( RCSe - ( MUR + RMSe ) ) ) - Min( ( MLU + ( CS + RMSe ) ) ,DS ) ) - MUR ) + RMSe ) ) - ( RCSe * MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "Min( ( ARS - AMS ) ,Max( AMS,BR ) )", "choosing": "Min( ( Max( ( Min( ( ( MLU * RRSe ) - ( Min( DS ,MLU ) - RCSe ) ) ,( MUM + Max( ( CS - RRSe ),CS ) ) ) * DS ),( ( MUM / ( ( ( RMSe * RCSe ) / MUR ) / MUM ) ) * MUR ) ) / Min( ( MUR + MLU ) ,( DS - MUC ) ) ) ,( Max( ( RMSe + CS ),( RMSe / RRSe ) ) - Min( RRSe ,( DS - CS ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2735534415972324}, {"determining": "( ( MRS + FirstVNF_RAM ) / ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( ( Const - ACS ) + MDR ) ) )", "choosing": "( ( MUM + RMSe ) / ( RMSe / ( ( ( Max( ( MUM + MUC ),RRSe ) - RCSe ) / RCSe ) / Min( ( DS + Max( RMSe,( MUC + ( RRSe - MLU ) ) ) ) ,CS ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6669195341479721}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( FirstVNF_CPU + AMS ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS / ( FirstVNF_Mem + Const ) ) ) - AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( Min( ( ( RCSe - Max( MUM,MLU ) ) + RMSe ) ,( MUM / Min( RMSe ,( MUM / RMSe ) ) ) ) - ( MLU - MUC ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server * AMS ) ) + ACS ) + PN ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( CS / RRSe ) * ( MUR * DS ) ) ) + ( RCSe - Min( Min( ( MUM + MLU ) ,DS ) ,DS ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6623143445997597}, {"determining": "( ( MDR - Min( ( Min( CRS ,( ( RRS / ARS ) * Max( Const,FirstVNF_CPU_Server ) ) ) * Min( PN ,FirstVNF_CPU ) ) ,( MDR - FirstVNF_CPU_Server ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + ( ( MLU * ( ( CS / ( MLU - RRSe ) ) * CS ) ) + Min( RCSe ,RRSe ) ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - CS ) )", "obj1": 0.341130604288499, "obj2": 0.6656505898932016}, {"determining": "( AMS * ( ( MRS - ( ARS / ( FirstVNF_Mem + Min( ( ( MRS - FirstVNF_CPU_Server ) / ( DDR - AMS ) ) ,MRS ) ) ) ) / AMS ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6667563838478586}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6627680311890838, "obj2": 0.31629055560256136}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6272942161171862}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "Min( ( ( ( ( ( Min( MLU ,( MUM + DS ) ) + ( MLU * DS ) ) - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.30409356725146197, "obj2": 0.6952156817393763}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( ( ( ( PN / FirstVNF_RAM ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( DS / RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( RCSe,MUC ) - ( MUC * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - MDR ) * MDR )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / ( DS / RMSe ) ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5516569200779727, "obj2": 0.43209204139940127}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7007708168681048}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - AMS ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( DS + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9824561403508771, "obj2": 0.02006749387028548}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( Const,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - RMSe )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "Min( Max( DDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( ( RCSe - CS ) * ( Max( MUR,( RCSe / MUR ) ) + CS ) ) ,RCSe ) * RRSe ) / RRSe ) * ( ( CS - MLU ) + Min( ( ( MLU * CS ) - MUC ) ,RCSe ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7084829105946099}, {"determining": "Min( ( AMS - ACS ) ,( PN + ( DDR - Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( ( FirstVNF_Mem / DDR ) ,( Const + BR ) ) ) ) ) ) )", "choosing": "( ( RMSe / ( ( RCSe + RCSe ) + MLU ) ) - Max( RCSe,MLU ) )", "obj1": 0.31189083820662766, "obj2": 0.6900972184428555}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}], "9": [{"determining": "( Max( ( ( RRS + ARS ) - ( ( RRS / ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MLU - ( Min( MLU ,RRSe ) * MUC ) ) / RRSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( PN - ACS ) + ( ACS - BR ) ) ) / Min( Max( MRS,DDR ) ,( PN + ( DDR - Min( ( ( BR / FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + Const ) / ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS - RRS ) ) / Min( ( Const - MRS ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( BR ,PN ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( ( ( MUR * Min( MUM ,( MUR / DS ) ) ) - CS ) ,RMSe ) - ( Min( RCSe ,( Min( RCSe ,MUC ) + RCSe ) ) * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.05695640959597004}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,( ( RCSe - CS ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( PN - DDR ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( DS - DS ) )", "obj1": 0.7855750487329435, "obj2": 0.17183102964684352}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( PN,( FirstVNF_Mem * FirstVNF_CPU ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( ( MUC / MUM ),RMSe ) ,RMSe ) - ( ( CS * RRSe ) * MLU ) )", "obj1": 0.6023391812865497, "obj2": 0.36671169433457934}, {"determining": "( ( BR - ( PN + RRS ) ) * Min( FirstVNF_Mem ,AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe / MUM ) ) / ( Max( ( ( ( Max( ( RCSe * CS ),DS ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.2798639482777481}, {"determining": "( ( ( ( ( FirstVNF_Mem + Min( CRS ,( FirstVNF_RAM_Server * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) / ARS ) - FirstVNF_CPU ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) * Min( MUM ,( MUR / ( DS / RMSe ) ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.7270955165692008, "obj2": 0.24136760921118983}, {"determining": "( ( BR - ( Min( AMS ,FirstVNF_Mem ) / ( ( ARS * MDR ) * ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / MRS ) ) / AMS ) * MRS ) ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUC ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.300870258975519}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5243664717348928, "obj2": 0.47344445602880536}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + ( ( ACS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( MLU + ( RRSe * MUR ) ) ) - RMSe ) )", "obj1": 0.6296296296296297, "obj2": 0.33470077178602403}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5925925925925926, "obj2": 0.386854151408113}, {"determining": "Min( ( ARS - AMS ) ,Max( ( AMS - FirstVNF_Mem_Server ),BR ) )", "choosing": "Min( ( Max( ( Min( ( ( MLU * RRSe ) - ( DS / ( MUC - MUM ) ) ) ,( MUM + Max( ( CS - RRSe ),CS ) ) ) * DS ),( ( MUM / ( ( ( RMSe * RCSe ) / MUR ) / MUM ) ) * MUR ) ) / Min( ( MUR + MLU ) ,( DS - MUC ) ) ) ,( Max( ( RMSe + CS ),( RMSe / RRSe ) ) - Min( RRSe ,( DS - CS ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2726091864335755}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4697855750487329, "obj2": 0.5175796797713641}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( PN - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ( ( PN - DDR ) + Min( FirstVNF_RAM ,MRS ) ) * ARS ) ) / ( ARS + AMS ) ) )", "choosing": "( ( Min( ( ( MUM - CS ) / MUR ) ,MUM ) * DS ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + MUM ) ) )", "obj1": 0.49317738791423, "obj2": 0.5015082573331507}, {"determining": "( ( Const + FirstVNF_RAM ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / ARS ) * FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ACS ,ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - Max( RRSe,( Max( MLU,MLU ) / CS ) ) ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) / ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUM * RCSe ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * RCSe ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4907431438389073}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) - BR ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( ( CS - ( ( RCSe - RCSe ) - RCSe ) ) / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6569200779727096, "obj2": 0.32272368705761706}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4522417153996101, "obj2": 0.5291253773811851}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.3937621832358674, "obj2": 0.6032536571624427}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( ( Max( DDR,PN ) + ( ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - AMS ) ) + ( ( FirstVNF_Mem + ( AMS + RRS ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( ( RMSe / ( MUC - Min( Max( CS,RCSe ) ,RRSe ) ) ) - Min( CS ,MUR ) ) + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.9824561403508771, "obj2": 0.02006749387028548}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( Min( MDR ,PN ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Max( ( MUM - RCSe ),RMSe ) - ( MUC * MLU ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5548203079381911}, {"determining": "( ( BR - Min( ( ( Max( BR,MRS ) / FirstVNF_CPU ) - ( ( ( ( FirstVNF_Mem + ACS ) / ARS ) - MRS ) / AMS ) ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC * MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( ( Max( MLU,RCSe ) - ( MUM * RMSe ) ) * ( MUM - RRSe ) ) )", "obj1": 0.7758284600389863, "obj2": 0.19867029391243918}, {"determining": "( ( PN + ( ( ( ( MRS - DDR ) / ( MRS - ( ( FirstVNF_Mem + MDR ) / ARS ) ) ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * ( ( ( CS / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( RCSe * CS ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Min( ( Max( DDR,ARS ) - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe * MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( MUM - CS ) ) ) ,( MLU + RMSe ) )", "obj1": 0.41130604288499023, "obj2": 0.5962891415069065}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Const ,DDR ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.5886939571150097, "obj2": 0.41420699249891174}, {"determining": "( ( Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + ( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( Max( MUM,MLU ) ,( DS - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.5243664717348928, "obj2": 0.47344445602880536}, {"determining": "( ( BR - AMS ) * ( Max( DDR,DDR ) - ( Max( ( ( ( FirstVNF_RAM - FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),PN ) - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( CS * ( ( MUR / MUC ) * MUR ) ) + MLU ) ,Min( CS ,MUC ) ) / Min( MUC ,RCSe ) )", "obj1": 0.7446393762183235, "obj2": 0.22365678730581995}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 0.4152046783625731, "obj2": 0.57557557888413}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + ( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( RCSe - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.3424645705167323}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + PN ) / ARS ) ) / FirstVNF_CPU ) + ( ( FirstVNF_Mem * Min( BR ,MDR ) ) - ( ARS * FirstVNF_RAM_Server ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * Max( MUM,( ( RMSe - ( ( CS - RRSe ) - DS ) ) / MUC ) ) ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.6237816764132553, "obj2": 0.3424645705167323}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),PN ) - FirstVNF_CPU ) ) )", "choosing": "( ( CS - RRSe ) / Min( MUC ,RCSe ) )", "obj1": 0.7446393762183235, "obj2": 0.22365678730581995}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,( MDR - FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( CS * RRSe ) ) * ( MUM + CS ) ) ,MUC ) - MUM ) - MUM ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( MUM * RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5686897368711227}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6647173489278753, "obj2": 0.3043650007112843}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( MUR * Min( MUM ,( MUR / ( DS / RMSe ) ) ) ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5603348298155147}, {"determining": "( ( ( ( Const * BR ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) / ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,MLU ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "( ( PN + ( ( ( ( MRS - ( Max( ARS,ARS ) / MRS ) ) / AMS ) + AMS ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * ( ( RRSe - MUC ) / MUR ) ) ,( ( RCSe - Min( ( Min( CS ,CS ) + MUR ) ,( MUM + ( Min( CS ,RCSe ) + MUC ) ) ) ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8401559454191033, "obj2": 0.1343388459825373}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( Max( ( FirstVNF_Mem + Min( ( ( BR + ACS ) / ( AMS - DDR ) ) ,ACS ) ),PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( ( ( MLU * ( ( CS * DS ) - CS ) ) - DS ) - ( ( RCSe * MUM ) / DS ) ) ) * ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),MUC ) ) )", "obj1": 0.7699805068226121, "obj2": 0.20669605031176608}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.4400470474507002}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "( Max( ( ( RRS + ARS ) - Min( FirstVNF_Mem ,( ( AMS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ),DDR ) - ( AMS - PN ) )", "choosing": "( Min( RMSe ,Max( ( ( ( DS / DS ) - MUM ) * RCSe ),( ( RMSe - RRSe ) - MUC ) ) ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.5906432748538012, "obj2": 0.40633420020868505}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.7582846003898636, "obj2": 0.20683290370662297}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( MLU * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6623143445997597}, {"determining": "( ( FirstVNF_CPU * Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) / ( MDR - FirstVNF_RAM ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( ( Min( MUC ,( CS / CS ) ) * Min( ( MUM - MUR ) ,RCSe ) ) ,( ( ( RMSe * MLU ) - Max( MUM,RMSe ) ) / MUM ) ) + ( MLU * DS ) ) - ( CS - ( RRSe - CS ) ) ) ) ,Min( RMSe ,MLU ) )", "obj1": 0.341130604288499, "obj2": 0.6644996696639586}, {"determining": "Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,PN ) ) ),Const ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC - MLU ) ) * ( ( MUM * ( Min( RMSe ,MLU ) - ( ( Max( MLU,RCSe ) - Max( ( MLU + MUR ),( RMSe / DS ) ) ) / MUR ) ) ) - ( DS / RMSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7138262797043283}, {"determining": "( ( BR - MDR ) * ( Max( Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ( ACS - BR ) ) ),DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( RRSe ,( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) + RMSe ) )", "obj1": 0.7543859649122807, "obj2": 0.21075938482105627}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( Min( CRS ,( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - MDR ) ) ,DDR ) * Max( BR,ACS ) ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.5477582846003899, "obj2": 0.4316083392992894}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) - MLU )", "obj1": 0.45614035087719296, "obj2": 0.5219616525674364}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Min( MDR ,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( MUC + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUC ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( DS * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6627680311890838, "obj2": 0.31629055560256136}, {"determining": "( ( BR - MDR ) * ( Max( Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ),DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( RRSe ,( ( RMSe + MUC ) + RMSe ) )", "obj1": 0.7543859649122807, "obj2": 0.21075938482105627}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( MUM + CS ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ),CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * Min( RCSe ,( MLU * RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4600389863547758, "obj2": 0.5180127548358862}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( RRSe * ( RCSe - DS ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "Min( ( ARS - AMS ) ,( Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) ,ACS ) ) * RRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( RRSe ,( ( RMSe - RRSe ) + ( Min( ( MLU - Max( MUC,Max( DS,DS ) ) ) ,( RCSe - Min( RCSe ,CS ) ) ) - RCSe ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.2726091864335755}, {"determining": "Min( Max( Min( CRS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.5962891415069065}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( ( ( Max( FirstVNF_Mem,RRS ) + FirstVNF_Mem ) / ( Min( ( FirstVNF_CPU * RRS ) ,FirstVNF_RAM_Server ) * ( ( CRS + ACS ) - FirstVNF_CPU ) ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * RMSe ) * MLU ) - ( MUR * MUR ) )", "obj1": 0.4405458089668616, "obj2": 0.557042325380139}, {"determining": "( ( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( ( RRS - ACS ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Const ,DDR ) ) ) ) ) - DDR ) - ( AMS / ( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( Max( ( DS / RRSe ),MLU ) / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) - Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( RMSe,Min( MUC ,RRSe ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5906432748538012, "obj2": 0.40633420020868505}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( ACS - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( MLU,MUR ) ) ) ) * MLU ) )", "obj1": 0.4191033138401559, "obj2": 0.5738303679022095}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( FirstVNF_CPU + AMS ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( ARS / ( FirstVNF_Mem + Const ) ) ) - AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( Min( ( ( RCSe - Max( MUM,MLU ) ) + RMSe ) ,( MUM / Min( RMSe ,( MUM / RMSe ) ) ) ) - ( MLU - MUC ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( DS + MUC ) ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4311162325889875}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6272942161171862}, {"determining": "( ( BR - Min( ( ( Min( BR ,MRS ) / FirstVNF_CPU ) - ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( RRSe + ( MUM / Min( DS ,RCSe ) ) ) * MLU ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( RCSe * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.7738791423001949, "obj2": 0.19957146417439284}, {"determining": "( ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( Min( ACS ,Const ) - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) - Max( DDR,DDR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( Max( DS,CS ) / Min( ( MUM + MUC ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4191033138401559, "obj2": 0.5738303679022095}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ( ( FirstVNF_RAM - CRS ) - CRS ) - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * Min( ( CS * CS ) ,MUC ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.4239597905416349}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ( FirstVNF_CPU * ACS ) - PN ) ) + ( ( FirstVNF_Mem + AMS ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Max( Max( Min( RMSe ,Max( RRSe,MUC ) ),Max( RMSe,Max( RRSe,MUM ) ) ),RCSe ) - ( CS - MUR ) ) - ( Min( CS ,CS ) - RMSe ) ) - Max( ( ( CS - MUM ) / ( RMSe - CS ) ),Min( MUM ,RMSe ) ) ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,ARS ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Min( Min( Min( RMSe ,Min( Max( ( MUC + RMSe ),RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) ) ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.30409356725146197, "obj2": 0.6952156817393763}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4951736399020604}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4951736399020604}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "Min( ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) - MDR ) ,( ( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) * ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) / ARS ) )", "choosing": "( Max( MLU,Min( MUM ,( Max( MUR,Min( ( MUC + MUM ) ,MLU ) ) + Max( MLU,MUR ) ) ) ) - ( RRSe - CS ) )", "obj1": 0.28654970760233917, "obj2": 0.7205571238073732}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4580896686159844, "obj2": 0.5188815016638816}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.31960002269091736}], "10": [{"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( RRS / ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MLU - ( Min( MLU ,RRSe ) * MUC ) ) / RRSe ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM - RRS ) ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - RMSe ) ) ,( CS * RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( Min( DDR ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( FirstVNF_RAM ,MRS ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( ( ( DS * MLU ) * RMSe ) ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.7095516569200779, "obj2": 0.2679714532146597}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( MLU ,( CS * RRSe ) )", "obj1": 0.9005847953216374, "obj2": 0.047594348617684155}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) * ( ( ( PN - ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_CPU + MRS ) ) ) - ( ( ( Min( RRS ,PN ) - DDR ) + Min( FirstVNF_RAM ,MRS ) ) * ARS ) ) / ( ARS + AMS ) ) )", "choosing": "( ( Min( ( ( MUM - CS ) / MUR ) ,MUM ) * DS ) / Min( RMSe ,( RMSe + ( ( ( MUC - CS ) - RCSe ) - RCSe ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.4094276674615444}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ARS * FirstVNF_RAM_Server ) / ARS ) ) / AMS ) + ( ( ARS * FirstVNF_RAM_Server ) - Min( DDR ,AMS ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUC * RMSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( RCSe - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.33318743359690756}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.6939571150097466, "obj2": 0.2737852506861958}, {"determining": "( ( ( Max( ARS,Max( RRS,DDR ) ) + ( FirstVNF_Mem - Const ) ) - MDR ) * ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( ( BR - ( Const + ACS ) ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + CS ) / ( MUC + MUC ) ) ),RCSe ) - RMSe ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( ( Min( RRSe ,CS ) / ( CS * MUM ) ) - Max( MUM,RMSe ) ) - ( MUM - MUR ) ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.31983027153372473}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / MLU ) ) * Min( RMSe ,MUM ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( ( BR - ( Min( AMS ,FirstVNF_Mem ) / ( ( ARS * MDR ) * ( ( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / MRS ) ) / AMS ) * MRS ) ) ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( CS * MUC ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.300870258975519}, {"determining": "( ( ( ( ( ( FirstVNF_RAM - CRS ) - CRS ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( Min( ( CS * CS ) ,MUC ) * ( RCSe - DS ) )", "obj1": 0.8791423001949318, "obj2": 0.10631278844727643}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,( ( RCSe - CS ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.52046783625731, "obj2": 0.4762283827609722}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.3937621832358674, "obj2": 0.6032536571624427}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5243664717348928, "obj2": 0.47344445602880536}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( CRS,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + MDR ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( MUC + Min( RCSe ,( MUM * MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.4834307992202729, "obj2": 0.510740327996477}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( PN / FirstVNF_RAM ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Max( MUC,RMSe ) - ( MUC * MLU ) ) )", "obj1": 0.442495126705653, "obj2": 0.5439493972660663}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( RRS * FirstVNF_Mem ) - DDR ) * ARS ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * Max( RMSe,MUR ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - ( DS + MUC ) ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.4346884902028443}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RMSe + MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.4986285234148264}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RMSe,MUR ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4907431438389073}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5477582846003899, "obj2": 0.42595749811867}, {"determining": "( ( Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MLU - ( Min( MLU ,RRSe ) * MUC ) ) / RRSe ) * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,DDR ),( ( RRS - FirstVNF_CPU_Server ) - ( BR + FirstVNF_CPU_Server ) ) ) - ( FirstVNF_Mem * RRS ) ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( RRSe,( Max( ( Max( Max( MUM,DS ),RMSe ) + RRSe ),( DS - RCSe ) ) - ( ( Max( MUM,RMSe ) - ( Min( DS ,CS ) / ( MUM - DS ) ) ) - RMSe ) ) ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( MLU * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6623143445997597}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( Max( RMSe,MUR ) * CS ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "( ( Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6627680311890838, "obj2": 0.31629055560256136}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( ( ( Max( FirstVNF_Mem,RRS ) + FirstVNF_Mem ) / ( Min( ( FirstVNF_CPU * RRS ) ,FirstVNF_RAM_Server ) * ( ( CRS + ACS ) - FirstVNF_CPU ) ) ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS * RMSe ) * MLU ) - ( MUR * MUR ) )", "obj1": 0.4405458089668616, "obj2": 0.557042325380139}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( DS ,( CS * RRSe ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) - MLU )", "obj1": 0.47173489278752434, "obj2": 0.512963975813573}, {"determining": "( ( PN + ( ( ( ( MRS - DDR ) / ( MRS - ( ( FirstVNF_Mem + MDR ) / ARS ) ) ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * ( ( ( CS / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( RCSe * CS ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( ( Const + FirstVNF_RAM ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / ARS ) * FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ACS ,ACS ) ) ) ) ) )", "choosing": "( ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - Max( RRSe,( Max( MLU,MLU ) / CS ) ) ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) / ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUM * RCSe ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * RCSe ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4907431438389073}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.6647173489278753, "obj2": 0.3043650007112843}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5594541910331384, "obj2": 0.42427909631634947}, {"determining": "Min( Max( ( PN / FirstVNF_RAM ),FirstVNF_RAM ) ,( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,PN ) ) ),Const ) * Max( BR,ACS ) ) )", "choosing": "( Max( ( MLU - MLU ),( MUC - MLU ) ) * ( ( MUM * ( Min( RMSe ,MLU ) - ( ( Max( MLU,RCSe ) - Max( ( MLU + MUR ),( RMSe / DS ) ) ) / MUR ) ) ) - ( DS / RMSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7138262797043283}, {"determining": "( ( PN + ( ( ( ( MRS - ( Max( ARS,ARS ) / MRS ) ) / AMS ) + AMS ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * ( ( RRSe - MUC ) / MUR ) ) ,( ( RCSe - Min( ( Min( CS ,CS ) + MUR ) ,( MUM + ( Min( CS ,RCSe ) + MUC ) ) ) ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8401559454191033, "obj2": 0.1343388459825373}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Max( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ),MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUM ) ) ) ) * Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.40350877192982454, "obj2": 0.5845394874590709}, {"determining": "( ( ( MRS - Min( PN ,FirstVNF_RAM_Server ) ) / Const ) * Max( ( RRS + Min( MRS ,AMS ) ),FirstVNF_CPU ) )", "choosing": "( RCSe - ( DS * ( Min( Min( RCSe ,CS ) ,RMSe ) / ( ( ( Min( RMSe ,( RMSe + MUC ) ) * DS ) + ( ( ( RCSe * RRSe ) / RMSe ) - ( ( RCSe + RMSe ) + RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4944804627643709}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( AMS / PN ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RMSe ) ) - DS ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,MRS ) / ( RRS - RRS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + ARS ) ) ) ,( DDR - ( ACS / ACS ) ) ) ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) )", "obj1": 0.3391812865497076, "obj2": 0.6626389344983705}, {"determining": "( ( PN + ( ( ( FirstVNF_RAM + Const ) - FirstVNF_Mem ) / BR ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( Min( ( MUR * CS ) ,( RMSe + ( RCSe - ( RRSe - ( Min( Max( MUC,MUR ) ,CS ) - ( MUC * ( CS * CS ) ) ) ) ) ) ) + ( RRSe * ( RMSe / ( RRSe * Max( ( MUR * ( MUM - ( CS / MUC ) ) ),( RMSe + MLU ) ) ) ) ) )", "obj1": 0.672514619883041, "obj2": 0.3018853455824369}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4697855750487329, "obj2": 0.5175796797713641}, {"determining": "( ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + ( ( MDR + DDR ) + ( BR * MDR ) ) )", "choosing": "( ( RCSe * RCSe ) - Max( MUM,( ( MUR - CS ) / CS ) ) )", "obj1": 0.5243664717348928, "obj2": 0.47344445602880536}, {"determining": "( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Const ) / ARS ) ) * ( FirstVNF_Mem / ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe / ( DS * ( ( MUC * MUC ) + RCSe ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.4327485380116959, "obj2": 0.5603348298155147}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4171539961013645, "obj2": 0.5724954279805751}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Min( MDR ,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( ( MUC + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUC ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( DS * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "( ( PN + ( ( ( ( MRS - DDR ) / ( MRS - ( ( FirstVNF_Mem + MDR ) / ARS ) ) ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * ( ( ( CS / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( RCSe * CS ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) / ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) ) * Min( RMSe ,MUM ) )", "obj1": 0.31189083820662766, "obj2": 0.6880062909104017}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 0.4152046783625731, "obj2": 0.57557557888413}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,( CRS / PN ) ) ) * ( ( ( ( ( ARS - FirstVNF_CPU ) / ( MDR - MDR ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / Max( RRS,MDR ) ) ) / Min( ( Const * Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) ,( CS * RRSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( RRS - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) ) + ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5694963140042827}, {"determining": "( ( ( ( Const * BR ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) / ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,MLU ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ),CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * Min( RCSe ,( MLU * RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4600389863547758, "obj2": 0.5180127548358862}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4522417153996101, "obj2": 0.5291253773811851}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( RCSe * MUM ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,Max( ACS,FirstVNF_CPU ) ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) ) / AMS ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6203631118916851}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,( MDR - FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( CS * RRSe ) ) * ( MUM + CS ) ) ,MUC ) - MUM ) - MUM ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( MUM * RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5686897368711227}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( MUM + ( DS * Min( ( CS * CS ) ,MUC ) ) ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.3586744639376218, "obj2": 0.6372272358111244}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.31960002269091736}, {"determining": "( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( MUR * Min( MUM ,( MUR / ( DS / RMSe ) ) ) ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5603348298155147}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5219616525674364}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ( ( FirstVNF_RAM - CRS ) - CRS ) - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RCSe ) - ( RRSe * ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * Min( ( CS * CS ) ,MUC ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.4239597905416349}, {"determining": "( ( ARS - ( ( PN - ACS ) + ( ACS - BR ) ) ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ) ) * ( RMSe / ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - AMS ) )", "choosing": "( ( ( MUM + CS ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6272942161171862}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}], "11": [{"determining": "( ( ( ( Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_RAM ) * CRS ) ) ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Min( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) ,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( MUR * Min( ( CS * CS ) ,MUM ) ) ) ) * Min( ( RCSe * ( ( ( CS - MUC ) / RCSe ) * ( CS + ( MUM - MLU ) ) ) ) ,( ( RCSe - CS ) + RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( ( Min( BR ,( ( RRS + ( Const * FirstVNF_CPU ) ) + ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ) - BR ),FirstVNF_Mem ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS - ( MUM + Max( ( Min( RCSe ,Min( CS ,MUM ) ) - DS ),RMSe ) ) ) * ( ( RMSe / RMSe ) * RCSe ) ) / ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( Min( DDR ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( FirstVNF_RAM ,MRS ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( ( ( DS * MLU ) * RMSe ) ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.7095516569200779, "obj2": 0.2679714532146597}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( MLU ,( CS * RRSe ) )", "obj1": 0.9005847953216374, "obj2": 0.047594348617684155}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( PN - ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( FirstVNF_CPU + MRS ) ) ) - ( ( ( PN - DDR ) + Min( FirstVNF_RAM ,MRS ) ) * ARS ) ) / ( ARS + AMS ) ) ) * ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( MUM + ( DS * Min( ( CS * CS ) ,Max( ( MUM - ( MUM - CS ) ),MUM ) ) ) ) - DS ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.4084721178311009}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - RMSe ) / ( Max( ( ( ( Min( RRSe ,( MLU + RMSe ) ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5906432748538012, "obj2": 0.3327520264144328}, {"determining": "( ( BR - ( Const + ACS ) ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + CS ) / ( MUC + MUC ) ) ),RCSe ) - RMSe ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( ( Min( RRSe ,CS ) / ( CS * MUM ) ) - Max( MUM,RMSe ) ) - ( MUM - MUR ) ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.31983027153372473}, {"determining": "( Min( PN ,( ( ( ( ( Max( AMS,MDR ) / MDR ) - ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( RMSe * RMSe ) / ( DS - MUC ) ) - ( CS * DS ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2712222683121708}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6744639376218323, "obj2": 0.2890187510249184}, {"determining": "( ( ( ( ( ( FirstVNF_RAM - CRS ) - CRS ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( Min( ( CS * CS ) ,MUC ) * ( RCSe - DS ) )", "obj1": 0.8791423001949318, "obj2": 0.10631278844727643}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,( ( RCSe - CS ) + RMSe ) ) + ( MUM / RRSe ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( ( ( Max( ARS,Max( RRS,DDR ) ) + ( FirstVNF_Mem - Const ) ) - MDR ) * ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) + ( PN - AMS ) ) + ( ( ARS / FirstVNF_Mem ) - ( Max( DDR,DDR ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( Min( MLU ,RMSe ) ,RCSe ) - ( ( ( CS * RRSe ) * MLU ) / Min( MLU ,MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5263157894736842, "obj2": 0.45444289061197696}, {"determining": "( Min( DDR ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( PN ,DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( ( PN * ARS ) - ( ARS - Min( ( FirstVNF_RAM_Server * ARS ) ,AMS ) ) ) ) / Min( FirstVNF_RAM ,ACS ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( ( ( MLU * DS ) * RMSe ) ,MUM ),MUR ) ) ) - ( MLU - ( ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) - Min( RCSe ,MLU ) ) ) )", "obj1": 0.5146198830409356, "obj2": 0.4879234947955026}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) ,( CS * RRSe ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "( ( ( ( Const * BR ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) / ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,MLU ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( Max( RMSe,MUR ) * CS ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MLU ) + MUR ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MLU + RMSe ) )", "obj1": 0.8615984405458089, "obj2": 0.1171795243376345}, {"determining": "( Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( RRS * FirstVNF_Mem ) - DDR ) * ARS ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * Max( RMSe,MUR ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.543859649122807, "obj2": 0.4318980745795076}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) - ( ( FirstVNF_Mem_Server / RRS ) * CRS ) ) - MDR ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5356635764225617}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) )", "obj1": 0.3762183235867446, "obj2": 0.6142313865060056}, {"determining": "( ( PN + ( ( ( FirstVNF_RAM + Const ) - FirstVNF_Mem ) / BR ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( Min( ( MUR * CS ) ,( RMSe + ( RCSe - ( RRSe - ( Min( Max( MUC,MUR ) ,CS ) - ( MUC * ( CS * CS ) ) ) ) ) ) ) + ( RRSe * ( RMSe / ( RRSe * Max( ( MUR * ( MUM - ( CS / MUC ) ) ),( RMSe + MLU ) ) ) ) ) )", "obj1": 0.672514619883041, "obj2": 0.3018853455824369}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.6647173489278753, "obj2": 0.3043650007112842}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.43664717348927873, "obj2": 0.5498386494878825}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ACS - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUR + DS ) ),MUC ) - MUR ) * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( RCSe * CS ) * ( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.8401559454191033, "obj2": 0.13433884598253729}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5243664717348928, "obj2": 0.47344445602880536}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.42884990253411304, "obj2": 0.561886560304173}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( CRS,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + MDR ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( MUC + Min( RCSe ,( MUM * MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.4834307992202729, "obj2": 0.510740327996477}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Max( ( ( RRS * FirstVNF_CPU ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Max( PN,FirstVNF_RAM ) - BR ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( DS ,( RRSe - Max( ( ( ( ( MUR + RRSe ) / ( MUC / RCSe ) ) - MUR ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6924902665969535}, {"determining": "( ( Max( Min( DDR ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MLU - ( Min( MLU ,RRSe ) * MUC ) ) / RRSe ) * MLU ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - DS ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) / ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( MLU * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6623143445997597}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4327485380116959, "obj2": 0.5518797181864138}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.3937621832358674, "obj2": 0.6032536571624427}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.49902534113060426, "obj2": 0.4907431438389073}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUR + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe - RCSe ) ) - ( ( ( Min( MUM ,( RCSe - MUR ) ) - Min( Max( RCSe,CS ) ,RCSe ) ) - MUM ) + Min( ( MUC - DS ) ,( ( RMSe / DS ) + Min( ( MLU / DS ) ,RRSe ) ) ) ) ) ) ,( MLU + RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6071515755686172}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( MLU * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6530214424951267, "obj2": 0.31983027153372473}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6729966687804838}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RMSe + MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.4986285234148264}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RMSe,MUR ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4873294346978557, "obj2": 0.5069093242953404}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( ( MRS - Min( PN ,FirstVNF_RAM_Server ) ) / Const ) * Max( ( RRS + Min( MRS ,AMS ) ),FirstVNF_CPU ) )", "choosing": "( RCSe - ( DS * ( Min( Min( RCSe ,CS ) ,RMSe ) / ( ( ( Min( RMSe ,( RMSe + MUC ) ) * DS ) + ( ( ( RCSe * RRSe ) / RMSe ) - ( ( RCSe + RMSe ) + RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4944804627643709}, {"determining": "Min( ( PN - DDR ) ,( CRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU - MUC ) ),Min( ( Max( Max( ( Min( RMSe ,RCSe ) + RRSe ),( MUR * ( RCSe * DS ) ) ),RCSe ) * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( PN + ( ( ( ( MRS - DDR ) / ( MRS - ( ( FirstVNF_Mem + MDR ) / ARS ) ) ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( MUM - RRSe ) * ( ( ( CS / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( RCSe * CS ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) )", "obj1": 0.3391812865497076, "obj2": 0.6626389344983705}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "Min( ( RRSe + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4619883040935672, "obj2": 0.5152879746581256}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.6627680311890838, "obj2": 0.31629055560256136}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( ARS - ( ( PN - ACS ) + ( ACS - BR ) ) ) / ( MDR - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ( FirstVNF_Mem + Const ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( RMSe + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.52046783625731, "obj2": 0.4762283827609722}, {"determining": "( ( ( Max( ARS,Max( RRS,DDR ) ) + ( FirstVNF_Mem - Const ) ) - MDR ) * ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.01203016286292213}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + RRSe ) / ( MUC / RCSe ) ) - MUR ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 0.4152046783625731, "obj2": 0.57557557888413}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,Max( ( DDR - ( ( RRS - BR ) / Min( FirstVNF_Mem_Server ,( ( BR / CRS ) - ( AMS - RRS ) ) ) ) ),( ( FirstVNF_Mem / ARS ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( ( ( Min( RRSe ,( CS * MUM ) ) * ( ( ( MLU - MLU ) + ( MLU * RMSe ) ) * RMSe ) ) * ( RRSe + MUM ) ) * ( CS - MLU ) ) ,RCSe ) / ( MLU - RMSe ) )", "obj1": 0.9941520467836257, "obj2": 0.002663757708142889}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.47173489278752434, "obj2": 0.512963975813573}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( ACS ,ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( RRSe,RCSe ),Max( CS,MUC ) ) * DS ) - RCSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( PN + ( ( ( ( MRS - ( ARS - FirstVNF_CPU ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( Min( Min( MUC ,RCSe ) ,( ( DS * Min( ( CS * CS ) ,MUC ) ) + MUC ) ) ,RMSe ) - ( MUC * Min( CS ,RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7191571423672882}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( ( ( MUC * RMSe ) + Max( Min( CS ,RRSe ),MUM ) ) - MUM ) - ( RCSe - DS ) ),RRSe ) + ( RCSe * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Max( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ),MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUM ) ) ) ) * Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.40350877192982454, "obj2": 0.5845394874590709}, {"determining": "( ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Max( ( Min( BR ,MRS ) * DDR ),FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / ARS ) * CRS ) - ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ACS ,ACS ) ) ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / DS ) + ( ( ( DS - MUR ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) / ( ( ( DS * ( RCSe - DS ) ) + ( Max( ( ( DS / ( RCSe * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6296297344639983}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) / ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) ) * Min( RMSe ,MUM ) )", "obj1": 0.31189083820662766, "obj2": 0.6880062909104017}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( ( PN + ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ),CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * Min( RCSe ,( MLU * RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4600389863547758, "obj2": 0.5180127548358862}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.5672514619883041, "obj2": 0.42087963963807995}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) - MLU )", "obj1": 0.47173489278752434, "obj2": 0.512963975813573}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Const ) / ARS ) ) * ( FirstVNF_Mem / ( AMS + FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( MUM + ( DS * Min( ( CS * CS ) ,MUC ) ) ) - ( RRSe / ( DS * ( ( MUC * MUC ) + RCSe ) ) ) ) * ( RCSe / ( RMSe / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( ( MLU - RMSe ) / MLU ) ) + ( ( MLU * DS ) + ( ( MUM + RRSe ) / Max( MUR,MUM ) ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7086865498103063}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,( MDR - FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( CS * RRSe ) ) * ( MUM + CS ) ) ,MUC ) - MUM ) - MUM ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( MUM * RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5686897368711227}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5219616525674364}, {"determining": "( ( ( ( FirstVNF_Mem + Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) ) / ARS ) - FirstVNF_CPU ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( Max( ( ( MUR * Min( MUM ,( MUR / Min( CS ,RRSe ) ) ) ) - ( ( Max( MUM,RMSe ) - ( MUC * MUC ) ) - DS ) ),RRSe ) + ( DS * Min( RRSe ,Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.571370019473697}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4502923976608187, "obj2": 0.5297662920954251}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.31960002269091736}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( Max( RMSe,MUR ) * CS ) )", "obj1": 0.3820662768031189, "obj2": 0.6104347609745793}, {"determining": "Min( Max( Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),AMS ),( AMS * ( CRS + FirstVNF_Mem ) ) ) ,( ( ARS / AMS ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( ( MLU + ( CS + MUC ) ) * Max( Min( ( Min( ( ( RCSe - MUM ) / ( ( MUM / MUR ) / MUC ) ) ,( Max( MUR,Min( RRSe ,RRSe ) ) - ( Max( MUM,CS ) + MUM ) ) ) + MUM ) ,CS ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4522417153996101, "obj2": 0.5291253773811851}], "12": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + PN ) * CRS ) ) ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Max( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) * AMS ),MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( DS * ( Max( CS,Min( ( RRSe * RMSe ) ,RCSe ) ) / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_RAM ) * CRS ) ) ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Min( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) ,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( MUR * Min( ( CS * CS ) ,MUM ) ) ) ) * Min( ( RCSe * ( ( ( CS - MUC ) / RCSe ) * ( CS + ( MUM - MLU ) ) ) ) ,( ( RCSe - CS ) + RMSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( RRS / AMS ) + ( ACS - BR ) ) ) / ( MDR - MDR ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( ( ( DS * MLU ) * RMSe ) ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( RRSe + ( ( DS * MLU ) - MUC ) ) ,( CS - RRSe ) )", "obj1": 0.6998050682261209, "obj2": 0.22286669491050393}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( Max( MUM,RMSe ) - ( MUC * MUC ) ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5672514619883041, "obj2": 0.40282136204095625}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.8109161793372319, "obj2": 0.16752348824745555}, {"determining": "( ( ARS - MDR ) / ( ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( ( ( FirstVNF_RAM - ( MRS / PN ) ) * ( ARS / Min( ( RRS / FirstVNF_RAM_Server ) ,MDR ) ) ) - DDR ) ) - MDR ) )", "choosing": "Min( MLU ,( RRSe * Max( ( MUC / Min( Min( MLU ,( ( DS / MUM ) - CS ) ) ,CS ) ),RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( Min( PN ,( ( ( ( ( Max( AMS,MDR ) / MDR ) - ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( RMSe * RMSe ) / ( DS - MUC ) ) - ( CS * DS ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2712222683121708}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem + Const ) / ARS ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( RRSe + ( ( ( Min( MUC ,MUM ) + ( MUR - ( ( RMSe + RRSe ) / MLU ) ) ) + ( RCSe * RRSe ) ) - MUC ) ) ,( CS - RRSe ) )", "obj1": 0.7251461988304093, "obj2": 0.17093107578041938}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) * AMS ) * ( ARS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - MUM ) + DS ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - RCSe ) - ( ( Max( MUM,RMSe ) - ( Max( MUR,MUM ) / ( MUM * CS ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.32856481928096865}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * ( ( CRS + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * CS ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) ,( CS * RRSe ) )", "obj1": 0.884990253411306, "obj2": 0.08932181096344695}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - DS ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8460038986354775, "obj2": 0.11548978785619432}, {"determining": "( ( BR - ( Const + ACS ) ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + CS ) / ( MUC + MUC ) ) ),RCSe ) - RMSe ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( ( Min( RRSe ,CS ) / ( CS * MUM ) ) - Max( MUM,RMSe ) ) - ( MUM - MUR ) ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.31983027153372473}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,( Max( MDR,RRS ) - PN ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( RMSe * ( RCSe - DS ) )", "obj1": 0.5009746588693957, "obj2": 0.46938771760160486}, {"determining": "( ( ( ( ( ( FirstVNF_RAM - CRS ) - CRS ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( Min( ( CS * CS ) ,MUC ) * ( RCSe - DS ) )", "obj1": 0.8791423001949318, "obj2": 0.10631278844727643}, {"determining": "( Max( Min( PN ,( Max( ARS,FirstVNF_Mem ) + MDR ) ),Const ) / ( ARS - FirstVNF_CPU ) )", "choosing": "Min( ( MUM * Max( MLU,( ( DS - MUM ) - ( Max( RMSe,Max( Max( MUC,MUC ),MLU ) ) - ( CS + RCSe ) ) ) ) ) ,( ( RCSe * Min( Min( MLU ,DS ) ,( ( RCSe / MUM ) + CS ) ) ) * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( ( ( Min( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( FirstVNF_RAM + RRS ) ) ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) / CS ) * ( RCSe - Max( ( MLU * ( RCSe * MUM ) ),( ( DS * MLU ) * RMSe ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( Max( ARS,Max( RRS,DDR ) ) + ( FirstVNF_Mem - Const ) ) - MDR ) * ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.52046783625731, "obj2": 0.46345971753661563}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Min( DDR ,Const ) ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) * ( RCSe * ( MUM / ( ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( RRSe / MUC ) / ( RCSe * MUM ) ) ),CS ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4208722478802212}, {"determining": "( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( FirstVNF_Mem / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( BR / PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( ( Min( ( ( MUR + DS ) / ( MLU * MUM ) ) ,MUR ) / DS ),Max( MLU,MLU ) ) - RRSe ) * MUR ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - DS ) )", "obj1": 0.49902534113060426, "obj2": 0.4907431438389073}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem_Server + ( BR - ( FirstVNF_CPU - Max( MRS,AMS ) ) ) ) / Max( MRS,( ( ( Min( FirstVNF_RAM ,MRS ) / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6744639376218323, "obj2": 0.2890187510249184}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) - ( RRSe - RCSe ) )", "obj1": 0.391812865497076, "obj2": 0.59119582935813}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.543859649122807, "obj2": 0.4318980745795076}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) - ( ( FirstVNF_Mem_Server / RRS ) * CRS ) ) - MDR ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5356635764225617}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.6647173489278753, "obj2": 0.3043650007112842}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( ( PN + ( ( ( FirstVNF_RAM + Const ) - FirstVNF_Mem ) / BR ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( Min( ( MUR * CS ) ,( RMSe + ( RCSe - ( RRSe - ( Min( Max( MUC,MUR ) ,CS ) - ( MUC * ( CS * CS ) ) ) ) ) ) ) + ( RRSe * ( RMSe / ( RRSe * Max( ( MUR * ( MUM - ( CS / MUC ) ) ),( RMSe + MLU ) ) ) ) ) )", "obj1": 0.672514619883041, "obj2": 0.3018853455824369}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4346978557504873, "obj2": 0.5489483752867972}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.42884990253411304, "obj2": 0.561886560304173}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) )", "obj1": 0.341130604288499, "obj2": 0.6622200045835404}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6608187134502924, "obj2": 0.3160610703326836}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( RCSe * CS ) * ( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.13335153803832134}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) )", "obj1": 0.3762183235867446, "obj2": 0.6142313865060056}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6744639376218323, "obj2": 0.2890187510249184}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,( MDR - FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( CS * RRSe ) ) * ( MUM + CS ) ) ,MUC ) - MUM ) - MUM ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( MUM * RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5686897368711227}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( CRS,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + MDR ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( MUC + Min( RCSe ,( MUM * MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.4834307992202729, "obj2": 0.510740327996477}, {"determining": "( ( PN + ( ( ( ( MRS - ( FirstVNF_CPU_Server / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) ,( CS * RRSe ) )", "obj1": 0.8810916179337231, "obj2": 0.09123383158950525}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4327485380116959, "obj2": 0.5518797181864138}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RMSe + MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.4986285234148264}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUR + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RMSe,MUR ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4873294346978557, "obj2": 0.5069093242953404}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + ( ( MUC - ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RMSe + MUC ) ) ) - MUM ) ) - ( Max( RMSe,MUR ) * CS ) )", "obj1": 0.40350877192982454, "obj2": 0.5807557200481043}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( ( MRS - Min( PN ,FirstVNF_RAM_Server ) ) / Const ) * Max( ( RRS + Min( MRS ,AMS ) ),FirstVNF_CPU ) )", "choosing": "( RCSe - ( DS * ( Min( Min( RCSe ,CS ) ,RMSe ) / ( ( ( Min( RMSe ,( RMSe + MUC ) ) * DS ) + ( ( ( RCSe * RRSe ) / RMSe ) - ( ( RCSe + RMSe ) + RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4944804627643709}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 0.4152046783625731, "obj2": 0.57557557888413}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - DS ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) / ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) ) )", "obj1": 0.8440545808966862, "obj2": 0.13066912409848772}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + RRSe ) / ( MUC / RCSe ) ) - MUR ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( ARS * ( ( ARS - ( ACS - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "Min( ( RRSe + ( ( Min( ( Min( MLU ,RRSe ) + ( MLU * ( RCSe * RRSe ) ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( FirstVNF_Mem + Const ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - RMSe ) / ( Max( ( ( ( Min( RRSe ,( MLU + RMSe ) ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5906432748538012, "obj2": 0.3327520264144328}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + MRS ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.3762183235867446, "obj2": 0.6142313865060056}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.8109161793372319, "obj2": 0.16752348824745555}, {"determining": "( ( PN - ( ( MRS - CRS ) / ACS ) ) * ( ( MRS - ( ( ( ( ARS - ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MLU / RRSe ) * ( ( RRSe - Max( ( ( ( ( DS + MUR ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( CS + RRSe ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4619883040935672, "obj2": 0.5152879746581256}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "Min( ( PN - DDR ) ,( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( RCSe * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * ( RCSe * MUM ) ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( Max( ARS,Max( RRS,DDR ) ) + ( FirstVNF_Mem - Const ) ) - MDR ) * ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.01203016286292213}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8245614035087719, "obj2": 0.13453780189913675}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6729966687804838}, {"determining": "( ( PN + ( FirstVNF_RAM_Server * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7082611021138188}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( ( RMSe / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) ),RCSe ) - RMSe ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.31983027153372473}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) ,( CS * RRSe ) )", "obj1": 0.47368421052631576, "obj2": 0.5121680066045671}, {"determining": "( ( ARS * ( ( RRS / AMS ) + ( ACS - BR ) ) ) / ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) )", "choosing": "Min( ( ( RMSe * ( ( MUM - MLU ) * ( RMSe / MUM ) ) ) + ( ( Min( ( ( RCSe / MUM ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.27680311890838205, "obj2": 0.7328229815706953}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( BR - MDR ) ) + ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( MUM / MUR ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.290448343079922, "obj2": 0.7154533430801995}, {"determining": "( ( ( ( FirstVNF_Mem + Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) ) / ARS ) - FirstVNF_CPU ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( ( ( DS * MLU ) * RMSe ) ,MUM ),MUR ) ) ) - ( MLU - ( ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.571370019473697}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.31960002269091736}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4502923976608187, "obj2": 0.5297662920954251}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ) / ( Max( ACS,( ( ( AMS / MDR ) + FirstVNF_CPU_Server ) - PN ) ) - DDR ) ) - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "( Min( ( MLU - ( ( Max( Max( ( MUR + DS ),RCSe ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) ) ,( MUC / Min( ( ( RMSe / MUC ) * MUC ) ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) ) * Min( RMSe ,MUM ) )", "obj1": 0.30409356725146197, "obj2": 0.6952156817393763}, {"determining": "( ( ( ( ( ( FirstVNF_RAM - CRS ) - CRS ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( Min( ( MLU - Min( ( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ,( RMSe + RRSe ) ) ) ,( MUC / Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) ) * Min( RMSe ,MUM ) )", "obj1": 0.8791423001949318, "obj2": 0.10631278844727643}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.47173489278752434, "obj2": 0.512963975813573}, {"determining": "( Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( RRS * FirstVNF_Mem ) - DDR ) * ARS ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * Max( RMSe,MUR ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) )", "obj1": 0.3391812865497076, "obj2": 0.6626389344983705}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "Min( ( PN - DDR ) ,( CRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU - MUC ) ),Min( ( Max( Max( ( Min( RMSe ,RCSe ) + RRSe ),( MUR * ( RCSe * DS ) ) ),RCSe ) * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.5246331490239552}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.5172061777027259}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,Max( ( DDR - ( ( RRS - BR ) / Min( FirstVNF_Mem_Server ,( ( BR / CRS ) - ( AMS - RRS ) ) ) ) ),( ( FirstVNF_Mem / ARS ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( ( ( Min( RRSe ,( CS * MUM ) ) * ( ( ( MLU - MLU ) + ( MLU * RMSe ) ) * RMSe ) ) * ( RRSe + MUM ) ) * ( CS - MLU ) ) ,RCSe ) / ( MLU - RMSe ) )", "obj1": 0.9941520467836257, "obj2": 0.002663757708142889}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( ( MRS - ( ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) + Max( ( Min( BR ,MRS ) * DDR ),FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) / ARS ) * CRS ) - ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) ) ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( ACS ,ACS ) ) ) ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / DS ) + ( ( ( DS - MUR ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) / ( ( ( DS * ( RCSe - DS ) ) + ( Max( ( ( DS / ( RCSe * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( ( MUC - RRSe ),MUR ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6296297344639983}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - ( PN - DDR ) ) ) )", "choosing": "( ( ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) * MLU ) * RMSe ) * ( RCSe - DS ) )", "obj1": 0.4580896686159844, "obj2": 0.5203484191686315}], "13": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Max( MRS,DDR ) ,( ( ACS - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + PN ) * CRS ) ) ) / ( FirstVNF_Mem + Const ) ) - FirstVNF_CPU ) / Max( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) * AMS ),MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( DS * ( Max( CS,Min( ( RRSe * RMSe ) ,RCSe ) ) / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / ( Const - RRS ) )", "choosing": "( ( ( DS / Max( ( ( ( ( MUR + RRSe ) / ( MUC / RCSe ) ) - MUR ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( RRSe + ( ( DS * MLU ) - MUC ) ) ,( CS - RRSe ) )", "obj1": 0.6998050682261209, "obj2": 0.22286669491050393}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.08014445297044116}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( Max( MUM,RMSe ) - ( MUC * MUC ) ),( ( DS * MLU ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5672514619883041, "obj2": 0.40282136204095625}, {"determining": "( Min( PN ,( ( ( ( ( Max( AMS,MDR ) / MDR ) - ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( RMSe * RMSe ) / ( DS - MUC ) ) - ( CS * DS ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2712222683121708}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ARS ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.8109161793372319, "obj2": 0.16752348824745555}, {"determining": "( ( AMS + FirstVNF_Mem ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - ( ARS / ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "( RMSe * Min( RCSe ,( MLU / ( ( MUM * MLU ) - MLU ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.3392236125985639}, {"determining": "( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) * MLU ) - MUC ) ) ,( CS - RRSe ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( PN / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( ( PN - ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8206627680311891, "obj2": 0.12816323549041578}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( MLU ,( Max( ( MUC / RCSe ),RMSe ) * RRSe ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / FirstVNF_CPU ) + ( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem * Min( ARS ,MDR ) ) ) ) * DDR ) ) / ( ACS * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.6627680311890838, "obj2": 0.30532101102431347}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - DS ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8460038986354775, "obj2": 0.11548978785619432}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) * AMS ) * ( ARS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - MUM ) + DS ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - RCSe ) - ( ( Max( MUM,RMSe ) - ( Max( MUR,MUM ) / ( MUM * CS ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.32856481928096865}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ACS + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( CRS - CRS ) ) )", "choosing": "( ( ( RCSe * CS ) * ( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / ( RCSe * ( RMSe / RMSe ) ) ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.04750767755816592}, {"determining": "( ( ( ARS - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( ( PN + ( FirstVNF_RAM_Server / ( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,ACS ) ) - BR ) ) ) - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( MUR ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.8167641325536062, "obj2": 0.16338897613553544}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Max( Min( FirstVNF_RAM ,MRS ),MDR ) + ( ( PN - BR ) / Const ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RMSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( MUM + RCSe ) ) )", "obj1": 0.6744639376218323, "obj2": 0.28901875102491836}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - ( PN - DDR ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) + ( MLU + MUR ) ) ,( CS * RRSe ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Min( DDR ,Const ) ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) * ( RCSe * ( MUM / ( ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( RRSe / MUC ) / ( RCSe * MUM ) ) ),CS ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4208722478802212}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( RMSe,MUR ) * CS ) - RCSe ) )", "obj1": 0.4853801169590643, "obj2": 0.49628317095961366}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.8460038986354775, "obj2": 0.11548978785619432}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_RAM ,ARS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( CS / Max( DS,Min( MUR ,MUC ) ) ) * ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) ) ) ,( DS * RRSe ) )", "obj1": 0.4678362573099415, "obj2": 0.5084219414243825}, {"determining": "( ( ( MRS - Min( PN ,FirstVNF_RAM_Server ) ) / Const ) * Max( ( RRS + Min( MRS ,AMS ) ),FirstVNF_CPU ) )", "choosing": "( RCSe - ( DS * ( Min( Min( RCSe ,CS ) ,RMSe ) / ( ( ( Min( RMSe ,( RMSe + MUC ) ) * DS ) + ( ( ( RCSe * RRSe ) / RMSe ) - ( ( RCSe + RMSe ) + RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4944804627643709}, {"determining": "( ( ( ( AMS / ARS ) - FirstVNF_CPU ) - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( ( RMSe / ( Min( ( MUM / MUR ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( ARS - MDR ) / ( ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( ( ( FirstVNF_RAM - ( MRS / PN ) ) * ( ARS / Min( ( RRS / FirstVNF_RAM_Server ) ,MDR ) ) ) - DDR ) ) - MDR ) )", "choosing": "Min( MLU ,( RRSe * Max( ( MUC / Min( Min( MLU ,( ( DS / MUM ) - CS ) ) ,CS ) ),RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) - ( RRSe - RCSe ) )", "obj1": 0.391812865497076, "obj2": 0.59119582935813}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_Mem + Const ) * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUR + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) - ( RCSe - DS ) ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( ( PN - DDR ) * Max( Min( ( FirstVNF_RAM + CRS ) ,( ( Min( FirstVNF_CPU ,DDR ) / Max( ACS,Max( ( Const - MRS ),AMS ) ) ) - BR ) ),MRS ) )", "choosing": "( ( RMSe - Max( MUR,MUM ) ) * ( ( RRSe - Max( ( ( ( ( MUR + RMSe ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,MUR ) * Min( ( ( MUM / MUM ) / Max( DS,CS ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5399610136452242, "obj2": 0.4292494755030357}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6647173489278753, "obj2": 0.29028108340560066}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) - ( ( FirstVNF_Mem_Server / RRS ) * CRS ) ) - MDR ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5356635764225617}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,( Max( MDR,RRS ) - PN ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( RMSe * ( RCSe - DS ) )", "obj1": 0.5009746588693957, "obj2": 0.46938771760160486}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4346978557504873, "obj2": 0.5489483752867972}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.42884990253411304, "obj2": 0.561886560304173}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( BR - Min( ( Const - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) )", "obj1": 0.5380116959064327, "obj2": 0.44394929572281944}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) )", "obj1": 0.3762183235867446, "obj2": 0.6142313865060056}, {"determining": "( ( ( FirstVNF_CPU - ( Max( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ),ARS ) / ARS ) ) - Const ) / Max( ( ( ( ARS / FirstVNF_Mem ) - ( PN - BR ) ) + BR ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MUC - Min( RCSe ,( MLU * RMSe ) ) ) - MUM ) ) - ( CS * Max( ( RRSe - DS ),MUR ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6548030568269726}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,( MDR - FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( CS * RRSe ) ) * ( MUM + CS ) ) ,MUC ) - MUM ) - MUM ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( MUM * RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5686897368711227}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + ( ( MUC - ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RMSe + MUC ) ) ) - MUM ) ) - ( Max( RMSe,MUR ) * CS ) )", "obj1": 0.40350877192982454, "obj2": 0.5807557200481043}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 0.4152046783625731, "obj2": 0.57557557888413}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + RRSe ) / ( MUC / RCSe ) ) - MUR ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "Min( ( RRSe + ( ( Min( ( CS + ( MLU * ( RCSe * RRSe ) ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5886939571150097, "obj2": 0.33253860810132224}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + MRS ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.3762183235867446, "obj2": 0.6142313865060056}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( ( MLU * ( RCSe * RRSe ) ) * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620575}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem / ACS ) * Max( ( DDR / FirstVNF_Mem_Server ),Min( MRS ,MDR ) ) ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * ( ( Min( CS ,RRSe ) / MUM ) * RMSe ) ) - Max( ( ( ( ( CS + DS ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Max( MUR,Min( RMSe ,MLU ) ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUR ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6288152460365909}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) )", "obj1": 0.3391812865497076, "obj2": 0.6626389344983705}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( RRS ,DDR ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( ( MLU * ( RCSe * MUM ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / CS ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6729966687804838}, {"determining": "( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( FirstVNF_Mem / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( BR / PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( ( Min( ( ( MUR + DS ) / ( MLU * MUM ) ) ,MUR ) / DS ),Max( MLU,MLU ) ) - RRSe ) * MUR ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( Max( Max( DDR,( ACS - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) + FirstVNF_RAM ) * Max( MDR,FirstVNF_Mem ) ) ) ,Min( AMS ,FirstVNF_Mem ) )", "choosing": "( RMSe * ( Min( Min( RMSe ,RRSe ) ,DS ) - MUM ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( ARS - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( Max( FirstVNF_CPU_Server,Const ) - ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( RRSe * RCSe ) - ( RRSe - ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) ,( CS * RRSe ) )", "obj1": 0.46588693957115007, "obj2": 0.5110821112929708}, {"determining": "( ( ( Min( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( FirstVNF_RAM + RRS ) ) ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) / CS ) * ( RCSe - Max( ( MLU * ( RCSe * MUM ) ),( ( DS * MLU ) * RMSe ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( DDR + ( BR - MDR ) ) + ( ARS - ( ( ARS * FirstVNF_CPU ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * DDR ) ) ) ) ) )", "choosing": "( ( RMSe / ( Min( Min( RRSe ,( MLU + RMSe ) ) ,Min( RRSe ,MUC ) ) - ( DS / ( RCSe * RCSe ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7043710697624713}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ( Min( PN ,Const ) * FirstVNF_Mem_Server ) - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / AMS ) )", "choosing": "( ( ( RCSe * CS ) * ( ( ( MUM / DS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( MUM - ( RRSe * MLU ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.571370019473697}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe / ( Min( ( MUM / MUR ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4327485380116959, "obj2": 0.5518797181864138}, {"determining": "( Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( RRS * FirstVNF_Mem ) - DDR ) * ARS ) )", "choosing": "( ( ( DS * MLU ) * RMSe ) * Max( RMSe,MUR ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ( Max( ARS,Max( RRS,DDR ) ) + ( FirstVNF_Mem - Const ) ) - MDR ) * ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - Max( DDR,DDR ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( ( ( FirstVNF_Mem + Max( ( PN - ACS ),( FirstVNF_Mem + Const ) ) ) / ARS ) - FirstVNF_CPU ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( ( ( DS * MLU ) * RMSe ) ,MUM ),MUR ) ) ) - ( ( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) - ( ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,Max( ( DDR - ( ( RRS - BR ) / Min( FirstVNF_Mem_Server ,( ( BR / CRS ) - ( AMS - RRS ) ) ) ) ),( ( FirstVNF_Mem / ARS ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( ( ( ( Min( RRSe ,( CS * MUM ) ) * ( ( ( MLU - MLU ) + ( MLU * RMSe ) ) * RMSe ) ) * ( RRSe + MUM ) ) * ( CS - MLU ) ) ,RCSe ) / ( MLU - RMSe ) )", "obj1": 0.9941520467836257, "obj2": 0.002663757708142889}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ARS * ( ( RRS / AMS ) + ( ACS - BR ) ) ) / ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) )", "choosing": "Min( ( ( RMSe * ( ( MUM - MLU ) * ( RMSe / MUM ) ) ) + ( ( Min( ( ( RCSe / MUM ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.27680311890838205, "obj2": 0.7328229815706953}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,( ( DDR - ( ( RRS - BR ) / Min( FirstVNF_Mem_Server ,( ( BR / CRS ) - DDR ) ) ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) - ( MUR / RCSe ) ) * ( ( CS * MUR ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / ( MLU - RMSe ) )", "obj1": 0.9941520467836257, "obj2": 0.002663757708142889}, {"determining": "( ( FirstVNF_CPU - ( AMS + DDR ) ) * Const )", "choosing": "( Max( ( ( ( CS - ( MUM / DS ) ) / MUR ) + MUR ),Min( MUR ,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) ) - FirstVNF_CPU ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * CS ) ,MUC ) ) ) ) * MUR ) ) * ( RCSe - ( ( MUM - Max( ( CS * ( MLU + MUR ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) )", "obj1": 0.341130604288499, "obj2": 0.6622200045835404}, {"determining": "Min( ( PN - DDR ) ,( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( CS ,MUC ) ) * ( ( CS * MUM ) + ( Min( MUM ,( RCSe * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * ( RCSe * MUM ) ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ( ( ( ARS / ARS ) / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Max( ( MUM * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.45419103313840153, "obj2": 0.5244554538476436}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.5172061777027259}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - ( PN - DDR ) ) ) )", "choosing": "( ( ( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ) * MLU ) * RMSe ) * ( RCSe - DS ) )", "obj1": 0.4580896686159844, "obj2": 0.5203484191686315}, {"determining": "( ( PN - ( ( MRS - CRS ) / ACS ) ) * ( ( MRS - ( ( ( ( ARS - ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MLU / RRSe ) * ( ( RRSe - Max( ( ( ( ( DS + MUR ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( CS + RRSe ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "Min( ( ( ( ARS - ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ) / ( Max( ACS,( PN - ( ( AMS / MDR ) + FirstVNF_CPU_Server ) ) ) - DDR ) ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "( Min( ( MLU - ( ( Max( Max( ( MUR + DS ),RCSe ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) ) ,( MUC / Min( ( ( RMSe / MUC ) * MUC ) ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) ) * Min( RMSe ,MUM ) )", "obj1": 0.30409356725146197, "obj2": 0.6952156817393762}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}], "14": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( RRS / AMS ) + ( ACS - BR ) ) ) / ( ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) * ( MUM / MUR ) ) + ( ( Min( ( ( RCSe / MUM ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,DDR ) ,( ( ACS - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( RRS / AMS ) + Max( ACS,BR ) ) ) / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe / DS ) - MUM ) * ( Min( MUC ,RMSe ) * ( Min( ( ( Min( ( MUM * MUR ) ,( RRSe * MUM ) ) - RRSe ) * Max( Min( DS ,Max( RCSe,MLU ) ),MUM ) ) ,( ( Max( RRSe,Min( MUC ,DS ) ) + MLU ) / MUC ) ) - Min( MLU ,RMSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.672514619883041, "obj2": 0.21930451033795603}, {"determining": "( ( ARS - MDR ) / ( ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( ( ( FirstVNF_RAM - ( MRS / PN ) ) * ( ARS / Min( ( RRS / FirstVNF_RAM_Server ) ,MDR ) ) ) - ( BR - ( PN + MDR ) ) ) ) - MDR ) )", "choosing": "Min( MLU ,( RRSe * Max( ( MUC / Min( Min( MLU ,( ( DS / RMSe ) - CS ) ) ,CS ) ),RMSe ) ) )", "obj1": 0.7953216374269005, "obj2": 0.1402287567282973}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.08014445297044116}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( Min( PN ,( ( CRS + FirstVNF_RAM_Server ) + RRS ) ) - MDR ) / Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "Min( ( RRSe - MUC ) ,Min( CS ,RRSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( ( AMS + FirstVNF_Mem ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - ( ARS / ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "( RMSe * Min( RCSe ,( MLU / ( ( MUM * MLU ) - MLU ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.3392236125985639}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6686159844054581, "obj2": 0.2884239028306177}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),Max( Min( FirstVNF_CPU_Server ,RRS ),FirstVNF_Mem ) ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Min( Min( MUC ,MUR ) ,Min( MLU ,DS ) ) - ( Min( RRSe ,CS ) / ( MUM * CS ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6627680311890838, "obj2": 0.2911822536675544}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - DS ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8460038986354775, "obj2": 0.11548978785619432}, {"determining": "( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( RRSe + ( ( Min( MUM ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) * MLU ) - MUC ) ) ,( CS - RRSe ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( DS * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ACS + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( ( BR - CRS ) - CRS ) ) )", "choosing": "( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.04750767755816591}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - ( PN - DDR ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) + ( MLU + MUR ) ) ,( CS * RRSe ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( DDR / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( ( PN - ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8226120857699805, "obj2": 0.12733800212556495}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.8460038986354775, "obj2": 0.11548978785619432}, {"determining": "( ( ( ( AMS / ARS ) - FirstVNF_CPU ) - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( ( RMSe / ( Min( ( MUM / MUR ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( ARS - ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server - CRS ) * CRS ) ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + Max( CS,MUM ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5964912280701754, "obj2": 0.32856481928096865}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) - ( RRSe - RCSe ) )", "obj1": 0.391812865497076, "obj2": 0.59119582935813}, {"determining": "( ( ( MRS - Min( PN ,FirstVNF_RAM_Server ) ) / Const ) * Max( ( RRS + Min( MRS ,AMS ) ),FirstVNF_CPU ) )", "choosing": "( RCSe - ( DS * ( Min( Min( RCSe ,CS ) ,RMSe ) / ( ( ( Min( RMSe ,( RMSe + MUC ) ) * DS ) + ( ( ( RCSe * RRSe ) / RMSe ) - ( ( RCSe + RMSe ) + RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4944804627643709}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) - ( ( FirstVNF_Mem_Server / RRS ) * CRS ) ) - MDR ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5356635764225617}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( PN / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( ( PN - ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8206627680311891, "obj2": 0.12816323549041578}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) * AMS ) * ( ARS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - MUM ) + DS ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - RCSe ) - ( ( Max( MUM,RMSe ) - ( Max( MUR,MUM ) / ( MUM * CS ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.32856481928096865}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4775828460038986, "obj2": 0.497730432784438}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,( Max( MDR,RRS ) - PN ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( RMSe * ( RCSe - DS ) )", "obj1": 0.5009746588693957, "obj2": 0.46938771760160486}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Min( DDR ,Const ) ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) * ( RCSe * ( MUM / ( ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( RRSe / MUC ) / ( RCSe * MUM ) ) ),CS ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4208722478802212}, {"determining": "( ( PN - DDR ) * Max( Min( ( FirstVNF_RAM + CRS ) ,( ( Min( FirstVNF_CPU ,DDR ) / Max( ACS,Max( ( Const - MRS ),AMS ) ) ) - BR ) ),MRS ) )", "choosing": "( ( RMSe - Max( MUR,MUM ) ) * ( ( RRSe - Max( ( ( ( ( MUR + RMSe ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,MUR ) * Min( ( ( MUM / MUM ) / Max( DS,CS ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5399610136452242, "obj2": 0.4292494755030357}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( FirstVNF_Mem + Const ) ) - ( Max( DDR,DDR ) - ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_CPU ) ) ) / Max( DDR,MDR ) ) - ( ( FirstVNF_RAM - CRS ) - CRS ) )", "choosing": "( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) )", "obj1": 0.3391812865497076, "obj2": 0.6626389344983705}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.4408334417839386}, {"determining": "( ( ( ( ( ARS / ARS ) / ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) + ( Max( ( MUM * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4697855750487329, "obj2": 0.5060878441813511}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( Min( ( DDR - ( MDR / FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( RRS - ACS ) ) / Max( Max( BR,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ),( DDR + BR ) ) ),PN ) / ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - ( MUM / CS ) ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / MLU ) ) ) ) + ( Min( DS ,RRSe ) - ( ( MUR - MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ( Max( DDR,( MDR - FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( CS * RRSe ) ) * ( MUM + CS ) ) ,MUC ) - MUM ) - MUM ) + ( ( Min( RRSe ,MLU ) + ( MLU * DS ) ) - MUC ) ) ,( MUM * RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5686897368711227}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( RMSe,MUR ) * CS ) - RCSe ) )", "obj1": 0.4853801169590643, "obj2": 0.49628317095961366}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( FirstVNF_CPU * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe / ( Min( ( MUM / MUR ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4327485380116959, "obj2": 0.5518797181864138}, {"determining": "( ( ( Min( PN ,Const ) * FirstVNF_Mem_Server ) - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / AMS ) )", "choosing": "( ( ( RCSe * CS ) * ( ( ( MUM / DS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( MUM - ( RRSe * MLU ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.571370019473697}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.5191432892883514}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 0.4152046783625731, "obj2": 0.57557557888413}, {"determining": "( ( ARS * Max( ( ARS - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) / ARS ) ) ),( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) - MDR ) ) ) - Min( DDR ,Min( BR ,Const ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe / ( Max( MUM,Min( DS ,MUR ) ) / RMSe ) ) ) ) + Min( ( DS * ( MUM / Min( MUM ,RMSe ) ) ) ,DS ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5886939571150097, "obj2": 0.33253860810132224}, {"determining": "Min( ( ( ( Max( DDR,FirstVNF_RAM ) * ( CRS - CRS ) ) - RRS ) - FirstVNF_CPU ) ,Max( MRS,DDR ) )", "choosing": "( ( ( ( ( CS - MLU ) + ( RMSe - ( ( Min( MLU ,CS ) / MLU ) / DS ) ) ) / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( MUC * MLU ) )", "obj1": 0.3742690058479532, "obj2": 0.6191810889134165}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( RRS ,DDR ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( ( MLU * ( RCSe * MUM ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / CS ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6077514182858358}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4346978557504873, "obj2": 0.5489483752867972}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe * ( ( MUM - MLU ) * ( RMSe / MUM ) ) ) + ( ( Min( ( ( RCSe / MUM ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( Max( Max( DDR,( ACS - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) + FirstVNF_RAM ) * Max( MDR,FirstVNF_Mem ) ) ) ,Min( AMS ,FirstVNF_Mem ) )", "choosing": "( RMSe * ( Min( Min( RMSe ,RRSe ) ,DS ) - MUM ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "( PN / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( ( PN - ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.8206627680311891, "obj2": 0.12816323549041578}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe + Min( ( RRSe + ( ( Min( MLU ,RRSe ) + ( RCSe * RRSe ) ) / MUC ) ) ,( Max( ( MUM - ( MUM - CS ) ),MUM ) - RRSe ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6729966687804838}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6543376437725101}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUR ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6390844163861074}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) / CS ) * ( ( ( DS - RCSe ) - ( CS - RRSe ) ) - Max( ( MLU * ( RCSe * MUM ) ),( ( DS * ( ( MUM / CS ) - DS ) ) * RMSe ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "Min( ( RRSe + ( ( Min( ( CS + ( MLU * ( RCSe * RRSe ) ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( FirstVNF_Mem / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( BR / PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( ( Min( ( ( MUR + DS ) / ( MLU * MUM ) ) ,MUR ) / DS ),Max( MLU,MLU ) ) - RRSe ) * MUR ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Min( ( MUM / Max( ( CS * ( MLU + MUR ) ),RCSe ) ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( RRS ,DDR ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( ( MLU * ( RCSe * MUM ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / CS ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "Min( ( ( ( ARS - ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ) / ( Max( ACS,( PN - ( ( AMS / MDR ) + FirstVNF_CPU_Server ) ) ) - DDR ) ) - FirstVNF_CPU ) ,( FirstVNF_CPU_Server / Max( DDR,MDR ) ) )", "choosing": "( Min( ( MLU - ( ( Max( Max( ( MUR + DS ),RCSe ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) ) ,( MUC / Min( ( ( RMSe / MUC ) * MUC ) ,( Max( MUR,Min( RMSe ,MLU ) ) + Max( MLU,MUR ) ) ) ) ) * Min( RMSe ,MUM ) )", "obj1": 0.30409356725146197, "obj2": 0.6952156817393762}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( Min( FirstVNF_RAM ,MRS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( MLU ,( RCSe + RCSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6531489207115432}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4619883040935672, "obj2": 0.5157769026334884}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.42884990253411304, "obj2": 0.561886560304173}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4208722478802212}, {"determining": "( Min( ( Min( AMS ,CRS ) * BR ) ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU_Server * DDR ) * ( CRS + FirstVNF_RAM ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,Max( Min( RCSe ,MUM ),MUR ) ) ) - ( MLU - ( DS - ( RCSe * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( ( MLU * MUR ) + MLU ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6748506062442631}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( RCSe + RCSe ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.6025050849880795}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,( ( DDR - ( ( RRS - BR ) / Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,PN ) - DDR ) ) ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) - ( MUR / RCSe ) ) * ( ( CS * ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / ( MLU - RMSe ) )", "obj1": 0.9902534113060428, "obj2": 0.004575778334201128}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( ( ( ( ( ACS + ARS ) / ARS ) / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( CS * DS ) ) + ( Max( ( MUM * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523031}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,( MUR / RCSe ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.5171948511147952}, {"determining": "( Max( FirstVNF_CPU_Server,Const ) - ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( RRSe * RCSe ) - ( RRSe - ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.42884990253411304, "obj2": 0.561886560304173}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( MUR / CS ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5828005618267357}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Max( Const,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) / Max( Const,FirstVNF_RAM_Server ) ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) * ( ( CS * MUM ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / Max( ( Min( MUM ,Max( Max( ( RMSe * RMSe ),( ( DS * MLU ) * RMSe ) ),DS ) ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5852858250654652}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / Min( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( Const,FirstVNF_Mem ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ,MDR ) ) ) - Min( DDR ,( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6736773124150107}, {"determining": "( ( PN - ( ( MRS - CRS ) / ACS ) ) * ( ( MRS - ( ( ( ( ARS - ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MLU / RRSe ) * ( ( RRSe - Max( ( ( ( ( DS + MUR ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( CS + RRSe ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "Min( Max( MRS,DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6248089597830825}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - DS ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( ( FirstVNF_Mem / ACS ) * Max( ( DDR / FirstVNF_Mem_Server ),Min( MRS ,MDR ) ) ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * ( ( Min( CS ,RRSe ) / MUM ) * RMSe ) ) - Max( ( ( ( ( CS + DS ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Max( MUR,Min( RMSe ,MLU ) ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - MDR ) / ( ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( RRSe * Max( ( MUC / Min( Min( MLU ,( ( DS / MUM ) - CS ) ) ,CS ) ),RMSe ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008502884624565209}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}], "15": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( RRS / AMS ) + ( ACS - BR ) ) ) / ( ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) )", "choosing": "Min( ( ( ( MLU + MUR ) * ( MUM / MUR ) ) + ( ( Min( ( ( RCSe / MUM ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR / ( MDR / FirstVNF_Mem_Server ) ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / ( Min( RMSe ,RMSe ) + ( MUC / CS ) ) ) - ( MUM * ( ( MUM - MUC ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( DDR / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( Const + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,MUC ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.7875243664717348, "obj2": 0.13478753373571428}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.08014445297044116}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Min( MDR ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( Const - ( FirstVNF_CPU_Server / RRS ) ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( ( RRSe * RCSe ) * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963274}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5789473684210527, "obj2": 0.34017962291159287}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( FirstVNF_Mem_Server + RRS ) / MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( CS / ( MLU * MLU ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6764132553606238, "obj2": 0.216448266669385}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) * CRS ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ARS - ( ( ACS * ( PN + ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( MUC - ( ( MUM * Max( ( RMSe + MLU ),( RCSe / ( RRSe - RCSe ) ) ) ) * MLU ) ) ,( CS * RRSe ) )", "obj1": 0.6705653021442495, "obj2": 0.25307409257171015}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - Max( MDR,RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) / CS ) * ( ( ( DS - RCSe ) - ( CS - RRSe ) ) - Max( ( MLU * ( RCSe * MUM ) ),( ( DS * ( ( ( MUR / MUC ) / CS ) - DS ) ) * RMSe ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.10948937435125113}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6588693957115009, "obj2": 0.2930942742936127}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5496806680057231}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ACS + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( ( BR - CRS ) - CRS ) ) )", "choosing": "( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.04750767755816591}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Max( Const,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.672514619883041, "obj2": 0.21930451033795603}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6686159844054581, "obj2": 0.2884239028306177}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ( MRS - Min( PN ,FirstVNF_RAM_Server ) ) / Const ) * Max( ( RRS + Min( MRS ,AMS ) ),FirstVNF_CPU ) )", "choosing": "( RCSe - ( DS * ( Min( Min( RCSe ,CS ) ,RMSe ) / ( ( ( Min( RMSe ,( RMSe + MUC ) ) * DS ) + ( ( ( RCSe * RRSe ) / RMSe ) - ( ( RCSe + RMSe ) + RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4944804627643709}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4346978557504873, "obj2": 0.5489483752867972}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) * AMS ) * ( ARS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - MUM ) + DS ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - RCSe ) - ( ( Max( MUM,RMSe ) - ( Max( MUR,MUM ) / ( MUM * CS ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.32856481928096865}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) - ( ( FirstVNF_Mem_Server / RRS ) * CRS ) ) - MDR ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5356635764225617}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( DS * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237318}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,( Max( MDR,RRS ) - PN ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( RMSe * ( RCSe - DS ) )", "obj1": 0.5009746588693957, "obj2": 0.46938771760160486}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Min( DDR ,Const ) ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) * ( RCSe * ( MUM / ( ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( RRSe / MUC ) / ( RCSe * MUM ) ) ),CS ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4208722478802212}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( Max( ( MUC / MUM ),RMSe ) + ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) ) )", "obj1": 0.4619883040935672, "obj2": 0.5157769026334884}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( ARS - ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server - CRS ) * CRS ) ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + Max( CS,MUM ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5964912280701754, "obj2": 0.32856481928096865}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "Min( ( RRSe + ( ( Min( ( CS + ( MLU * ( RCSe * RRSe ) ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.47953216374269003, "obj2": 0.49502674945270514}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6628995888638582}, {"determining": "Min( ( ( ( Max( DDR,FirstVNF_RAM ) * ( CRS - CRS ) ) - RRS ) - FirstVNF_CPU ) ,Max( MRS,DDR ) )", "choosing": "( ( ( ( ( CS - MLU ) + ( RMSe - ( ( Min( MLU ,CS ) / MLU ) / DS ) ) ) / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( MUC * MLU ) )", "obj1": 0.3742690058479532, "obj2": 0.6191810889134165}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5380116959064327, "obj2": 0.43184503506245153}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Min( ( DDR - ( ( MDR + ARS ) / Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / ( FirstVNF_RAM_Server * ACS ) ) ,( ( ( FirstVNF_RAM + ARS ) - Min( ARS ,FirstVNF_RAM_Server ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6456696622483875}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( ( MRS * FirstVNF_Mem_Server ) - ACS ) ) / ( ( Const - Const ) * ( ACS + ARS ) ) ),( Const + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( Max( MUR,( MUR - Max( MUM,CS ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( Max( MUC,Max( MLU,RMSe ) ) / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( RRSe ,CS ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,( Max( PN,( ( DDR * FirstVNF_Mem_Server ) + ARS ) ) * ( FirstVNF_RAM - ( ACS + RRS ) ) ) )", "choosing": "( ( ( Max( ( RRSe + RMSe ),MUM ) + DS ) - Min( RMSe ,( RMSe / RRSe ) ) ) * ( Max( MUR,Min( MLU ,RMSe ) ) * RCSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( ARS / ARS ) / ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( CS ,MUC ) - ( MUR / RCSe ) ) * ( ( CS * ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / ( MLU - RMSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5060878441813511}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( ( ARS / ARS ) / ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( Min( Min( CS ,Min( MUM ,RCSe ) ) ,MUC ) - MUM ) + ( Max( ( MUM * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4697855750487329, "obj2": 0.5060878441813511}, {"determining": "( ( PN - ( ( MRS - CRS ) / ACS ) ) * ( ( MRS - ( ( ( ( ARS - ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MLU / RRSe ) * ( ( RRSe - Max( ( ( ( ( DS + MUR ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( CS + RRSe ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "( ( PN - DDR ) * Max( Min( ( FirstVNF_RAM + CRS ) ,( ( Min( FirstVNF_CPU ,DDR ) / Max( ACS,Max( ( Const - MRS ),AMS ) ) ) - BR ) ),MRS ) )", "choosing": "( ( RMSe - Max( MUR,MUM ) ) * ( ( RRSe - Max( ( ( ( ( MUR + RMSe ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,MUR ) * Min( ( ( MUM / MUM ) / Max( DS,CS ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5399610136452242, "obj2": 0.4292494755030357}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) - ( RRSe - RCSe ) )", "obj1": 0.391812865497076, "obj2": 0.59119582935813}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( MUR / CS ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5828005618267357}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Min( ( MUM / Max( ( CS * ( MLU + MUR ) ),RCSe ) ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,Const ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( ( ( MUC * MLU ) * ( ( ( RCSe + MLU ) * ( MUR / MUR ) ) * RRSe ) ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe * ( ( MUM - MLU ) * ( RMSe / MUM ) ) ) + ( ( Min( ( ( RCSe / MUM ) + ( MLU * DS ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( ACS / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( ( RRSe * RCSe ) - ( RRSe - RCSe ) ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ( ARS / ARS ) * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.391812865497076, "obj2": 0.59119582935813}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),Max( Min( FirstVNF_CPU_Server ,RRS ),FirstVNF_Mem ) ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Min( Min( MUC ,MUR ) ,Min( MLU ,DS ) ) - ( Min( RRSe ,CS ) / ( MUM * CS ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6627680311890838, "obj2": 0.2911822536675544}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( ( RRS + FirstVNF_CPU_Server ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - Min( ( ( DS * MLU ) * RMSe ) ,( CS - RRSe ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.4437727875000275}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RCSe * RRSe ) - ( MLU - ( ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) - DS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6729966687804838}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) * ( RCSe * ( MUM / ( ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( RRSe / MUC ) / ( RCSe * MUM ) ) ),CS ) ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.37816764132553604, "obj2": 0.6077514182858358}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) / CS ) * ( ( ( DS - RCSe ) - ( CS - RRSe ) ) - Max( ( MLU * ( RCSe * MUM ) ),( ( DS * ( ( MUM / CS ) - DS ) ) * RMSe ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( AMS + FirstVNF_Mem ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - ( ARS / ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "( RMSe * Min( RCSe ,( MLU / ( ( MUM * MLU ) - MLU ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.3392236125985639}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( Max( Max( DDR,( ACS - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) + FirstVNF_RAM ) * Max( MDR,FirstVNF_Mem ) ) ) ,Min( AMS ,FirstVNF_Mem ) )", "choosing": "( RMSe * ( Min( Min( RMSe ,RRSe ) ,DS ) - MUM ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( MUM / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.4208722478802212}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Min( Min( Max( MDR,RRS ) ,PN ) ,FirstVNF_Mem ) - BR ) )", "choosing": "( ( ( RMSe - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) * RMSe ) * RRSe )", "obj1": 0.5925925925925926, "obj2": 0.33212414377742683}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( PN + ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUM ) ) / ( ( RMSe / ( Min( ( MUM / MUR ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) ) )", "obj1": 0.34502923976608185, "obj2": 0.646194839948726}, {"determining": "Min( ( DDR / Max( Min( CRS ,MRS ),AMS ) ) ,Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,( CS - MLU ) ) - ( ( RRSe * CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( ( MUR * CS ) ,( RMSe + MLU ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2962962962962963, "obj2": 0.7091761642814737}, {"determining": "( ( Min( ( DDR - ( MDR / FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( RRS - ACS ) ) / Max( Max( BR,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ),( DDR + BR ) ) ),PN ) / ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - ( MUM / CS ) ) ) + ( RRSe * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / MLU ) ) ) ) + ( Min( DS ,RRSe ) - ( ( MUR - MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,( ( DDR - ( ( RRS - BR ) / Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,PN ) - DDR ) ) ) ) + ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( Min( CS ,MUC ) - ( MUR / RCSe ) ) * ( ( CS * ( ( Max( ( MUC / RCSe ),RMSe ) + ( RCSe + RCSe ) ) * ( RCSe - DS ) ) ) + ( Min( MUM ,( DS * RRSe ) ) - DS ) ) ) / ( MLU - RMSe ) )", "obj1": 0.9902534113060428, "obj2": 0.004575778334201127}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Min( RCSe ,MUM ),MUR ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( RRS ,DDR ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( ( MLU * ( RCSe * MUM ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / CS ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( ( ACS + ARS ) / ARS ) / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( CS * DS ) ) + ( Max( ( MUM * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523031}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5162403728785225}, {"determining": "( ( ARS * Max( ( ARS - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) / ARS ) ) ),( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) - MDR ) ) ) - Min( DDR ,Min( BR ,Const ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe / ( Max( MUM,Min( DS ,MUR ) ) / RMSe ) ) ) ) + Min( ( DS * ( MUM / Min( MUM ,RMSe ) ) ) ,DS ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6659036790951034}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "Min( ( FirstVNF_CPU + MRS ) ,( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.723778079898394}, {"determining": "( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( FirstVNF_Mem / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( BR / PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( ( Min( ( ( MUR + DS ) / ( MLU * MUM ) ) ,MUR ) / DS ),Max( MLU,MLU ) ) - RRSe ) * MUR ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Min( DDR ,Const ) ) ) / AMS ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * ( MUC / MLU ) ) ) + ( Min( DS ,( MUR * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.5497076023391813, "obj2": 0.42287734721511505}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4775828460038986, "obj2": 0.497730432784438}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUR ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6390844163861074}, {"determining": "( ( ( Max( ARS,ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe - Min( ( RMSe / Min( ( ( RMSe + DS ) + MUR ) ,MUR ) ) ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) + ( MLU + MUR ) ) ,( CS * RRSe ) )", "obj1": 0.4775828460038986, "obj2": 0.497730432784438}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.45419103313840153, "obj2": 0.5191432892883514}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / Min( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( Const,FirstVNF_Mem ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ,MDR ) ) ) - Min( DDR ,( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6736773124150107}, {"determining": "( ( ( Min( ( ( AMS + RRS ) / ( PN - ( Min( PN ,AMS ) - MDR ) ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( ( RRS * CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Min( ( Max( MUR,( CS - RRSe ) ) * RMSe ) ,( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / ( ( DS * MLU ) * RMSe ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6208313280468667}], "16": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,( Max( PN,( ( DDR * FirstVNF_Mem_Server ) + ARS ) ) * ( FirstVNF_RAM - ( ACS + RRS ) ) ) )", "choosing": "( ( ( Max( ( RRSe + RMSe ),MUM ) + DS ) - Min( RMSe ,( RMSe / RRSe ) ) ) * ( Max( MUR,Min( MLU ,RMSe ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( RRS,CRS ) ,DDR ),DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( Min( ARS ,FirstVNF_Mem ) * ( FirstVNF_RAM / RRS ) ) ),FirstVNF_Mem_Server ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,( CS / MUR ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR / ( MDR / FirstVNF_Mem_Server ) ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / ( Min( RMSe ,RMSe ) + ( MUC / CS ) ) ) - ( MUM * ( ( MUM - MUC ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( DDR / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( Const + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,MUC ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.7875243664717348, "obj2": 0.13478753373571428}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.08014445297044115}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5789473684210527, "obj2": 0.34017962291159287}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5496806680057231}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ACS + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( ( BR - CRS ) - CRS ) ) )", "choosing": "( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.04750767755816591}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( ( FirstVNF_RAM * FirstVNF_CPU ) * DDR ) + ARS ) ) ) ) - MDR ) / ( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( CS + RMSe ) ,( MUC * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.2549861131977684}, {"determining": "( ( Max( ( Min( ARS ,( Max( AMS,RRS ) * BR ) ) * ( FirstVNF_Mem_Server * ( ( ( ARS - FirstVNF_CPU_Server ) / ACS ) - ARS ) ) ),DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) * ( BR - ( MDR + PN ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( RMSe / ( Min( ( ( ( Max( DS,MUC ) - DS ) - RCSe ) + RMSe ) ,Min( RRSe ,( MLU + ( ( RRSe + RCSe ) * ( MUR / MUR ) ) ) ) ) - ( ( MUM * RMSe ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),Max( Min( FirstVNF_CPU_Server ,RRS ),FirstVNF_Mem ) ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Min( Min( MUC ,MUR ) ,Min( MLU ,DS ) ) - ( Min( RRSe ,CS ) / ( MUM * CS ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6627680311890838, "obj2": 0.2911822536675544}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Min( MDR ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( Const - ( FirstVNF_CPU_Server / RRS ) ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( ( RRSe * RCSe ) * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( Max( DDR,DDR ) - ( AMS / ( Max( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ),DDR ) + ( MDR - FirstVNF_CPU ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.4346978557504873, "obj2": 0.5489483752867972}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.672514619883041, "obj2": 0.21930451033795603}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) * CRS ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ARS - ( ( ACS * ( PN + ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( MUC - ( ( MUM * Max( ( RMSe + MLU ),( RCSe / ( RRSe - RCSe ) ) ) ) * MLU ) ) ,( CS * RRSe ) )", "obj1": 0.6705653021442495, "obj2": 0.25307409257171015}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.6764132553606238, "obj2": 0.216448266669385}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.6588693957115009, "obj2": 0.2930942742936127}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4775828460038986, "obj2": 0.4916585416875797}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( FirstVNF_Mem_Server + RRS ) / MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( CS / ( MLU * MLU ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6764132553606238, "obj2": 0.216448266669385}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Max( RRS,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) + Min( FirstVNF_RAM ,MRS ) ) - Max( FirstVNF_Mem,ACS ) ) ) - DDR ) ) / ( MDR - Min( PN ,AMS ) ) )", "choosing": "Min( ( ( DS * MLU ) * RMSe ) ,( MLU - MLU ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Max( Const,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - ( MDR / RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - ( PN - ( Const + Max( ( DDR * MDR ),DDR ) ) ) ) ) )", "choosing": "( ( ( RMSe / ( CS / MUM ) ) - ( MUM * ( ( MUM - Max( CS,DS ) ) + ( Max( ( MUM * RMSe ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.8089668615984406, "obj2": 0.10948937435125113}, {"determining": "( ( ( Min( ( ( AMS + RRS ) / ( PN - ( Min( PN ,AMS ) - MDR ) ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( ( RRS * CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Min( ( Max( MUR,( CS - RRSe ) ) * RMSe ) ,( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / ( ( DS * MLU ) * RMSe ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6208313280468667}, {"determining": "( ( ( MRS - ( ( FirstVNF_Mem + Const ) / ARS ) ) / AMS ) * ( ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - MRS ) - ( ( ( FirstVNF_CPU - ( ARS / ARS ) ) - Max( MDR,Const ) ) / Min( DDR ,Const ) ) ) / AMS ) )", "choosing": "( ( ( MUM / CS ) - Max( ( Min( RCSe ,( RMSe * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) * ( MUC * ( MUM / ( ( Min( RMSe ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) ) * Max( CS,CS ) ) ) ) )", "obj1": 0.5594541910331384, "obj2": 0.418468529648477}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( MLU ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - Max( MDR,RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) / CS ) * ( ( ( DS - RCSe ) - ( CS - RRSe ) ) - Max( ( MLU * ( RCSe * MUM ) ),( ( DS * ( ( ( MUR / MUC ) / CS ) - DS ) ) * RMSe ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.10948937435125113}, {"determining": "( ( ( ( FirstVNF_Mem_Server * RRS ) - ( ( FirstVNF_Mem_Server / RRS ) * CRS ) ) - MDR ) * FirstVNF_RAM_Server )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5356635764225617}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( Const + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( ACS + PN ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( ( MUR + Max( CS,RMSe ) ) * RCSe ) - MUC ) ) ,Min( CS ,RRSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6625619917152623}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5856068021935646}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "Min( ( RRSe + ( ( Min( ( CS + ( MLU * ( RCSe * RRSe ) ) ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4678362573099415, "obj2": 0.5034061432474088}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server - ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5962932634584456}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.48927875243664715, "obj2": 0.4843334600594166}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}, {"determining": "( ( MDR + FirstVNF_Mem ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / PN ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( ( MUM * RRSe ) + ( ( MLU * DS ) + ( DS * ( MUR / RCSe ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.3261678490424971}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( BR - Min( ( Max( Max( MDR,Const ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.6588693957115009, "obj2": 0.2930942742936127}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.37816764132553604, "obj2": 0.6077514182858358}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ARS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RMSe - Min( MUM ,RCSe ) ) + ( MLU + MUR ) ) ,( CS * RRSe ) )", "obj1": 0.4853801169590643, "obj2": 0.4851569541026062}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( FirstVNF_CPU * Const ) ) / Min( ( ACS + ARS ) ,( Const - Const ) ) ) ) - MDR ) )", "choosing": "( ( MUC / ( ( MLU - Min( CS ,MUC ) ) / MUM ) ) * Max( RCSe,DS ) )", "obj1": 0.3742690058479532, "obj2": 0.6113675984674531}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / Min( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( Const,FirstVNF_Mem ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ,MDR ) ) ) - Min( DDR ,( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6736773124150107}, {"determining": "( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) * ( ( Const * RRS ) + Max( CRS,PN ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5886939571150097, "obj2": 0.3309532318202047}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) - MDR ) ) ) - Min( DDR ,Min( BR ,Const ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( Max( MUM,Min( DS ,MUR ) ) / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.670141828278242}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( ( RRS + FirstVNF_CPU_Server ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) * CS ) ) * ( RCSe - Min( ( ( DS * MLU ) * RMSe ) ,( CS - RRSe ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.4437727875000275}, {"determining": "( ( PN - ( ( MRS - CRS ) / ACS ) ) * ( ( MRS - ( ( ( ( ARS - ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MLU / RRSe ) * ( ( RRSe - Max( ( ( ( ( DS + MUR ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( CS + RRSe ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.4235846825233799}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( PN - DDR ) * Max( Min( ( FirstVNF_RAM + CRS ) ,( ( Min( FirstVNF_CPU ,DDR ) / Max( ACS,Max( ( Const - MRS ),AMS ) ) ) - BR ) ),MRS ) )", "choosing": "( ( RMSe - Max( MUR,MUM ) ) * ( ( RRSe - Max( ( ( ( ( MUR + RMSe ) / ( RCSe / MUC ) ) - ( DS / MUC ) ) / DS ),( Min( MUC ,MUR ) * Min( ( ( MUM / MUM ) / Max( DS,CS ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5399610136452242, "obj2": 0.4292494755030357}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( MUR / CS ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5828005618267357}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( Max( MUM,Min( DS ,MUR ) ) / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4689083288040622}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Min( ( MUM / Max( ( CS * ( MLU + MUR ) ),RCSe ) ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,Const ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( ( ( MUC * MLU ) * ( ( ( RCSe + MLU ) * ( MUR / MUR ) ) * RRSe ) ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( ( Const + FirstVNF_Mem_Server ) / BR ) ,Min( BR ,FirstVNF_CPU_Server ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) / ( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Max( RCSe,( MLU - MLU ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) + Max( ( MUC / MUM ),RMSe ) ) )", "obj1": 0.5243664717348928, "obj2": 0.449780023097714}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.5190786274012091}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( Max( ( ( ( FirstVNF_Mem - CRS ) * Min( ACS ,FirstVNF_CPU_Server ) ) + AMS ),( FirstVNF_CPU_Server + RRS ) ) * ( Min( PN ,FirstVNF_RAM ) - BR ) )", "choosing": "( ( Min( Max( RRSe,CS ) ,Min( RCSe ,MUC ) ) / RRSe ) * ( ( RRSe - Max( ( ( ( ( MUR + DS ) / ( RCSe / MUC ) ) - Min( DS ,MUC ) ) / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.30214424951267055, "obj2": 0.6998578193913799}, {"determining": "( ( PN + ( ( ( ( ( ( PN - ACS ) + ( ACS - BR ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.9941520467836257, "obj2": 0.002737253990909025}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.43184503506245153}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( ( MRS * FirstVNF_Mem_Server ) - ACS ) ) / ( ( Const - Const ) * ( ACS + ARS ) ) ),( Const + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( Max( MUR,( MUR - Max( MUM,CS ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( Max( MUC,Max( MLU,RMSe ) ) / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( RRSe ,CS ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) * ( MDR - MDR ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( RMSe + ( RCSe - CS ) ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( ( RMSe / MLU ) * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUR ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,Max( Const,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5771530984339843}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUR + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.5060776397039276}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,Const ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( ( ( MUC * MLU ) * ( ( ( RCSe + MLU ) * ( MUR / MUR ) ) * RRSe ) ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( ( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem ,AMS ) * FirstVNF_CPU ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( Min( ( ( Max( MUM,( MUM * MUR ) ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) ,( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.585379133338711}, {"determining": "( ( AMS + FirstVNF_Mem ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - ( ARS / ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "( RMSe * Min( RCSe ,( MLU / ( ( MUM * MLU ) - MLU ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.3392236125985639}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( Max( Max( DDR,( ACS - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) + FirstVNF_RAM ) * Max( MDR,FirstVNF_Mem ) ) ) ,Min( AMS ,FirstVNF_Mem ) )", "choosing": "( RMSe * ( Min( Min( RMSe ,RRSe ) ,DS ) - MUM ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( Max( MUM,Min( DS ,MUR ) ) / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Min( RCSe ,MUM ),MUR ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( ( ( ( FirstVNF_Mem + Const ) / ( ARS * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - Max( MDR,MDR ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( ( ( ( ( MUR - RRSe ) + ( MUM / Min( CS ,RRSe ) ) ) - MUM ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) - RMSe ) ),RRSe ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.4443088167780898}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( FirstVNF_CPU / Max( MDR,RRS ) ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUR ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6390844163861074}, {"determining": "( ( ( FirstVNF_Mem + Const ) / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RMSe + ( ( MUC - RRSe ) - MUM ) ) - ( ( RMSe + ( MUR - RMSe ) ) * CS ) )", "obj1": 0.45614035087719296, "obj2": 0.5162050686350709}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963274}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,( Max( PN,( ( DDR * FirstVNF_Mem_Server ) + ARS ) ) * ( FirstVNF_RAM - ( ACS + RRS ) ) ) )", "choosing": "( ( ( Max( ( RRSe + RMSe ),MUM ) + DS ) - Min( RMSe ,( RMSe / RRSe ) ) ) * ( Max( MUR,Min( MLU ,RMSe ) ) * RCSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ACS / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( Const + FirstVNF_Mem_Server ) ) ) / ARS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( ( RRSe * RCSe ) - ( RRSe - RCSe ) ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,MUR )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( ( DDR / Max( Min( CRS ,MRS ),AMS ) ) ,Min( AMS ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,( CS - MLU ) ) - ( ( RRSe * CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( ( MUR * CS ) ,( RMSe + MLU ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2962962962962963, "obj2": 0.7091761642814737}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963274}], "17": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - ( MDR / RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - ( PN - ( Const + Max( ( DDR * MDR ),DDR ) ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,( Max( PN,( ( DDR * FirstVNF_Mem_Server ) + ARS ) ) * ( FirstVNF_RAM - ( ACS + RRS ) ) ) )", "choosing": "( ( ( Max( ( RRSe + RMSe ),MUM ) + DS ) - Min( RMSe ,( RMSe / RRSe ) ) ) * ( Max( MUR,Min( MLU ,RMSe ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( ( ( ( Const - Const ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),MLU ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.6296296296296297, "obj2": 0.2706054817089376}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( FirstVNF_Mem + Const ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MUR * MLU ) )", "obj1": 0.7797270955165692, "obj2": 0.14144420053980306}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.5789473684210527, "obj2": 0.34017962291159287}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6803118908382066, "obj2": 0.2145910860944021}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.08014445297044115}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Min( MDR ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( Const - ( FirstVNF_CPU_Server / RRS ) ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( ( RRSe * RCSe ) * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( PN - DDR ) * ( MRS * PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( Max( Max( RRSe,RMSe ),DS ) ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,MUR ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( ( Min( PN ,AMS ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( ( FirstVNF_RAM_Server / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( ( MLU * ( RCSe * MUM ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.054575003358786504}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ACS + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( ( BR - CRS ) - CRS ) ) )", "choosing": "( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.04750767755816591}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5496806680057231}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) * CRS ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ARS - ( ( ACS * ( PN + ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( MUC - ( ( MUM * Max( ( RMSe + MLU ),( RCSe / ( RRSe - RCSe ) ) ) ) * MLU ) ) ,( CS * RRSe ) )", "obj1": 0.6705653021442495, "obj2": 0.25307409257171015}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) * ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( ( FirstVNF_RAM * FirstVNF_CPU ) * DDR ) + ARS ) ) ) ) - MDR ) / ( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( CS + RMSe ) ,( MUC * RRSe ) )", "obj1": 0.6666666666666666, "obj2": 0.2549861131977684}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.42884990253411304, "obj2": 0.5448514166171786}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.672514619883041, "obj2": 0.21930451033795603}, {"determining": "( DDR / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) ) - DDR ) * ( Const + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,MUC ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.7875243664717348, "obj2": 0.13478753373571428}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MLU ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6326689168159388}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),FirstVNF_CPU_Server ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,( ARS / FirstVNF_Mem ) ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "Min( ( RMSe * ( DS * MLU ) ) ,( ( RCSe - ( RCSe + CS ) ) - RRSe ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * Min( MLU ,RRSe ) ) ) + RCSe ) + RMSe ) ) + ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41685761867324816}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) ) / ( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,( CS * RRSe ) )", "obj1": 0.723196881091618, "obj2": 0.1718322460423731}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5856068021935646}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5661576725005393}, {"determining": "( DDR / ( ( ( Max( ACS,( PN - ( Min( DDR ,CRS ) / ( FirstVNF_RAM / ARS ) ) ) ) - DDR ) * ( Const + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( ( Min( Min( CS ,MUC ) ,MUC ) - MUM ) - MUM ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( ( ( ( RMSe - MUM ) + MLU ) + DS ) - RRSe ) )", "obj1": 0.7875243664717348, "obj2": 0.13478753373571428}, {"determining": "( Max( Max( RRS,AMS ),( ARS - FirstVNF_CPU ) ) / ( ( Min( ( ( ( ( Const - FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( ( FirstVNF_Mem - MDR ) * CRS ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( RCSe * ( ( MUC + Min( ( DS * ( MUM * ( MUR - RMSe ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) * Max( DS,RCSe ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.8070175438596491, "obj2": 0.11039054461320484}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( MUR / CS ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5828005618267357}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( FirstVNF_CPU * Const ) ) / Min( ( ACS + ARS ) ,( Const - Const ) ) ) ) - MDR ) )", "choosing": "( ( MUC / ( ( MLU - Min( CS ,MUC ) ) / MUM ) ) * Max( RCSe,DS ) )", "obj1": 0.3742690058479532, "obj2": 0.6113675984674531}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server - ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5962932634584456}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( Min( CS ,MUC ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.08014445297044115}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( ACS + FirstVNF_RAM ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / CS ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4997258045998876}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7198289456080994}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - Max( MDR,RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) )", "choosing": "( ( RCSe * ( Max( DS,RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,( ( ( MUR / MUC ) / CS ) - DS ) ) * RCSe ) )", "obj1": 0.8070175438596491, "obj2": 0.11039054461320484}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5661576725005393}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( PN + ( ( ( ( ( ( PN - ACS ) + ( ACS - BR ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) / MRS )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) - ( MUM + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.9941520467836257, "obj2": 0.002737253990909025}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) + ARS ) ) ) ) - MDR ) / ( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) - MUM ) * RMSe )", "obj1": 0.6666666666666666, "obj2": 0.2549861131977684}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( Const + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( ACS + PN ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( ( MUR + Max( CS,RMSe ) ) * RCSe ) - MUC ) ) ,Min( CS ,RRSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6625619917152623}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ( Min( ( ( AMS + RRS ) / ( PN - ( Min( PN ,AMS ) - MDR ) ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( ( RRS * CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Min( ( Max( MUR,( CS - RRSe ) ) * RMSe ) ,( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) * ( ( RRSe + DS ) / ( ( DS * MLU ) * RMSe ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6208313280468667}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.5060776397039276}, {"determining": "( ( ( ( AMS / ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RCSe * CS ) ,Max( RCSe,( MUR + DS ) ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5009746588693957, "obj2": 0.46802825538813614}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,( DS * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.41383230782076863}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) )", "choosing": "( ( ( ( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.49122807017543857, "obj2": 0.47964597368560286}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / Min( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( Const,FirstVNF_Mem ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ,MDR ) ) ) - Min( DDR ,( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6736773124150107}, {"determining": "( ( MDR + FirstVNF_Mem ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / PN ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( ( MUM * RRSe ) + ( ( MLU * DS ) + ( DS * ( MUR / RCSe ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.3261678490424971}, {"determining": "( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( RRSe * ( MUC * ( ( MLU - MLU ) - MUC ) ) ) + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( Max( ( Min( ARS ,( Max( AMS,RRS ) * BR ) ) * ( FirstVNF_Mem_Server * ( ( ( ARS - FirstVNF_CPU_Server ) / ACS ) - ARS ) ) ),DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) * ( BR - ( MDR + PN ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( RMSe / ( Min( ( ( ( Max( DS,MUC ) - DS ) - RCSe ) + RMSe ) ,Min( RRSe ,( MLU + ( ( RRSe + RCSe ) * ( MUR / MUR ) ) ) ) ) - ( ( MUM * RMSe ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.41383230782076863}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4775828460038986, "obj2": 0.4916585416875797}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS - FirstVNF_CPU_Server ) - MDR ) - Max( MDR,Const ) ) / ( AMS * ( DDR / MDR ) ) ) ) / AMS ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( RRSe,( ( ( ( MUR - RRSe ) + ( CS / Min( CS ,RRSe ) ) ) - ( Max( DS,MUC ) - DS ) ) - ( ( Max( MUM,RMSe ) - ( MLU * DS ) ) - RMSe ) ) ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Min( ( MUM / Max( ( CS * ( MLU + MUR ) ),RCSe ) ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( FirstVNF_CPU * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( Min( ( RCSe * RCSe ) ,( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * RMSe ) ) + RCSe ) + RMSe ) ) + ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7247553596033225}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( BR + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - Max( MDR,RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Min( Max( RRS,CRS ) ,DDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( CS * DS ) ) + ( Max( ( MUM * ( RRSe * MUM ) ),( ( DS * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.8109161793372319, "obj2": 0.10847852398714662}, {"determining": "( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( ( ( DS * ( Max( ( MUM - ( MUR / RMSe ) ),( Max( RRSe,RRSe ) / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( RMSe,DS ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963271}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( MUR / CS ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.5190786274012091}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - MLU ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * FirstVNF_Mem_Server ) ,Min( AMS ,Max( ( MDR * ( ( PN - ( ( DDR * FirstVNF_Mem_Server ) + ARS ) ) + Const ) ),MDR ) ) )", "choosing": "( ( RCSe * ( Max( Max( MUR,Min( RMSe ,MLU ) ),RCSe ) * ( MUC + Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) ) ) ) * ( Min( MUC ,RMSe ) * RCSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS - CRS ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.30409356725146197, "obj2": 0.6952156817393763}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( ( FirstVNF_RAM_Server / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( MUR + ( RMSe * RCSe ) ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( RRS ,DDR ) ) / ARS ) / ( PN - ( Min( PN ,AMS ) - MDR ) ) ) ,ARS ) - FirstVNF_CPU ) - ( MDR * Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6208313280468667}, {"determining": "( ( MDR - Max( Min( ( FirstVNF_RAM_Server + Max( Const,MRS ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_Mem_Server ) ) ) ) * MDR )", "choosing": "( Max( ( MUM / Min( Min( RRSe ,MLU ) ,MUC ) ),RRSe ) + Max( RCSe,( Max( MUR,( MLU + MUM ) ) + MUM ) ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,Const ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( ( ( MUC * MLU ) * ( ( ( RCSe + MLU ) * ( MUR / MUR ) ) * RRSe ) ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( ( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem ,AMS ) * FirstVNF_CPU ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( Min( ( ( Max( MUM,( MUM * MUR ) ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) ,( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.585379133338711}, {"determining": "( ( AMS + FirstVNF_Mem ) * Min( Max( DDR,DDR ) ,( FirstVNF_RAM_Server - ( ARS / ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "( RMSe * Min( RCSe ,( MLU / ( ( MUM * MLU ) - MLU ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.3392236125985639}, {"determining": "( ACS / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( Const + FirstVNF_Mem_Server ) ) ) / ARS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( ( RRSe * RCSe ) - ( RRSe - RCSe ) ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,MUR )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS - RRSe ) / ( Min( ( RCSe * CS ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( Max( MUM,Min( DS ,MUR ) ) / RMSe ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MUR,MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( DDR ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.49707602339181284, "obj2": 0.46817644670099806}, {"determining": "( ( ACS * AMS ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ARS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUR ) ) / Max( ( ( MLU - ( ( MUM + DS ) * Min( CS ,CS ) ) ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4851569541026062}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.4775828460038986, "obj2": 0.4916585416875797}, {"determining": "( ( ARS - FirstVNF_CPU ) * ( AMS / ( MRS - ( ( MDR - Max( RRS,Max( ( Const - Const ),Const ) ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( MUR - ( RRSe * MUR ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6380990066401491}], "18": [{"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,Const ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( ( ( MUC * MLU ) * ( ( ( RCSe + MLU ) * ( MUR / MUR ) ) * RRSe ) ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( Min( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ( PN - ( MDR / RRS ) ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( ARS - ( PN - ( Const + Max( ( DDR * MDR ),DDR ) ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( ( FirstVNF_Mem_Server + ACS ) - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( ACS,Const ) ) / Max( Max( RRS,CRS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe + DS ) - Min( RMSe ,( RMSe / RCSe ) ) ) * ( ( RRSe / ( MUM - RCSe ) ) * RCSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( RMSe ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6608187134502924, "obj2": 0.241406404877833}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( FirstVNF_Mem + Const ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MUR * MLU ) )", "obj1": 0.7797270955165692, "obj2": 0.14144420053980306}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2706054817089376}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6803118908382066, "obj2": 0.2145910860944021}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308327}, {"determining": "( ( DDR - PN ) * ( ( MRS - ( ( PN - Max( ( Min( AMS ,MRS ) / ( Const + FirstVNF_CPU ) ),Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( Min( Max( Max( MUM,( RRSe / RCSe ) ),Max( Max( RMSe,MLU ),Max( MLU,RCSe ) ) ) ,( RCSe - ( ( MUC / MLU ) + Max( MUC,DS ) ) ) ),( Min( MUC ,RCSe ) * ( ( ( MLU + MUR ) * ( MUC / MUR ) ) + RRSe ) ) ) ) * MUR ) )", "obj1": 0.8674463937621832, "obj2": 0.08110046328347029}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05737640697628216}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5496806680057231}, {"determining": "( ( PN + ( ( ( ( MRS - ( ( ACS + Const ) / ARS ) ) / AMS ) + DDR ) * DDR ) ) / ( ACS + ( ( BR - CRS ) - CRS ) ) )", "choosing": "( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( MUM ,( MUR / MUC ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,( MUC / RCSe ) ) + ( CS * RCSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.04750767755816591}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.672514619883041, "obj2": 0.21930451033795603}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.42884990253411304, "obj2": 0.5448514166171786}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( DDR ,( BR / PN ) ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - Max( CRS,Const ) ) )", "choosing": "( ( RMSe - ( RRSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( RCSe * Min( MLU ,( DS * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( ( ( ( Const - Const ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),MLU ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.6296296296296297, "obj2": 0.2706054817089376}, {"determining": "( DDR / ( ( ( ( ( RRS / AMS ) + ( ACS - BR ) ) - DDR ) * ( Const + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( CS * RRSe ) )", "obj1": 0.7933723196881092, "obj2": 0.1300682942683583}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Min( MDR ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( Const - ( FirstVNF_CPU_Server / RRS ) ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( ( RRSe * RCSe ) * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( Max( RMSe,RCSe ) - ( RMSe - MUR ) ) / Max( ( ( MLU - ( ( MUM + DS ) * Min( CS ,CS ) ) ) / RCSe ),( RMSe * MLU ) ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.36257309941520466, "obj2": 0.6216983723349294}, {"determining": "( ( Max( ( Min( ARS ,( Max( AMS,RRS ) * BR ) ) * ( FirstVNF_Mem_Server * ( ( ( ARS - FirstVNF_CPU_Server ) / ACS ) - ARS ) ) ),DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) * ( BR - ( MDR + PN ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( RMSe / ( Min( ( ( ( Max( DS,MUC ) - DS ) - RCSe ) + RMSe ) ,Min( RRSe ,( MLU + ( ( RRSe + RCSe ) * ( MUR / MUR ) ) ) ) ) - ( ( MUM * RMSe ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( MLU + MUM ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5263157894736842, "obj2": 0.416164793751093}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / ( Min( MRS ,DDR ) * FirstVNF_RAM ) ) ) + BR ) * ( ( AMS / Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) + ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * RMSe ) ) + RCSe ) + Min( MUR ,MUC ) ) + ( RCSe / ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.4101726141760067}, {"determining": "( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( ( ( DS * ( Max( ( MUM - ( MUR / RMSe ) ),( Max( RRSe,RRSe ) / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( RMSe,DS ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963271}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5856068021935646}, {"determining": "( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( RRSe * ( MUC * ( ( MLU - MLU ) - MUC ) ) ) + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ARS - FirstVNF_CPU ) * ( AMS / ( MRS - ( ( MDR - Max( RRS,Max( ( Const - Const ),Const ) ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( MUR - ( RRSe * MUR ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6363208989585555}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - Min( MUM ,( Max( MUR,Min( RMSe ,RRSe ) ) + Max( MLU,MUR ) ) ) ) / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.5060776397039276}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( PN - DDR ) * ( MRS * PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( Max( Max( RRSe,RMSe ),DS ) ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,MUR ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4873294346978557, "obj2": 0.4761505881658177}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,( DS * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.41383230782076863}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS - CRS ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6159750310931557}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( FirstVNF_CPU * Const ) ) / Min( ( ACS + ARS ) ,( Const - Const ) ) ) ) - MDR ) )", "choosing": "( ( MUC / ( ( MLU - Min( CS ,MUC ) ) / MUM ) ) * Max( RCSe,DS ) )", "obj1": 0.3742690058479532, "obj2": 0.6113675984674531}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( MUR / CS ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5828005618267357}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8674463937621832, "obj2": 0.08110046328347029}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( Max( ( ( ( ACS + DDR ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ),ARS ) - FirstVNF_CPU ) - Max( PN,Const ) ) / ( BR * RRS ) )", "choosing": "( ( ( CS / RCSe ) - ( MUM * ( ( ( MUM * MLU ) - CS ) + ( Max( ( Max( RMSe,RMSe ) * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5327520143635316}, {"determining": "( ( ( DDR + MDR ) - RRS ) / ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( Min( BR ,ACS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( ( MUR / MUM ) * ( CS * Max( CS,( RMSe * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.719083679081271}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "Min( ( ( ( Min( Min( CS ,MUC ) ,MUC ) - MUM ) - MUM ) + ( ( RCSe + ( MLU * DS ) ) - MUC ) ) ,( ( ( ( RMSe - MUM ) + MLU ) + DS ) - RRSe ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.40350877192982454, "obj2": 0.5672016477674574}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( DS / RMSe ) - ( MUM * MUR ) ) * ( RCSe - DS ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RMSe / RMSe ) ) ),CS ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.5190786274012091}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe - Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( ( ( ( AMS / ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RCSe * CS ) ,Max( RCSe,( MUR + DS ) ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5009746588693957, "obj2": 0.46802825538813614}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Const ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5661576725005393}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( FirstVNF_CPU_Server,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * ( CS * RRSe ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( MDR + FirstVNF_Mem ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / PN ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( ( MUM * RRSe ) + ( ( MLU * DS ) + ( DS * ( MUR / RCSe ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.3261678490424971}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( ACS * AMS ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ARS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUR ) ) / Max( ( ( MLU - ( ( MUM + DS ) * Min( CS ,CS ) ) ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4851569541026062}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),FirstVNF_CPU_Server ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,( ARS / FirstVNF_Mem ) ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "Min( ( RMSe * ( DS * MLU ) ) ,( ( RCSe - ( RCSe + CS ) ) - RRSe ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.4916585416875797}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,Max( ( MDR * BR ),CRS ) ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( DS * MLU ) * RMSe ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Min( ( MUM / Max( ( CS * ( MLU + MUR ) ),RCSe ) ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( DS / ( RCSe * MUM ) ) ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( BR + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server / Max( MDR,RRS ) ) / Min( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Max( Const,FirstVNF_Mem ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ,MDR ) ) ) - Min( DDR ,( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) + ( MLU * DS ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6736773124150107}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( ( ARS - ( Max( ACS,( ( RRS + FirstVNF_CPU_Server ) - ( ACS + ( FirstVNF_Mem_Server + ACS ) ) ) ) - CRS ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( ( ( Max( Min( RRSe ,( RRSe - DS ) ),MUM ) + RMSe ) * MLU ) - MUC ) ,Min( ( DS - ( MUM * ( MUR - MUC ) ) ) ,( ( ( MUR + MUC ) * MUC ) / RMSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.1718322460423731}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( ( PN - Max( MDR,Const ) ) / ARS ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( RCSe / CS ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6934914245369949}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( ARS * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( ( Min( ( MUM / Max( ( CS * ( MLU + MUR ) ),RCSe ) ) ,Min( RRSe ,( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) - ( DS / ( RCSe * MUM ) ) ) - ( MUC * MLU ) )", "obj1": 0.9610136452241715, "obj2": 0.01959858829873322}, {"determining": "( DDR / ( ( ( Max( ACS,( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) ) ) - DDR ) * ( Const + ( ACS - AMS ) ) ) - MDR ) )", "choosing": "Min( ( ( MUM - ( Min( Min( CS ,MUC ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * ( RRSe * ( MUC * ( CS - CS ) ) ) ) ) - MUC ) ) ,( CS * RRSe ) )", "obj1": 0.7855750487329435, "obj2": 0.13668776709125618}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),RCSe ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.47173489278752434, "obj2": 0.5023967557252926}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( MDR - Max( Min( ( FirstVNF_RAM_Server + Max( Const,MRS ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_Mem_Server ) ) ) ) * MDR )", "choosing": "( Max( ( MUM / Min( Min( RRSe ,MLU ) ,MUC ) ),RRSe ) + Max( RCSe,( Max( MUR,( MLU + MUM ) ) + MUM ) ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,( Const - RRS ) ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "Min( ( RRSe * ( ( Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) + ( MLU * DS ) ) - ( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) - MUC ) ) ) ,( CS * RRSe ) )", "obj1": 0.3255360623781676, "obj2": 0.672492842876791}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) ) / ( ( ARS - ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,( CS * RRSe ) )", "obj1": 0.723196881091618, "obj2": 0.1718322460423731}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( BR + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( ( ( ( Min( Max( Const,FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem ,AMS ) * FirstVNF_CPU ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( ( PN - ACS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( Min( ( ( Max( MUM,( MUM * MUR ) ) - ( Min( RRSe ,CS ) / ( CS * MUM ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) ,( DS / ( RCSe * MUM ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.585379133338711}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server - ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5962932634584456}, {"determining": "( ( ( ( Const - Const ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),MLU ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.6764132553606238, "obj2": 0.216448266669385}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7067054845301463}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( ( FirstVNF_RAM_Server / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( ( MUR + ( RMSe * RCSe ) ) ,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) * ( AMS / ( MRS - ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "( Max( Min( CS ,Max( ( ( ( ( MUC / RCSe ) * ( DS / DS ) ) / Max( ( MUR + MUC ),RRSe ) ) - RMSe ),DS ) ),RMSe ) / ( Max( ( MUC / MUM ),RMSe ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6401400967611268}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.3840155945419103, "obj2": 0.5962932634584456}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MLU ) ) ) * RMSe ) ,Min( RRSe ,( MLU + RMSe ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( ( ( ARS - FirstVNF_CPU_Server ) - MDR ) - Max( MDR,Const ) ) / ( AMS * ( DDR / MDR ) ) ) ) / AMS ) )", "choosing": "( ( ( MUR - ( MUR - RRSe ) ) + ( RRSe * MUR ) ) / ( Max( RRSe,( ( ( ( MUR - RRSe ) + ( CS / Min( CS ,RRSe ) ) ) - ( Max( DS,MUC ) - DS ) ) - ( ( Max( MUM,RMSe ) - ( MLU * DS ) ) - RMSe ) ) ) + ( RCSe * Min( RRSe ,RRSe ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5998738022918648}, {"determining": "( ACS / ( ( ( ( RRS - ( DDR - AMS ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) ) ) ) ,( CS * RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7018444785658982}], "19": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) + RRS ) - MDR ) / ( FirstVNF_CPU_Server * ( ( RRS / AMS ) + ( ACS - BR ) ) ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,Const ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( ( ( MUC * MLU ) * ( ( ( RCSe + MLU ) * ( MUR / MUR ) ) * RRSe ) ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,AMS ) - MDR ) ) )", "choosing": "( MUC * ( Max( MUR,Min( RMSe ,MLU ) ) * RCSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( RCSe / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7660818713450293, "obj2": 0.12903645495993415}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( Max( ( FirstVNF_CPU - ACS ),( ARS - FirstVNF_CPU ) ) / ( ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - ( ( ( BR * ARS ) - ACS ) - ARS ) ) - BR ) )", "choosing": "( ( ( MUR * ( RRSe * ( Max( MUC,MUM ) / RMSe ) ) ) / RCSe ) * RRSe )", "obj1": 0.6237816764132553, "obj2": 0.31084897795803007}, {"determining": "( ( RRS - ( AMS * ( Min( ( Const + ( MRS - ( ACS * FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / PN ) ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / ( ( MUM + Max( DS,Min( MUM ,MLU ) ) ) + ( RMSe + MUR ) ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21285289519708125}, {"determining": "( ( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,Min( RRSe ,CS ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6588693957115009, "obj2": 0.25882121357167054}, {"determining": "( ( DDR - PN ) * ( ( MRS - ( ( PN - Max( ( Min( AMS ,MRS ) / ( Const + FirstVNF_CPU ) ),Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( Min( Max( Max( MUM,( RRSe / RCSe ) ),Max( Max( RMSe,MLU ),Max( MLU,RCSe ) ) ) ,( RCSe - ( ( MUC / MLU ) + Max( MUC,DS ) ) ) ),( Min( MUC ,RCSe ) * ( ( ( MLU + MUR ) * ( MUC / MUR ) ) + RRSe ) ) ) ) * MUR ) )", "obj1": 0.8674463937621832, "obj2": 0.08110046328347029}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05737640697628216}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5496806680057231}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.42884990253411304, "obj2": 0.5448514166171786}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ARS - ( Max( ACS,( ( ( Min( MDR ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM ,MRS ) ) - ( Const - ( FirstVNF_CPU_Server / RRS ) ) ) ) - DDR ) ) / ( Min( PN ,AMS ) - MDR ) )", "choosing": "Min( ( ( ( RRSe * RCSe ) * MLU ) * RMSe ) ,( CS - RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,RMSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6342474597580521}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2706054817089376}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,( DS * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.4124289561190268}, {"determining": "( Min( MRS ,FirstVNF_RAM ) / ( Max( Min( DDR ,Const ),CRS ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( ( MUR * MUM ) * ( MUR - MUC ) ) ) ,( ( Max( MUR,Min( RMSe ,MLU ) ) * DS ) / RMSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237307}, {"determining": "( ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,( ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.9610136452241715, "obj2": 0.019291279445101457}, {"determining": "( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( RRSe * ( MUC * ( ( MLU - MLU ) - MUC ) ) ) + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ARS - Max( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ),FirstVNF_RAM_Server ) ) / Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,DS ) * Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + Min( Max( RRSe,MLU ) ,CS ) ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5661576725005393}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),FirstVNF_CPU_Server ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,( ARS / FirstVNF_Mem ) ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "Min( ( RMSe * ( DS * MLU ) ) ,( ( RCSe - ( RCSe + CS ) ) - RRSe ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( ( ( DS * ( Max( ( MUM - ( MUR / RMSe ) ),( Max( RRSe,RRSe ) / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( RMSe,DS ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963271}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Min( ( Const - Const ) ,( ACS + ARS ) ) / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,Min( MLU ,RRSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( PN - DDR ) * ( MRS * PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( Max( Max( RRSe,RMSe ),DS ) ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,MUR ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - ( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) ) ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( RMSe / CS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.5009746588693957, "obj2": 0.4666674773264233}, {"determining": "( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( RRSe ,RMSe ) )", "obj1": 0.39766081871345027, "obj2": 0.578874450579002}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5060017028068245}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8674463937621832, "obj2": 0.08110046328347029}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.416164793751093}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( DDR ,( BR / PN ) ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - Max( CRS,Const ) ) )", "choosing": "( ( RMSe - ( RRSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6608187134502924, "obj2": 0.241406404877833}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe + ( MLU + RRSe ) ) + ( RRSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4727515433776326}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( PN - DDR ) * ( AMS / ( MRS - Max( ( PN - ( PN * Const ) ),ARS ) ) ) )", "choosing": "Min( Max( Max( RCSe,( Max( DS,( ( MUR + ( RMSe * RCSe ) ) / MUM ) ) * MUC ) ),DS ) ,( MUC * ( MUR / Max( ( RRSe - ( ( ( MUM - RMSe ) / Min( MUM ,RRSe ) ) - MUR ) ),MUR ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,( DS * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.44639376218323584, "obj2": 0.529144671744999}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6670178256955155}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.40350877192982454, "obj2": 0.5672016477674574}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,( DDR * Const ) ) / MDR ) + ( Const / MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( RCSe * MLU ) ) + ( Max( ( Min( RCSe ,( MLU * MUM ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( RCSe / MUR ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.668810172744549}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.36257309941520466, "obj2": 0.6216983723349294}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ACS / ( ( ( ( RRS - ( DDR - AMS ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( Min( ( Const - Const ) ,( ACS + ARS ) ) + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( CS - ( ( Min( RRSe ,MLU ) * DS ) - ( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) ) ) ) ,( CS * RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.700622658755052}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU - AMS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MLU ) ) ) * RMSe ) ,( ( MLU + MUR ) * ( MUM / MUR ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( PN - MRS ) / ( MRS - ( ( MDR / ( ARS - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) - ( RRS - BR ) ) ) )", "choosing": "Min( ( CS * RRSe ) ,Max( Max( ( ( ( RRSe * ( MLU + ( MUC + MUC ) ) ) + ( MUR / ( ( RCSe + DS ) - MLU ) ) ) + MUC ),( RRSe / CS ) ),DS ) )", "obj1": 0.672514619883041, "obj2": 0.21930451033795603}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * Max( Const,FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( DS * MLU ) * RMSe ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.3898635477582846, "obj2": 0.5874261555601625}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( Min( AMS ,BR ) + CRS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( AMS,Const ) ) / Max( ( ARS - FirstVNF_CPU ),Max( RRS,CRS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( MUC ,( ( DS / RCSe ) + CS ) ) + MUM ) ) ) ) * ( MLU + RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.5272287085833712}, {"determining": "( ( PN - DDR ) * ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - ( CS * RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),RCSe ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.47173489278752434, "obj2": 0.5023967557252926}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7067054845301463}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4873294346978557, "obj2": 0.4761505881658177}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_CPU + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( PN / FirstVNF_Mem ) ) * ARS ) ) ) ) )", "choosing": "( ( ( MUC - ( RCSe + ( MLU * DS ) ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( ( ( RCSe / MLU ) + RRSe ) - ( Max( Min( CS ,RRSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.4963124843031311}, {"determining": "( ( Max( ( Min( ARS ,( Max( AMS,RRS ) * BR ) ) * ( FirstVNF_Mem_Server * ( ( ( ARS - FirstVNF_CPU_Server ) / ACS ) - ARS ) ) ),DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) * ( BR - ( MDR + PN ) ) )", "choosing": "( Min( RCSe ,RRSe ) * ( RMSe / ( Min( ( ( ( Max( DS,MUC ) - DS ) - RCSe ) + RMSe ) ,Min( RRSe ,( MLU + ( ( RRSe + RCSe ) * ( MUR / MUR ) ) ) ) ) - ( ( MUM * RMSe ) * ( RCSe * MUM ) ) ) ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ARS - ( ( RRS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ACS * FirstVNF_Mem ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7219895395735026}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( PN - ACS ) + ( ( FirstVNF_Mem + Const ) + ( ( MDR * ( MRS * FirstVNF_Mem_Server ) ) + ( ( MDR / DDR ) * FirstVNF_CPU_Server ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RMSe ,( MLU * RMSe ) ) - ( DS / ( MLU * MUM ) ) ),CS ) * ( DS / ( MLU + RRSe ) ) ) ) + Max( MLU,MUR ) ) / ( MUR * MLU ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768415}, {"determining": "( RRS * ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( ARS - CRS ) ) - FirstVNF_Mem_Server ) ) ,RRS ),( RRS + MDR ) ) - MDR ) )", "choosing": "( Min( ( ( ( Max( MUC,Max( RCSe,( RRSe + DS ) ) ) - Max( MUM,Max( ( MUC * CS ),Max( MLU,CS ) ) ) ) * Min( ( ( RCSe + MUM ) - Min( Min( DS ,RRSe ) ,RMSe ) ) ,( MUR / MLU ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ACS * AMS ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ARS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUR ) ) / Max( ( ( MLU - ( ( MUM + DS ) * Min( CS ,CS ) ) ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4851569541026062}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( RMSe ,( MUM - MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6608187134502924, "obj2": 0.241406404877833}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( ARS * ( ( ARS - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( ( ( DS * MLU ) * RMSe ) * ( RCSe - DS ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009827532238815728}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,MDR ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( ( BR / MDR ),( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "Min( Max( DS,Max( RCSe,( Max( RCSe,( RCSe / ( MUR + ( RMSe * DS ) ) ) ) * MUC ) ) ) ,( CS * ( ( RCSe + Min( MUR ,MUM ) ) - MUC ) ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * Min( Min( RCSe ,( RMSe * RMSe ) ) ,( DS * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7312273548920692}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - FirstVNF_RAM ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - MDR ) )", "choosing": "( ( RMSe + ( ( MUC / MLU ) - MUM ) ) - ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) )", "obj1": 0.9961013645224172, "obj2": 0.006216706598414831}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Const ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MRS * Min( ( FirstVNF_Mem / CRS ) ,MDR ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( ( PN - Max( MDR,Const ) ) / ARS ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( CS / Max( CS,( RRSe / ( RCSe / CS ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6934914245369949}, {"determining": "( ( BR / MDR ) * ( ( ( Min( ACS ,Min( ( ( DDR + ARS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,ARS ) ) - PN ) + ( DDR - MRS ) ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( ( FirstVNF_RAM_Server / ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "Min( ( ( MUM - ( Min( Max( CS,MUC ) ,MUC ) - MUM ) ) + ( ( RCSe + ( MLU * ( ( MUC * ( CS - CS ) ) * RRSe ) ) ) - MUC ) ) ,( CS * ( CS * RCSe ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / ( Min( MRS ,DDR ) * FirstVNF_RAM ) ) ) + BR ) * ( ( AMS / Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) + ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * RMSe ) ) + RCSe ) + Min( MUR ,MUC ) ) + ( RCSe / ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.4101726141760067}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4856357212964775}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( FirstVNF_CPU * Const ) ) / Min( ( ACS + ARS ) ,( Const - Const ) ) ) ) - MDR ) )", "choosing": "( ( MUC / ( ( MLU - Min( CS ,MUC ) ) / MUM ) ) * Max( RCSe,DS ) )", "obj1": 0.3742690058479532, "obj2": 0.6113675984674531}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ),( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * RMSe ) ) + RCSe ) + RMSe ) + ( RCSe - ( MUM / Max( MUM,RMSe ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.4101726141760067}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2706054817089376}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( Max( RMSe,RCSe ) - ( RMSe - MUR ) ) / Max( ( ( MLU - ( ( MUM + DS ) * Min( CS ,CS ) ) ) / RCSe ),( RMSe * MLU ) ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.36257309941520466, "obj2": 0.6216983723349294}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RCSe * MLU ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( Max( Min( ( FirstVNF_RAM_Server + ( ( FirstVNF_CPU * ( BR - CRS ) ) - FirstVNF_Mem_Server ) ) ,BR ),( ( FirstVNF_CPU_Server - RRS ) - ( BR + FirstVNF_CPU_Server ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.014006817549337781}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - Max( MDR,Const ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( BR + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.9512670565302144, "obj2": 0.022449712762505108}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - RRS ) + ( CRS / PN ) ) * ( FirstVNF_RAM - AMS ) ) - MDR ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( Max( CS,RCSe ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.3937621832358674, "obj2": 0.5823830874975361}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.45419103313840153, "obj2": 0.5190786274012091}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( FirstVNF_CPU_Server,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * ( CS * RRSe ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( DDR + MDR ) - RRS ) / ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( Min( BR ,ACS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( ( MUR / MUM ) * ( CS * Max( CS,( RMSe * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.719083679081271}], "20": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS / ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Const ) ) ) / ( ( ( Min( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) ,ARS ) / ARS ) - FirstVNF_CPU ) - ( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) ) ) )", "choosing": "( ( MUM * ( MLU * RCSe ) ) - ( MLU - ( ( MLU - MLU ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) + RRS ) - MDR ) / ( FirstVNF_CPU_Server * ( ( RRS / AMS ) + ( ACS - BR ) ) ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ARS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( MUC * ( RRSe - RCSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Min( FirstVNF_CPU ,AMS ) - ( ARS * ( ( ( FirstVNF_CPU + ( Min( FirstVNF_CPU_Server ,DDR ) * ( CRS + ACS ) ) ) - ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_RAM - Const ) ,( ACS + ARS ) ) ) ) - Min( ( FirstVNF_CPU_Server / ( ( BR * FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / DDR ) ) ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( DS / MUC ) ) - ( MLU - ( DS - ( MUR + ( ( MUM * DS ) - ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3994376629878518}, {"determining": "( ( DDR * AMS ) * MDR )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( ( MUM / ( MUM * RCSe ) ) + RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( ( MUC - RMSe ) + ( CS - RRSe ) ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15633055074836438}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( Max( CRS,PN ) + ( Const - RRS ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( Min( ( ( DS / RCSe ) - ( ( CS + MUC ) - MUC ) ) ,( ( RMSe / Max( RRSe,DS ) ) * MUM ) ),RRSe ) ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08448123764188153}, {"determining": "( ( BR - Min( FirstVNF_Mem ,( Max( Max( MDR,RRS ),RRS ) - PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( AMS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.5087719298245614, "obj2": 0.44318051603057496}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( ( ACS + FirstVNF_RAM ) ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2679230677691039}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.7660818713450293, "obj2": 0.12903645495993415}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_CPU * ( BR - CRS ) ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * ( MLU + MUM ) ) ) )", "obj1": 0.6881091617933723, "obj2": 0.21095266184153935}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( RCSe / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7660818713450293, "obj2": 0.12903645495993415}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( RCSe + ( Max( RCSe,( ( MLU + ( RCSe * MLU ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2423624151908621}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05737640697628216}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),FirstVNF_CPU_Server ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,( ARS / FirstVNF_Mem ) ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "Min( ( RMSe * ( DS * MLU ) ) ,( ( RCSe - ( RCSe + CS ) ) - RRSe ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( DDR - PN ) * ( ( MRS - ( ( PN - Max( ( Min( AMS ,MRS ) / ( Const + FirstVNF_CPU ) ),Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( Min( Max( Max( MUM,( RRSe / RCSe ) ),Max( Max( RMSe,MLU ),Max( MLU,RCSe ) ) ) ,( RCSe - ( ( MUC / MLU ) + Max( MUC,DS ) ) ) ),( Min( MUC ,RCSe ) * ( ( ( MLU + MUR ) * ( MUC / MUR ) ) + RRSe ) ) ) ) * MUR ) )", "obj1": 0.8674463937621832, "obj2": 0.08110046328347029}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5496806680057231}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.42884990253411304, "obj2": 0.5448514166171786}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( Max( MUR,Min( RMSe ,MLU ) ) * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_CPU * ( ARS - CRS ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * MLU ) + Max( DS,( MUR / ( MUC * MLU ) ) ) ) ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,RMSe ) ) )", "obj1": 0.3586744639376218, "obj2": 0.619391120471108}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,RMSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6342474597580521}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.4120571078199259}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + RRS ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Const ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - RMSe ) * ( RCSe - DS ) )", "obj1": 0.4502923976608187, "obj2": 0.5173999719385171}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( CS / MUR ) / RCSe ) * RRSe ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.528242237401348}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR * BR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + CS ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4873294346978557, "obj2": 0.4757967737698569}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5060017028068245}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( DDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe * Max( DS,( Min( MUR ,CS ) * MUC ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - MLU ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) + ( MUC + MUC ) ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5642588600771098}, {"determining": "( ( PN - DDR ) * ( MRS * PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( Max( Max( RRSe,RMSe ),DS ) ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,MUR ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21285289519708125}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Max( MDR,RRS ) - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( RCSe / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.39766081871345027, "obj2": 0.5700416601063096}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4856357212964775}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( ( ( DS * ( Max( ( MUM - ( MUR / RMSe ) ),( Max( RRSe,RRSe ) / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( RMSe,DS ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963271}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / ( Min( MRS ,DDR ) * FirstVNF_RAM ) ) ) + BR ) * ( ( AMS / Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) + ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * RMSe ) ) + RCSe ) + Min( MUR ,MUC ) ) + ( RCSe / ( MUM / Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.4101726141760067}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,RMSe ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6081584274838251}, {"determining": "( ( RRS - ( AMS * ( Min( ( Const + ( MRS - ( ACS * FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / PN ) ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / ( ( MUM + Max( DS,Min( MUM ,MLU ) ) ) + ( RMSe + MUR ) ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.416164793751093}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - RRS ) + ( CRS / PN ) ) * ( FirstVNF_RAM - AMS ) ) - MDR ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( Max( CS,RCSe ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4951267056530214, "obj2": 0.46706315647457675}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6670178256955155}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ( DDR + MDR ) - RRS ) / ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( Min( BR ,ACS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( ( MUR / MUM ) * ( CS * Max( CS,( RMSe * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.719083679081271}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( RRS ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.49902534113060426, "obj2": 0.466104856670636}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( RRSe * ( MUC * ( ( MLU - MLU ) - MUC ) ) ) + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( Max( ( ( RRS + ARS ) - ( ( FirstVNF_Mem - FirstVNF_Mem ) + DDR ) ),DDR ) - ( AMS / PN ) )", "choosing": "Min( ( ( RRSe - RMSe ) + ( ( Min( MLU ,RRSe ) + ( MLU * DS ) ) - ( CS - ( ( Max( Max( CS,MLU ),Max( CS,MUC ) ) * DS ) - RMSe ) ) ) ) ,( CS * RRSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( PN - DDR ) * ( FirstVNF_RAM / AMS ) )", "choosing": "( ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) * ( ( RRSe - ( CS * RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.47173489278752434, "obj2": 0.4996608935708719}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7067054845301463}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( Max( RCSe,( MUM / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( RMSe - RMSe ) )", "obj1": 0.6608187134502924, "obj2": 0.24140640487783294}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,( DDR * Const ) ) / MDR ) + ( Const / MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( RCSe * MLU ) ) + ( Max( ( Min( RCSe ,( MLU * MUM ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( RCSe / MUR ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.668810172744549}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( Max( MUR,Min( RMSe ,MLU ) ) * MUC ) / RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU - AMS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe / ( Min( ( ( Max( MUM,RMSe ) - ( Min( RRSe ,CS ) / ( CS * MLU ) ) ) * RMSe ) ,( ( MLU + MUR ) * ( MUM / MUR ) ) ) - ( ( MUM * DS ) / ( RCSe / MLU ) ) ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( ACS * AMS ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ARS ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - MUR ) ) / Max( ( ( MLU - ( ( MUM + DS ) * Min( CS ,CS ) ) ) / RCSe ),( RMSe * MLU ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4851569541026062}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( DDR,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( ( ARS + PN ) * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / ( MUC * MUM ) ) * ( MUR - MLU ) ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6627680311890838, "obj2": 0.2298270225570483}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RCSe * MLU ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201394}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - FirstVNF_RAM ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - MDR ) )", "choosing": "( ( RMSe + ( ( MUC / MLU ) - MUM ) ) - ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) )", "obj1": 0.9961013645224172, "obj2": 0.006216706598414831}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( RRS,CRS ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237307}, {"determining": "( ( ( ( ARS / ARS ) - ( ( ( Max( ( MRS / ARS ),Const ) * CRS ) / ( BR + PN ) ) - MRS ) ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( ( ( CS / MUR ) / RCSe ) + MUM ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.31968810916179335, "obj2": 0.677402509937012}, {"determining": "( ( BR - MDR ) * Max( Max( FirstVNF_CPU,DDR ),FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,MUC ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) + ( RRSe / RCSe ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( CS * RRSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691481144987917}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Const ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5342650577924503}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) * ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * Max( Const,FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.38791423001949316, "obj2": 0.5903795264597096}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RCSe * MLU ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201394}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( DS / ( MLU + RRSe ) ) ) ) + Max( MLU,MUR ) ) / ( MUR * MLU ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ),( Const - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,( ( DS / ( MLU + RRSe ) ) * RMSe ) ) + RCSe ) + RMSe ) + ( RCSe - ( MUM / Max( MUM,RMSe ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.4101726141760067}, {"determining": "( ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RCSe * Min( MLU ,( ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / ( MLU + ( RRSe * MUR ) ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.9610136452241715, "obj2": 0.019291279445101457}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.2826510721247563, "obj2": 0.7284648345650904}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,RRS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( AMS - FirstVNF_CPU ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / CRS ) ) )", "choosing": "Min( Max( DS,Max( RCSe,( ( Min( RMSe ,MLU ) * ( RCSe / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ) ) ,( ( ( Max( RCSe,DS ) + RRSe ) / MUR ) * RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 0.9610136452241715, "obj2": 0.019291279445101457}, {"determining": "( Min( MRS ,FirstVNF_RAM ) / ( Max( Min( DDR ,Const ),CRS ) / ( Min( PN ,AMS ) - MDR ) ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( ( MUR * MUM ) * ( MUR - MUC ) ) ) ,( ( Max( MUR,Min( RMSe ,MLU ) ) * DS ) / RMSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237307}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_CPU + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( PN / FirstVNF_Mem ) ) * ARS ) ) ) ) )", "choosing": "( ( ( MUC - ( RCSe + ( MLU * DS ) ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( ( ( RCSe / MLU ) + RRSe ) - ( Max( Min( CS ,RRSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.4963124843031311}], "21": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( RRS + Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) - MDR ) / ( Min( MRS ,MRS ) * ( ( AMS / ACS ) + ( ACS - BR ) ) ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( RMSe,MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( FirstVNF_CPU_Server + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Const ) ) ) / ( ( ( Min( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) ,ARS ) / ARS ) - FirstVNF_CPU ) - ( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) ) ) )", "choosing": "( ( MUM * ( MLU * RCSe ) ) - ( MLU - ( ( MLU - MLU ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( MLU * ( RRSe - RCSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / MUC ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5614035087719298, "obj2": 0.38026313355263774}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( Max( CRS,PN ) + ( Const - RRS ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( Min( ( ( DS / RCSe ) - ( ( CS + MUC ) - MUC ) ) ,( ( RMSe / Max( RRSe,DS ) ) * MUM ) ),RRSe ) ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.5087719298245614, "obj2": 0.44318051603057496}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8284600389863548, "obj2": 0.08448123764188153}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( ( ACS + FirstVNF_RAM ) ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2679230677691039}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.543859649122807, "obj2": 0.39761687009826063}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05737640697628216}, {"determining": "( ( ( ( Const - ARS ) * ( ARS + ACS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( FirstVNF_CPU,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - RRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) / Min( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + ( RCSe + RCSe ) ) ,MUM ) ) / RCSe ) ,( RMSe * ( MLU + MUM ) ) ) )", "obj1": 0.6900584795321637, "obj2": 0.21005149157958564}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) )", "choosing": "( ( ( RMSe - ( RRSe * MUR ) ) - ( RMSe - RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24818693603890699}, {"determining": "( ( DDR - PN ) * ( ( MRS - ( ( PN - Max( ( Min( AMS ,MRS ) / ( Const + FirstVNF_CPU ) ),Const ) ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( Min( Max( Max( MUM,( RRSe / RCSe ) ),Max( Max( RMSe,MLU ),Max( MLU,RCSe ) ) ) ,( RCSe - ( ( MUC / MLU ) + Max( MUC,DS ) ) ) ),( Min( MUC ,RCSe ) * ( ( ( MLU + MUR ) * ( MUC / MUR ) ) + RRSe ) ) ) ) * MUR ) )", "obj1": 0.8674463937621832, "obj2": 0.08110046328347029}, {"determining": "( ( ACS * ( ( ( Max( ARS,AMS ) - PN ) - ( Const - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( MDR * BR ),CRS ) + ( Const - RRS ) ) ) - Max( ACS,RRS ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( MUC * RRSe ),( RCSe - RCSe ) ) - Min( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) ,Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),FirstVNF_CPU_Server ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,( ARS / FirstVNF_Mem ) ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "Min( ( RMSe * ( DS * MLU ) ) ,( ( RCSe - ( RCSe + CS ) ) - RRSe ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( ( RRS - ( AMS * ( Min( ( Const + ( MRS - ( ACS * FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / PN ) ) ) * ( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / ( ( MUM + Max( DS,Min( MUM ,MLU ) ) ) + ( RMSe + MUR ) ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.4120571078199259}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MDR - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) ) * ( ( Min( ( CRS - ARS ) ,Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUR * DS ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MUR - MUR ) )", "obj1": 0.3567251461988304, "obj2": 0.6165288195200095}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_Mem ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( MLU * MUR ) + Max( CS,MUR ) ) )", "obj1": 0.7680311890838206, "obj2": 0.1281352846979804}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) )", "choosing": "( Max( ( Max( MUR,Max( RCSe,( DS / RMSe ) ) ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3060428849902534, "obj2": 0.6970876316397959}, {"determining": "( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( ( ( DS * ( Max( ( MUM - ( MUR / RMSe ) ),( Max( RRSe,RRSe ) / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( RMSe,DS ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963271}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( Min( ( MLU * ( RCSe / MUM ) ) ,MUR ) * ( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7067054845301463}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( PN - DDR ) * ( MRS * PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( Max( Max( RRSe,RMSe ),DS ) ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,MUR ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ACS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - Max( CS,RMSe ) )", "obj1": 0.7680311890838206, "obj2": 0.1281352846979804}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ACS * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17602838576787685}, {"determining": "( ( DDR * AMS ) * MDR )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( ( MUM / ( MUM * RCSe ) ) + RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( ( MUC - RMSe ) + ( CS - RRSe ) ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15633055074836438}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5642588600771098}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( RCSe * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - RRS ) + ( CRS / PN ) ) * ( FirstVNF_RAM - AMS ) ) - MDR ) )", "choosing": "( Max( RMSe,MLU ) / Max( MLU,( Min( Max( CS,RCSe ) ,MUM ) * ( RCSe - ( Max( DS,MUM ) + Min( CS ,( MUR / ( RCSe / CS ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6864139258052283}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - Max( MDR,Const ) ) / ARS ) ) / AMS ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.8713450292397661, "obj2": 0.07918844265741203}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( DDR + MDR ) - RRS ) / ( ARS - ( FirstVNF_RAM_Server * ( ARS / Min( Min( BR ,ACS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( ( MUR / MUM ) * ( CS * Max( CS,( RMSe * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.719083679081271}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( ( Max( MDR,RRS ) - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5700416601063096}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6670178256955155}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / MUM ) * ( CS * Max( CS,( RMSe * Min( MUC ,RRSe ) ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.12903645495993415}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * Min( FirstVNF_RAM ,MRS ) ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.49902534113060426, "obj2": 0.4622103898855451}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + CS ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( RRSe * ( MUC * ( ( MLU - MLU ) - MUC ) ) ) + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + RRS ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Const ) / Min( ( Const - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - RMSe ) * ( ( CS * RRSe ) - DS ) )", "obj1": 0.4502923976608187, "obj2": 0.5173999719385171}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.7660818713450293, "obj2": 0.12903645495993415}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.4916585416875797}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( Max( MUR,Min( RMSe ,MLU ) ) * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( DDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe * Max( DS,( Min( MUR ,CS ) * MUC ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( PN - DDR ) * ( FirstVNF_RAM / AMS ) )", "choosing": "( ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) * ( ( RRSe - ( CS * RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( BR - Min( FirstVNF_Mem ,( Max( Max( MDR,RRS ),RRS ) - PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( AMS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MUC ) ,RMSe ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6081584274838251}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( CS / MUR ) / RCSe ) * RRSe ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5413609111242264}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( RRS ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.49317738791423, "obj2": 0.46822899726116163}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( RCSe + ( Max( RCSe,( ( MLU + ( RCSe * MLU ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2423624151908621}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,AMS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ) / Min( AMS ,( FirstVNF_RAM_Server / ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / ( MUC * MUM ) ) * MUC ) ),DS ) ,( ( ( MUM + ( RRSe / DS ) ) + RCSe ) - MUC ) )", "obj1": 0.6608187134502924, "obj2": 0.2317272559125902}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,Max( ( RRS - FirstVNF_RAM ),FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( ( ( MUC / MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3401796229115929}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR * BR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + CS ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.48148148148148145, "obj2": 0.4833178775372942}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.416164793751093}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.42884990253411304, "obj2": 0.5448514166171786}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201394}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * RRS )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RRSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,RRS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( AMS - FirstVNF_CPU ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / CRS ) ) )", "choosing": "Min( Max( DS,Max( RCSe,( ( Min( RMSe ,MLU ) * ( RCSe / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ) ) ,( ( ( Max( RCSe,DS ) + RRSe ) / MUR ) * RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( CS / MUR ) / RCSe ) * RRSe ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.528242237401348}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( CS * RRSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691481144987917}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RCSe * MLU ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201394}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.528242237401348}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.9376218323586745, "obj2": 0.03376316460273939}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - RRS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RCSe * MLU ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5642588600771098}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "Min( Max( Max( RCSe,( Max( Min( RMSe ,MLU ),( MUM / ( MUR + ( RMSe * DS ) ) ) ) * MUC ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( Min( ( ( FirstVNF_RAM * FirstVNF_Mem ) * DDR ) ,Min( AMS ,FirstVNF_Mem ) ) * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4834307992202729, "obj2": 0.48141764418175226}, {"determining": "( ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),MRS ) ) )", "choosing": "( ( RCSe * Min( MLU ,( ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) * Min( ( RMSe - RRSe ) ,( RMSe / CS ) ) ) ) ) - ( MLU - ( DS - ( MUR * ( ( ( Min( MLU ,RRSe ) + ( MLU * MUR ) ) / Min( ( MUR * MLU ) ,DS ) ) - ( MUM * DS ) ) ) ) ) )", "obj1": 0.9610136452241715, "obj2": 0.01929127944510145}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08448123764188153}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * Max( RRS,AMS ) ) - MDR ) )", "choosing": "( Min( Max( Min( RMSe ,MLU ),( MUM / ( MUR + ( RMSe * DS ) ) ) ) ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5856199346624575}, {"determining": "( ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) - MDR ) * ( ( ARS + BR ) * Max( ( AMS / ARS ),( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 0.9610136452241715, "obj2": 0.01929127944510145}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,( DDR * Const ) ) / MDR ) + ( Const / MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( RCSe * MLU ) ) + ( Max( ( Min( RCSe ,( MLU * MUM ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( RCSe / MUR ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.668810172744549}], "22": [{"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( RRS + Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) - MDR ) / ( Min( MRS ,MRS ) * ( ( AMS / ACS ) + ( ACS - BR ) ) ) )", "choosing": "( ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM / MUC ) ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( RMSe,MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( MLU * ( RRSe - RCSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3664902371053047}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( DS - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / MUC ) * ( ( RRSe - Max( ( CS / Max( MUM,( RRSe / ( MUC / CS ) ) ) ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5594541910331384, "obj2": 0.37923101379663404}, {"determining": "( ( ( ( Const - ARS ) * ( ARS + ACS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( FirstVNF_CPU,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - RRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) / Min( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + ( RCSe + RCSe ) ) ,MUM ) ) / RCSe ) ,( RMSe * ( MLU + MUM ) ) ) )", "obj1": 0.6900584795321637, "obj2": 0.21005149157958564}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + ( RMSe * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Max( MDR,RRS ) ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - ( ( MUC / MLU ) - MUM ) ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.5015010459911257}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / ( MUC * MUM ) ) * CS ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6510721247563352, "obj2": 0.24739308244042948}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / MUM ) * ( CS * Max( CS,( RMSe * ( MUM / ( RCSe * MUM ) ) ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.11988375318461263}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),FirstVNF_CPU_Server ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,( ARS / FirstVNF_Mem ) ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "Min( ( RMSe * ( DS * MLU ) ) ,( ( RCSe - ( RCSe + CS ) ) - RRSe ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05737640697628216}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + RRS ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Const ) / Min( ( Const - FirstVNF_RAM_Server ) ,( FirstVNF_Mem - FirstVNF_Mem ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - RMSe ) * ( ( CS * RRSe ) - DS ) )", "obj1": 0.4502923976608187, "obj2": 0.5173999719385171}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.5087719298245614, "obj2": 0.44318051603057496}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( Min( ARS ,ACS ) - ( MDR - Max( ACS,ACS ) ) )", "choosing": "Min( ( CS * RRSe ) ,( ( RRSe * ( MUC * ( ( MLU - MLU ) - MUC ) ) ) + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.677649621855995}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.41151707546395944}, {"determining": "( ( ARS - MDR ) / Min( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Min( ACS ,( DDR + ACS ) ) - Max( ( RRS - FirstVNF_Mem ),( FirstVNF_CPU_Server + ARS ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) ,MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( ( RMSe + MUM ) / MLU ) ) + ( ( ( Min( MLU ,RMSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.5087719298245614, "obj2": 0.44318051603057496}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( ( ( DS * ( Max( ( MUM - ( MUR / RMSe ) ),( Max( RRSe,RRSe ) / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( MUM - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( RMSe,DS ) ) ) ) * MLU ) )", "obj1": 0.8167641325536062, "obj2": 0.10207503322963271}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( DDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe * Max( DS,( Min( MUR ,CS ) * MUC ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( BR - Min( FirstVNF_Mem ,( Max( Max( MDR,RRS ),RRS ) - PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( AMS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( MRS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.9961013645224172, "obj2": 0.006216706598414831}, {"determining": "( ( ( ( Max( MDR,RRS ) - Min( ( FirstVNF_CPU_Server + MRS ) ,MRS ) ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),MDR ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( MLU + RRSe ) / MUR ) ,( ( Max( ( RCSe * ( MUM + DS ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.2831145003075009}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.4916585416875797}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.42884990253411304, "obj2": 0.5448514166171786}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * Max( RRS,AMS ) ) - MDR ) )", "choosing": "( Min( Max( Min( RMSe ,MLU ),( MUM / ( MUR + ( RMSe * DS ) ) ) ) ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5856199346624575}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( CS / MUR ) / RCSe ) * RRSe ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5413609111242264}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( ( ACS + FirstVNF_RAM ) ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2679230677691039}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08358006737992779}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ACS * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17602838576787685}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( ( Min( AMS ,ARS ) - FirstVNF_CPU ) - MDR ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.3723196881091618, "obj2": 0.6071824394513459}, {"determining": "( ( ACS * ( ( ( Max( ARS,AMS ) - PN ) - ( Const - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( MDR * BR ),CRS ) + ( Const - RRS ) ) ) - Max( ACS,RRS ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( MUC * RRSe ),( RCSe - RCSe ) ) - Min( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) ,Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( Max( MUR,Min( RMSe ,MLU ) ) * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5320709466520485}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( MDR,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( RRS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( Min( RCSe ,MUR ) * MUC ) - ( MUM / RRSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6165288195200095}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( RCSe * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) - MDR ) * MDR )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( ( MUM / ( RCSe * MUM ) ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15542938048641058}, {"determining": "( ACS / ( ( ( ( Min( MDR ,FirstVNF_Mem ) - RRS ) + Max( CRS,PN ) ) * Min( PN ,Max( AMS,PN ) ) ) - MDR ) )", "choosing": "Min( ( ( ( RCSe - RRSe ) - ( RMSe - RMSe ) ) / MUR ) ,( CS * RRSe ) )", "obj1": 0.9824561403508771, "obj2": 0.008438274315392893}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( RCSe + ( Max( RCSe,( ( MLU + ( RCSe * MLU ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ),DS ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2423624151908621}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( Max( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( RCSe * DS ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUC / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ),Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4171539961013645, "obj2": 0.549482859317942}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( FirstVNF_RAM_Server - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + ( Max( RRS,ARS ) - FirstVNF_Mem ) ) ) ) - MDR ) )", "choosing": "Min( Max( Max( ( ( Min( Min( MLU ,( DS / RMSe ) ) ,MUC ) * MUM ) / ( DS / Min( Max( ( MUM * RCSe ),RMSe ) ,RMSe ) ) ),( DS / RMSe ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08448123764188152}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( BR - MDR ) * ( ( PN - DDR ) * ( FirstVNF_RAM - RRS ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.8187134502923976, "obj2": 0.10111902291660362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( PN - DDR ) * ( MRS * PN ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( Max( Max( RRSe,RMSe ),DS ) ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,MUR ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( ( ACS + FirstVNF_RAM ) ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Const - Const ) ,( DDR + CRS ) ) * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - AMS ) )", "choosing": "( ( Max( MLU,RCSe ) - ( RMSe - ( Max( CS,MLU ) - ( MUM / Max( MUR,( MLU + ( MUM / MLU ) ) ) ) ) ) ) / Max( RMSe,RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2679230677691039}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( FirstVNF_Mem - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * Max( RCSe,( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08358006737992779}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.394666687892387}, {"determining": "( ( Min( ( Const - Const ) ,( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( ( ACS + FirstVNF_RAM ) ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( RMSe - ( RCSe - ( MUM / Max( MUR,( MLU + MUM ) ) ) ) ) ) / Max( RMSe,RCSe ) )", "obj1": 0.631578947368421, "obj2": 0.2696494713959085}, {"determining": "( ( FirstVNF_RAM_Server - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) / ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( MLU * RMSe ) * ( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( MUM + Max( MUR,( MLU + MUM ) ) ) ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7032485077864951}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}, {"determining": "( ( PN - ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) * ( FirstVNF_RAM / AMS ) )", "choosing": "( ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) * ( ( ( MLU * ( RCSe / MUM ) ) - ( CS * RRSe ) ) * MUR ) )", "obj1": 0.30409356725146197, "obj2": 0.6973353674975435}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5458089668615984, "obj2": 0.394666687892387}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( Max( CRS,PN ) + ( Const - RRS ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU_Server / ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( Min( ( ( DS / RCSe ) - ( ( CS + MUC ) - MUC ) ) ,( ( RMSe / Max( RRSe,DS ) ) * MUM ) ),RRSe ) ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,Max( ( RRS - FirstVNF_RAM ),FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( ( ( MUC / MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3401796229115929}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.39761687009826063}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( ARS / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( ( Max( RRSe,MLU ) - MUC ) - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201394}, {"determining": "( ( PN + ( ( ( ( Max( RRS,AMS ) / ARS ) / ARS ) - FirstVNF_CPU ) - ( MRS / RRS ) ) ) / MRS )", "choosing": "( Min( ( CS * RCSe ) ,( ( RCSe - Min( RCSe ,( Max( RCSe,MUR ) * RMSe ) ) ) + RMSe ) ) + ( RCSe - ( ( MUM / CS ) + Max( MUR,Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6520462136493657}, {"determining": "( ACS / ( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7247553596033225}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ACS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( RRS - Const ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ) - Max( CS,RMSe ) )", "obj1": 0.7680311890838206, "obj2": 0.12808044464690505}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * RRS )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RRSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,RRS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( AMS - FirstVNF_CPU ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / CRS ) ) )", "choosing": "Min( Max( DS,Max( RCSe,( ( Min( RMSe ,MLU ) * ( RCSe / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ) ) ,( ( ( Max( RCSe,DS ) + RRSe ) / MUR ) * RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.17413631972215238}, {"determining": "( ( ARS - ( Min( ( ( PN * ( AMS - RRS ) ) + Min( FirstVNF_CPU ,CRS ) ) ,Max( FirstVNF_CPU,DDR ) ) - Min( DDR ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - CRS ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( CS,( DS + CS ) ) ,( CS + ( RMSe - ( ( CS / ( MUM / DS ) ) + RCSe ) ) ) ) )", "obj1": 0.530214424951267, "obj2": 0.4118859687807508}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201394}, {"determining": "( ( Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) / ( Max( MRS,FirstVNF_RAM_Server ) - Min( MDR ,( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) ) * ( Max( Min( Max( Const,( PN / ( BR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ),DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) / ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MLU ) ) ) + ( Max( ( ( RCSe - ( MLU * RMSe ) ) - ( Max( MUR,MUR ) / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( Min( RCSe ,MUM ),( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4761301715680381}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MDR - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) ) * ( ( Min( ( CRS - ARS ) ,Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUR * DS ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( MUR - MUR ) )", "obj1": 0.3567251461988304, "obj2": 0.6165288195200095}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( MLU * MUR ) + Max( CS,MUR ) ) )", "obj1": 0.6003898635477583, "obj2": 0.32145588764093136}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6547891649356897}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.9376218323586745, "obj2": 0.03376316460273939}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + CS ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}], "23": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) / Min( Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.5984405458089669, "obj2": 0.31893333175092187}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem ) ) ) ) * ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,MDR ) - Max( FirstVNF_RAM,ARS ) ) + ( Min( ACS ,( AMS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + Max( MLU,DS ) ) ) * Max( ( ( ( RCSe / RRSe ) * MUM ) / RRSe ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.47173489278752434, "obj2": 0.48263090570995437}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5060776397039276}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( PN,FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( ( MUR / RRSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.5185185185185185, "obj2": 0.4407650621062842}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013759300595201392}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6374269005847953, "obj2": 0.26265671939605134}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099234}, {"determining": "( ( ( ( Const - ARS ) * ( ARS + ACS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( FirstVNF_CPU,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - RRS ) )", "choosing": "( ( Max( RCSe,Max( Max( MUR,RRSe ),Max( RMSe,RCSe ) ) ) - ( RMSe - RMSe ) ) / Min( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + ( RCSe + RCSe ) ) ,MUM ) ) / RCSe ) ,( RMSe * ( MLU + MUM ) ) ) )", "obj1": 0.6900584795321637, "obj2": 0.21005149157958564}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05737640697628216}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( DS - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( ( BR - Min( FirstVNF_Mem ,( Max( Max( MDR,RRS ),RRS ) - PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( AMS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.783625730994152, "obj2": 0.1141296518402821}, {"determining": "( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) * MDR ) ,MRS ) )", "choosing": "( ( ( ( DS * ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RRSe,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( CS * ( ( ( ( MUC - DS ) + MLU ) / MUC ) + DS ) ) )", "obj1": 0.571150097465887, "obj2": 0.36553422679227554}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( FirstVNF_RAM_Server - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + ( Max( RRS,ARS ) - FirstVNF_Mem ) ) ) ) - MDR ) )", "choosing": "Min( Max( Max( ( ( Min( Min( MLU ,( DS / RMSe ) ) ,MUC ) * MUM ) / ( DS / Min( Max( ( MUM * RCSe ),RMSe ) ,RMSe ) ) ),( DS / RMSe ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08448123764188152}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4680085320816383}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( MDR - ( ( ( ( FirstVNF_Mem + Max( CRS,PN ) ) * ( ( ( ARS / FirstVNF_RAM ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS * ( Min( RCSe ,Max( Min( CS ,RMSe ),RCSe ) ) + CS ) ) * ( Max( ( DS - ( DS / ( MUM * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RRSe + RCSe ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5529479597840616}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.21005149157958564}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6198830409356725, "obj2": 0.2829728574539776}, {"determining": "( ( Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) / ( Max( MRS,FirstVNF_RAM_Server ) - Min( MDR ,( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) ) * ( Max( Min( Max( Const,( PN / ( BR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ),DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) / ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MLU ) ) ) + ( Max( ( ( RCSe - ( MLU * RMSe ) ) - ( Max( MUR,MUR ) / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( Min( RCSe ,MUM ),( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4761301715680381}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,DDR ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6752649388874568}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( ACS - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( DS / RMSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6639273348569816}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5231997250422357}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( Min( ( Const - Const ) ,( DDR + BR ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365585}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5320709466520485}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + CS ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( ACS / ( ( ( ( RRS - Const ) + Max( CRS,PN ) ) * ( ( Min( ARS ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ACS + ARS ) ,( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - Max( AMS,RRS ) ) ) ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - ( ( Max( MUR,Min( ( DS * RRSe ) ,MLU ) ) * MUC ) / RMSe ) ) ,Max( ( DS + ( MUM * ( MUR - MUC ) ) ),( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.9941520467836257, "obj2": 0.0026275738887582526}, {"determining": "( Min( ( FirstVNF_CPU_Server / DDR ) ,RRS ) - Max( FirstVNF_CPU_Server,Const ) )", "choosing": "( ( RRSe - RCSe ) - ( RCSe - MLU ) )", "obj1": 0.5847953216374269, "obj2": 0.33357725977928365}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( ACS - ( Max( MDR,Const ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( MUM - MLU ) + ( ( ( Min( MLU ,RMSe ) + RMSe ) * RMSe ) + DS ) ) ) / ( MUR * MLU ) )", "obj1": 0.8615984405458089, "obj2": 0.06716155732211497}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( RCSe * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( Max( ACS,( PN - Min( ( MRS + RRS ) ,FirstVNF_CPU ) ) ) - DDR ) * ( AMS + Min( MRS ,Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.45515496272473177}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ( Max( Const,BR ) + ( ACS - BR ) ) - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / CS ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( CS * ( ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) - Max( ( CS * ( MUM - CS ) ),RCSe ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) * MLU ) )", "obj1": 0.5399610136452242, "obj2": 0.40575898737790517}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( FirstVNF_Mem - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * Max( RCSe,( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08358006737992779}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ACS * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17602838576787685}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.5672514619883041, "obj2": 0.368165970171076}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.6608187134502924, "obj2": 0.23722535005067805}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5087719298245614, "obj2": 0.44318051603057496}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * RRSe ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ( FirstVNF_CPU + AMS ) - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( Max( Max( MDR,RRS ),PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( Min( MUM ,Max( RCSe,MUM ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * Max( MUR,MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / MUC ) * ( ( RRSe - Max( ( CS / Max( MUM,( RRSe / ( MUC / CS ) ) ) ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.3851878694213482}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,RRS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( AMS - FirstVNF_CPU ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / CRS ) ) )", "choosing": "Min( Max( DS,Max( RCSe,( ( Min( RMSe ,MLU ) * ( RCSe / ( MUR + ( RMSe * RCSe ) ) ) ) * MUC ) ) ) ,( ( ( Max( RCSe,DS ) + RRSe ) / MUR ) * RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * ( ( PN / FirstVNF_CPU ) * PN ) ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * RRS )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RRSe ),( ( RMSe * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7223920603111104}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( ( FirstVNF_CPU_Server + Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( Max( ACS,( PN - ( RRS + FirstVNF_CPU_Server ) ) ) - DDR ) * ( ( PN - ACS ) + ( ACS - FirstVNF_RAM ) ) ) - AMS ) )", "choosing": "( ( MLU * MLU ) - ( ( ( ( RCSe / MUM ) * Max( MLU,MUM ) ) / MUR ) * CS ) )", "obj1": 0.8966861598440545, "obj2": 0.05381105521609899}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / RCSe ) * CS ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6510721247563352, "obj2": 0.24739308244042948}, {"determining": "( ACS / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7098168736086993}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( Max( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( RCSe * DS ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUC / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ),Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4171539961013645, "obj2": 0.549482859317942}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + ( RMSe * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - ACS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( MLU * ( RRSe - ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7152873497390853}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR - ( Min( AMS ,ARS ) - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5919196973253321}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099234}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / MUR ) - Min( ( ( ( RMSe - ( RRSe * MUR ) ) - ( RMSe - RMSe ) ) / MUR ) ,( CS * RRSe ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6165288195200095}, {"determining": "( ( BR - Min( FirstVNF_Mem ,Max( Max( ( AMS + FirstVNF_RAM ),AMS ),PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( ( ( RCSe / MUR ) + RMSe ) * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3257965256400635}, {"determining": "( ( PN - DDR ) * ARS )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * Max( Max( RCSe,( DS / RMSe ) ),DS ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08358006737992779}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( DDR,RRS ) - ARS ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe * Max( ( MLU * DS ),( Min( MUR ,CS ) * MUC ) ) ) - ( RRSe + RCSe ) )", "obj1": 0.3138401559454191, "obj2": 0.686972741625723}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.396766154326025}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - DDR ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( ( ( ( MUR - RRSe ) + RMSe ) * RMSe ) + DS ) ) ) ) * ( MLU * DS ) )", "obj1": 0.5009746588693957, "obj2": 0.45799085368766385}, {"determining": "( ( BR - Min( ( Max( Max( MDR,RRS ),RRS ) - PN ) ,FirstVNF_Mem ) ) * ( Max( DDR,Max( ( RRS - FirstVNF_RAM ),FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( MLU * ( ( ( MUC / MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3401796229115929}, {"determining": "( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ARS / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( DS * MUM ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4761301715680381}, {"determining": "( ( ARS - ( Min( ( ( PN * ( AMS - RRS ) ) + Min( FirstVNF_CPU ,CRS ) ) ,Max( FirstVNF_CPU,DDR ) ) - Min( DDR ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - CRS ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( CS,( DS + CS ) ) ,( CS + ( RMSe - ( ( CS / ( MUM / DS ) ) + RCSe ) ) ) ) )", "obj1": 0.530214424951267, "obj2": 0.4118859687807508}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8284600389863548, "obj2": 0.08448123764188152}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ACS / ( Min( ARS ,MDR ) / Max( FirstVNF_CPU_Server,Const ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7274747577321795}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.41151707546395944}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.1492416633046777}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * RRS )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RRSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / ( MUC * MUM ) ) * CS ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6510721247563352, "obj2": 0.24739308244042948}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( CS / MUR ) / RCSe ) * RRSe ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5413609111242264}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}], "24": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ACS / MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + AMS ) ) ) * Max( ARS,( FirstVNF_RAM_Server - ( ( MDR - MRS ) / Min( ( ARS * FirstVNF_RAM_Server ) ,BR ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RMSe / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / Min( DS ,MLU ) ) ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( ACS / ACS ) - Max( ( ACS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( FirstVNF_Mem + AMS ) ) ) / Max( Min( MDR ,FirstVNF_CPU_Server ),CRS ) ) ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ( ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) / MDR ) - MDR ) * ( Max( DDR,DDR ) - Max( FirstVNF_Mem_Server,( PN * DDR ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( ( ( CS * RRSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( MUC + MUC ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.3053727231037392}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - Max( ARS,ACS ) ) * ( ( Const - ACS ) + ( ACS - ( MRS * ( MDR + ( BR + FirstVNF_Mem_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / RRSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( MLU - RMSe ) * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( RRSe * ( ( CS / MUR ) - ( RRSe / MUM ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem ) ) ) ) * ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,MDR ) - Max( FirstVNF_RAM,ARS ) ) + ( Min( ACS ,( AMS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + Max( MLU,DS ) ) ) * Max( ( ( ( RCSe / RRSe ) * MUM ) / RRSe ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.47173489278752434, "obj2": 0.48263090570995437}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4522665256162779}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5060776397039276}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - DDR ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489832}, {"determining": "( ( Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) / ( Max( MRS,FirstVNF_RAM_Server ) - Min( MDR ,( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) ) * ( Max( Min( Max( Const,( PN / ( BR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ),DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) / ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MLU ) ) ) + ( Max( ( ( RCSe - ( MLU * RMSe ) ) - ( Max( MUR,MUR ) / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( Min( RCSe ,MUM ),( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4761301715680381}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / MUC ) * ( ( RRSe - Max( ( CS / Max( MUM,( RRSe / ( MUC / CS ) ) ) ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.38329809286653543}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( ARS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 0.783625730994152, "obj2": 0.11407481178920671}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( FirstVNF_RAM_Server - CRS ) ,MRS ) ) ) / ( FirstVNF_Mem + ( Max( RRS,ARS ) - FirstVNF_Mem ) ) ) ) - MDR ) )", "choosing": "Min( Max( Max( ( ( Min( Min( MLU ,( DS / RMSe ) ) ,MUC ) * MUM ) / ( DS / Min( Max( ( MUM * RCSe ),RMSe ) ,RMSe ) ) ),( DS / RMSe ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.8401559454191033, "obj2": 0.08199486898970614}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5231997250422357}, {"determining": "( ( BR - Min( FirstVNF_Mem ,( Max( Max( MDR,RRS ),RRS ) - PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( AMS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( MRS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( DS - ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( Min( MUM ,( ( MUC / MLU ) - ( RRSe - RRSe ) ) ) / CS ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6618405926103224}, {"determining": "( Max( BR,FirstVNF_Mem_Server ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( Max( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( RCSe * DS ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUC / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ),Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4171539961013645, "obj2": 0.549482859317942}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.5672514619883041, "obj2": 0.368165970171076}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386723}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) * MDR ) ,MRS ) )", "choosing": "( ( ( ( DS * ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RRSe,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( CS * ( ( ( ( MUC - DS ) + MLU ) / MUC ) + DS ) ) )", "obj1": 0.571150097465887, "obj2": 0.36553422679227554}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( ( MUR * MLU ) ,DS ) + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.52046783625731, "obj2": 0.4306592072163237}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( ACS - ( Max( FirstVNF_RAM,ARS ) * PN ) ) + ( Const - ACS ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( MUR / RRSe ) ) ) / ( MUR * MLU ) )", "obj1": 0.9571150097465887, "obj2": 0.02105370325683911}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ARS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05628323766716989}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( Min( FirstVNF_Mem_Server ,( Const + CRS ) ) / ( ARS - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( Min( RRSe ,RMSe ) - RRSe ) ) - ( ( DS / ( RCSe + ( MUM * RCSe ) ) ) * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.5146198830409356, "obj2": 0.43468493031764227}, {"determining": "( ACS / ( ( ( ( RRS - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( ( DDR + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - Min( ( RRSe - ( DS * ( RRSe - ( RRSe * CS ) ) ) ) ,CS ) ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( Max( RRSe,MUM ) - CS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.01375930059520139}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / MUR ) - Min( ( ( ( RMSe - ( RRSe * MUR ) ) - ( RMSe - RMSe ) ) / MUR ) ,( CS * RRSe ) ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6165288195200095}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6198830409356725, "obj2": 0.2829728574539776}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.40455794494015973}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Min( AMS ,Min( ARS ,FirstVNF_Mem_Server ) ) / ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( MUM / ( ( RCSe * MUM ) - ( RMSe * MUR ) ) ) + MLU ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713526}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( DDR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - Const ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ( PN / FirstVNF_CPU ) * PN ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( Max( MUR,RCSe ) / RMSe ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( MUR ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ) ) ) * ( RMSe - MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6412186683564751}, {"determining": "( ( BR - Min( FirstVNF_Mem ,Max( Max( ( AMS + FirstVNF_RAM ),AMS ),PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( ( ( RCSe / MUR ) + RMSe ) * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3257965256400635}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3684210526315789, "obj2": 0.6051134428763868}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,DDR ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6752649388874568}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * RRSe ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * RRSe ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) * ARS )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * Max( Max( RCSe,( Min( MUR ,RMSe ) / RMSe ) ),DS ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9883040935672515, "obj2": 0.008492569984768533}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6222248677543737}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / RCSe ) * CS ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6549707602339181, "obj2": 0.24553590186544658}, {"determining": "( ( ( ( ( PN - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),RRS ) ) - ( Min( AMS ,( ARS / ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) * ARS ) - ( Max( RRS,FirstVNF_Mem ) / ( Max( Const,FirstVNF_RAM_Server ) + ( BR - MRS ) ) ) )", "choosing": "( Max( Max( ( ( RCSe - ( ( MUC - ( MLU - MLU ) ) - Min( RCSe ,RCSe ) ) ) / RCSe ),MUR ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009155125926735928}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( FirstVNF_Mem * ARS ) * FirstVNF_CPU ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( MUC * RRSe ) * RRSe ) ,( DS / DS ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( PN - DDR ) * ARS )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * Max( Max( RCSe,( DS / RMSe ) ),DS ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6374269005847953, "obj2": 0.26265671939605134}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5529479597840616}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,RRSe ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( FirstVNF_CPU + AMS ) - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( Max( Max( MDR,RRS ),PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( Min( MUM ,Max( RCSe,MUM ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * Max( MUR,MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - Max( CRS,PN ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( ( MLU + RMSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6374269005847953, "obj2": 0.26265671939605134}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.174081479671077}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( FirstVNF_RAM_Server - CRS ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( ( ( DS / RCSe ) * CS ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15461506460487473}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6413255360623782, "obj2": 0.25496035124640015}, {"determining": "( ( PN - DDR ) * ( FirstVNF_CPU_Server * AMS ) )", "choosing": "( ( Min( ( CS * RCSe ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( BR + FirstVNF_CPU_Server ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.41151707546395944}, {"determining": "( ( ARS * ( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( Max( MDR,( DDR * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - PN ) ) / ( ( ( Max( ( MDR * BR ),CRS ) + ( Const - FirstVNF_CPU ) ) * Const ) - MDR ) ) ) - Min( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( MUR + ( RRSe / RMSe ) ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12808044464690505}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) / ( ( ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6627680311890838, "obj2": 0.2298270225570483}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR - ( Min( AMS ,ARS ) - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5919196973253321}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( AMS * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( RMSe * ( CS * RRSe ) ) ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6881091617933723, "obj2": 0.21095266184153935}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( PN - MDR ) / ARS ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( Min( ( Const - Const ) ,Max( ( ACS - MDR ),FirstVNF_Mem ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21560193645850664}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386723}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.44639376218323584, "obj2": 0.5231997250422357}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,Max( RRS,CRS ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * RRS )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( ( ( RRSe * RCSe ) * MLU ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( RMSe / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.6608187134502924, "obj2": 0.23722535005067805}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / RCSe ) * CS ) ),DS ) ,( CS * MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.25024932610900047}, {"determining": "( ( ( Min( ( ( ( Min( FirstVNF_RAM ,AMS ) + Max( Const,FirstVNF_RAM_Server ) ) / ARS ) / ( PN - DDR ) ) ,ARS ) - FirstVNF_CPU ) - ( Min( PN ,AMS ) - MDR ) ) / Max( Max( RRS,AMS ),( Min( ( MRS / Max( FirstVNF_RAM,( Min( ACS ,ACS ) + BR ) ) ) ,FirstVNF_CPU ) / DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * MUM ) ) - MUC ) - ( RCSe - ( MUM / Max( MUR,( MLU + CS ) ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.9532163742690059, "obj2": 0.022250775549303322}, {"determining": "( ( ARS - ( Min( ( ( PN * ( AMS - RRS ) ) + Min( FirstVNF_CPU ,CRS ) ) ,Max( FirstVNF_CPU,DDR ) ) - Min( DDR ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - CRS ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( CS,( DS + CS ) ) ,( CS + ( RMSe - ( ( CS / ( MUM / DS ) ) + RCSe ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620576}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( ( MUM / ( RCSe * MUM ) ) * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ( ( ARS / Max( ( ( MDR - ACS ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( MLU * ( RRSe - ( ( MUM - CS ) + MLU ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6963793571845144}, {"determining": "( ( Min( ( Const - Const ) ,( DDR + BR ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21560193645850664}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,Max( ( RRS - Const ),Max( CRS,PN ) ) ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( MUM * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6140350877192983, "obj2": 0.2867529245603636}], "25": [{"determining": "( ( ACS / MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( MDR - ( ACS + ARS ) ) / Min( ( FirstVNF_RAM_Server * ARS ) ,BR ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / ( MUM + DS ) ) ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ACS / MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + AMS ) ) ) * Max( ARS,( FirstVNF_RAM_Server - ( ( MDR - MRS ) / Min( ( ARS * FirstVNF_RAM_Server ) ,BR ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( RMSe / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / Min( DS ,MLU ) ) ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( RMSe * ( CS * RRSe ) ) ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) / MUR )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( FirstVNF_RAM_Server - ( ( PN - Max( DDR,DDR ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + MUR ),RRSe ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.3026373314754281}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem ) ) ) ) * ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,MDR ) - Max( FirstVNF_RAM,ARS ) ) + ( Min( ACS ,( AMS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + Max( MLU,DS ) ) ) * Max( ( ( ( RCSe / RRSe ) * MUM ) / RRSe ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.47173489278752434, "obj2": 0.48263090570995437}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( Min( CRS ,RRS ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( Min( MUR ,( MUC + DS ) ) ,( MUR / MUC ) ) ) * ( DS * ( MLU * DS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8245614035087719, "obj2": 0.0859436414848983}, {"determining": "( ( BR - Min( FirstVNF_Mem ,( Max( Max( MDR,RRS ),RRS ) - PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( AMS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.342079856267135}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - Max( ARS,ACS ) ) * ( ( Const - ACS ) + ( ACS - ( MRS * ( MDR + ( BR + FirstVNF_Mem_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / RRSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( MLU - RMSe ) * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( RRSe * ( ( CS / MUR ) - ( RRSe / MUM ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679568}, {"determining": "( ( Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Max( ( MRS / ARS ),Const ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) / ( Max( MRS,FirstVNF_RAM_Server ) - Min( MDR ,( FirstVNF_RAM * ( ( RRS + FirstVNF_Mem_Server ) * CRS ) ) ) ) ) * ( Max( Min( Max( Const,( PN / ( BR / FirstVNF_RAM ) ) ) ,FirstVNF_Mem ),DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) / ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MLU ) ) ) + ( Max( ( ( RCSe - ( MLU * RMSe ) ) - ( Max( MUR,MUR ) / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( Min( RCSe ,MUM ),( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4761301715680381}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) * MDR ) ,MRS ) )", "choosing": "( ( ( ( DS * ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RRSe,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( CS * ( ( ( ( MUC - DS ) + MLU ) / MUC ) + DS ) ) )", "obj1": 0.571150097465887, "obj2": 0.36553422679227554}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( BR - Min( FirstVNF_Mem ,Max( Max( ( AMS + FirstVNF_RAM ),AMS ),PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( ( ( RCSe / MUR ) + RMSe ) * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3257965256400635}, {"determining": "( ( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / Max( ( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) ) * ( Max( DDR,DDR ) - ( ARS - Min( AMS ,( ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ARS ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5060776397039276}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( Max( MDR,CRS ) * ( FirstVNF_Mem_Server + ACS ) ) - MDR ) )", "choosing": "( Max( RCSe,( MLU * ( ( Min( Max( ( DS - DS ),RRSe ) ,DS ) * DS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) * ( RRSe * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5417388149401008}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.49317738791423, "obj2": 0.46382252426660275}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( AMS * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ) * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( RMSe * ( CS * RRSe ) ) ) + ( Min( ( ( MLU / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( DDR / CRS ) / Min( ( Const - CRS ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( RCSe * MUM ) + RCSe ) * MUR ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( ( ( FirstVNF_CPU + AMS ) - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( Max( Max( MDR,RRS ),PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( Min( MUM ,Max( RCSe,MUM ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * Max( MUR,MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( Max( RRS,CRS ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( Min( ACS ,FirstVNF_Mem_Server ),( MDR * MDR ) ) - ARS ) ) ) ) ) )", "choosing": "( MLU * Min( ( Min( MUC ,MLU ) - MUM ) ,( ( MLU * Max( Max( RMSe,RCSe ),( MUM + ( Min( MUC ,RRSe ) * RMSe ) ) ) ) + Max( DS,( Min( RCSe ,( ( MUR + RRSe ) / RMSe ) ) / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.5867446393762183, "obj2": 0.33357014620683856}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * Max( MUM,MLU ) ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( ( MUM / ( RCSe * MUM ) ) * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / MUR ) - Min( ( ( ( RMSe - ( RRSe * RCSe ) ) - ( RMSe - RMSe ) ) / MUR ) ,( CS * RRSe ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.659353716398106}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( ( MUR * MLU ) ,DS ) + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.52046783625731, "obj2": 0.4306592072163237}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) / ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MLU ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( Min( RCSe ,MUM ),( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) )", "obj1": 0.543859649122807, "obj2": 0.39744012570268067}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - DS ) )", "obj1": 0.44639376218323584, "obj2": 0.5231997250422357}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR - ( Min( AMS ,ARS ) - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5919196973253321}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.6198830409356725, "obj2": 0.28297285745397754}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( AMS / ARS ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( Const + FirstVNF_Mem ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( ( MLU / RMSe ) - ( ( CS + DS ) * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * ( ( ( RCSe / MUR ) / ( Min( ( RMSe - RRSe ) ,MUC ) - RCSe ) ) / MLU ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6314226067925276}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Max( ( Max( ( ( ( ACS - AMS ) / ( RRS - ACS ) ) / Min( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),PN ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * RRSe ) ) ) * ( RCSe - DS ) )", "obj1": 0.44834307992202727, "obj2": 0.5217310640900198}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,DDR ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6752649388874568}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( RRS - BR ) )", "choosing": "( Min( RCSe ,( ( RRSe * CS ) / ( Min( ( ( RCSe * RMSe ) - RMSe ) ,Min( RMSe ,CS ) ) * RMSe ) ) ) / ( ( RRSe * ( ( Min( RRSe ,RMSe ) * ( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( Max( RRSe,( MUM / RCSe ) ),( ( MUR * MUR ) / RMSe ) ),MUC ) ,RMSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6491559450531386}, {"determining": "( ( ( ( ARS / ARS ) - FirstVNF_CPU ) - ( MDR - ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) ) ) / Min( ( Const / Const ) ,Max( ACS,ARS ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * Max( Max( RCSe,( Min( MUR ,RMSe ) / RMSe ) ),DS ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4951267056530214, "obj2": 0.4522665256162779}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) ) / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * ( RCSe * CS ) )", "obj1": 0.9688109161793372, "obj2": 0.014822801452090223}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( ACS - ( Max( FirstVNF_RAM,ARS ) * PN ) ) + ( Const - ACS ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( MUR / RRSe ) ) ) / ( MUR * MLU ) )", "obj1": 0.9571150097465887, "obj2": 0.02105370325683911}, {"determining": "( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) * ( ( RRSe - Max( ( CS / Max( MUM,( RRSe / ( MUC / CS ) ) ) ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5633528265107213, "obj2": 0.38086768049732234}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + Max( DS,( MUR / RRSe ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.530214424951267, "obj2": 0.4130356236542226}, {"determining": "( ( ( ( ( PN - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),RRS ) ) - ( Min( AMS ,( ARS / ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) * ARS ) - ( Max( RRS,FirstVNF_Mem ) / ( Max( Const,FirstVNF_RAM_Server ) + ( BR - MRS ) ) ) )", "choosing": "( Max( Max( ( ( RCSe - ( ( MUC - ( MLU - MLU ) ) - Min( RCSe ,RCSe ) ) ) / RCSe ),MUR ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009155125926735928}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) + ( Min( ( ( MDR + ACS ) - PN ) ,Min( Min( DDR ,FirstVNF_CPU ) ,Max( CRS,CRS ) ) ) - BR ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Max( AMS,CRS ) ) ) - MDR ) )", "choosing": "( ( DS + DS ) * ( MUC + MUC ) )", "obj1": 0.2962962962962963, "obj2": 0.7134488875024576}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5499226489315822}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUR ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( RRS * ( FirstVNF_Mem + AMS ) ) + ( Min( ACS ,( BR - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( Min( PN ,ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "Min( ( ( ( MLU + RMSe ) * MLU ) - MUC ) ,Min( ( DS + ( MUM * ( MUR - MUC ) ) ) ,( ( RMSe / MLU ) + CS ) ) )", "obj1": 0.5146198830409356, "obj2": 0.43468493031764227}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Min( AMS ,Max( FirstVNF_RAM_Server,ARS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( FirstVNF_CPU_Server + ( RRS + MRS ) ) + ACS ) ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( ( MUR * MLU ) - Max( ( CS / DS ),( Min( ( ( RMSe + MUR ) * ( MUM / MUR ) ) ,RRSe ) * Min( MUC ,RCSe ) ) ) ) * MUR ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) / ( ( ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Const ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( DS / RCSe ) * CS ) ),DS ) ,( CS * RRSe ) )", "obj1": 0.6549707602339181, "obj2": 0.24553590186544658}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( ARS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 0.6354775828460039, "obj2": 0.2639871293989685}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,Max( ( RRS - Const ),Max( CRS,PN ) ) ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( MUM * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( FirstVNF_Mem * ARS ) * FirstVNF_CPU ) ) / ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( MUC * RRSe ) * RRSe ) ,( DS / DS ) )", "obj1": 0.6120857699805068, "obj2": 0.28769760828546215}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( Const * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( ( CS * RRSe ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7198156176659711}, {"determining": "( ( ARS - ( Max( ACS,Max( MDR,RRS ) ) - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) / ( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_RAM * MDR ) ) ) - MDR ) )", "choosing": "( RRSe * ( Max( CS,MUR ) - Max( RMSe,MUC ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6413255360623782, "obj2": 0.25496035124640015}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,MRS ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.4580896686159844, "obj2": 0.51279206603715}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ARS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05628323766716989}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( PN ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RRSe ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6867487947745915}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * RRSe ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.40455794494015973}, {"determining": "( ( PN - DDR ) * ( FirstVNF_CPU_Server * AMS ) )", "choosing": "( ( Min( ( CS * RCSe ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( ACS / MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( MDR - MRS ) / Min( ( FirstVNF_RAM_Server * ARS ) ,BR ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / ( MUM + DS ) ) ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ARS * ( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( Max( MDR,( DDR * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - PN ) ) / ( ( ( Max( ( MDR * BR ),CRS ) + ( Const - FirstVNF_CPU ) ) * Const ) - MDR ) ) ) - Min( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( MUR + ( RRSe / RMSe ) ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12808044464690505}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( MUC + MUC ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.1492416633046777}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( ( MDR - MRS ) / Min( ( FirstVNF_RAM_Server * ARS ) ,BR ) ) )", "choosing": "Min( ( ( MUM / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / ( MUM + DS ) ) ) ) + ( RMSe * MUR ) ) ) / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.5672514619883041, "obj2": 0.368165970171076}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / MUR ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11054562772453738}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + ( Max( FirstVNF_RAM,ARS ) * PN ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * ( MUR * MLU ) )", "obj1": 0.6471734892787524, "obj2": 0.25001152063405996}, {"determining": "( ( ARS - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) ) * RRS ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( ( RMSe + Max( MUC,MUM ) ) - MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( Min( ( Const - Const ) ,Min( MRS ,MDR ) ) - ( MRS - Min( AMS ,( MRS * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( Max( FirstVNF_Mem_Server,( ACS * ( ARS + CRS ) ) ) + PN ) ) ) - MRS ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( MUM * RCSe ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ),MUR ) ) / ( ( RRSe - ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,RMSe ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21560193645850664}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) - Max( MDR,Const ) ) / Max( Max( RRS,CRS ),( Min( PN ,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - Min( DDR ,BR ) ) ) - MDR ) ) )", "choosing": "( ( Max( MLU,MUR ) + ( ( DS * Min( RCSe ,RRSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,DS ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) / MUR )", "obj1": 0.29239766081871343, "obj2": 0.7179132778940838}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( Const - RRS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS / FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU / MUR ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2381813603637072}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * CS ) )", "obj1": 0.3079922027290448, "obj2": 0.6927382983489965}, {"determining": "( Min( FirstVNF_Mem_Server ,( Const + CRS ) ) / ( ARS - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( Min( RRSe ,RMSe ) - RRSe ) ) - ( ( DS / ( RCSe + ( MUM * RCSe ) ) ) * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.5146198830409356, "obj2": 0.43468493031764227}, {"determining": "( ( BR - Max( ( Max( MDR,RRS ) - PN ),FirstVNF_Mem ) ) * ( Max( CRS,( FirstVNF_Mem_Server + RRS ) ) + ( Const * RRS ) ) )", "choosing": "( Min( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - Max( ( Max( MUC,MUC ) - ( MLU - MLU ) ),( ( CS - RRSe ) * ( RCSe + RMSe ) ) ) ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - CS ) ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.32895945907324153}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - ( ( FirstVNF_Mem + Const ) / ARS ) ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * RMSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,RRSe ) * ( Min( Min( RRSe ,RMSe ) ,( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}], "26": [{"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),( CRS * PN ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / ( ( Min( ( MLU / RRSe ) ,Min( MUR ,( MUM + Min( MUR ,RRSe ) ) ) ) - MUM ) + ( ( CS + MUR ) * MUM ) ) ) ,( RMSe + ( MUM / ( Max( ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ),RRSe ) + Min( Min( MLU ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ACS / MRS ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( MDR - ( ACS + ARS ) ) / Min( ( FirstVNF_RAM_Server * ARS ) ,BR ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / ( MUM + DS ) ) ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( ( DS / RMSe ) - MUM ) / MUR )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026572569441247}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem ) ) ) ) * ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,MDR ) - Max( FirstVNF_RAM,ARS ) ) + ( Min( ACS ,( AMS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + Max( MLU,DS ) ) ) * Max( ( ( ( RCSe / RRSe ) * MUM ) / RRSe ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.47173489278752434, "obj2": 0.48263090570995437}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - Max( ARS,ACS ) ) * ( ( Const - ACS ) + ( ACS - ( MRS * ( MDR + ( BR + FirstVNF_Mem_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / RRSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( MLU - RMSe ) * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( RRSe * ( ( CS / MUR ) - ( RRSe / MUM ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( BR - Min( FirstVNF_Mem ,Max( Max( ( AMS + FirstVNF_RAM ),AMS ),PN ) ) ) * ( Max( DDR,( ( RRS - FirstVNF_RAM ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server - ( ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),BR ) - ARS ) ) ) ) ) )", "choosing": "( ( ( RCSe / MUR ) + RMSe ) * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,( RRSe + RCSe ) ) ) ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3257965256400635}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,( ARS / CRS ) ) * MDR ) ,MRS ) )", "choosing": "( ( ( ( DS * ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( RRSe,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( CS * ( ( ( ( MUC - DS ) + MLU ) / MUC ) + DS ) ) )", "obj1": 0.571150097465887, "obj2": 0.36553422679227554}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) ) * ( Max( ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ),ACS ) - ( Max( ( FirstVNF_CPU_Server - ARS ),FirstVNF_CPU_Server ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.47368421052631576, "obj2": 0.4789901029494193}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( FirstVNF_RAM_Server - ( ( PN - Max( DDR,DDR ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + MUR ),RRSe ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.3026373314754281}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( Max( RMSe,RCSe ) - ( ( ( MUM / ( RCSe * MUM ) ) * MUC ) / RMSe ) ) / Max( ( ( MLU - Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / RCSe ),( RMSe * MUM ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Min( RCSe ,RMSe ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( Max( MDR,CRS ) * ( FirstVNF_Mem_Server + ACS ) ) - MDR ) )", "choosing": "( Max( RCSe,( MLU * ( ( Min( Max( ( DS - DS ),RRSe ) ,DS ) * DS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) * ( RRSe * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5417388149401008}, {"determining": "( ( ARS / ARS ) / ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,Max( Max( DDR,ACS ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( ( MUC - Max( RCSe,MUR ) ) - MLU ) ) ) + RMSe ) ) + Max( MLU,( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928874}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( MLU / MUC ) * RMSe ) * ( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6120857699805068, "obj2": 0.283509514239671}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( Min( CRS ,RRS ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( Min( MUR ,( MUC + DS ) ) ,( MUR / MUC ) ) ) * ( DS * ( MLU * DS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8245614035087719, "obj2": 0.0859436414848983}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - ( Max( ACS,Max( MDR,RRS ) ) - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) / ( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_RAM * MDR ) ) ) - MDR ) )", "choosing": "( RRSe * ( Max( CS,MUR ) - Max( RMSe,MUC ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5499226489315822}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( PN,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( MUC + MUC ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - ACS ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( MDR + FirstVNF_RAM ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / MUR ) - Min( ( ( ( RMSe - ( RRSe * RCSe ) ) - ( RMSe - RMSe ) ) / MUR ) ,( CS * RRSe ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.659353716398106}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) / ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MLU ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( Min( RCSe ,MUM ),( MUR / RCSe ) ) ) ) ) ) + ( RCSe + CS ) ) )", "obj1": 0.543859649122807, "obj2": 0.39744012570268067}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11054562772453737}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),( MDR * MDR ) ) - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / ( RMSe * Min( MUC ,RRSe ) ) ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( AMS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( ACS ,( MDR * BR ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( ( RMSe - RMSe ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - MUC ) ),( RCSe + MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6859167058184864}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5282651072124757, "obj2": 0.41070570366482645}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / ARS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( ( MUR * MLU ) ,DS ) + Min( RCSe ,( RMSe * RMSe ) ) ) + RMSe ) ) + Max( MLU,CS ) )", "obj1": 0.52046783625731, "obj2": 0.4306592072163237}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ( FirstVNF_CPU + AMS ) - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( Max( Max( MDR,RRS ),PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( Min( MUM ,Max( RCSe,MUM ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * Max( MUR,MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( ( ( ( ( PN - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),RRS ) ) - ( Min( AMS ,( ARS / ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) * ARS ) - ( Max( RRS,FirstVNF_Mem ) / ( Max( Const,FirstVNF_RAM_Server ) + ( BR - MRS ) ) ) )", "choosing": "( Max( Max( ( ( RCSe - ( ( MUC - ( MLU - MLU ) ) - Min( RCSe ,RCSe ) ) ) / RCSe ),MUR ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009155125926735928}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( ACS - ( Max( FirstVNF_RAM,ARS ) * PN ) ) + ( Const - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( MUR * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.9551656920077972, "obj2": 0.021954873518792842}, {"determining": "( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MLU / MUM ) ) * ( ( RRSe - Max( ( CS / Max( MUM,( RRSe / ( MUC / CS ) ) ) ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5633528265107213, "obj2": 0.38086768049732234}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,DDR ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6752649388874568}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( RRS - BR ) )", "choosing": "( Min( RCSe ,( ( RRSe * CS ) / ( Min( ( ( RCSe * RMSe ) - RMSe ) ,Min( RMSe ,CS ) ) * RMSe ) ) ) / ( ( RRSe * ( ( Min( RRSe ,RMSe ) * ( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( Max( RRSe,( MUM / RCSe ) ),( ( MUR * MUR ) / RMSe ) ),MUC ) ,RMSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6491559450531386}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) - ( ( RRS * ( FirstVNF_Mem + AMS ) ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( MUC * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.6159844054580896, "obj2": 0.28106245805053526}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( MRS - Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( ( DS / RCSe ) + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.6744639376218323, "obj2": 0.21740427698241413}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const - DDR ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( MUC + Max( MLU,MUR ) ) )", "obj1": 0.8245614035087719, "obj2": 0.0859436414848983}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( Min( MLU ,Max( MLU,MUR ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.391812865497076, "obj2": 0.586093865678577}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ARS - ( Max( ACS,FirstVNF_Mem ) + ( Const + Max( RRS,( ( ( FirstVNF_RAM_Server / CRS ) - ARS ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ) ) / ( Min( PN ,AMS ) + MDR ) )", "choosing": "( RRSe * ( ( MUR / CS ) - Max( CS,( Min( ( RCSe * ( MUM - Max( RCSe,MUR ) ) ) ,CS ) / ( Min( ( MLU + Max( RCSe,DS ) ) ,MLU ) + CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1692046721536149}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) ) * RRS ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( ( RMSe + Max( MUC,MUM ) ) - MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.50682261208577, "obj2": 0.4361859485001169}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR - ( Min( AMS ,ARS ) - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5919196973253321}, {"determining": "( ( ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / RMSe ) ) ) ) )", "obj1": 0.8771929824561403, "obj2": 0.05851000286084407}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) ) / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * ( RCSe * CS ) )", "obj1": 0.9707602339181286, "obj2": 0.013866791139061103}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( MUM,( RRSe + RCSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( Min( MRS ,( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( Const / FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) / ( ( ( ( Const - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( ( ( RRS * PN ) / ( Max( FirstVNF_RAM,ARS ) - FirstVNF_CPU ) ) / ( DDR - Max( MDR,FirstVNF_RAM ) ) ) ) - MDR ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( ( RMSe + ( RMSe - MLU ) ) / RCSe ) ,Max( ( MUR + DS ),( RCSe / ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38086768049732234}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.604731649749745}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ARS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05628323766716989}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( AMS * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ) * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,Min( RMSe ,Max( RCSe,MUC ) ) ) / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * MLU ) - ( ( ( MLU * MUM ) / MUR ) * CS ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / RCSe ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150827}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6314226067925276}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.40455794494015973}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - ( RMSe * ( CS * RRSe ) ) ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) / MUR )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920805}, {"determining": "( ( PN - DDR ) * ( ( PN / AMS ) / ACS ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MUM ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / DS ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( ( MDR - MRS ) / Min( ( FirstVNF_RAM_Server * ARS ) ,BR ) ) )", "choosing": "Min( ( ( MUM / ( ( ( MLU * DS ) + Max( DS,( ( RMSe / MLU ) / ( MUM + DS ) ) ) ) + ( RMSe * MUR ) ) ) / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,RRSe ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / MUR ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( ARS / ( Const * RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( MRS - PN ) - Max( MDR,Const ) ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server * Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) ) ) / ARS ) ) ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - BR ) ) ) - MDR ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( MUC + MUC ) ) ) )", "obj1": 0.5672514619883041, "obj2": 0.368165970171076}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6413255360623782, "obj2": 0.25496035124640015}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( Min( AMS ,ARS ),PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ACS - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Min( ( Const - AMS ) ,FirstVNF_CPU ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR * RRSe ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.30409356725146197, "obj2": 0.697371807332498}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) / ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( Min( ( RCSe / MLU ) ,RRSe ) * ( Min( Min( RRSe ,RMSe ) ,( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * Min( FirstVNF_RAM ,MRS ) ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( ( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7344525025777945}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18389913356562798}, {"determining": "( ( MDR * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( FirstVNF_RAM_Server * AMS ) ,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),MRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( MLU - CS ),( MUM * ( RCSe + ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.9395711500974658, "obj2": 0.029633630880640405}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8596491228070176, "obj2": 0.06780215977909178}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) + ( Min( ( ( MDR + ACS ) - PN ) ,Min( Min( DDR ,FirstVNF_CPU ) ,Max( CRS,CRS ) ) ) - BR ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Max( AMS,CRS ) ) ) - MDR ) )", "choosing": "( ( DS + DS ) * ( MUC + MUC ) )", "obj1": 0.2962962962962963, "obj2": 0.7134488875024576}, {"determining": "( ( ( MDR / Min( PN ,FirstVNF_CPU_Server ) ) - Max( ACS,Max( ( BR * DDR ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( MDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( Min( ( CS * RCSe ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) / ( CS - RRSe ) ) ) ) + ( CS - DS ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689633}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / DS ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) ) / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * ( RCSe * CS ) )", "obj1": 0.9688109161793372, "obj2": 0.014822801452090223}], "27": [{"determining": "( ( MDR * Max( FirstVNF_RAM_Server,( ( DDR * ACS ) + Const ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( MLU - CS ),( MUM * ( ( Max( RRSe,MLU ) - CS ) + Min( ( MLU * RMSe ) ,Min( CS ,RMSe ) ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),( CRS * PN ) ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem * PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / ( ( Min( ( MLU / RRSe ) ,Min( MUR ,( MUM + Min( MUR ,RRSe ) ) ) ) - MUM ) + ( ( CS + MUR ) * MUM ) ) ) ,( RMSe + ( MUM / ( Max( ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ),RRSe ) + Min( Min( MLU ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( FirstVNF_CPU + AMS ) - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( Max( Max( MDR,RRS ),PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( Min( MUM ,Max( RCSe,MUM ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * Max( MUR,MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( ( Min( Min( MRS ,MDR ) ,( Const - ( Const - RRS ) ) ) - ( MRS - Min( AMS ,( ARS - FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( FirstVNF_Mem_Server - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( Max( DS,MLU ) + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.5614035087719298, "obj2": 0.3373965358513042}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / Max( RRSe,( CS + DS ) ) ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.44639376218323584, "obj2": 0.49823816894823}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026572569441247}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem ) ) ) ) * ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,MDR ) - Max( FirstVNF_RAM,ARS ) ) + ( Min( ACS ,( AMS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + Max( MLU,DS ) ) ) * Max( ( ( ( RCSe / RRSe ) * MUM ) / RRSe ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.47173489278752434, "obj2": 0.48263090570995437}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ),RRSe ) + Min( Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 0.9551656920077972, "obj2": 0.020209496421196807}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) ) * ( Max( ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ),ACS ) - ( Max( ( FirstVNF_CPU_Server - ARS ),FirstVNF_CPU_Server ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.47368421052631576, "obj2": 0.4789901029494193}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6266851180949452}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( Max( ( DS / DS ),( MUM * ( ( Min( ( ( DS / RCSe ) + CS ) ,Max( RCSe,DS ) ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5809911104023426}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( Max( MDR,CRS ) * ( FirstVNF_Mem_Server + ACS ) ) - MDR ) )", "choosing": "( Max( RCSe,( MLU * ( ( Min( Max( ( DS - DS ),RRSe ) ,DS ) * DS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) * ( RRSe * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5417388149401008}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( Max( FirstVNF_CPU,ARS ) * ACS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Max( MUM,( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MLU + DS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.6549707602339181, "obj2": 0.24112356916866873}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ARS / ARS ) / ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,Max( Max( DDR,ACS ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_CPU_Server,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( RCSe + Min( RCSe ,( ( MUC - Max( RCSe,MUR ) ) - MLU ) ) ) + RMSe ) ) + Max( MLU,( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928874}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( MLU / MUC ) * RMSe ) * ( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6120857699805068, "obj2": 0.283509514239671}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( Min( CRS ,RRS ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( Min( MUR ,( MUC + DS ) ) ,( MUR / MUC ) ) ) * ( DS * ( MLU * DS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8245614035087719, "obj2": 0.0859436414848983}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( Max( CRS,RRS ) + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server * ARS ) * BR ) / ( MDR + MRS ) ) )", "choosing": "Min( ( ( MUM / Min( ( ( MLU * DS ) + ( DS + ( ( MUM + DS ) / ( RMSe / MLU ) ) ) ) ,( MUR * RMSe ) ) ) / MUR ) ,Max( RMSe,Min( MUC ,( RCSe / Max( Min( MLU ,Min( CS ,( MUR / MUR ) ) ),DS ) ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.2527813706047988}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( Max( ARS,ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / ARS ) - ( FirstVNF_RAM_Server * BR ) ) - Max( MDR,Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( DS ,( MUR * RCSe ) ) + Min( RCSe ,( RMSe * RMSe ) ) ) + ( DS * RRSe ) ) ) + Max( MLU,CS ) )", "obj1": 0.52046783625731, "obj2": 0.43010580307622137}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) * MLU ) - ( ( ( MLU * MUM ) / MUR ) * CS ) )", "obj1": 0.5243664717348928, "obj2": 0.41820583229410085}, {"determining": "( ( Min( ( Const - Const ) ,Min( MRS ,MDR ) ) - ( MRS - Min( AMS ,( ARS * FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( Min( ( ( DS / RCSe ) + CS ) ,RRSe ) + ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) ) + ( Max( RRSe,MLU ) - MUC ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.6744639376218323, "obj2": 0.2174042769824141}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5499226489315822}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - Max( ARS,ACS ) ) * ( ( Const - ACS ) + ( ACS - ( MRS * ( MDR + ( BR + FirstVNF_Mem_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / RRSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( MLU - RMSe ) * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( RRSe * ( ( CS / MUR ) - ( RRSe / MUM ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Max( MDR,( CRS - RRS ) ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Min( RCSe ,( MLU / RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Max( Min( MUC ,MUR ),Max( RRSe,RRSe ) ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6525840039143788}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8596491228070176, "obj2": 0.06780215977909178}, {"determining": "( ( MDR - ARS ) / ( Max( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * AMS ) * CRS ) ),Max( DDR,( AMS - Min( RRS ,( CRS * ( CRS + FirstVNF_RAM_Server ) ) ) ) ) ) - BR ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MUR * Min( MUR ,Max( RCSe,RRSe ) ) ) ) / Max( RMSe,( ( ( MUM + RRSe ) / RCSe ) * MUM ) ) )", "obj1": 0.49122807017543857, "obj2": 0.44955046201035764}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18389913356562798}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ( Const - Const ) ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),( MDR * MDR ) ) - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / ( RMSe * Min( MUC ,RRSe ) ) ) ) * MUC ) ) ) / ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) - CS ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / RCSe ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( ( RCSe * ( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.4152046783625731, "obj2": 0.549680668005723}, {"determining": "( ( ( ( ( PN - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),RRS ) ) - ( Min( AMS ,( ARS / ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) * ARS ) - ( Max( RRS,FirstVNF_Mem ) / ( Max( Const,FirstVNF_RAM_Server ) + ( BR - MRS ) ) ) )", "choosing": "( Max( Max( ( ( RCSe - ( ( MUC - ( MLU - MLU ) ) - Min( RCSe ,RCSe ) ) ) / RCSe ),MUR ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009155125926735928}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,ARS ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( MUM,( RRSe + RCSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * Max( MUC,MUM ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12077359685863573}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) - ( ( RRS * ( FirstVNF_Mem + AMS ) ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( MUC * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.6159844054580896, "obj2": 0.28106245805053526}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - CRS )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) ) / RMSe ),( MUM * ( MLU + ( MLU * ( ( MLU + RMSe ) / MUM ) ) ) ) ) * ( RCSe * CS ) )", "obj1": 0.7426900584795322, "obj2": 0.15365905429184562}, {"determining": "( FirstVNF_CPU / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( ARS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( RCSe * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.631578947368421, "obj2": 0.26577969966477905}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - DDR ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8245614035087719, "obj2": 0.0859436414848983}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.5692007797270955, "obj2": 0.334063178957943}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5126705653021443, "obj2": 0.4337659989765524}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU / MLU ) ) - ( DS / ( RCSe * DS ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MLU + ( Min( ( ( DS / CS ) - Min( MUR ,MLU ) ) ,Min( RCSe ,DS ) ) + CS ) ) * RRSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16814989922174986}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MRS - ( DDR - ACS ) ) / ( FirstVNF_Mem_Server + ( ( PN + DDR ) - BR ) ) ) )", "choosing": "( ( Max( ( MUR + MUR ),RRSe ) + ( Max( ( MUR + Min( ( MUM + ( RCSe / MUC ) ) ,Min( ( DS - MLU ) ,CS ) ) ),MUC ) * ( CS - ( ( MUC + Max( ( CS * MUR ),MLU ) ) * RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RMSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR - ( Min( AMS ,ARS ) - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5919196973253321}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,DDR ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6752649388874568}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Max( RCSe,DS ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6064980705223642}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( RRS - BR ) )", "choosing": "( Min( RCSe ,( ( RRSe * CS ) / ( Min( ( ( RCSe * RMSe ) - RMSe ) ,Min( RMSe ,CS ) ) * RMSe ) ) ) / ( ( RRSe * ( ( Min( RRSe ,RMSe ) * ( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( Max( RRSe,( MUM / RCSe ) ),( ( MUR * MUR ) / RMSe ) ),MUC ) ,RMSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6491559450531386}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( RCSe,( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.601694966892729}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ARS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05628323766716989}, {"determining": "( ( Min( ( Const - Const ) ,( DDR + BR ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365585}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( MRS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + ( MUR - ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023942}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150826}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ARS - ( Max( ACS,Max( MDR,RRS ) ) - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) / ( Min( PN ,( FirstVNF_CPU_Server - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) * MDR ) ) ) - MDR ) )", "choosing": "( RRSe * ( Max( CS,MUR ) - MLU ) )", "obj1": 0.723196881091618, "obj2": 0.1718322460423731}, {"determining": "( ( ARS - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM / ( FirstVNF_Mem * ARS ) ) ) * RRS ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe / MLU ) ,RRSe ) * ( Min( Min( RRSe ,RMSe ) ,( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.50682261208577, "obj2": 0.4361859485001169}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) + ( Min( ( ( MDR + ACS ) - PN ) ,Min( Min( DDR ,FirstVNF_CPU ) ,Max( CRS,CRS ) ) ) - BR ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Max( AMS,CRS ) ) ) - MDR ) )", "choosing": "( ( DS + DS ) * ( MUC + MUC ) )", "obj1": 0.2962962962962963, "obj2": 0.7134488875024576}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( Const - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / Min( Max( MUR,RCSe ) ,RMSe ) ) - ( MUC * MUM ) ) ) / RMSe ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6314226067925276}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( PN - DDR ) * ( ACS / ( ( Max( Const,RRS ) * FirstVNF_CPU ) / AMS ) ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * Max( MUC,MUR ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( MDR + CRS ) / ( ( ( ( BR - Min( FirstVNF_Mem ,( Max( MDR,RRS ) - PN ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MUM ,MUM ) ) - RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( Max( RMSe,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.41070570366482645}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( CS / DS ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12813528469798044}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( ARS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( Max( RCSe,( ( RMSe / ( Max( RCSe,( MUR * MUR ) ) - ( MLU + ( RRSe * MUC ) ) ) ) * MUC ) ),DS ) ,( MUC - RRSe ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,( CS * ( Max( RRSe,MLU ) - CS ) ) ) / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * ( RCSe * CS ) )", "obj1": 0.9688109161793372, "obj2": 0.014822801452090223}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,RRS ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6861598440545809, "obj2": 0.21285289519708125}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),Min( FirstVNF_RAM ,MRS ) ) / ( ( ARS / ARS ) - ( FirstVNF_RAM * ( ( Const + FirstVNF_Mem_Server ) * CRS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * Min( FirstVNF_RAM ,MRS ) ) ) / Min( ( Const / Const ) ,( ACS + ARS ) ) ) ) - Min( BR ,ACS ) ) )", "choosing": "( ( MLU * ( ( Min( MUC ,MLU ) - MUM ) + ( ( MLU * DS ) + Max( DS,( MUR / Max( MUM,DS ) ) ) ) ) ) * Min( Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ,( ( MUR + ( CS / ( MUC - MLU ) ) ) / Max( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / RMSe ),MUR ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7344525025777945}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( FirstVNF_RAM_Server - ( ( PN - Max( DDR,DDR ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + MUR ),RRSe ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.3026373314754281}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( Const - ACS ) + Min( PN ,FirstVNF_Mem ) ) ) - MDR ) ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * MUM ) / DS ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * MUR ) / ( MUR / CS ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.4834307992202729, "obj2": 0.450161692906146}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( ARS ,MRS ) - MDR ) + ( Const / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) + ( PN - DDR ) ) ) / ( FirstVNF_Mem_Server + ( ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( DS * Min( MUC ,RCSe ) ) + ( Max( ( Min( MLU ,Max( MLU,MUR ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / MUR )", "obj1": 0.391812865497076, "obj2": 0.586093865678577}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,Min( ( ( Const * MDR ) - FirstVNF_RAM ) ,BR ) ),( FirstVNF_Mem_Server / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),( MDR * MDR ) ) - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( RRSe * ( MUC + CS ) ) / ( ( MUR - ( MUR - CS ) ) + ( MUR * MUR ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / ( RMSe * Min( MUC ,RRSe ) ) ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN / FirstVNF_RAM ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * MUR ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) - ( ( ( RCSe * MUM ) * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( Min( DS ,DS ),MUR ) ) / ( ( Max( ( Min( ( MLU * RMSe ) ,RCSe ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6307013696198271}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( FirstVNF_Mem_Server * ( ( ( ARS - Const ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( CS / MUR ) - Min( ( ( ( RMSe - RCSe ) - ( RMSe - RMSe ) ) / MUR ) ,( CS * RRSe ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7007708168681048}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}], "28": [{"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( DDR ,DDR ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUC / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( RCSe + ( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( MDR * Max( FirstVNF_RAM_Server,( ( DDR * ACS ) + Const ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( MLU - CS ),( MUM * ( ( Max( RRSe,MLU ) - CS ) + Min( ( MLU * RMSe ) ,Min( CS ,RMSe ) ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - DDR ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( FirstVNF_CPU + AMS ) - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( Max( Max( MDR,RRS ),PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( Min( MUM ,Max( RCSe,MUM ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RCSe ) * Max( MUR,MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.5536062378167641, "obj2": 0.3942718241228342}, {"determining": "( ARS / ( ( ( Min( FirstVNF_CPU ,( ( ACS - FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + MDR ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( PN * RRS ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( DS,( MLU + ( ( MLU + RRSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.3383412195764027}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5414481668741108}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) ) / Max( ( Max( ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) / Min( ( Const - FirstVNF_RAM_Server ) ,( ACS + FirstVNF_RAM ) ) ),( MDR - ( Min( AMS ,ARS ) - FirstVNF_CPU ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( RCSe - Min( CS ,MLU ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5919196973253321}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) ) * ( Max( ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ),ACS ) - ( Max( ( FirstVNF_CPU_Server - ARS ),FirstVNF_CPU_Server ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.47368421052631576, "obj2": 0.4789901029494193}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( ( Max( CRS,RRS ) + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server * ARS ) * BR ) / ( MDR + MRS ) ) )", "choosing": "Min( ( ( MUM / Min( ( ( MLU * DS ) + ( DS + ( ( MUM + DS ) / ( RMSe / MLU ) ) ) ) ,( MUR * RMSe ) ) ) / MUR ) ,Max( RMSe,Min( MUC ,( RCSe / Max( Min( MLU ,Min( CS ,( MUR / MUR ) ) ),DS ) ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.2527813706047988}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( CS * MUM ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5034649292401571}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150826}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5499226489315822}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6266851180949452}, {"determining": "( ( ARS - MDR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( ( MUC + MUC ),( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9161793372319688, "obj2": 0.04083874936487041}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Min( ACS ,ACS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( RMSe + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09088898123042258}, {"determining": "( ( ARS * ( ( ( PN - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),RRS ) ) - ( Min( AMS ,( ARS / ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * ARS ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( Max( ( Min( Max( Max( RCSe,( DS / RMSe ) ),DS ) ,Min( RMSe ,Max( RCSe,MUC ) ) ) / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + MUC ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7239301262384716}, {"determining": "( Max( ARS,ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / ARS ) - ( FirstVNF_RAM_Server * BR ) ) - Max( MDR,Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( DS ,( MUR * RCSe ) ) + Min( RCSe ,( RMSe * RMSe ) ) ) + ( DS * RRSe ) ) ) + Max( MLU,CS ) )", "obj1": 0.52046783625731, "obj2": 0.43010580307622137}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - Max( ARS,ACS ) ) * ( ( Const - ACS ) + ( ACS - ( MRS * ( MDR + ( BR + FirstVNF_Mem_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / RRSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( MLU - RMSe ) * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MUC * RMSe ) / ( ( RRSe * ( ( CS / MUR ) - ( RRSe / MUM ) ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( ( ( ( PN - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),RRS ) ) - ( Min( AMS ,( ARS / ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) * ARS ) - ( Max( RRS,FirstVNF_Mem ) / ( Max( Const,FirstVNF_RAM_Server ) + ( BR - MRS ) ) ) )", "choosing": "( Max( Max( ( ( RCSe - ( ( MUC - ( MLU - MLU ) ) - Min( RCSe ,RCSe ) ) ) / RCSe ),MUR ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009155125926735928}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( MRS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + ( MUR - ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.44639376218323584, "obj2": 0.49823816894823}, {"determining": "( ( MDR - ARS ) / ( Max( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * AMS ) * CRS ) ),Max( DDR,( AMS - Min( RRS ,( CRS * ( CRS + FirstVNF_RAM_Server ) ) ) ) ) ) - BR ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MUR * Min( MUR ,Max( RCSe,RRSe ) ) ) ) / Max( RMSe,( ( ( MUM + RRSe ) / RCSe ) * MUM ) ) )", "obj1": 0.49122807017543857, "obj2": 0.44955046201035764}, {"determining": "( ( ( ( ( ( Max( ( FirstVNF_RAM * BR ),( Const * MDR ) ) * ( FirstVNF_CPU - MDR ) ) - DDR ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ACS - AMS ) ) - Min( ACS ,ACS ) ) ) ) * ( ARS - ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - ( ( ( ACS / FirstVNF_CPU ) - Min( ( Max( FirstVNF_CPU,RRS ) - ( FirstVNF_Mem + Max( ARS,BR ) ) ) ,FirstVNF_Mem ) ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ) / ( ( FirstVNF_RAM + CRS ) - MRS ) )", "choosing": "( ( ( ( DS * ( ( Min( MLU ,MUR ) - MLU ) / ( DS / ( MUR * MLU ) ) ) ) * ( ( ( ( MUM - RCSe ) - MUM ) * MLU ) - Max( ( MUR - ( CS + ( MUM / CS ) ) ),RMSe ) ) ) + ( ( MUC + MUM ) - MLU ) ) / Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620575}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,MDR ),FirstVNF_Mem ) ) ) ) * ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,MDR ) - Max( FirstVNF_RAM,ARS ) ) + ( Min( ACS ,( AMS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + Max( MLU,DS ) ) ) * Max( ( ( ( RCSe / RRSe ) * MUM ) / RRSe ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.4678362573099415, "obj2": 0.4897795904277101}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( MUC + MUC ) )", "obj1": 0.7680311890838206, "obj2": 0.12808044464690505}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( ( ( Const - Const ) / ( ACS + ARS ) ) + FirstVNF_CPU_Server ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.2430311554497975}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5564333630175006}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( CS / DS ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( Const - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / Min( Max( MUR,RCSe ) ,RMSe ) ) - ( MUC * MUM ) ) ) / RMSe ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6314226067925276}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ),( ( DS * Min( MUM ,RRSe ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( ( ARS + ( PN - ACS ) ),PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( RMSe * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17309247515675968}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU / MLU ) ) - ( DS / ( RCSe * DS ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MLU + ( Min( ( ( DS / CS ) - Min( MUR ,MLU ) ) ,Min( RCSe ,DS ) ) + CS ) ) * RRSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16814989922174986}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MRS - ( DDR - ACS ) ) / ( FirstVNF_Mem_Server + ( ( PN + DDR ) - BR ) ) ) )", "choosing": "( ( Max( ( MUR + MUR ),RRSe ) + ( Max( ( MUR + Min( ( MUM + ( RCSe / MUC ) ) ,Min( ( DS - MLU ) ,CS ) ) ),MUC ) * ( CS - ( ( MUC + Max( ( CS * MUR ),MLU ) ) * RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RMSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( ( MUM * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,( MUM - MUC ) ) ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10437605928308326}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / MRS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( MLU * DS ) + Max( MLU,CS ) )", "obj1": 0.3079922027290448, "obj2": 0.6933007411883466}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / Max( ( ( Max( FirstVNF_Mem_Server,( ( DDR * ( Const + FirstVNF_CPU_Server ) ) - CRS ) ) + FirstVNF_Mem_Server ) + RRS ),Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,( MUC * ( RCSe + MUR ) ) ) / ( MUR * MUR ) )", "obj1": 0.9649122807017544, "obj2": 0.018981345707025536}, {"determining": "( ( Min( ( Const - Const ) ,( FirstVNF_RAM_Server + BR ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,RCSe ) - ( RMSe - ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( MDR + CRS ) / ( ( ( ( BR - Min( FirstVNF_Mem ,( Max( MDR,RRS ) - PN ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MUM ,MUM ) ) - RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( Max( RMSe,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.41070570366482645}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,DDR ) ) * ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( ( RCSe * CS ) ,Min( ( ( DS - RCSe ) - ( CS - RRSe ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( MUR * Max( RRSe,CS ) ) ),( ( DS * Min( MLU ,MUM ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) ,( CS * ( MUR / CS ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6752649388874568}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5126705653021443, "obj2": 0.4337659989765524}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ( Const - CRS ) ,( RRS * PN ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( RMSe - RRSe ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7087640836575968}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - DDR ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08784433552302591}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( RRS - BR ) )", "choosing": "( Min( RCSe ,( ( RRSe * CS ) / ( Min( ( ( RCSe * RMSe ) - RMSe ) ,Min( RMSe ,CS ) ) * RMSe ) ) ) / ( ( RRSe * ( ( Min( RRSe ,RMSe ) * ( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + Min( Max( Max( Max( RRSe,( MUM / RCSe ) ),( ( MUR * MUR ) / RMSe ) ),MUC ) ,RMSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6491559450531386}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( DDR / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_Mem_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * RMSe ) + Max( ( ( MLU + CS ) * MUC ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ),( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6013056273607587}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / Max( RRSe,( CS + DS ) ) ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.44639376218323584, "obj2": 0.49823816894823}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.9688109161793372, "obj2": 0.014822801452090223}, {"determining": "( ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( MLU / MUC ) * RMSe ) * ( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MUR - RRSe ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6081871345029239, "obj2": 0.2855856837402959}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( ARS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 0.6276803118908382, "obj2": 0.2676255536518313}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6179337231968811, "obj2": 0.2799538958450856}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) + ( ACS - MRS ) ) + ( FirstVNF_RAM_Server - DDR ) ) ) * ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5920373144746611}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026572569441247}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7253307649756314}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) * ( FirstVNF_Mem_Server + ACS ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02579960329911193}, {"determining": "( ( PN - DDR ) * ( ACS / ( ( Max( Const,RRS ) * ( FirstVNF_Mem_Server + ( BR - ( PN + DDR ) ) ) ) / AMS ) ) )", "choosing": "( ( ( RRSe * ( Min( Min( RRSe ,Max( ( MUR + MUR ),RRSe ) ) ,( MUM / RCSe ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) * MLU ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * Max( MUC,MUR ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) / MDR ) - Max( ACS,Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) ) ) * Max( Max( DDR,DDR ),Max( Min( FirstVNF_Mem ,( CRS * ( CRS + FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ( ( ARS / ARS ) - ( Max( ( ACS * FirstVNF_Mem_Server ),( MDR * MDR ) ) - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,Min( Max( Max( ( ( RRSe - RRSe ) - MLU ),( MUR * Max( RRSe,CS ) ) ),( ( RCSe * CS ) * RMSe ) ) ,( ( DS - RCSe ) - ( CS - RRSe ) ) ) ) + ( ( Min( Min( RMSe ,DS ) ,( MUR * Min( MUR ,Max( RCSe,RRSe ) ) ) ) / Max( RMSe,( ( ( MUM + RRSe ) / RCSe ) * MUM ) ) ) - ( ( MLU * ( Max( ( MUR - MLU ),( RMSe + DS ) ) / ( RMSe * Min( MUC ,RRSe ) ) ) ) * MUC ) ) ) / ( Max( MUM,( DS + MLU ) ) - CS ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8596491228070176, "obj2": 0.06780215977909178}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) + Max( ( PN * Min( MDR ,( FirstVNF_CPU * MRS ) ) ),PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( RRSe * ( MUM - CS ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) / ( ( ( DS / MUR ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( Min( MLU ,CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) )", "obj1": 0.9512670565302144, "obj2": 0.023005183024311683}, {"determining": "( Max( MRS,BR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * DS ) + Max( ( MUM - MUM ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.604731649749745}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( FirstVNF_RAM_Server - ( ( PN - Max( DDR,DDR ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( MUM / ( Max( ( MUR + MUR ),RRSe ) + ( RMSe * MUR ) ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.3026373314754281}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,ARS ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( Max( MUM,( RRSe + RCSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * Max( MUC,MUM ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12077359685863573}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.5692007797270955, "obj2": 0.334063178957943}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( ARS ,( MRS / MRS ) ) - ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) ) ) - MDR ) )", "choosing": "Min( Max( Max( ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ),( ( RMSe / ( Max( RCSe,( MUR * MUR ) ) - ( MLU + ( RRSe * MUC ) ) ) ) * MUC ) ),DS ) ,( MUC - RRSe ) )", "obj1": 0.7426900584795322, "obj2": 0.15365905429184556}, {"determining": "( ( ARS - Min( FirstVNF_RAM_Server ,Min( ( Max( ACS,FirstVNF_CPU_Server ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Min( DS ,MUR ) ,( ( Min( ( RCSe / MLU ) ,RRSe ) / ( ( CS / Min( RRSe ,RRSe ) ) + ( DS / ( CS * MUM ) ) ) ) + MLU ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ACS ) - Min( FirstVNF_Mem ,PN ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12077359685863573}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18389913356562798}, {"determining": "( ( ARS * ( ( ( Max( MDR,( CRS - RRS ) ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( Min( MUR ,( MUC + DS ) ) ,( MUR / MUC ) ) ) * ( DS * ( MLU * DS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3664717348927875, "obj2": 0.605372201226694}], "29": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_Mem_Server / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server * AMS ) ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( RRSe,MLU ) ,( MUC + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( DDR ,DDR ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUC / MUM ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / ( RCSe + ( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.36748632075958987}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( FirstVNF_RAM - MRS ) + MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( Min( DS ,Max( MUR,MUM ) ) * ( DS - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( CS * RMSe ) ) + CS ) ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5903454825509233}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ACS / ( ( Max( MRS,BR ) * Min( ( Max( Min( ACS ,Max( FirstVNF_Mem,PN ) ),FirstVNF_CPU ) / ( RRS * PN ) ) ,Min( ( Const - PN ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( Max( ( MUC / RCSe ),( MLU / RCSe ) ) / MUR ) ) + ( MLU * DS ) ) - ( ( RCSe + MUC ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * Min( MLU ,MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1848551438786571}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) ) * ( Max( ( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ),ACS ) - ( Max( ( FirstVNF_CPU_Server - ARS ),FirstVNF_CPU_Server ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MUM ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU * RCSe ) * ( MUR + MUR ) ) ,RRSe ) ) ) ) - MUR ) )", "obj1": 0.47368421052631576, "obj2": 0.4789901029494193}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5414481668741108}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - DDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ( ( BR * BR ) - DDR ) * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe / RRSe ) * ( MUC + Min( MUR ,MLU ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,Min( ARS ,( MRS / MRS ) ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( ( RMSe / ( Max( RCSe,( MUR * MUR ) ) - ( MLU + ( RRSe * MUC ) ) ) ) - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.3383412195764027}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( ( ARS - MDR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( ( MUC + MUC ),( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9161793372319688, "obj2": 0.04083874936487041}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5126705653021443, "obj2": 0.4337659989765524}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( Const - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / Min( Max( MUR,RCSe ) ,RMSe ) ) - ( MUC * MUM ) ) ) / RMSe ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6314226067925276}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( MDR - ARS ) / ( Max( Min( FirstVNF_RAM_Server ,( ( FirstVNF_CPU * AMS ) * CRS ) ),Max( DDR,( AMS - Min( RRS ,( CRS * ( CRS + FirstVNF_RAM_Server ) ) ) ) ) ) - BR ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MUR * Min( MUR ,Max( RCSe,RRSe ) ) ) ) / Max( RMSe,( ( ( MUM + RRSe ) / RCSe ) * MUM ) ) )", "obj1": 0.49122807017543857, "obj2": 0.44955046201035764}, {"determining": "( Max( ARS,ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / ARS ) - ( FirstVNF_RAM_Server * BR ) ) - Max( MDR,Min( ( Const - Const ) ,( ARS + ACS ) ) ) ) )", "choosing": "( Min( ( RCSe * CS ) ,( ( Min( DS ,( MUR * RCSe ) ) + Min( RCSe ,( RMSe * RMSe ) ) ) + ( DS * RRSe ) ) ) + Max( MLU,CS ) )", "obj1": 0.52046783625731, "obj2": 0.43010580307622137}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ),( ( DS * Min( MUM ,RRSe ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( MUM - CS ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6266851180949452}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8596491228070176, "obj2": 0.06780215977909178}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU / MLU ) ) - ( DS / ( RCSe * DS ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MLU + ( Min( ( ( DS / CS ) - Min( MUR ,MLU ) ) ,Min( RCSe ,DS ) ) + CS ) ) * RRSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16814989922174986}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( RRSe * MUC ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( Min( ( Const - Const ) ,( DDR + BR ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,RCSe ) - ( RMSe - RMSe ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365585}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ACS * Max( MRS,( MRS * FirstVNF_RAM ) ) ) * ( PN - ( ( ( Const - Const ) / ( ACS + ARS ) ) + FirstVNF_CPU_Server ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.2430311554497975}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.5692007797270955, "obj2": 0.334063178957943}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),( RRSe * ( ( Min( RRSe ,RMSe ) * ( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.44639376218323584, "obj2": 0.49823816894822986}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( MLU * DS ) * RMSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5250320633058247}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,ARS ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM_Server * DDR ) * Const ) - MDR ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * Max( MUM,( RRSe / ( RRSe / MLU ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11797303090719742}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / Max( RRSe,( CS + DS ) ) ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.6900584795321637, "obj2": 0.2100514915795856}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( ( ARS + ( PN - ACS ) ),PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( RMSe * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17309247515675968}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18389913356562798}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6179337231968811, "obj2": 0.2799538958450856}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( MRS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / Min( Max( FirstVNF_CPU,BR ) ,( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6471734892787524, "obj2": 0.2487305932105213}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442257}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( RRSe / ( RCSe / MUR ) ) ) ,MUR ) ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( Max( FirstVNF_RAM_Server,( MRS / ( ( DDR - Min( Min( Max( MDR,FirstVNF_CPU ) ,Min( ARS ,BR ) ) ,BR ) ) / FirstVNF_Mem ) ) ) / ( ( MDR - MRS ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + ( ( ( MLU * ( ( MUR - RRSe ) / ( MUM / MUR ) ) ) + Max( DS,( ( MLU / RMSe ) / ( MUM + DS ) ) ) ) + ( RMSe * MUR ) ) ) / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,MUC ) ) ) ),Min( ( DS * Max( RRSe,MLU ) ) ,MUC ) ) - RMSe ) * RRSe ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( Min( ARS ,Const ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.8245614035087719, "obj2": 0.0864269578593152}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( Max( FirstVNF_RAM,ACS ) / Min( ( ACS + ARS ) ,( Const - Const ) ) ) ) - MDR ) )", "choosing": "( ( MUR * Max( RRSe,CS ) ) / ( ( ( MUR - DS ) * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS - RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5499226489315822}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / Max( ( ( Max( FirstVNF_Mem_Server,( ( DDR * ( Const + FirstVNF_CPU_Server ) ) - CRS ) ) + FirstVNF_Mem_Server ) + RRS ),Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,( MUC * ( RCSe + MUR ) ) ) / ( MUR * MUR ) )", "obj1": 0.9649122807017544, "obj2": 0.018981345707025536}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Min( ACS ,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( MUR * Min( MUR ,Max( RCSe,RRSe ) ) ) ) / Max( RMSe,( ( ( MUM + RRSe ) / RCSe ) * MUM ) ) )", "obj1": 0.8109161793372319, "obj2": 0.0917901514923763}, {"determining": "( ( Max( CRS,RRS ) + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server * ARS ) * BR ) / ( MDR + MRS ) ) )", "choosing": "Min( ( ( MUM / Min( ( ( MLU * DS ) + ( DS + ( ( MUM + DS ) / ( RMSe / MLU ) ) ) ) ,( MUR * RMSe ) ) ) / MUR ) ,Max( RMSe,Min( MUC ,( RCSe / Max( Min( MLU ,Min( CS ,( MUR / MUR ) ) ),DS ) ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.2527813706047988}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * Const ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / Max( RRSe,( CS + DS ) ) ) * MLU ) - ( ( ( MLU * ( ( CS + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.01026277347522688}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( Min( ( Const - Const ) ,( ACS + Max( ( Const - ACS ),FirstVNF_Mem ) ) ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),Max( MUR,RCSe ) ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.7038847282264208}, {"determining": "( ( ( ( ( ( Max( ( FirstVNF_RAM * BR ),( Const * MDR ) ) * ( FirstVNF_CPU - MDR ) ) - DDR ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),( ACS - AMS ) ) - Min( ACS ,ACS ) ) ) ) * ( ARS - ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - ( ( ( ACS / FirstVNF_CPU ) - Min( ( Max( FirstVNF_CPU,RRS ) - ( FirstVNF_Mem + Max( ARS,BR ) ) ) ,FirstVNF_Mem ) ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) ) / ( ( FirstVNF_RAM + CRS ) - MRS ) )", "choosing": "( ( ( ( DS * ( ( Min( MLU ,MUR ) - MLU ) / ( DS / ( MUR * MLU ) ) ) ) * ( ( ( ( MUM - RCSe ) - MUM ) * MLU ) - Max( ( MUR - ( CS + ( MUM / CS ) ) ),RMSe ) ) ) + ( ( MUC + MUM ) - MLU ) ) / Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6868895999620575}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) / ( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ACS - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( MLU * MLU ) - ( ( ( MUM * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3060428849902534, "obj2": 0.6946818806743381}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5499226489315822}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - DDR ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08784433552302591}, {"determining": "( ( BR * FirstVNF_RAM ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( CRS ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( Min( ARS ,( ACS + ARS ) ) / MDR ) ) ) - MDR ) )", "choosing": "( RRSe * ( DS * Min( Max( RCSe,( ( DS / RCSe ) * Max( MUR,( ( RRSe + RCSe ) * MLU ) ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150826}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.44639376218323584, "obj2": 0.49823816894822986}, {"determining": "( ARS / ( ( ( Min( FirstVNF_CPU ,( ( ACS - FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + MDR ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( PN * RRS ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( DS,( MLU + ( ( MLU + RRSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.3383412195764027}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) * ( FirstVNF_Mem_Server + ACS ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.02579960329911193}, {"determining": "( Max( MRS,BR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * DS ) + Max( ( MUM - MUM ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.604731649749745}, {"determining": "( ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - Min( ( Const - FirstVNF_CPU ) ,( ACS + ARS ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + Min( ACS ,ACS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( RMSe + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09088898123042258}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ACS ) - Min( FirstVNF_Mem ,PN ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( DS ,MUM ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7146699959682072}, {"determining": "( ( ARS / ARS ) / ( ( ( ( ( Max( Const,FirstVNF_RAM_Server ) + Min( ( CRS - CRS ) ,( PN - MDR ) ) ) / ARS ) / MRS ) - FirstVNF_CPU ) - Max( MDR,Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) )", "choosing": "( ( MLU * DS ) + Max( MLU,CS ) )", "obj1": 0.3079922027290448, "obj2": 0.6933007411883466}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6081871345029239, "obj2": 0.2855856837402959}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,( MLU * RMSe ) ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6120857699805068, "obj2": 0.2827842801228002}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( CS * MUM ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5034649292401571}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026572569441247}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - DS ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150826}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ( ( PN * AMS ) - Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( MLU * ( ( MUR * MLU ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( ARS,PN ) ) ) ) ) ) ) / ( ( ( Min( Const ,( FirstVNF_CPU_Server / BR ) ) + Max( CRS,PN ) ) * ( ( Min( DDR ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( CS / DS ),( MUM * ( ( Min( ( ( RCSe / MUC ) + CS ) ,MUM ) + DS ) + ( Max( RRSe,MLU ) - CS ) ) ) ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MUR * RMSe ) ) - ( Min( MUM ,MUC ) / ( CS + MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( RCSe / MUR ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.6881091617933723, "obj2": 0.21095266184153935}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( MDR - MRS ) * ( Max( ( DDR * DDR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( MUC,Min( Max( MUR,MUR ) ,MUM ) ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.9688109161793372, "obj2": 0.014822801452090223}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( Max( ( RRS - Const ),Max( CRS,PN ) ) * ( Min( MRS ,( MRS / MRS ) ) - ( ( MRS - PN ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + ( MUR - ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( PN - DDR ) * ( ( Max( Max( ( Min( ARS ,Const ) + FirstVNF_RAM_Server ),ARS ),( Min( ACS ,FirstVNF_Mem ) + FirstVNF_RAM ) ) - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( MUR ,Max( RCSe,RRSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - ( Const - Const ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ),( MLU * ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6745720961212988}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) * ( ( MRS - ( DDR - ACS ) ) / ( FirstVNF_Mem_Server + ( ( PN + DDR ) - BR ) ) ) )", "choosing": "( ( Max( ( MUR + MUR ),RRSe ) + ( Max( ( MUR + Min( ( MUM + ( RCSe / MUC ) ) ,Min( ( DS - MLU ) ,CS ) ) ),MUC ) * ( CS - ( ( MUC + Max( ( CS * MUR ),MLU ) ) * RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RMSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7219895395735026}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( DDR / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_Mem_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * RMSe ) + Max( ( ( MLU + CS ) * MUC ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ),( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6013056273607587}], "30": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * ( FirstVNF_RAM_Server * AMS ) ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( RRSe,MLU ) ,( MUC + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.36748632075958987}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ),( ( DS * Min( MUM ,RRSe ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.47368421052631576, "obj2": 0.47895016897906395}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS - FirstVNF_CPU ) / ( ( ( ( CRS - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),AMS ) ) ) ) * ( FirstVNF_Mem_Server / CRS ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Max( ( MUM + Min( MLU ,MLU ) ),( ( DS + MUR ) - MUR ) ) + MUR ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5048732943469786, "obj2": 0.44622074290857056}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ARS - DDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ( ( BR * BR ) - DDR ) * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe / RRSe ) * ( MUC + Min( MUR ,MLU ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5703125517518365}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) - ARS ) / ( Min( FirstVNF_Mem ,Min( CRS ,( Const + CRS ) ) ) + AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,CS ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / Max( MUM,MUR ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6265725903769934}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) * ( ( Min( DDR ,Min( ( FirstVNF_CPU_Server - ( BR / ( ARS + FirstVNF_Mem_Server ) ) ) ,RRS ) ) - ( ( ( Min( FirstVNF_RAM ,MRS ) / MDR ) * ( ( CRS + ( RRS / BR ) ) - FirstVNF_CPU_Server ) ) + ( PN - DDR ) ) ) / Max( BR,ARS ) ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,Min( Max( MUC,Min( RMSe ,CS ) ) ,CS ) ) ) ) + Max( MLU,Min( ( ( MUR - DS ) - RCSe ) ,RMSe ) ) ) / ( Max( RRSe,( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6433361348590109}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ( ( ( ACS * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,Min( ARS ,Max( ARS,CRS ) ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) / ARS )", "choosing": "( ( Max( ( MUR + MUR ),RRSe ) + ( Max( ( MUR + Min( ( Max( MUR,RRSe ) / MUC ) ,Min( ( DS - MLU ) ,RCSe ) ) ),MUC ) * ( CS - ( ( MUC + Max( ( CS * MUR ),MLU ) ) * RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RMSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.5594541910331384, "obj2": 0.3383412195764027}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( ( ARS + ( PN - ACS ) ),PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( RMSe * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17309247515675968}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) / ( ( ( ( ( PN + Max( ( CRS - FirstVNF_RAM ),PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( Min( Const ,Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * MUM ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( MLU,MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( Min( RMSe ,Min( RMSe ,CS ) ) - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.41325536062378165, "obj2": 0.5387309534928938}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU / MLU ) ) - ( DS / ( RCSe * DS ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MLU + ( Min( ( ( DS / CS ) - Min( MUR ,MLU ) ) ,Min( RCSe ,DS ) ) + CS ) ) * RRSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16814989922174986}, {"determining": "( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7152873497390853}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( Const - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / Min( Max( MUR,RCSe ) ,RMSe ) ) - ( MUC * MUM ) ) ) / RMSe ) * MLU ) - ( ( ( MLU * ( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6314226067925276}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,ARS ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),( RRS - FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_RAM_Server * DDR ) * Const ) - MDR ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * Max( MUM,( RRSe / ( RRSe / MLU ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11797303090719742}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( ( ( FirstVNF_Mem_Server / RRS ) - BR ) * ARS ) ) ) ) ) / ( ( ( ( ( Max( PN,CRS ) + ( Const - RRS ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_Mem ) ) - ACS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS / Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( DS + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) / ( ( RMSe * ( ( CS - RRSe ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4928629891599782}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099234}, {"determining": "( Min( ( Const - Const ) ,( ACS + Max( ( Const - ACS ),FirstVNF_Mem ) ) ) * ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) * Max( RCSe,( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),Max( MUR,RCSe ) ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / Max( ( ( Max( FirstVNF_Mem_Server,( ( DDR * ( Const + FirstVNF_CPU_Server ) ) - CRS ) ) + FirstVNF_Mem_Server ) + RRS ),Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,( MUC * ( RCSe + MUR ) ) ) / ( MUR * MUR ) )", "obj1": 0.9649122807017544, "obj2": 0.018981345707025536}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( RRSe * MUC ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6081871345029239, "obj2": 0.2855856837402959}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( Const * RRS ) )", "choosing": "Min( ( ( MUM / ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,MUC ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5525828188001701}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( MLU * DS ) * RMSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5250320633058247}, {"determining": "( ( ARS - MDR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( ( MUC + MUC ),( RRSe / ( RMSe * ( MLU * DS ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9103313840155945, "obj2": 0.04331444945942277}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( FirstVNF_RAM - MRS ) + MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( Min( DS ,Max( MUR,MUM ) ) * ( DS - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( CS * RMSe ) ) + CS ) ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5903454825509233}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15456022455379928}, {"determining": "( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / ( ( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * Max( ( ( RCSe * RCSe ) / ( ( RRSe + DS ) + DS ) ),RCSe ) ) ) )", "obj1": 0.44639376218323584, "obj2": 0.4969344328542436}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) / ( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6179337231968811, "obj2": 0.2799538958450856}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( Max( RCSe,( MUM + DS ) ),MUC ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5414564007564606}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( ACS * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / ( CS * MUM ) ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( RMSe * CS ) ) + CS ) ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5903454825509233}, {"determining": "( ( BR * FirstVNF_RAM ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( CRS ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( Min( ARS ,( ACS + ARS ) ) / MDR ) ) ) - MDR ) )", "choosing": "( RRSe * ( DS * Min( Max( RCSe,( ( DS / RCSe ) * Max( MUR,( ( RRSe + RCSe ) * MLU ) ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150826}, {"determining": "( ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - RCSe ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7875243664717348, "obj2": 0.10958961741150826}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) * ( ( MLU * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( CS * MUM ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( ( MRS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / Min( Max( FirstVNF_CPU,BR ) ,( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6471734892787524, "obj2": 0.2487305932105213}, {"determining": "( Min( DDR ,( MRS - ( FirstVNF_Mem - BR ) ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( MDR - AMS ) ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / ( MLU * ( ( ( RMSe * MLU ) + MLU ) - ( MUR - MLU ) ) ) ) ) ) / ( MLU * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( RMSe * CS ) ) + CS ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( ACS * ARS ) ) ) ) ) / ( ( Const * ( ( Const - MRS ) + Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( ( MUC - MUR ) * MLU ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09787361831903861}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8615984405458089, "obj2": 0.06690098951713805}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server * DDR ) * ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9902534113060428, "obj2": 0.004939328694023837}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * Const ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / Max( RRSe,( CS + DS ) ) ) * MLU ) - ( ( ( MLU * ( ( CS + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.010262773475226878}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3684210526315789, "obj2": 0.6051134428763868}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( Min( ARS ,Const ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08732812812126894}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026572569441247}, {"determining": "( MDR / ( ( ARS * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) / BR ) + Max( CRS,PN ) ) ) - CRS ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / MUM ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( CS * ( ( ( ( RMSe - Min( RMSe ,( CS / RCSe ) ) ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442257}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,( MLU * RMSe ) ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6120857699805068, "obj2": 0.2827842801228002}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * Const ) ) / Min( ( Const - Const ) ,( ( FirstVNF_RAM * ( MDR - AMS ) ) + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) / ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( Max( MLU,MUR ),MUR ) ) / ( ( RCSe / ( DS / RRSe ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.746588693957115, "obj2": 0.14827473550833364}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ARS ) ) / AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( MUM - ( RMSe * Max( CS,RRSe ) ) ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) / MUR )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861942}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( RCSe / MUC ) - ( MUC * MUM ) ) ) / Max( RRSe,( CS + DS ) ) ) * MLU ) - ( ( ( MLU * ( RRSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ARS * ( ( ( Max( Min( ARS ,Const ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) * MUR ) )", "obj1": 0.9746588693957114, "obj2": 0.011978517599907175}, {"determining": "( ( ARS - MDR ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.5633528265107213, "obj2": 0.3373734219928573}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6718216602829735}, {"determining": "( MDR / ( ( ( Max( CRS,PN ) + ( Const * Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU ) ) ) ) * FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( ( RRSe / MLU ) * DS ) - RMSe ) - CS ) ) ) ,( ( RRSe - Min( Max( MUM,RCSe ) ,MUC ) ) * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) * ( ( RMSe / ( ( CS / RMSe ) + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6751050177936408}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( MDR * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( FirstVNF_RAM_Server * AMS ) ,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "Min( ( ( RMSe * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUR ) ) ) ,RRSe ) + ( DS * MLU ) ) - MUC ) ) ,( CS + ( RMSe - Max( ( RRSe / ( ( Max( RRSe,CS ) / RRSe ) - Min( Max( RCSe,DS ) ,( RRSe - CS ) ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.030534801142594138}, {"determining": "( Max( MRS,BR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * DS ) + Max( ( MUM - MUM ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.604731649749745}, {"determining": "( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * Min( ( RCSe * CS ) ,MLU ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6374269005847953, "obj2": 0.25676269177030747}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( DDR / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_Mem_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * RMSe ) + Max( ( ( MLU + CS ) * MUC ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ),( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6013056273607587}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,Min( ARS ,( MRS / MRS ) ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( ( RMSe / ( Max( RCSe,( MUR * MUR ) ) - ( MLU + ( RRSe * MUC ) ) ) ) - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.3383412195764027}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18389913356562798}], "31": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( ( BR - ( PN + MDR ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RCSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.36748632075958987}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ),( ( DS * Min( MUM ,RRSe ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5048732943469786, "obj2": 0.43885744495663565}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * Max( Const,FirstVNF_CPU ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - ( Max( RRSe,DS ) + Max( Min( ( CS * MUM ) ,RMSe ),( ( MUR / ( RRSe + RCSe ) ) * DS ) ) ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + MUM ) ),MUC ) - RMSe ) * Min( ( CS * RRSe ) ,( ( MLU + ( CS - CS ) ) * MLU ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6939571150097466, "obj2": 0.20477963299695684}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ARS - DDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ( ( BR * BR ) - DDR ) * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( RMSe / RRSe ) * ( MUC + Min( MUR ,MLU ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * MDR ),CRS ) ) * Const ) - MDR ) ) / ( Const * RRS ) )", "choosing": "Min( ( ( MUM / ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) / MUR ) ,( ( Max( Max( Max( RMSe,RCSe ),( MUM + ( RMSe * Min( MUC ,MUC ) ) ) ),MUC ) - RMSe ) * RRSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU * ( ( CS + RMSe ) / MUM ) ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4756335282651072, "obj2": 0.4762899991104758}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) / ARS ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / Min( Min( ARS ,Const ) ,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09212927653244209}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( MRS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / Min( Max( FirstVNF_CPU,BR ) ,( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6471734892787524, "obj2": 0.2487305932105213}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( Min( DDR ,( MRS - ( FirstVNF_Mem - BR ) ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( MDR - AMS ) ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / ( MLU * ( ( ( RMSe * MLU ) + MLU ) - ( MUR - MLU ) ) ) ) ) ) / ( MLU * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026572569441247}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( ( Const - RRS ) / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - ( MUM / MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.69128132394316}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM ) ) * MDR ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ( Min( ARS ,MDR ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) ) - MDR ) )", "choosing": "( ( ( ( DS / ( ( ( RMSe * RCSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,MUR ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( ( MUC + MUM ),( MUR / RCSe ) ) ) ) ) ) + ( ( RMSe + MUM ) - MLU ) ) / Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6656507016930645}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( ( ( FirstVNF_Mem_Server / RRS ) - BR ) * ARS ) ) ) ) ) / ( ( ( ( ( Max( PN,CRS ) + ( Const - RRS ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_Mem ) ) - ACS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS / Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( DS + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) / ( ( RMSe * ( ( CS - RRSe ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4928629891599782}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU / MLU ) ) - ( DS / ( RCSe * DS ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MLU + ( Min( ( ( DS / CS ) - Min( MUR ,MLU ) ) ,Min( RCSe ,DS ) ) + CS ) ) * RRSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16814989922174986}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( ( RRS - MRS ) + Max( CRS,PN ) ) * ( BR / Const ) ) - Const ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + Max( RCSe,MLU ) ) ) ),( ( ( RMSe - ( MUR * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18389913356562798}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( MDR * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Min( RRSe ,RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( RRSe * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5369650616432582}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) - MDR ) )", "choosing": "Min( ( Min( ( MUR + Min( RRSe ,MLU ) ) ,RMSe ) / MLU ) ,( ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( ( RMSe + DS ) + MUR ) - RCSe ) / MLU ) ) - RMSe ) * RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7019677533244447}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) - ARS ) / ( Min( FirstVNF_Mem ,Min( CRS ,( Const + CRS ) ) ) + AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,CS ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / Max( MUM,MUR ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6265725903769934}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( ARS * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( ( BR - ( FirstVNF_CPU + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( Min( Max( CS,RMSe ) ,( MLU / RCSe ) ) * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - ( ( RRSe - ( MLU - RRSe ) ) - Max( DS,MLU ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5703125517518365}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( FirstVNF_RAM - MRS ) + MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( Min( DS ,Max( MUR,MUM ) ) * ( DS - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( CS * RMSe ) ) + CS ) ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5903454825509233}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( ( ARS + ( PN - ACS ) ),PN ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( Min( RRSe ,MLU ) * DS ) - RMSe ) - CS ) ) ) ,( RMSe * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * ( RRSe - ( ( MUR - RRSe ) * MUM ) ) ) * ( ( MUR / ( MLU + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17309247515675968}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6081871345029239, "obj2": 0.2855856837402959}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / Max( ( ( Max( FirstVNF_Mem_Server,( ( DDR * ( Const + FirstVNF_CPU_Server ) ) - CRS ) ) + FirstVNF_Mem_Server ) + RRS ),Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,( MUC * ( RCSe + MUR ) ) ) / ( MUR * MUR ) )", "obj1": 0.9649122807017544, "obj2": 0.018981345707025536}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / ARS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( Min( RCSe ,( MLU * RMSe ) ) * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6179337231968811, "obj2": 0.2799538958450856}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5525828188001701}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) * Min( ( ( MLU + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6842105263157895, "obj2": 0.21340403540327466}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ACS - ( MRS * ARS ) ) * ( ( MRS - ( ( Const * ( ( Const * ACS ) + Max( ( ACS * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( BR - ( PN + MDR ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( CS ,RMSe ) - RCSe ) / ( MUC + Min( DS ,MUM ) ) ) + MUM ) * ( CS + RCSe ) ) / RMSe ) * MLU ) - ( ( Min( MLU ,( ( MLU + RMSe ) / MUM ) ) / MUR ) * CS ) )", "obj1": 0.38011695906432746, "obj2": 0.5903454825509233}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( MDR / ( ( ( Max( CRS,PN ) + ( Const * Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU ) ) ) ) * FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( ( RRSe / MLU ) * DS ) - RMSe ) - CS ) ) ) ,( ( RRSe - Min( Max( MUM,RCSe ) ,MUC ) ) * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) * ( ( RMSe / ( ( CS / RMSe ) + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.5867446393762183, "obj2": 0.3108494931515596}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * Max( RCSe,( Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) * ( ( MLU * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( CS * MUM ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( MDR / ( ( ( ( ( Max( ( ARS - FirstVNF_CPU ),( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ( Const - Const ) ) + Max( FirstVNF_CPU,DDR ) ) * ARS ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,( ( MLU * MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,Min( ( ( ( CS * CS ) - DS ) - RCSe ) ,RMSe ) ) ) / ( ( RRSe * ( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( RCSe - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( RMSe * CS ) ) + CS ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( MUR - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,MLU ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5703125517518365}, {"determining": "( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7152873497390853}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.47368421052631576, "obj2": 0.47895016897906395}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( DDR / FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_Mem_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * RMSe ) + Max( ( ( MLU + CS ) * MUC ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ),( Max( MLU,RMSe ) - ( CS / CS ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6013056273607587}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - RCSe ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11054562772453738}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15456022455379928}, {"determining": "( ( ( ( Const - ARS ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( Min( ARS ,Const ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08732812812126894}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MLU + MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8615984405458089, "obj2": 0.06690098951713805}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) / ( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3684210526315789, "obj2": 0.6051134428763868}, {"determining": "( MDR / ( ( ( Max( CRS,PN ) + ( Const * Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU ) ) ) ) * FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( ( RRSe / MLU ) * DS ) - RMSe ) - CS ) ) ) ,( ( RRSe - Min( Max( MUM,RCSe ) ,MUC ) ) * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) * ( ( RMSe / ( ( CS / RMSe ) + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.5867446393762183, "obj2": 0.3108494931515596}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6265725903769934}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,AMS ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,DDR ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( MLU ,Min( DS ,( MLU / RMSe ) ) ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUM,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5525828188001701}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14661408941591939}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) ) / ( MUR * MLU ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,AMS ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( Max( RCSe,( MUM + DS ) ),MUC ) / ( ( RRSe * ( Min( Min( ( ( DS - RCSe ) + Max( CS,MUC ) ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5414564007564606}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6082406950826413}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( MLU * DS ) * RMSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5250320633058247}, {"determining": "( ( ARS * ( ( ( Max( Min( ARS ,Const ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) * MUR ) )", "obj1": 0.9746588693957114, "obj2": 0.011978517599907175}, {"determining": "( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( DS / RMSe ) - ( MUM * ( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ) + ( Min( ( ( DS / RCSe ) + CS ) ,MUC ) + DS ) ) ) ) * Max( RCSe,DS ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.7485380116959064, "obj2": 0.14661408941591939}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( DS / MUR ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( RMSe - DS ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6718216602829735}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server * DDR ) * ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9902534113060428, "obj2": 0.004939328694023837}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS - MDR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( ( MUC + MUC ),( RRSe / ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( MLU + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9083820662768031, "obj2": 0.04417586664365819}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) + ( ( ( ( MRS - RRS ) + Max( CRS,PN ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.685130768762583}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( Max( MRS,BR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) + ( Const - RRS ) ) * ( ( Min( ( BR / Max( CRS,AMS ) ) ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( Const - Const ) ,( ACS + PN ) ) ) ) - MDR ) )", "choosing": "( ( DS * CS ) * Max( RCSe,( MLU * ( Max( Max( DS,MUC ),CS ) * ( ( ( MLU * DS ) + Max( ( MUM - MUM ),( MUR / RCSe ) ) ) + Min( Min( Max( RCSe,MUR ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.604731649749745}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}], "32": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN - ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - ( DS / ( CS * MUM ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( ( BR - ( PN + MDR ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RCSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.36748632075958987}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12159923932810222}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3659507677053537}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5026525628693163}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( Max( ( MDR * BR ),CRS ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU * ( ( CS + RMSe ) / MUM ) ) ),Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4756335282651072, "obj2": 0.476246485647331}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) / ARS ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / Min( Min( ARS ,Const ) ,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09212927653244209}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5048732943469786, "obj2": 0.43885744495663565}, {"determining": "( ( ARS * ( ( ( Max( Min( ARS ,Const ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - RRS ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) * MUR ) )", "obj1": 0.9746588693957114, "obj2": 0.011978517599907175}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),DS ) * ( MUC + MUC ) )", "obj1": 0.47953216374269003, "obj2": 0.4507754198780413}, {"determining": "( Min( DDR ,( MRS - ( FirstVNF_Mem - BR ) ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( MDR - AMS ) ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / ( MLU * ( ( ( RMSe * MLU ) + MLU ) - ( MUR - MLU ) ) ) ) ) ) / ( MLU * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - BR ) ,( ACS + ARS ) ) ),( ( PN - Max( MDR,Const ) ) / CRS ) ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * MUM ) / ( ( MUR - ( MLU * ( RCSe / MUM ) ) ) + ( CS * MUR ) ) ) - ( CS * DS ) ) ) / RRSe )", "obj1": 0.6179337231968811, "obj2": 0.2798990557940102}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( FirstVNF_CPU,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),CS ) ,MUC ) )", "obj1": 0.7524366471734892, "obj2": 0.14461844398072385}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ),( ( DS * Min( MUM ,RRSe ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6243239674598745}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.6510721247563352, "obj2": 0.24693957927454446}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( FirstVNF_CPU / ( BR + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( DS + DS ) / RCSe ) + ( RMSe / RCSe ) ) ) * MUR ) * RMSe ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628839}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS - MDR ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ARS / Min( AMS ,Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( ( MUC + MUC ),( RRSe / ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( MLU + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9083820662768031, "obj2": 0.04417586664365819}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,AMS ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( Max( RCSe,( MUM + DS ) ),MUC ) / ( ( RRSe * ( Min( Min( ( ( DS - RCSe ) + Max( CS,MUC ) ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5414564007564606}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( ( ( FirstVNF_Mem_Server / RRS ) - BR ) * ARS ) ) ) ) ) / ( ( ( ( ( Max( PN,CRS ) + ( Const - RRS ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_Mem ) ) - ACS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS / Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( DS + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) / ( ( RMSe * ( ( CS - RRSe ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4928629891599782}, {"determining": "( ( ARS - FirstVNF_CPU_Server ) / Max( ( ( Max( FirstVNF_Mem_Server,( ( DDR * ( Const + FirstVNF_CPU_Server ) ) - CRS ) ) + FirstVNF_Mem_Server ) + RRS ),Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,( MUC * ( RCSe + MUR ) ) ) / ( MUR * MUR ) )", "obj1": 0.9649122807017544, "obj2": 0.018981345707025536}, {"determining": "( MDR / ( ( ( ( ( Max( ( ARS - FirstVNF_CPU ),( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ( Const - Const ) ) + Max( FirstVNF_CPU,DDR ) ) * ARS ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,( ( MLU * MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,Min( ( ( ( CS * CS ) - DS ) - RCSe ) ,RMSe ) ) ) / ( ( RRSe * ( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( RCSe - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * Max( Const,FirstVNF_CPU ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ,MRS ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - ( Max( RRSe,DS ) + Max( Min( ( CS * MUM ) ,RMSe ),( ( MUR / ( RRSe + RCSe ) ) * DS ) ) ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + MUM ) ),MUC ) - RMSe ) * Min( ( CS * RRSe ) ,( ( MLU + ( CS - CS ) ) * MLU ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6939571150097466, "obj2": 0.20477963299695684}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( MLU * DS ) * RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( ( Max( DDR,DDR ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * Max( MLU,DS ) ) * ( ( Max( Max( MUR,RCSe ),MUC ) - RMSe ) * Min( ( ( Min( RRSe ,RCSe ) + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09787361831903861}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( Max( FirstVNF_CPU_Server,Const ) ,FirstVNF_Mem ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,RRS ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( MUR - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6286532175043744}, {"determining": "( MDR / ( ( ( Max( CRS,PN ) + ( Const * Min( FirstVNF_Mem ,( MDR + Min( ARS ,BR ) ) ) ) ) * ARS ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / DS ) ) / Min( MLU ,Max( MLU,MUR ) ) ) )", "obj1": 0.5867446393762183, "obj2": 0.3108494931515596}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( MUM ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * FirstVNF_RAM ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7914230019493177, "obj2": 0.10561567718653034}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( MDR / ( ( ( Max( MRS,( MRS * FirstVNF_CPU ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,( ( MLU * MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + ( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( ( RRSe * ( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( MUR - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.7153996101364523, "obj2": 0.18187334648932232}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( DS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5600062022818444}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) / ( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( ARS - MDR ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( Min( DS ,Min( RCSe ,RMSe ) ) + ( RRSe - ( DS * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679567}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5369650616432582}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Max( MRS,( MRS * FirstVNF_CPU ) ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( CS * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4928629891599782}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( Max( ( MLU - CS ),( ( MUR * ( ( MUR - ( ( MUC * MLU ) - ( RMSe - DS ) ) ) * MUM ) ) / ( MUM / MUC ) ) ) * Max( RCSe,( ( Min( Min( MLU ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( MDR - ARS ) / ( Min( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( PN - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Max( MUM,( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7199821693289183}, {"determining": "( MDR / ( ( ( Max( CRS,PN ) + ( Const * Min( FirstVNF_Mem ,Max( AMS,FirstVNF_CPU ) ) ) ) * FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( ( RRSe / MLU ) * DS ) - RMSe ) - CS ) ) ) ,( ( RRSe - Min( Max( MUM,RCSe ) ,MUC ) ) * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) * ( ( RMSe / ( ( CS / RMSe ) + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.5867446393762183, "obj2": 0.3108494931515596}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU / MLU ) ) - ( DS / ( RCSe * DS ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( Max( DS,( MUR / RCSe ) ) + ( MLU * DS ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( MLU + ( Min( ( ( DS / CS ) - Min( MUR ,MLU ) ) ,Min( RCSe ,DS ) ) + CS ) ) * RRSe ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16814989922174986}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ,MRS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.6939571150097466, "obj2": 0.20477963299695684}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ( DDR * RRS ) ,Min( ( ARS / AMS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - DDR ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( ( RCSe - MUM ) * ( MUC / RMSe ) ) ,MUM ) + DS ) + Max( Max( RRSe,MLU ),CS ) ) ) ) * ( MUR * MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( ( ARS + ( PN - ACS ) ),PN ) ) * ARS ) - MDR ) )", "choosing": "( ( ( ( Min( MLU ,Min( DS ,( MLU / RMSe ) ) ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUM,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17309247515675968}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( MLU * DS ) * RMSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5250320633058247}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ( ARS - MDR ) ) ) / AMS ) )", "choosing": "( ( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,Max( MLU,MUR ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.15112925226682009}, {"determining": "( ( PN - DDR ) * ( ( MRS - ( ( PN - MDR ) / ( ( PN + Max( CRS,PN ) ) * ( Min( Max( FirstVNF_CPU,BR ) ,( MDR / FirstVNF_CPU_Server ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) ) ) / AMS ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7309941520467836, "obj2": 0.16588495344375812}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) ) / ( MUR * MLU ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( RRSe * MUM ) ) * CS ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6113019772643788}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - MRS ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * ( BR - FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( ( MUR / MUC ) + DS ) / RMSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.47368421052631576, "obj2": 0.47895016897906395}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - RCSe ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11054562772453738}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.7485380116959064, "obj2": 0.14655924936484402}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( ACS * Max( AMS,ACS ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( ( ( MUR / RRSe ) * ( MUC + MUC ) ) - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( RMSe * CS ) ) + CS ) ) ) ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6719040078018605}, {"determining": "( ( Max( ( PN / MRS ),MRS ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) - Min( ACS ,( RRS - Const ) ) ) ) ) * ( ( ( PN - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Max( ( DS * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MLU / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( ( PN / ( FirstVNF_RAM * MRS ) ) + ( ARS + ( FirstVNF_Mem * DDR ) ) ) + ( ( ( ( MRS - RRS ) + Max( CRS,PN ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.685130768762583}, {"determining": "( ( PN * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( Max( ( DDR * BR ),CRS ) + ( Const - ACS ) ) ) - MDR ) ) ) - ( FirstVNF_RAM_Server + ( ( ARS - BR ) - ( ( MRS + ( ACS - CRS ) ) / BR ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7152120565413868}], "33": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Min( DDR ,( MRS - ( FirstVNF_Mem - BR ) ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( MDR - AMS ) ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / ( MLU * ( ( ( RMSe * MLU ) + MLU ) - ( MUR - MLU ) ) ) ) ) ) / ( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( PN - ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - ( DS / ( CS * MUM ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ( FirstVNF_RAM_Server - Max( RRS,FirstVNF_Mem ) ) - ARS ) / ( ( Min( DDR ,( FirstVNF_RAM_Server - AMS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) / ( ACS + ARS ) ) ) ) + MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3994771905833448}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5048732943469786, "obj2": 0.43885744495663565}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),DS ) * ( MUC + MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.4636789217311707}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12159923932810222}, {"determining": "( ( ARS * ( ( ( Max( ( FirstVNF_Mem / FirstVNF_Mem ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - PN ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + RCSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3714981591182179}, {"determining": "( ARS / ( ( ( ( Const * ( AMS - BR ) ) + Max( CRS,PN ) ) * ( Max( Min( Max( FirstVNF_RAM,DDR ) ,( DDR - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - RCSe ) ,RCSe ) / RRSe ) * ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( ( CS + MUR ),RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( MLU + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6978557504873294, "obj2": 0.20286761237089856}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ARS / Min( ( FirstVNF_CPU_Server + PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ARS ) / ( ( ( ( BR - ( ( Min( MDR ,RRS ) - PN ) * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Max( FirstVNF_CPU_Server,Const ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( ACS * ( BR + FirstVNF_Mem ) ) ) / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( RCSe * RMSe ) ) / Min( MUR ,Max( MLU,MUR ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.40533313291990813}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.6510721247563352, "obj2": 0.24693957927454446}, {"determining": "( MDR / ( ( ( Max( CRS,PN ) + ( Const * Min( FirstVNF_Mem ,( MDR + Min( ARS ,BR ) ) ) ) ) * ARS ) - MDR ) )", "choosing": "Min( ( ( RRSe - ( RRSe * RCSe ) ) + ( ( Max( DS,( MUR / Max( ( MUC / RCSe ),( MLU / RCSe ) ) ) ) + ( MLU * DS ) ) - ( ( ( ( RRSe / MLU ) * DS ) - RMSe ) - CS ) ) ) ,( CS * ( ( ( Max( Min( ( CS / RRSe ) ,DS ),RMSe ) * ( MLU + MUC ) ) * Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ) * ( ( MUR / ( ( CS / RMSe ) + ( CS / Min( MUR ,RRSe ) ) ) ) / MUR ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.3165502741229017}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * CRS ) ) ) ) ) / Min( Min( BR ,( ARS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( RRS * PN ) ) ) ) - Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe / RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RCSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.36210022348802334}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ACS + ARS ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( RRSe + DS ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5146198830409356, "obj2": 0.42950473459065297}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5369650616432582}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * FirstVNF_RAM ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7914230019493177, "obj2": 0.10561567718653034}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,AMS ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( Max( RCSe,( MUM + DS ) ),MUC ) / ( ( RRSe * ( Min( Min( ( ( DS - RCSe ) + Max( CS,MUC ) ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5537004945879487}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( FirstVNF_CPU,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),CS ) ,MUC ) )", "obj1": 0.7524366471734892, "obj2": 0.14461844398072385}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ),( ( DS * Min( MUM ,RRSe ) ) * RMSe ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RRSe * ( MLU + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( ACS * Max( AMS,ACS ) ) ) ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( ( MLU + MUM ),MUM ) + Max( ( RCSe - MUM ),DS ) ) ) ) * ( ( MUM + CS ) + ( Max( ( RMSe * MUC ),( RMSe * ( MLU * DS ) ) ) / RRSe ) ) ) ) * ( RCSe - ( ( ( MUR / RRSe ) * ( MUC + MUC ) ) - Min( Max( ( ( RCSe * RCSe ) / ( ( MUM + RRSe ) + DS ) ),RCSe ) ,Max( DS,( ( DS / ( RMSe * CS ) ) + CS ) ) ) ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6719040078018605}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( MLU ,Min( DS ,( MLU / RMSe ) ) ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUM,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( MDR + CRS ) ) ) / ( FirstVNF_RAM_Server + PN ) ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / DS ) ) / Min( ( DS / ( MUC * MUM ) ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.17952050348265727}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / CRS ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( RRSe * ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ) ) * CS ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6113019772643788}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) / ARS ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / Min( Min( ARS ,Const ) ,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09212927653244209}, {"determining": "( ( ( ( CRS * PN ) / MDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * Min( Max( FirstVNF_CPU,FirstVNF_CPU ) ,RRS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( ACS - CRS ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( MUC * RRSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( ( ( MLU + MUR ) + ( MUC * MUC ) ),MUC ) - RMSe ) * Min( ( ( ( MLU / CS ) + ( RRSe - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8362573099415205, "obj2": 0.08000160423484196}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - MRS ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * ( BR - FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( ( MUR / MUC ) + DS ) / RMSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( MRS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( FirstVNF_CPU / ( ( ( Max( RRS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( Min( ACS ,( FirstVNF_CPU_Server + PN ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( FirstVNF_CPU * CRS ) ) - MDR ) )", "choosing": "( ( ( ( ( RCSe + RMSe ) / MLU ) + RMSe ) * CS ) * Max( Max( CS,MUC ),( MLU * ( Max( ( ( DS / ( CS * MUM ) ) - ( RCSe * ( MLU * RMSe ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR * RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM + MLU ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5251945708742018}, {"determining": "( ( ARS - ( ( ARS / ( Const / MRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( ( ( Const - FirstVNF_Mem ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( MRS + ( ACS - CRS ) ) / BR ) ,ACS ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( RRSe * MUM ) ) * ( ( MUC + CS ) / Max( RCSe,MUC ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - ( MUM / MUR ) ) ) + ( MUR / MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6830237078220175}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( DS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5600062022818444}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( Min( CS ,RMSe ) / DS ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6236992441009815}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Const - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) * DS ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) * ( Max( RRSe,( CS + MUR ) ) - CS ) ) ) * Max( ( Min( RCSe ,( ( MUR / CS ) - MUC ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6140350877192983, "obj2": 0.2818395963977017}, {"determining": "( PN / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,FirstVNF_Mem ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( ( RMSe * DS ) / ( RMSe * CS ) ) + CS ) ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9805068226120858, "obj2": 0.008360866525440673}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5243664717348928, "obj2": 0.4155044190852679}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / ( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( RMSe - ( MUC * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) * MUR ) )", "obj1": 0.3079922027290448, "obj2": 0.6895917775377202}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),Min( AMS ,Max( ( MDR * ( Const + Const ) ),MDR ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( ( ACS - FirstVNF_CPU_Server ) - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * CRS ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( Min( ( Const - Const ) ,( ACS + ARS ) ) / MDR ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( RRSe * ( ( ( DS / RCSe ) + CS ) - Min( Max( RCSe,( ( DS / RCSe ) * Max( ( MUR + ( RMSe - RCSe ) ),RRSe ) ) ) ,( CS * RRSe ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11054562772453738}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MLU,Min( ( ( CS - MUC ) / Min( MUR ,CS ) ) ,RCSe ) ) / ( MUR * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( ( FirstVNF_RAM_Server * ARS ) ,AMS ) ) ) - ( FirstVNF_RAM_Server - ( ARS / ( AMS + ( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Max( ( ( FirstVNF_CPU / Max( MRS,AMS ) ) - ( FirstVNF_Mem_Server + AMS ) ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( MUC * DS ) ,RMSe ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + Min( ( Max( RRSe,MLU ) - RMSe ) ,RCSe ) ) ) - ( CS * RMSe ) ) + ( RCSe + ( MUR - RCSe ) ) ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.6159844054580896, "obj2": 0.2779057437296327}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ARS * ARS ) - FirstVNF_Mem ) * Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( RRS - ( MDR / AMS ) ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * ( RCSe * DS ) ) - Max( Min( ( RCSe * CS ) ,MLU ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RRSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8226120857699805, "obj2": 0.08701594561063693}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( MUM ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( MDR - ARS ) / ( Min( ( ARS - ( ( BR - Min( Min( AMS ,FirstVNF_Mem_Server ) ,DDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( PN - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Max( MUM,( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + ( CS * ( ( MUM / MUM ) + RRSe ) ) ) + ( RCSe + RCSe ) ) ) / ( MLU / MUR ) )", "obj1": 0.29239766081871343, "obj2": 0.7148501132353822}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( ( DS / RCSe ) + CS ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09741650093935472}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.44639376218323584, "obj2": 0.4940129676856583}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) / ( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * Min( ( PN - ACS ) ,( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + ( Max( RRSe,MLU ) * MUR ) ) / Max( RMSe,( ( Max( RRSe,( ( CS - DS ) - DS ) ) / RCSe ) + MUM ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5005157351887244}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( MLU * DS ) * RMSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5250320633058247}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ( ( MRS + ( ACS - CRS ) ) / BR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,( MUM / MUR ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5442469384686113}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( RRSe ,MLU ) ) ) / MLU ) ,( RRSe / RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * BR ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( MUM,( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.8011695906432749, "obj2": 0.09787361831903861}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,AMS ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( Max( RCSe,( MUM + DS ) ),MUC ) / ( ( RRSe * ( Min( Min( ( ( DS - RCSe ) + Max( CS,MUC ) ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( ( MUM + Min( ( CS / RCSe ) ,Max( ( MUR + DS ),( RCSe + ( RMSe * MLU ) ) ) ) ) + ( MUM + DS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5414564007564606}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( RRS ,DDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( MUR / Min( RRSe ,MLU ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6758918093113567}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( MDR / ( ( ( ( ( Max( ( ARS - FirstVNF_CPU ),( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ( Const - Const ) ) + Max( FirstVNF_CPU,DDR ) ) * ARS ) - MDR ) )", "choosing": "( ( ( ( DS * ( ( ( MUM / MUC ) * ( RCSe * RMSe ) ) / Min( ( MUR * MLU ) ,DS ) ) ) + ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) * Min( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) ,( ( MLU * MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) + Max( MLU,Min( ( ( ( CS * CS ) - DS ) - RCSe ) ,RMSe ) ) ) / ( ( RRSe * ( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( RCSe - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( MDR / ( ( ( ( Const * ( Const - Const ) ) + Max( ( ARS + ( PN - ACS ) ),ARS ) ) * ARS ) - MDR ) )", "choosing": "( ( ( ( Min( MLU ,Min( DS ,( MLU / RMSe ) ) ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RMSe ,RMSe ),MUM ) * Max( CS,Max( MUM,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.7016219933229262}, {"determining": "( ( ARS - ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS * MUM ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6970049902748635}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( ( ( MRS - ( ( MDR - ( MRS / ( MRS + AMS ) ) ) / ( ARS * DDR ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15551623486682845}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( ( ( FirstVNF_Mem_Server / RRS ) - BR ) * ARS ) ) ) ) ) / ( ( ( ( ( Max( PN,CRS ) + ( Const - RRS ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_Mem ) ) - ACS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS / Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( DS + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) / ( ( RMSe * ( ( CS - RRSe ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4928629891599782}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( ( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ),MUR ) ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( MDR - BR ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),Min( AMS ,Max( ( MDR * ( Const + FirstVNF_Mem_Server ) ),MDR ) ) ) - ( ( BR + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( MLU * DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( RCSe,RMSe ) * Min( DS ,( MUM * RMSe ) ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.033763164602739405}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( MUC - Min( DS ,MUC ) ) - ( RCSe - ( MUM / Max( MUR,( MLU + ( ( MLU + RMSe ) - ( RMSe - RMSe ) ) ) ) ) ) ) * ( DS / RMSe ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}], "34": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( MRS - ( FirstVNF_Mem - BR ) ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( MDR - AMS ) ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / ( MLU * ( ( ( RMSe * MLU ) + MLU ) - ( MUR - MLU ) ) ) ) ) ) / ( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS * ( ( ( Max( ( FirstVNF_Mem / FirstVNF_Mem ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - PN ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + RCSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3714981591182179}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5048732943469786, "obj2": 0.43885744495663565}, {"determining": "( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( FirstVNF_CPU_Server + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( ( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( DS + DS ) ) - CS ) ) ),MUR ) ) )", "obj1": 0.9727095516569201, "obj2": 0.01396145427270254}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU * ( ( Min( RMSe ,( MUC * MUC ) ) + ( ( Min( MUM ,RMSe ) / MUM ) / DS ) ) / Min( MLU ,Max( MLU,MUR ) ) ) ),DS ) * Min( MUC ,MUC ) )", "obj1": 0.47173489278752434, "obj2": 0.4599670355366048}, {"determining": "( ( ( PN - MDR ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,( PN + ( FirstVNF_CPU - CRS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( DS * MUC ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.17093107578041936}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31545352925634307}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( MUM / ( Max( ( MUR + ( RMSe - DS ) ),RRSe ) + Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29730826641423663}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * Min( ( PN - ACS ) ,( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + ( Max( RRSe,MLU ) * MUR ) ) / Max( RMSe,( ( Max( RRSe,( ( CS - DS ) - DS ) ) / RCSe ) + MUM ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5005157351887244}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),DS ) * ( MUC + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MUM / MUR ) - MLU ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.36062378167641324, "obj2": 0.6108715686742403}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - Max( ( MDR * AMS ),CRS ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS * MUM ) / ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( RMSe - ( MUC * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6187608811814573}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.7056530214424951, "obj2": 0.189877019444257}, {"determining": "( ( Min( PN ,( ARS - PN ) ) - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( MLU ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.6257309941520468, "obj2": 0.27540504363475377}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) + Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR + RRSe ) * Min( MUC ,Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,Min( MUR ,CS ) ) ),CS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ( ARS - ( Min( ( Const - ( RRS - Const ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + FirstVNF_Mem ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_Mem ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( RRSe ,( RCSe / MLU ) ) - ( Max( Min( CS ,RMSe ),MLU ) + Max( Max( MUC,MUR ),( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5489553120306223}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ( ( CRS * PN ) / MDR ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) / ( MDR - ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) - ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + Max( MLU,Max( ( MLU * MUR ),MUC ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3365599758985228}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7738791423001949, "obj2": 0.12159923932810222}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ARS - ( Min( ( Min( Max( MRS,MDR ) ,RRS ) * Max( Max( CRS,PN ),( RRS - Const ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( ( BR - FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5349833634891038}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * CRS ) ) ) ) ) / Min( Min( BR ,( ARS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( RRS * PN ) ) ) ) - Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe / RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RCSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.36210022348802334}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( RRSe ,MLU ) ) ) / MLU ) ,( RRSe / RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( BR * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( FirstVNF_CPU_Server * BR ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / MUM ) * ( RCSe - Min( ( ( RCSe + RRSe ) * MLU ) ,( MUR + MUC ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( DS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5600062022818444}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ARS / Min( AMS ,( ( ( FirstVNF_Mem_Server / RRS ) - BR ) * ARS ) ) ) ) ) / ( ( ( ( ( Max( PN,CRS ) + ( Const - RRS ) ) * Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),FirstVNF_Mem ) ) - ACS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS / Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "( ( Max( ( ( ( DS / Max( ( MUC + MUR ),Min( RMSe ,RMSe ) ) ) + Min( ( DS + CS ) ,RRSe ) ) + ( MLU + MLU ) ),MUR ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) / ( ( RMSe * ( ( CS - RRSe ) + ( ( MLU * DS ) + Max( DS,( MLU - MLU ) ) ) ) ) + Min( Max( Max( ( ( MUR * MUR ) / RMSe ),Max( RRSe,( MUM / RCSe ) ) ),MUC ) ,RMSe ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4928629891599782}, {"determining": "( ( ARS * ( ( ( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( Min( Min( BR ,( FirstVNF_RAM_Server * ARS ) ) ,ARS ) - FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_CPU_Server,PN ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( AMS * FirstVNF_CPU_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( ( CS / Max( RRSe,( RCSe * CS ) ) ) * Min( ( ( RRSe * MUR ) * Max( MUM,MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04721310264806006}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,Max( PN,MRS ) ) ) * FirstVNF_Mem_Server ) + RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - ( ( RMSe - ( MUR - ( MUR - ( MUR / MUM ) ) ) ) + Max( RRSe,RRSe ) ) ) ) * ( MUC + MUC ) )", "obj1": 0.6335282651072125, "obj2": 0.26695431517132906}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - DDR ) + ( Min( ACS ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,DS ) ) + MLU ) ) ) ) ) * Max( ( MLU * CS ),RCSe ) )", "obj1": 0.8440545808966862, "obj2": 0.07536782707925468}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Const - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - Max( FirstVNF_CPU_Server,CRS ) ) )", "choosing": "( ( ( ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) * DS ) + ( ( Min( Min( Max( MUR,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) * ( Max( RRSe,( CS + MUR ) ) - CS ) ) ) * Max( ( Min( RCSe ,( ( MUR / CS ) - MUC ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6140350877192983, "obj2": 0.2818395963977017}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS + ARS ) ) - Min( ARS ,Min( ( FirstVNF_CPU_Server * ARS ) ,AMS ) ) ) ) / ( Min( BR ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RRSe / DS ),( ( ( ( MUC * RMSe ) / ( Max( MUC,Min( MUM ,RCSe ) ) + ( MUR * RRSe ) ) ) - ( MUR * DS ) ) + ( RCSe + RCSe ) ) ) / ( MUR / RCSe ) )", "obj1": 0.8011695906432749, "obj2": 0.0978736183190386}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) / ARS ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / Min( Min( ARS ,Const ) ,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09212927653244209}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.6510721247563352, "obj2": 0.24693957927454446}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / ( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( RMSe - ( MUC * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) * MUR ) )", "obj1": 0.3079922027290448, "obj2": 0.6895917775377202}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MLU,( MLU * DS ) ) / ( MUR * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * DS ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3638701405779727}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * DDR ),CRS ) ) ) - MDR ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Max( Const,FirstVNF_RAM_Server ) + Min( BR ,MRS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( Max( RCSe,( MUM + DS ) ),MUC ) - RMSe ) * Min( ( ( MLU + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6978557504873294, "obj2": 0.20286761237089856}, {"determining": "( ( ( MRS - ( ( MDR - ( MRS / ( MRS + AMS ) ) ) / ( ARS * DDR ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15551623486682845}, {"determining": "( Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( MDR + CRS ) ) ) / ( FirstVNF_RAM_Server + PN ) ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) / Min( ( DS / ( MUC * MUM ) ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.7173489278752436, "obj2": 0.17856449316962814}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5369650616432582}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.6159844054580896, "obj2": 0.2779057437296327}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ARS * ARS ) - FirstVNF_Mem ) * Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( RRS - ( MDR / AMS ) ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * ( RCSe * DS ) ) - Max( Min( ( RCSe * CS ) ,MLU ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * RRSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8226120857699805, "obj2": 0.08701594561063693}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( Max( BR,FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( ( ( DS * Min( RMSe ,RRSe ) ) * RMSe ),Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( MUC ,( MUC / Min( MUM ,MUM ) ) ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6963946807166157}, {"determining": "( ARS / ( ( ( ( ( ( CRS * PN ) / MDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / ( ( Min( MLU ,CS ) + ( RRSe - CS ) ) * MLU ) ) * ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) * MUR ) )", "obj1": 0.834307992202729, "obj2": 0.08090277449679568}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( MUM ,MUC ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ( MRS - ( ACS * FirstVNF_CPU ) ) / AMS ) * ( PN - DDR ) )", "choosing": "( Min( ( Min( ( ( MUC * MUR ) * RRSe ) ,RRSe ) - ( DS / ( ( Min( ( MUR + MUC ) ,Max( RRSe,MLU ) ) - Max( Max( RCSe,MLU ),( MUR * MUM ) ) ) * MUM ) ) ) ,( DS - CS ) ) / ( ( RRSe * ( ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( RCSe,( MUR / RCSe ) ) ) + Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7582846003898636, "obj2": 0.13750391034863946}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( MLU,MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) )", "obj1": 0.44639376218323584, "obj2": 0.4940129676856583}, {"determining": "( ( FirstVNF_RAM_Server * AMS ) / ( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RMSe - RMSe ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.219304510337956}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( MDR - ARS ) / ( Min( ( ARS - ( ( BR - Min( Min( AMS ,FirstVNF_Mem_Server ) ,DDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( PN - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Max( MUM,( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + ( CS * ( ( MUM / MUM ) + RRSe ) ) ) + ( RCSe + RCSe ) ) ) / ( MLU / MUR ) )", "obj1": 0.29239766081871343, "obj2": 0.7148501132353822}, {"determining": "( ( ARS - ( ( ARS / ( Const / MRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( ( ( Const - FirstVNF_Mem ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( MRS + ( ACS - CRS ) ) / BR ) ,ACS ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( RRSe * MUM ) ) * ( ( MUC + CS ) / Max( RCSe,MUC ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - ( MUM / MUR ) ) ) + ( MUR / MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6830237078220175}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( MDR / ( ( ( ( ( Max( ( ARS - FirstVNF_CPU ),( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) * ( Const - Const ) ) + Max( CRS,PN ) ) * ARS ) - MDR ) )", "choosing": "( MUR / ( ( RRSe * ( ( Max( DS,( ( MUR / MUR ) * RRSe ) ) + MUM ) + MUM ) ) + Min( Max( Min( ( RCSe / ( ( RRSe * MUM ) * ( RCSe - MUM ) ) ) ,MUR ),MLU ) ,RMSe ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( Min( CS ,MUR ) * Max( RCSe,( ( Min( Min( MUR ,DS ) ,CS ) / ( RCSe * MUC ) ) * DS ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( ( FirstVNF_RAM_Server * ARS ) ,AMS ) ) ) - ( FirstVNF_RAM_Server - ( ARS / ( AMS + ( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Max( ( ( FirstVNF_CPU / Max( MRS,AMS ) ) - ( FirstVNF_Mem_Server + AMS ) ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( MUC * DS ) ,RMSe ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + Min( ( Max( RRSe,MLU ) - RMSe ) ,RCSe ) ) ) - ( CS * RMSe ) ) + ( RCSe + ( MUR - RCSe ) ) ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ARS * ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( ( DS / RMSe ) - ( ( Max( DS,MLU ) - Max( MLU,( RCSe / MUR ) ) ) * ( ( ( Max( RCSe,RRSe ) * CS ) - MUM ) - ( MUC - MUR ) ) ) ) / MUR )", "obj1": 0.7621832358674464, "obj2": 0.13392109277811354}, {"determining": "( ( ( ( Const * ( MRS / FirstVNF_CPU ) ) + ( CRS * PN ) ) * ( ( ( ( DDR - FirstVNF_Mem ) / CRS ) / ( Const + RRS ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,( CRS + FirstVNF_Mem_Server ) ) ) ) / ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( ( ( Min( MUR ,MLU ) / ( ( ( MLU / MUM ) + CS ) - ( RCSe + ( DS / MLU ) ) ) ) - ( MUR * RRSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( Max( ( ( MLU + MUR ) + RMSe ),MUC ) - RMSe ) * Min( ( ( ( MLU / CS ) + ( RRSe - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.8362573099415205, "obj2": 0.08000160423484194}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.8810916179337231, "obj2": 0.05722098227190287}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( ( MUM / ( RRSe * MUM ) ) * CS ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( AMS * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * FirstVNF_RAM ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7953216374269005, "obj2": 0.10381333666262288}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( ARS / ( ( ( Max( RRS,Max( Max( CRS,FirstVNF_Mem_Server ),( ( AMS / AMS ) / MDR ) ) ) / RRS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - ( DS / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / DS ) ) / Min( ( DS / ( MUC * MUM ) ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( BR - MDR ) * ( Max( DDR,DDR ) - ( Max( ( ( PN / ( RRS - ACS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ),Min( AMS ,Max( ( MDR * ( RRS + Const ) ),MDR ) ) ) - ( ( FirstVNF_Mem + Const ) / ARS ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - DS ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9376218323586745, "obj2": 0.0337631646027394}, {"determining": "( PN / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,FirstVNF_RAM ) - ( AMS + FirstVNF_CPU ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( MLU ,Min( DS ,( MLU / RMSe ) ) ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * MUR ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RMSe ,RMSe ),MUM ) * Max( CS,Max( MUM,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * MUC ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.008360866525440673}], "35": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * DS ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,CRS ) / ( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( ( ARS / ARS ) / Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) ) ) - Max( MDR,( RRS * PN ) ) ) / Max( Max( RRS,CRS ),( Min( PN ,( Max( FirstVNF_CPU_Server,Const ) - Min( DDR ,RRS ) ) ) - MDR ) ) )", "choosing": "( Min( RRSe ,RCSe ) * ( MUR - ( RRSe - ( MLU - RRSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4920696494284133}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( Min( AMS ,ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) + ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * MUM ) - Min( ( ( ( CS - CS ) + Min( MLU ,MLU ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5165692007797271, "obj2": 0.42931388401808457}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * Min( ( PN - ACS ) ,( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + ( Max( RRSe,MLU ) * MUR ) ) / Max( RMSe,( ( Max( RRSe,( ( CS - DS ) - DS ) ) / RCSe ) + MUM ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5005157351887244}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) / ARS ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / Min( Min( ARS ,Const ) ,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09212927653244209}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( ( ( PN / ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( FirstVNF_Mem ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( RRSe ,MLU ) ) ) / MLU ) ,( RRSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452858}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5048732943469786, "obj2": 0.43885744495663565}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - Max( ( MDR * AMS ),CRS ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS * MUM ) / ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( RMSe - ( MUC * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6187608811814573}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,MUM ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ARS / ( ( ( ( ( ( CRS / Const ) - BR ) * Min( FirstVNF_CPU ,CRS ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) - ( DDR + PN ) ) ) - Min( Max( Const,PN ) ,PN ) ) )", "choosing": "( ( Min( ( ( RRSe - ( Min( DS ,( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / ( RCSe + MLU ) ) * ( ( Max( ( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ),( RMSe / DS ) ) - ( MUR * ( Max( ( ( MLU / CS ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.7056530214424951, "obj2": 0.189877019444257}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45996703553660456}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ARS * ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) / ( AMS / ( ( FirstVNF_Mem_Server + AMS ) + AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( RRSe * ( MUM * Min( CS ,DS ) ) ) ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / MLU ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6694554321784503}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * CRS ) ) ) ) ) / Min( Min( BR ,( ARS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( RRS * PN ) ) ) ) - Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe / RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RCSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.36210022348802334}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS + ARS ) ) - Min( ARS ,Min( ( FirstVNF_CPU_Server * ARS ) ,AMS ) ) ) ) / ( Min( BR ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RRSe / DS ),( ( ( ( MUC * RMSe ) / ( Max( MUC,Min( MUM ,RCSe ) ) + ( MUR * RRSe ) ) ) - ( MUR * DS ) ) + ( RCSe + RCSe ) ) ) / ( MUR / RCSe ) )", "obj1": 0.8011695906432749, "obj2": 0.0978736183190386}, {"determining": "( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / DS ) ) / Min( ( DS / ( MUC * MUM ) ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM * ARS ) ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( PN - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe - Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31545352925634307}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( AMS * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * FirstVNF_RAM ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7914230019493177, "obj2": 0.10561567718653032}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),CS ) ,MUC ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MLU,( MLU * DS ) ) / ( MUR * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / ( ACS + Max( ( RRS - ACS ),FirstVNF_Mem ) ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( RMSe - ( MUC * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) * MUR ) )", "obj1": 0.31773879142300193, "obj2": 0.6790116383408044}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ( MRS - ( ACS * FirstVNF_CPU ) ) / AMS ) * ( PN - DDR ) )", "choosing": "( Min( ( Min( ( ( MUC * MUR ) * RRSe ) ,RRSe ) - ( DS / ( ( Min( ( MUR + MUC ) ,Max( RRSe,MLU ) ) - Max( Max( RCSe,MLU ),( MUR * MUM ) ) ) * MUM ) ) ) ,( DS - CS ) ) / ( ( RRSe * ( ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( RCSe,( MUR / RCSe ) ) ) + Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7582846003898636, "obj2": 0.13750391034863946}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.6159844054580896, "obj2": 0.2779057437296327}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - ( ( RMSe - MUR ) + MUC ) ) ) * ( MUC + MUC ) )", "obj1": 0.7504873294346979, "obj2": 0.1453551993360592}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const - ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.6257309941520468, "obj2": 0.26983831632397987}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + RMSe ) ) - ( ( ( MUC / MLU ) * Max( MLU,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8440545808966862, "obj2": 0.07536782707925467}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( PN / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,FirstVNF_RAM ) - ( AMS + FirstVNF_CPU ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( MLU ,Min( DS ,( MLU / RMSe ) ) ) + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * MUR ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RMSe ,RMSe ),MUM ) * Max( CS,Max( MUM,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * MUC ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.008360866525440673}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * MUR ) - Max( ( CS / DS ),( Min( MUC ,Max( DS,( MUR / RCSe ) ) ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.6140350877192983, "obj2": 0.2811463595560606}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ( ( CRS * PN ) / MDR ) - ( ( ( FirstVNF_RAM_Server / PN ) + FirstVNF_CPU_Server ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( MDR + PN ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + Max( MLU,( DS / ( RMSe * CS ) ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6991147881574035}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( FirstVNF_Mem - ( DDR * BR ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) * ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( ( ( RMSe / RCSe ) - ( RRSe - ( ( Min( MLU ,Min( RRSe ,Min( MUR ,CS ) ) ) * ( MUM - CS ) ) * ( ( Max( ( MUC * RMSe ),RRSe ) / MUC ) + RMSe ) ) ) ) / Max( ( ( MLU * Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) / ( ( ( RMSe + DS ) + MUR ) - RCSe ) ),( MUM * RMSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6108715686742403}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,( DDR / FirstVNF_CPU ) ) ) ) / ( FirstVNF_Mem_Server - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),DDR ) ) ) ) ) - Min( ( PN - ACS ) ,DDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / DS ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7312273548920692}, {"determining": "( ( ( MRS - ( ( MDR - ( MRS / ( MRS + AMS ) ) ) / ( ARS * DDR ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15551623486682845}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,( MUR * MLU ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MUM * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * ( RMSe * CS ) ) ,( MUR / MUC ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5369650616432582}, {"determining": "( ( ( PN - MDR ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,( PN + ( FirstVNF_CPU - CRS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( DS * MUC ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.17093107578041936}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR - FirstVNF_CPU_Server ) ) ) - ( MDR + ( Max( Min( AMS ,MDR ),FirstVNF_Mem ) - Min( ACS ,( RRS - Const ) ) ) ) ) * ( ( PN - ACS ) + ( ( FirstVNF_CPU * BR ) - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( ( CS - CS ) ,MUM ) + ( Max( RMSe,( CS / ( ( MUC - CS ) + ( MLU * RRSe ) ) ) ) - CS ) ) / RRSe ) * ( MLU - MUR ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ARS - ( Min( ( Min( Max( MRS,MDR ) ,RRS ) * Max( Max( CRS,PN ),( RRS - Const ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( ( BR - FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5349833634891038}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( MDR * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,MUR ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS * ( ACS * Const ) ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MLU / MUR ) - MLU ) ) ) ) * ( MUR - DS ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS - ( ( ARS / ( Const / MRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( ( ( Const - FirstVNF_Mem ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( MRS + ( ACS - CRS ) ) / BR ) ,ACS ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( RRSe * MUM ) ) * ( ( MUC + CS ) / Max( RCSe,MUC ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - ( MUM / MUR ) ) ) + ( MUR / MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6830237078220175}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6530214424951267, "obj2": 0.24598356896151533}, {"determining": "( ( MDR - ARS ) / ( Min( ( ARS - ( ( BR - Min( Min( AMS ,FirstVNF_Mem_Server ) ,DDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( PN - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Max( MUM,( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + ( CS * ( ( MUM / MUM ) + RRSe ) ) ) + ( RCSe + RCSe ) ) ) / ( MLU / MUR ) )", "obj1": 0.29239766081871343, "obj2": 0.7148501132353822}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS - ( ( ARS - Max( FirstVNF_RAM,PN ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ACS + ARS ) ,( Const - Const ) ) ) ) - MDR ) )", "choosing": "( ( RMSe / RRSe ) * Min( Max( ( Min( RCSe ,Min( ( RRSe - CS ) ,RMSe ) ) - ( ( RMSe * MLU ) / ( CS * MUM ) ) ),CS ) ,MUC ) )", "obj1": 0.34502923976608185, "obj2": 0.6335032339199086}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ARS * ( ( ( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( Min( Min( BR ,( FirstVNF_RAM_Server * ARS ) ) ,ARS ) - FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_CPU_Server,PN ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( AMS * FirstVNF_CPU_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( ( CS / Max( RRSe,( RCSe * CS ) ) ) * Min( ( ( RRSe * MUR ) * Max( MUM,MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04721310264806006}, {"determining": "( ( PN - DDR ) * ( MRS / ( Const - ( ( ( CRS - FirstVNF_RAM ) + ( Const - ( PN + Const ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( RRSe ,MLU ) ) ) / MLU ) ,( RRSe / RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ( FirstVNF_Mem_Server - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),DDR ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),( ( Max( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) ) * ( MUC + MUC ) )", "obj1": 0.47953216374269003, "obj2": 0.454402564896168}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * ( MDR + ( Const - Const ) ) ) ) / ( FirstVNF_RAM_Server + PN ) ) ) - MDR ) )", "choosing": "( MLU * ( ( ( MLU * DS ) + ( ( Min( RMSe ,MUM ) / MUM ) / ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) ) / Min( ( DS / ( MUC * MUM ) ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.17952050348265727}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( ( FirstVNF_Mem + PN ),BR ) ) * FirstVNF_Mem_Server ) + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - Min( ( ( MUM / ( RRSe * MUM ) ) * CS ) ,( CS - ( Max( RRSe,DS ) + ( RMSe / MLU ) ) ) ) ) ) * ( MUC + MUC ) )", "obj1": 0.7446393762183235, "obj2": 0.14923074582136273}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( CS - CS ) ,MUM ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - CRS ) / ( BR * BR ) ) ) ) / ( ( ( ( Const * ( MRS / Min( FirstVNF_CPU_Server ,BR ) ) ) + ( CRS * PN ) ) * ( ( ( Max( DDR,FirstVNF_Mem ) / CRS ) / ( Const + RRS ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,( CRS + FirstVNF_Mem_Server ) ) ) ) - CRS ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( RCSe - CS ),MUR ) ) ) * ( ( RMSe + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7258059630451452}, {"determining": "( ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_CPU - ACS ) ) * ( AMS / ( MRS - ( ( MDR - ( MRS / MDR ) ) / ( ARS * DDR ) ) ) ) )", "choosing": "( Min( ( MLU * MLU ) ,( ( ( ( MUC * ( MLU - RCSe ) ) / MLU ) + ( ( DS / RCSe ) + CS ) ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - CS ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.001857180574982852}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( Min( AMS ,( ARS * ARS ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + ( DS / RMSe ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.6432748538011696, "obj2": 0.2505231634763319}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( Max( Const,CRS ) / ( ( ( Min( FirstVNF_RAM ,RRS ) / ( RRS * PN ) ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.7270955165692008, "obj2": 0.16997506546739025}, {"determining": "( ( ARS * ( ( ( Max( ( FirstVNF_Mem / FirstVNF_Mem ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - PN ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + RCSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3714981591182179}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( Max( BR,FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( ( CS * RCSe ) - Min( ( ( DS - RCSe ) - ( CS - CS ) ) ,Max( ( ( DS * Min( RMSe ,RRSe ) ) * RMSe ),Max( ( ( RRSe - RRSe ) - RCSe ),( Max( RRSe,CS ) * MUR ) ) ) ) ) + ( ( ( CS * RMSe ) / ( ( MUR - ( MUR - MUM ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) / ( Min( MUC ,( MUC / Min( MUM ,MUM ) ) ) + ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6963946807166157}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( ( FirstVNF_RAM_Server * ARS ) ,AMS ) ) ) - ( FirstVNF_RAM_Server - ( ARS / ( AMS + ( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Max( ( ( FirstVNF_CPU / Max( MRS,AMS ) ) - ( FirstVNF_Mem_Server + AMS ) ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( MUC * DS ) ,RMSe ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + Min( ( Max( RRSe,MLU ) - RMSe ) ,RCSe ) ) ) - ( CS * RMSe ) ) + ( RCSe + ( MUR - RCSe ) ) ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ARS * ( ( ( Max( MDR,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( PN + Min( DDR ,Min( CRS ,BR ) ) ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( FirstVNF_RAM_Server - ( MDR - FirstVNF_RAM ) ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( ( Min( ( Max( RRSe,MLU ) - CS ) ,RCSe ) / RRSe ) * Max( MUC,Max( ( ( ( CS - MUM ) - DS ) * ( RRSe / ( ( ( CS * MUR ) + RCSe ) * ( ( MUM + MUR ) - RMSe ) ) ) ),MUR ) ) )", "obj1": 0.732943469785575, "obj2": 0.16515439208291818}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.9902534113060428, "obj2": 0.004649274616967262}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU * ( ( Min( RMSe ,( MUC * MUC ) ) + ( ( Min( MUM ,RMSe ) / MUM ) / DS ) ) / Min( MLU ,Max( MLU,MUR ) ) ) ),DS ) * Min( MUC ,MUC ) )", "obj1": 0.47173489278752434, "obj2": 0.45996703553660456}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_CPU_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Max( ( ACS - BR ),CRS ) - Min( ACS ,ACS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MLU * ( ( Min( RMSe ,( MUC * MUC ) ) + ( ( Min( MUM ,RMSe ) / MUR ) / DS ) ) / ( RMSe - RRSe ) ) ),DS ) * Min( MUC ,MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.43885744495663565}], "36": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( RMSe,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Max( ( FirstVNF_RAM_Server * AMS ),DDR ) ) ) ) / Min( Min( ( MDR * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ,PN ) ) * MDR ) - ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,ACS ) ) / MDR ) / ACS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * DS ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - CRS ) / ( BR * BR ) ) ) ) / ( ( ( ( Const * ( FirstVNF_CPU / MRS ) ) + ( PN * PN ) ) * ( ARS - ACS ) ) - CRS ) )", "choosing": "( ( ( ( RCSe + Min( MLU ,DS ) ) - MUC ) - ( ( Min( MLU ,( RCSe * CS ) ) + ( Min( ( RMSe * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( MDR - ARS ) / ( Min( ( DDR - DDR ) ,ACS ) - Min( Min( DDR ,AMS ) ,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Min( ( ( DS / ( RMSe * CS ) ) + ( RRSe + MLU ) ) ,MUC ) ) ) ) / ( CS * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06216441707407446}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ( MRS - ( ACS * FirstVNF_CPU ) ) / AMS ) * ( PN - DDR ) )", "choosing": "( Min( ( Min( ( ( MUC * MUR ) * RRSe ) ,RRSe ) - ( DS / ( ( Min( ( MUR + MUC ) ,Max( RRSe,MLU ) ) - Max( Max( RCSe,MLU ),( MUR * MUM ) ) ) * MUM ) ) ) ,( DS - CS ) ) / ( ( RRSe * ( ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( RCSe,( MUR / RCSe ) ) ) + Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7582846003898636, "obj2": 0.13750391034863946}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) - Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / Max( AMS,DDR ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( MLU * ( ( RMSe * RCSe ) * Min( RMSe ,RCSe ) ) ) - RMSe ) * Min( ( ( DS + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7797270955165692, "obj2": 0.12833645739909036}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,MUM ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ( FirstVNF_Mem_Server - ( ( ( MDR + PN ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),DDR ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),( ( Max( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( MLU * DS ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) ) * ( MUC + MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.43121319441006245}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * CRS ) ) ) ) ) / Min( Min( BR ,( ARS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( RRS * PN ) ) ) ) - Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe / RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RCSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.36210022348802334}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + RMSe ) ) - ( ( ( MUC / MLU ) * Max( MLU,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8440545808966862, "obj2": 0.07536782707925467}, {"determining": "( ARS / ( ( ( ( Const * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ( ( BR - Min( FirstVNF_Mem ,( Max( MDR,RRS ) - PN ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS * BR ),( MDR - FirstVNF_RAM ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - ARS ) )", "choosing": "( Max( ( ( RRSe * Min( CS ,Max( MUC,( MLU * MUC ) ) ) ) / RMSe ),( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / MUR ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.3996101364522417, "obj2": 0.5582371273220614}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / RRSe ) * Min( Max( ( Min( RCSe ,( MLU * Max( CS,MLU ) ) ) - Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),CS ) ,MUC ) )", "obj1": 0.8518518518518519, "obj2": 0.06808703797346362}, {"determining": "( ( ARS * ( ACS * Max( AMS,ACS ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( MUC ,MUM ) + ( Max( RRSe,Max( MUR,MUM ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7144017251674535}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS + ARS ) ) - Min( ARS ,Min( ( FirstVNF_CPU_Server * ARS ) ,AMS ) ) ) ) / ( Min( BR ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RRSe / DS ),( ( ( ( MUC * RMSe ) / ( Max( MUC,Min( MUM ,RCSe ) ) + ( MUR * RRSe ) ) ) - ( MUR * DS ) ) + ( RCSe + RCSe ) ) ) / ( MUR / RCSe ) )", "obj1": 0.8011695906432749, "obj2": 0.0978736183190386}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( ( ARS * ( ( ( Max( ( FirstVNF_Mem / FirstVNF_Mem ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - PN ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + RCSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3714981591182179}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,MUR ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - Max( ( MDR * AMS ),CRS ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS * MUM ) / ( Max( Max( RCSe,( MUM + ( CS + ( RCSe / MLU ) ) ) ),( ( ( RMSe - ( MUC * MUR ) ) - ( RMSe - RMSe ) ) / MLU ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6187608811814573}, {"determining": "( ( ( MRS - ( ( MDR - ( MRS / ( MRS + AMS ) ) ) / ( ARS * DDR ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15551623486682845}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),CRS ) / Max( DDR,CRS ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR + Min( Min( ( MUM / MUR ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.7056530214424951, "obj2": 0.189877019444257}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ( Min( Const ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - Const ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS / MUM ) ) - ( CS + RRSe ) )", "obj1": 0.47173489278752434, "obj2": 0.45996703553660456}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + Const ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + Max( Max( RRSe,MLU ),MUR ) ) / ( RCSe * CS ) )", "obj1": 0.6744639376218323, "obj2": 0.22129295632441867}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( ( PN - FirstVNF_CPU ) - ARS ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( MLU * ( CS / ( RCSe * MLU ) ) ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.52046783625731, "obj2": 0.4225918552829896}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ARS - ( Min( ( Min( Max( MRS,MDR ) ,RRS ) * Max( Max( CRS,PN ),( RRS - Const ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( ( BR - FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5349833634891038}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server - CRS ) ) ) ) / ( MDR * ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) ) ) ) - ( Min( ( Max( DDR,FirstVNF_Mem ) / CRS ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( MUC,MUR ) + DS ) * MLU ) ,CS ) - Min( RMSe ,( RMSe + ( MUC * ( ( DS - DS ) - MUR ) ) ) ) ) ) )", "obj1": 0.7309941520467836, "obj2": 0.16413623844644412}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS * ( ( ( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( Min( Min( BR ,( FirstVNF_RAM_Server * ARS ) ) ,ARS ) - FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_CPU_Server,PN ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( AMS * FirstVNF_CPU_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( ( CS / Max( RRSe,( RCSe * CS ) ) ) * Min( ( ( RRSe * MUR ) * Max( MUM,MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04721310264806006}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_Mem_Server - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - ACS ) / RRS ) ) - MDR ) )", "choosing": "( ( ( ( MLU * ( ( ( RRSe - CS ) - ( MUR / Max( RMSe,MLU ) ) ) / MUM ) ) / MUR ) * CS ) - ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( ( ARS - ( ( ARS / ( Const / MRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( ( ( Const - FirstVNF_Mem ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( ( MRS + ( ACS - CRS ) ) / BR ) ,ACS ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( RRSe * MUM ) ) * ( ( MUC + CS ) / Max( RCSe,MUC ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - ( MUM / MUR ) ) ) + ( MUR / MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6830237078220175}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6530214424951267, "obj2": 0.24598356896151533}, {"determining": "( ( ARS - PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MUM + MLU ) ,Min( ( RMSe * RMSe ) ,( CS / RRSe ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.44639376218323584, "obj2": 0.4920696494284133}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM * ARS ) ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( PN - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe - Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31545352925634307}, {"determining": "( ( ( PN / ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( FirstVNF_Mem ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( RRSe ,MLU ) ) ) / MLU ) ,( RRSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452858}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MLU,( MLU * DS ) ) / ( MUR * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ( RRS * PN ) / ( MDR - Const ) ) / Max( ( Const - Const ),( ACS + ARS ) ) ) ) ) / ( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) * ( ( Const - RRS ) + Max( CRS,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( ( ( RMSe / RCSe ) - ( ( ( RMSe + ( ( ( MUM * RRSe ) / ( RCSe - MUR ) ) * ( RCSe * MUR ) ) ) / RCSe ) - RMSe ) ) / Max( MUM,RRSe ) )", "obj1": 0.36062378167641324, "obj2": 0.6108715686742403}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( AMS * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( DDR * ARS ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) * ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUC ) * MLU ) ,DS ) ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.10765671572953821}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( ARS - ( ( CRS / ( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem - Const ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( Const / PN ) + FirstVNF_RAM_Server ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( RCSe + RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUC - DS ) + ( CS + Min( MLU ,( MLU + RRSe ) ) ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5449426932339267}, {"determining": "( ( ( PN - MDR ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( MRS / PN ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.170876235729344}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( ( ACS + FirstVNF_RAM ),CRS ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) ) ) ) / ( ( ( ( RRS * Const ) + ( CRS + PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / ( Min( ARS ,Const ) + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( DS + MUR ),CS ) * ( ( ( MLU * DS ) - Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) ) ) )", "obj1": 0.8167641325536062, "obj2": 0.09032693600853461}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,Min( ( MUC / MLU ) ,RRSe ) ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - ARS ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ( Max( PN,FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( Min( MLU ,RRSe ) * DS ) + Max( DS,( MUR / MUM ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) / MUC ) + DS ) / ( ( RCSe + RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5449426932339267}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS * ( ACS * Const ) ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MLU / MUR ) - MLU ) ) ) ) * ( MUR - DS ) )", "obj1": 0.9142300194931774, "obj2": 0.03928951200084111}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( MDR * FirstVNF_CPU_Server ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( MUM,( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( ( RCSe * DS ) * RRSe ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.7933723196881092, "obj2": 0.10357417796093678}, {"determining": "( ( ARS - MDR ) / ( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) ) )", "choosing": "( ( MUM + Max( Max( RRSe,MLU ),MUR ) ) / Max( RMSe,( ( MUM + Max( Max( RRSe,MLU ),MUR ) ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + MUM ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5005157351887244}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * Min( ( PN - ACS ) ,( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + ( Max( RRSe,MLU ) * MUR ) ) / Max( RMSe,( ( Max( RRSe,( ( CS - DS ) - DS ) ) / RCSe ) + MUM ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5005157351887244}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.34502923976608185, "obj2": 0.6333540774364276}, {"determining": "( ( ARS * ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) / ( AMS / ( ( FirstVNF_Mem_Server + AMS ) + AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( RRSe * ( MUM * Min( CS ,DS ) ) ) ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / MLU ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6694554321784503}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) ) ),RCSe ) )", "obj1": 0.6120857699805068, "obj2": 0.2816912169552051}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + MLU ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.30214424951267055, "obj2": 0.700451958236053}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4920696494284133}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( Max( ( RRSe + MUR ),CS ) ,( MLU + ( Min( ( ( MUC + Max( Min( RMSe ,CS ),Max( CS,MLU ) ) ) - Max( CS,CS ) ) ,MLU ) / ( ( ( MUR + MUR ) / RRSe ) + ( RMSe + MUR ) ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( Min( AMS ,ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / ( ( Const - Const ) + ( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( RCSe,RRSe ) * MUM ) - Min( ( ( ( CS - CS ) + Min( MLU ,MLU ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.5165692007797271, "obj2": 0.42931388401808457}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - ( ( RMSe - MUR ) + MUC ) ) ) * ( MUC + MUC ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),CRS ) / Max( DDR,CRS ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR + Min( Min( ( MUM / MUR ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7300613310309181}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( DS * MUC ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.4152046783625731, "obj2": 0.5369650616432582}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - FirstVNF_RAM_Server ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RCSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ARS - ( ( ARS - Max( FirstVNF_RAM,PN ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( MLU ,CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) ) )", "obj1": 0.5087719298245614, "obj2": 0.4300079030339981}, {"determining": "( ( ( Max( ACS,( ( ( FirstVNF_Mem + MRS ) - CRS ) - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( FirstVNF_CPU - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + RCSe ) / RCSe ) + MUM ) ) ) ) / ( RRSe - MUC ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( PN - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ACS + ARS ) ) - ( FirstVNF_RAM_Server - ( Min( AMS ,( FirstVNF_RAM_Server * Min( PN ,Max( AMS,PN ) ) ) ) / ARS ) ) ) / ( ( ( ( Const * RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,( FirstVNF_Mem + Const ) ) / Min( Min( ARS ,Const ) ,FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09212927653244209}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( MUC ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6753236418761236}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ARS / ( ( ( ( ( ( CRS / Const ) - BR ) * Min( FirstVNF_CPU ,CRS ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) - ( DDR + PN ) ) ) - Min( Max( Const,PN ) ,PN ) ) )", "choosing": "( ( Min( ( ( RRSe - ( Min( DS ,( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / ( RCSe + MLU ) ) * ( ( Max( ( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ),( RMSe / DS ) ) - ( MUR * ( Max( ( ( MLU / CS ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}], "37": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS / ( ( ( Const * ( MRS / FirstVNF_CPU ) ) + ( CRS * PN ) ) * ( ( ( ( DDR - FirstVNF_Mem ) / FirstVNF_Mem ) / ( Const + RRS ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,( CRS + FirstVNF_Mem_Server ) ) ) ) ) / ( CRS - ( ( ( Const * ( MRS / FirstVNF_CPU ) ) + ( FirstVNF_CPU * PN ) ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( RCSe - DS ),DS ) ,Max( RRSe,( ( RCSe + ( MLU * DS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU * MLU ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( RMSe,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) + Max( MLU,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - CRS ) / ( BR * BR ) ) ) ) / ( ( ( ( Const * ( FirstVNF_CPU / MRS ) ) + ( PN * PN ) ) * ( ARS - ACS ) ) - CRS ) )", "choosing": "( ( ( ( RCSe + Min( MLU ,DS ) ) - MUC ) - ( ( Min( MLU ,( RCSe * CS ) ) + ( Min( ( RMSe * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ( FirstVNF_Mem_Server - ( ( ( MDR + PN ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),DDR ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),( ( Max( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( MLU * DS ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) ) * ( MUC + MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4301434736087972}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * CRS ) ) ) ) ) / Min( Min( BR ,( ARS - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( RRS * PN ) ) ) ) - Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe / RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / RCSe ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.36210022348802334}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ( Min( Const ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - Const ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS / MUM ) ) - ( CS + RRSe ) )", "obj1": 0.47173489278752434, "obj2": 0.45996703553660456}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + RMSe ) ) - ( ( ( MUC / MLU ) * Max( MLU,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8440545808966862, "obj2": 0.07536782707925467}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ARS * ARS ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / RMSe ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6198830409356725, "obj2": 0.279408628599697}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.11988375318461267}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ( MRS - ( ( MDR - ( MRS / ( MRS + AMS ) ) ) / ( ARS * DDR ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15551623486682845}, {"determining": "( ( ARS * ( ( ( Max( ( FirstVNF_Mem / FirstVNF_Mem ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - PN ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( RCSe + RCSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3714981591182179}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ( ( BR - Min( FirstVNF_Mem ,( Max( MDR,RRS ) - PN ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS * BR ),( MDR - FirstVNF_RAM ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - ARS ) )", "choosing": "( Max( ( ( RRSe * Min( CS ,Max( MUC,( MLU * MUC ) ) ) ) / RMSe ),( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / MUR ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.3996101364522417, "obj2": 0.5582371273220614}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( ( ( PN - FirstVNF_CPU ) - ARS ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS - PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( MLU * ( CS / ( RCSe * MLU ) ) ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.52046783625731, "obj2": 0.4225918552829896}, {"determining": "( ARS / ( ( ( ( ( ( CRS / Const ) - BR ) * Min( FirstVNF_CPU ,CRS ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) - ( DDR + PN ) ) ) - Min( Max( Const,PN ) ,PN ) ) )", "choosing": "( ( Min( ( ( RRSe - ( Min( DS ,( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / ( RCSe + MLU ) ) * ( ( Max( ( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ),( RMSe / DS ) ) - ( MUR * ( Max( ( ( MLU / CS ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.557504873294347, "obj2": 0.34024145293194474}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( PN - ACS ) * ( ( FirstVNF_Mem + ACS ) * Max( AMS,ACS ) ) ) * ( ACS + ( AMS - ( Min( BR ,FirstVNF_CPU ) * CRS ) ) ) ) - ACS ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR + Min( Min( ( MUR / MUR ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( ( MUC / RMSe ) * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.7056530214424951, "obj2": 0.189877019444257}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.33403281980831356}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( DDR - ( ( DDR / FirstVNF_CPU_Server ) / MRS ) ) / ( ( ( ( RRS - Max( FirstVNF_RAM,FirstVNF_CPU ) ) + Max( CRS,Min( DDR ,( BR * BR ) ) ) ) * ( MRS - ( ( FirstVNF_RAM - Max( DDR,DDR ) ) + Min( DDR ,( FirstVNF_CPU + Max( ACS,FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RCSe * ( RMSe + CS ) ) * CS ) + RRSe ),CS ) ,( RRSe + DS ) )", "obj1": 0.5886939571150097, "obj2": 0.3074016221077137}, {"determining": "( ( ( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / Min( RRS ,PN ) ) - Min( ( ACS + ARS ) ,( FirstVNF_Mem - Const ) ) ) * ( ( Const - RRS ) + Max( CRS,PN ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM * ARS ) ) / Max( AMS,DDR ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5120286416854717}, {"determining": "( ( ARS - ( Min( ( Min( Max( MRS,MDR ) ,RRS ) * Max( Max( CRS,PN ),( RRS - Const ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( ( BR - FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5349833634891038}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS * ( ACS * Const ) ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + MDR ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MLU,RMSe ) * Min( MLU ,( ( RRSe / MUR ) - MLU ) ) ) ) * ( DS - MUR ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ( Max( ACS,( ( ( FirstVNF_Mem + MRS ) - CRS ) - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( FirstVNF_CPU * CRS ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MDR ) ) ) - ( ( ACS - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - MDR ),FirstVNF_Mem ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * ( ARS + ( FirstVNF_CPU - ACS ) ) ) - MDR ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + RCSe ) / RCSe ) + MUM ) ) ) ) / ( RRSe - MUC ) )", "obj1": 0.9239766081871345, "obj2": 0.03740703895728893}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - PN ) - Max( AMS,PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( Max( ( RRSe + MUR ),CS ) ,( MLU + ( Min( ( ( MUC + Max( Min( RMSe ,CS ),Max( CS,MLU ) ) ) - Max( CS,CS ) ) ,MLU ) / ( ( ( MUR + MUR ) / RRSe ) + ( RMSe + MUR ) ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6433629218478529}, {"determining": "( FirstVNF_CPU / ( ( Min( CRS ,Max( ( ( BR - MRS ) * ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ),RRS ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / RRSe ) * Min( Max( ( ( RCSe / Max( DS,Min( RMSe ,( DS - MUR ) ) ) ) - MUR ),CS ) ,MUC ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,MUM ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - ARS ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ( Max( PN,FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( Min( MLU ,RRSe ) * DS ) + Max( DS,( MUR / MUM ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) / MUC ) + DS ) / ( ( RCSe + RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5478420218042009}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( Max( DDR,FirstVNF_Mem ) / CRS ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7309941520467836, "obj2": 0.16408139839536875}, {"determining": "( ( ARS * ( ( ( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( Min( Min( BR ,( FirstVNF_RAM_Server * ARS ) ) ,ARS ) - FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_CPU_Server,PN ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( AMS * FirstVNF_CPU_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( ( CS / Max( RRSe,( RCSe * CS ) ) ) * Min( ( ( RRSe * MUR ) * Max( MUM,MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04721310264806006}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ARS * ( ( ( ( Const - RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( ( MDR - FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MUR * MUR ) - Max( ( CS / ( RMSe * Max( CS,RMSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9824561403508771, "obj2": 0.008438274315392893}, {"determining": "( ( ARS * ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) / ( AMS / ( ( FirstVNF_Mem_Server + AMS ) + AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( RRSe * ( MUM * Min( CS ,DS ) ) ) ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / MLU ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6694554321784503}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MLU,( MLU * DS ) ) / ( MUR * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( BR - MDR ) * ( ARS + ( ( Const * ( FirstVNF_RAM / Max( ACS,DDR ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUM * RMSe ) / ( ( MUR - ( CS - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) ) / Max( ( MUC + MLU ),DS ) )", "obj1": 0.935672514619883, "obj2": 0.035663397958281315}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( MUC * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.38027098967614587}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ARS - ( ( ARS - Max( FirstVNF_RAM,PN ) ) - ( ARS / Min( ( FirstVNF_RAM_Server * ARS ) ,AMS ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( FirstVNF_Mem - BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe - Min( ( ( Min( CS ,MLU ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) - Min( ( ( MLU * ( ( MLU + MUC ) / MUM ) ) / MUR ) ,( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) ) )", "obj1": 0.5126705653021443, "obj2": 0.4279078523020364}, {"determining": "( ( ( PN / ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( FirstVNF_Mem ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( RRSe ,MLU ) ) ) / MLU ) ,( RRSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452858}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + MUR ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.672514619883041, "obj2": 0.221525942652803}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ARS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - ( ( MUM + DS ) / RCSe ) ) ) * ( MUC + MUC ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.3645224171539961, "obj2": 0.610355379133775}, {"determining": "( ( ( ( BR - Min( FirstVNF_Mem ,( Max( MDR,RRS ) - PN ) ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS * BR ),( MDR - FirstVNF_RAM ) ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - ARS ) )", "choosing": "( Max( ( ( RRSe * Min( CS ,Max( MUC,( MLU * MUC ) ) ) ) / RMSe ),( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / MUR ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.8830409356725146, "obj2": 0.05810360472451464}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ( PN - MDR ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( MRS / PN ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.170876235729344}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server - Min( ARS ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / RRSe ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6249584610625086}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( MUC ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6753236418761236}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( MUC + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5847953216374269, "obj2": 0.31065789220929846}, {"determining": "( ( ( PN - MDR ) / ( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * DDR ) ) ) * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( MRS / PN ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( RMSe ,CS ) + ( CS - RMSe ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.170876235729344}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS + ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ACS + ( MRS / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( MUR * MUR ) / Max( MUM,Min( RMSe ,( ( MUR / RCSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13445326821220016}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4920696494284133}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,MUR ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) / ( ( AMS - Const ) - MDR ) )", "choosing": "Min( ( MLU / Min( RMSe ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MUR ) ) ) ) ,( RRSe / RMSe ) )", "obj1": 0.9454191033138402, "obj2": 0.02670077356106566}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),PN ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( ( RCSe * RMSe ) + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31545352925634307}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * Min( ( PN - ACS ) ,( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + ( Max( RRSe,MLU ) * MUR ) ) / Max( RMSe,( ( Max( RRSe,( ( CS - DS ) - DS ) ) / RCSe ) + MUM ) ) )", "obj1": 0.746588693957115, "obj2": 0.1484046232124847}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13445326821220016}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( Max( ACS,( PN - ( FirstVNF_RAM + MRS ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( ( RCSe * RMSe ) * RCSe ) ) ) / Max( RMSe,( ( ( DS + MLU ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3079922027290448, "obj2": 0.6927382983489965}, {"determining": "( ( ( ( ( Const * ( Const - ( Const - RRS ) ) ) + Max( CRS,PN ) ) * Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) ,( FirstVNF_Mem + PN ) ) ) - MDR ) / ( Max( FirstVNF_Mem,FirstVNF_CPU ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RCSe * CS ) ,MLU ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( Min( DS ,MLU ) - MUM ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,CS ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( RCSe,CS ) ) ) ) ),MLU ) )", "obj1": 0.6744639376218323, "obj2": 0.21740427698241413}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RRSe,( MLU + DS ) ) ) ) ) ),RCSe ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ARS / ( ( ( ( DDR + ( ARS / PN ) ) + ARS ) * ( ( PN - ACS ) * ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( Min( MUC ,( CS / MUC ) ) * MLU ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RMSe ,CS ),MUM ) - Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.442495126705653, "obj2": 0.496641379240474}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - FirstVNF_CPU ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( Max( CS,MLU ) / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( DDR / FirstVNF_CPU ) / ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * Min( ( PN - ACS ) ,( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM + ( Max( RRSe,MLU ) * MUR ) ) / Max( RMSe,( ( Max( RRSe,( ( CS - DS ) - DS ) ) / RCSe ) + MUM ) ) )", "obj1": 0.746588693957115, "obj2": 0.1484046232124847}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( RCSe * MLU ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,Min( ( MUC / MLU ) ,RRSe ) ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "Max( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( PN * RRS ) ) - Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( FirstVNF_RAM + ARS ) ),( MDR * ACS ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6876828189975659}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}], "38": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( ( ( Const * ( MRS / FirstVNF_CPU ) ) + ( CRS * PN ) ) * ( ( ( ( DDR - FirstVNF_Mem ) / FirstVNF_Mem ) / ( Const + RRS ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,( CRS + FirstVNF_Mem_Server ) ) ) ) ) / ( CRS - ( ( ( Const * ( MRS / FirstVNF_CPU ) ) + ( FirstVNF_CPU * PN ) ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( RCSe - DS ),DS ) ,Max( RRSe,( ( RCSe + ( MLU * DS ) ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - CRS ) / ( BR * BR ) ) ) ) / ( ( ( ( Const * ( FirstVNF_CPU / MRS ) ) + ( PN * PN ) ) * ( ARS - ACS ) ) - CRS ) )", "choosing": "( ( ( ( RCSe + Min( MLU ,DS ) ) - MUC ) - ( ( Min( MLU ,( RCSe * CS ) ) + ( Min( ( RMSe * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ( FirstVNF_Mem_Server - ( ( ( MDR + PN ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),DDR ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RCSe - MUM ),( ( Max( ( Max( RCSe,( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + Min( ( MLU * DS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( MLU * DS ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) ) * ( MUC + MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4301434736087972}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( PN + Min( ACS ,ARS ) ) / Max( DDR,DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) / MUR ) ,Max( ( MUR + Min( Min( Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ,( MUM / MUR ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.6354775828460039, "obj2": 0.2638676790387208}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.3645224171539961, "obj2": 0.610355379133775}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ARS * ARS ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / RMSe ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6198830409356725, "obj2": 0.279408628599697}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ( Min( Const ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - Const ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS / MUM ) ) - ( CS + RRSe ) )", "obj1": 0.47173489278752434, "obj2": 0.45996703553660456}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ( Const * ( Const / FirstVNF_RAM_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( AMS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( ( RRSe / RCSe ) * Min( ( Max( RCSe,RRSe ) / MLU ) ,MUR ) ) + MUM ) * MUM ) - ( ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,( CS * RMSe ) ) ) * Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MUM ) ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3659507677053537}, {"determining": "( ( ARS - Max( MDR,FirstVNF_CPU ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( CRS * PN ) ) / Min( ( FirstVNF_Mem - CRS ) ,( ACS + ARS ) ) ) ) - CRS ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + Max( ( MRS + MRS ),FirstVNF_Mem ) ) ) ) ) - MDR ) )", "choosing": "Min( ( Min( Min( RRSe ,( DS - RRSe ) ) ,RMSe ) / MLU ) ,( ( RMSe - Max( Max( RCSe,( MUM + ( CS + ( MLU / RCSe ) ) ) ),( ( ( RMSe - ( MUR * CS ) ) + Max( ( MLU - MLU ),RMSe ) ) / MLU ) ) ) * RRSe ) )", "obj1": 0.4619883040935672, "obj2": 0.48118714089732706}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.34103578299321674}, {"determining": "( ( ARS - ( Min( ( Min( Max( MRS,MDR ) ,RRS ) * Max( Max( CRS,PN ),( RRS - Const ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( ( BR - FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5349833634891038}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server - Min( ARS ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / RRSe ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6249584610625086}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.11988375318461263}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ARS / ( ( ( ( DDR + ( ARS / PN ) ) + ARS ) * ( ( PN - ACS ) * ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( Min( MUC ,( CS / MUC ) ) * MLU ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RMSe ,CS ),MUM ) - Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.442495126705653, "obj2": 0.496641379240474}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( RCSe * MLU ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5529044463209168}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( MLU,( MLU * DS ) ) / ( MUR * MUR ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ARS - ( ( Const * ( ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR + Min( Min( Max( RMSe,RCSe ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / ( ( MUR - ( MUR - RRSe ) ) + ( MUR - Min( MLU ,MUR ) ) ) ) + Max( MLU,MUR ) ) / ( ( MUM / MLU ) + ( RCSe + RCSe ) ) )", "obj1": 0.7056530214424951, "obj2": 0.189877019444257}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( RCSe * MLU ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU_Server - Max( CRS,( BR - ( PN + MDR ) ) ) ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( MLU,MUM ) ) / ( MUM * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / RCSe ) ) ,MUM ) ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7219254875861636}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,MUR ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( MLU / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4346978557504873, "obj2": 0.5079532855190346}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ARS - ( ( PN - ( ( FirstVNF_CPU_Server / BR ) + Min( FirstVNF_CPU ,CRS ) ) ) - ( ( Min( ACS ,ACS ) - Max( Max( RRS,Const ),ARS ) ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ARS ,Const ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.4580896686159844, "obj2": 0.4829570579872762}, {"determining": "( ( ARS - ( ( ACS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( MDR - ( ( ( BR - Min( ( ( MDR * RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( FirstVNF_RAM - BR ),CRS ) ) ) ) * Min( AMS ,Const ) ) ) )", "choosing": "Min( Max( Min( ( Max( RCSe,( MUM - DS ) ) / RCSe ) ,Min( Min( ( RCSe * ( MUC / MLU ) ) ,MUM ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) ,( RCSe / MUR ) )", "obj1": 0.9259259259259259, "obj2": 0.034239692609410205}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( AMS - Const ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_Mem ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUR,( ( Max( MUR,( ( ( CS + MUR ) + ( MUC + RRSe ) ) / ( DS / MUR ) ) ) + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.8830409356725146, "obj2": 0.058103604724514625}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ( ARS + ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ACS + ( MRS / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( MUR * MUR ) / Max( MUM,Min( RMSe ,( ( MUR / RCSe ) * ( MUC - MUC ) ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.33403281980831356}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( PN - ACS ) * ( ( FirstVNF_Mem + ACS ) * Max( AMS,ACS ) ) ) * ( ACS + ( AMS - ( Min( BR ,FirstVNF_CPU ) * CRS ) ) ) ) - ACS ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR + Min( Min( ( MUR / MUR ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( ( MUC / RMSe ) * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4474952652248541}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - ARS ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ( Max( PN,FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( Min( MLU ,RRSe ) * DS ) + Max( DS,( MUR / MUM ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) / MUC ) + DS ) / ( ( RCSe + RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5478420218042009}, {"determining": "( ( ( MRS - ( ( MDR - ( MRS / ( MRS + AMS ) ) ) / ( ARS * DDR ) ) ) / AMS ) * ( Const - DDR ) )", "choosing": "( ( ( MLU * MLU ) * ( ( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / Max( CS,RCSe ) ) ) + CS ) * ( ( ( ( RMSe - MLU ) * DS ) + Max( DS,( MUR / MUC ) ) ) + Min( Min( Max( MUR,RCSe ) ,( MUR + DS ) ) ,( MUM / MLU ) ) ) ) ) / ( ( RRSe * ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( ( CS - MUC ) + Min( RRSe ,MUC ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) ) + ( RCSe + ( MUM + DS ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15551623486682845}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ARS * ARS ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / RMSe ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6140350877192983, "obj2": 0.28216697943663366}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( ARS * ( ( ( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( Min( Min( BR ,( FirstVNF_RAM_Server * ARS ) ) ,ARS ) - FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_CPU_Server,PN ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( AMS * FirstVNF_CPU_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( ( CS / Max( RRSe,( RCSe * CS ) ) ) * Min( ( ( RRSe * MUR ) * Max( MUM,MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04721310264806006}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - ( FirstVNF_CPU_Server * Const ) ) ) ,( RRS * PN ) ) ) ) - Min( DDR ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7298627417099739}, {"determining": "( ( ARS * ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) / ( AMS / ( ( FirstVNF_Mem_Server + AMS ) + AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( RRSe * ( MUM * Min( CS ,DS ) ) ) ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / MLU ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6694554321784503}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),PN ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( ( RCSe * RMSe ) + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31545352925634307}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( MUC * RCSe ) - ( RRSe * ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.38027098967614587}, {"determining": "( ( ARS * ( ( ( Max( ( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RRSe - Max( CS,( RRSe + CS ) ) ) * MUR ) )", "obj1": 0.5925925925925926, "obj2": 0.305809296375933}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "Max( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( PN * RRS ) ) - Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( FirstVNF_RAM + ARS ) ),( MDR * ACS ) )", "choosing": "( Min( RRSe ,CS ) * Max( MUC,( MLU - ( ( ( Min( CS ,MUC ) / DS ) * ( RCSe / MUM ) ) * ( ( ( MLU * DS ) + ( RMSe + MUC ) ) + ( RRSe - ( ( RRSe / CS ) - ( MUM + MLU ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6876828189975659}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + MUR ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.672514619883041, "obj2": 0.221525942652803}, {"determining": "( ( Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - ( ARS * ( ( ( Max( RRS,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * PN ),CRS ) ) * Const ) - MDR ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( MUR * Min( ( RCSe * CS ) ,( ( RCSe - ( Min( ( MUM + MUC ) ,( CS * MUC ) ) + MUM ) ) + MUC ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703076}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RRSe,( MLU + DS ) ) ) ) ) ),RCSe ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( PN + FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( Max( MUC,( RCSe + Min( ( MLU + ( RRSe + MLU ) ) ,( MUR * RMSe ) ) ) ) * ( MUC / RMSe ) ) ) * ( RCSe - DS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU_Server * ( ( MDR - Max( ACS,CRS ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * MDR ) ) ) ) - ( PN + MDR ) ) ) ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( MUM * RCSe ) * ( MUR + MUR ) ) ,RMSe ) ) ) ) - ( ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) * ( MUM + MUC ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6800739744393229}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ARS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - ( ( MUM + DS ) / RCSe ) ) ) * ( MUC + MUC ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_CPU_Server ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9239766081871345, "obj2": 0.034825050574419286}, {"determining": "( ( ( PN - MDR ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( ARS / PN ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + Max( MLU,Min( ( MUC / MLU ) ,RRSe ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.170876235729344}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ( PN - MDR ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( PN ,( ( MDR - ( MRS / PN ) ) + AMS ) ) ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.170876235729344}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) - ( FirstVNF_Mem_Server + ARS ) ) )", "choosing": "( ( Max( CS,CS ) / RRSe ) * Min( ( CS - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) - ( DS / ( CS * MUM ) ) ) ) ,MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5148496061720355}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13445326821220016}, {"determining": "( ( ARS * ( ( ( FirstVNF_Mem - ( PN - AMS ) ) - CRS ) / FirstVNF_Mem ) ) - ( Min( ( Max( DDR,FirstVNF_Mem ) / CRS ) ,RRS ) * Max( ( MRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7348927875243665, "obj2": 0.16227905787146124}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( MLU ,CS ) / Max( RMSe,( ( ( RRSe + DS ) / RCSe ) + ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) / ( ( AMS - Const ) - MDR ) )", "choosing": "Min( ( MLU / Min( RMSe ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MUR ) ) ) ) ,( RRSe / RMSe ) )", "obj1": 0.9454191033138402, "obj2": 0.02670077356106566}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.5224171539961013, "obj2": 0.42101481016662734}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - ( ( ACS - CRS ) - ( BR * BR ) ) ) ) / ( CRS - ( Max( ( ( ARS * MDR ) - AMS ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( MUM / ( ( RRSe * MUC ) + ( Min( MLU ,Max( Max( RMSe,CS ),Min( RMSe ,MUR ) ) ) - MUR ) ) ),MUC ) ,Max( ( RCSe - DS ),DS ) )", "obj1": 0.28654970760233917, "obj2": 0.7229505062062901}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( Max( MRS,MDR ) - FirstVNF_RAM ) ) ) * ( ( Min( FirstVNF_Mem_Server ,CRS ) - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server - ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( MUC + Min( ( DS + ( MUC - ( ( RMSe - RMSe ) + Min( MUR ,RMSe ) ) ) ) ,RMSe ) ) ,MUC ) / Max( RMSe,( ( ( MUR * Max( CS,RMSe ) ) + ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) ) + ( ( RRSe + DS ) / RCSe ) ) ) )", "obj1": 0.7602339181286549, "obj2": 0.1363639904896154}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13445326821220016}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + RMSe ) ) - ( ( ( MUC / MLU ) * Max( MLU,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867314}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( Max( DDR,FirstVNF_Mem ) / CRS ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7309941520467836, "obj2": 0.16408139839536875}, {"determining": "( ( ARS * ARS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( ( MLU + ( ( Min( MUC ,RRSe ) - ( MUR + MUR ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( CS,( Min( RCSe ,( MLU * RMSe ) ) - ( MUR / ( RCSe * MUM ) ) ) ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / RCSe ) ) + ( Max( DS,( DS / RCSe ) ) + ( MLU * DS ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( ( RCSe * MUM ) * MLU ) ,DS ) ) ) ) + Max( ( ( ( RCSe / Max( ( MUC + MUR ),Min( RMSe ,MUM ) ) ) + Min( ( MLU + CS ) ,RRSe ) ) + ( MLU + MUR ) ),MUR ) ) / Min( MUR ,RRSe ) )", "obj1": 0.7446393762183235, "obj2": 0.14923074582136273}, {"determining": "( ( ARS * ( ( ( Const + ( ( BR * Const ) - Max( RRS,FirstVNF_CPU ) ) ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_Mem ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * ( MUM - RCSe ) ) + MLU ) ) ) ) ) * Max( RCSe,( MLU * DS ) ) )", "obj1": 0.8440545808966862, "obj2": 0.07536782707925466}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( ( ACS - BR ) * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * ( Max( ( DS / RMSe ),( Max( MUC,DS ) * Min( MLU ,( ( MLU / MUR ) - MLU ) ) ) ) * ( MUR - DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.3369206492447855}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + RMSe ) ) - ( ( ( MUC / MLU ) * Max( MLU,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867314}], "39": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * MDR ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,Min( ( Max( RCSe,( MUM - DS ) ) / RCSe ) ,Min( Min( ( RCSe * ( MUC / MLU ) ) ,MUM ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ) ) / ( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),PN ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( MLU ,( ( ( RCSe * RMSe ) + CS ) + MUM ) ) ,MUR ) - Max( ( CS / ( RMSe * Max( RCSe,RRSe ) ) ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31545352925634307}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( Const - Const ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS * Max( ( Const + CRS ),PN ) ) - ( Min( Max( MRS,( Max( CRS,MDR ) - ( ( MDR - FirstVNF_Mem_Server ) + PN ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( Min( CS ,CS ) ,( ( CS / Max( MUM,RRSe ) ) + Max( Max( CS,CS ),( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,MLU ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( CS / MLU ) - DS ),( RMSe * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.6354775828460039, "obj2": 0.2610660600915386}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( ( Const * ( Const / FirstVNF_RAM_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( ARS - FirstVNF_Mem ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( AMS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) ,AMS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( ( RRSe / RCSe ) * Min( ( Max( RCSe,RRSe ) / MLU ) ,MUR ) ) + MUM ) * MUM ) - ( ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,( CS * RMSe ) ) ) * Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MUM ) ) ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3659507677053537}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ARS * ARS ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / RMSe ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6198830409356725, "obj2": 0.279408628599697}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.11988375318461263}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.34103578299321674}, {"determining": "( ( ARS - ( Min( ( Min( Max( MRS,MDR ) ,RRS ) * Max( Max( CRS,PN ),( RRS - Const ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Max( ( BR - FirstVNF_RAM_Server ),CRS ) )", "choosing": "( ( ( MUM / MUC ) + DS ) / ( ( CS - Max( Min( Max( Max( RRSe,MUC ),MUC ) ,MLU ),MUC ) ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5349833634891038}, {"determining": "( ARS / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( ARS + ( RRS * DDR ) ),ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( Max( RMSe,( DS * CS ) ) + MLU ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.4580896686159844, "obj2": 0.4766741635238806}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ( Min( Const ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ) + Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - MDR ) ) / ( ( ( ACS + ARS ) * ( ( PN - Const ) + ( ACS * Max( AMS,Const ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS / MUM ) ) - ( CS + RRSe ) )", "obj1": 0.47173489278752434, "obj2": 0.45996703553660456}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RRSe,( MLU + DS ) ) ) ) ) ),RCSe ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,Min( ( ( BR / FirstVNF_Mem_Server ) + DDR ) ,ARS ) ) ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( PN * RRS ) ) / Min( ( ACS + DDR ) ,( Const - Const ) ) ) ) - RRS ) )", "choosing": "( ( MUC - CS ) * Min( Max( ( ( DS / ( CS * MUM ) ) - Min( RCSe ,Min( RMSe ,Min( RRSe ,CS ) ) ) ),CS ) ,MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.6044250265473211}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) / ( Max( ( ( FirstVNF_RAM / FirstVNF_CPU ) - FirstVNF_CPU_Server ),( BR - ARS ) ) + CRS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( Max( MUM,RCSe ) - ( CS * MUC ) ) / ( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.41202523397270374}, {"determining": "( ( ARS - ( ( Const * ( ( Const - RRS ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ),CRS ) ) ) - MDR ) ) / ( ( ( ( Min( CRS ,Max( FirstVNF_CPU,BR ) ) * FirstVNF_Mem_Server ) + ARS ) * Max( ( Min( FirstVNF_RAM ,MDR ) * AMS ),MDR ) ) - MDR ) )", "choosing": "( ( MUC + MUC ) * Max( DS,( RCSe - ( ( RMSe - DS ) + MUC ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45720868469966813}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS + ( DS - Max( MUR,CS ) ) ) + RMSe ) + Max( MUR,MUR ) ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( Min( RMSe ,MLU ) + RRSe ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4374270403321952}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + ( CRS * PN ) ) ) - FirstVNF_RAM_Server ),Const ) - ( ( RRS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( ( BR - ( BR + CRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - ( Min( ( ( MUR / RRSe ) + ( RMSe - ( RCSe / RRSe ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.3586744639376218, "obj2": 0.6208577873755052}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ( ( ACS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) - MDR ) - ARS ) / ( MDR - ( ( ( BR - FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( FirstVNF_RAM - BR ),CRS ) ) ) ) * ( MRS + PN ) ) ) )", "choosing": "Min( Max( ( ( ( ( Max( MUR,( MUR - RRSe ) ) / MUM ) / MUM ) - Max( Max( Min( ( MUM / RMSe ) ,( DS - RRSe ) ),Min( Max( RRSe,RMSe ) ,Max( RMSe,RMSe ) ) ),MLU ) ) * ( MUM / RMSe ) ),RCSe ) ,( RCSe / MUR ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ARS * ( ( ( Max( ( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RRSe - Max( CS,( RRSe + CS ) ) ) * MUR ) )", "obj1": 0.5925925925925926, "obj2": 0.305809296375933}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( MLU / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.42884990253411304, "obj2": 0.5142719361190609}, {"determining": "( ( ARS * ( ( ( Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( Min( Min( BR ,( FirstVNF_RAM_Server * ARS ) ) ,ARS ) - FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_CPU_Server,PN ) * Const ) - MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( AMS * FirstVNF_CPU_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( ( CS / Max( RRSe,( RCSe * CS ) ) ) * Min( ( ( RRSe * MUR ) * Max( MUM,MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04721310264806006}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS * ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) / ( AMS / ( ( FirstVNF_Mem_Server + AMS ) + AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( RRSe * ( MUM * Min( CS ,DS ) ) ) ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / MLU ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6694554321784503}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6649144845483728}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS - ( Min( ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - ARS ),Max( CRS,PN ) ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + FirstVNF_CPU_Server ) ) ) ) - MDR ) * ( ( Max( PN,FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( Min( MLU ,RRSe ) * DS ) + Max( DS,( MUR / MUM ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) / MUC ) + DS ) / ( ( RCSe + RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR + ( MUR + RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5478420218042009}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( FirstVNF_CPU,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),CS ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( Max( ( RCSe - DS ),DS ) * RMSe ) / ( ( MUR - ( MUR - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008562887215824813}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,( AMS - CRS ) ) ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( RCSe + ( MLU * DS ) ) - MUC ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( RCSe - CS ),MUR ) ) ) * ( ( RMSe + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19832882483882544}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( RCSe * MLU ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5529044463209168}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + MUR ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.672514619883041, "obj2": 0.221525942652803}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server - Min( ARS ,( Max( MDR,RRS ) / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MLU ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6765565293616536}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + FirstVNF_CPU ) ) - FirstVNF_RAM_Server ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - MUC ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.3645224171539961, "obj2": 0.610355379133775}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( AMS - Const ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_Mem ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUR,( ( Max( MUR,( ( ( CS + MUR ) + ( MUC + RRSe ) ) / ( DS / MUR ) ) ) + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.8830409356725146, "obj2": 0.058103604724514625}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.33403281980831356}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) / ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS + FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS - BR ) ,( ACS + ARS ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR / Min( Min( Max( Max( ( RCSe - MUR ),MUC ),( CS * MUM ) ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Const ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ARS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( DS,( RCSe - ( ( MUM + DS ) / RCSe ) ) ) * ( MUC + MUC ) )", "obj1": 0.6413255360623782, "obj2": 0.25146784720143045}, {"determining": "( ( ARS * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server - Min( ARS ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / RRSe ) - ( DS + MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( CS * MUM ) ) ) ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6249584610625086}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( ( ARS * MDR ) + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( ( RRSe * MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( MLU / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4346978557504873, "obj2": 0.5079532855190346}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_CPU_Server ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9239766081871345, "obj2": 0.034825050574419286}, {"determining": "( ARS / ( ( ( ACS + ( MRS - Min( ( BR / ARS ) ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( Max( Min( MLU ,( ( Min( MUC ,MLU ) - MUR ) / RCSe ) ),MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.7485380116959064, "obj2": 0.14631120964908836}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR - RRSe ) ,Max( ( MUR + Min( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9259259259259259, "obj2": 0.034239692609410205}, {"determining": "( ( ARS * ( ( AMS / ( CRS + BR ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),( ARS - MDR ) ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_CPU_Server ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9454191033138402, "obj2": 0.024736875104055374}, {"determining": "( ( ( FirstVNF_CPU_Server / ACS ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( FirstVNF_CPU ,( AMS + ( MDR - ( MRS / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / ( RRSe / Max( RRSe,MUC ) ) ),MUM ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( Min( ARS ,( ( CRS + ( FirstVNF_RAM - Max( Max( CRS,PN ),DDR ) ) ) - MDR ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( Min( RMSe ,MUM ),RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867314}, {"determining": "( ( ARS * ( ( ( Max( ( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - DDR ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS / MUM ) ) - ( CS + RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.305809296375933}, {"determining": "( ARS / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( MUC ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.442495126705653, "obj2": 0.496641379240474}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( Const - RRS ) + ( PN / FirstVNF_RAM ) ) * ( Min( ( AMS / Const ) ,( ACS + ARS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN / MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( Max( ( RMSe - MUR ),( CS - MLU ) ) + Min( ( MUR * MLU ) ,MUC ) ) ) ) ) ) * Max( RCSe,RCSe ) )", "obj1": 0.98635477582846, "obj2": 0.006527552037977675}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - ( AMS * FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU * DS ),RCSe ) * Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / RCSe ) * Max( RRSe,RCSe ) ) + DS ) ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ARS ) ) / ( ( ( Max( ( MDR * AMS ),CRS ) + ( Max( FirstVNF_Mem,ARS ) - FirstVNF_Mem ) ) * Const ) - MDR ) ) ) - ( Max( ( RRS / Const ),( FirstVNF_CPU + FirstVNF_Mem ) ) * Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) ) )", "choosing": "( Max( MUR,RMSe ) * ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) * MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + RMSe ) ) - ( ( ( MUC / MLU ) * Max( MLU,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867314}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.5360623781676414, "obj2": 0.38027098967614587}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,MUR ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.5341130604288499, "obj2": 0.39069341054863527}, {"determining": "( ( ARS * ( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( Max( MDR,RRS ) + PN ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Max( Min( RRS ,MRS ),PN ) )", "choosing": "( ( RRSe / ( RCSe - RRSe ) ) - ( ( RCSe * RCSe ) - ( Min( RCSe ,( MLU * Max( ( ( MLU * MUC ) * RCSe ),MLU ) ) ) * ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.3714981591182179}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + Max( MLU,Min( ( MUC / MLU ) ,RRSe ) ) ) * MUR ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ARS / ( ( ( ( DDR + ( ARS / PN ) ) + ARS ) * ( ( PN - ACS ) * ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( Min( MUC ,( CS / MUC ) ) * MLU ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( RMSe ,CS ),MUM ) - Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.442495126705653, "obj2": 0.496641379240474}, {"determining": "( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( FirstVNF_RAM_Server - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUM,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / Max( RMSe,( ( ( DS + DS ) / RCSe ) + MUM ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6283404321644637}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5079532855190346}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( MDR / FirstVNF_CPU_Server ) * Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ARS * ARS ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( MUC ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( ( MUM - CS ) + ( Max( ( RMSe * ( CS * MUR ) ),( ( MLU * DS ) * RMSe ) ) / RMSe ) ) * ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / RMSe ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) + Max( CS,RCSe ) ) ) ) ),MLU ) )", "obj1": 0.6120857699805068, "obj2": 0.28312298974966266}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( RRS * ARS ) ) ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe * MUC ),MUM ) / ( ( Min( ( CS / RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.4015594541910331, "obj2": 0.5519597625958184}], "40": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) / ( MDR * MDR ) ) ) - Min( Max( ARS,( Min( AMS ,AMS ) / Const ) ) ,AMS ) )", "choosing": "( Min( MUR ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( ( ( MLU * DS ) * RMSe ),( ( CS / ( MUM - DS ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * MDR ) ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,Min( ( Max( RCSe,( MUM - DS ) ) / RCSe ) ,Min( Min( ( RCSe * ( MUC / MLU ) ) ,MUM ) ,( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ) ) / ( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server + DDR ) ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( DS + ( MUM + RMSe ) ) ,RRSe ) - ( Max( Min( CS ,RMSe ),RRSe ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.4580896686159844, "obj2": 0.46991952916269764}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) + Min( FirstVNF_CPU_Server ,Min( Min( CRS ,BR ) ,FirstVNF_CPU_Server ) ) ) - ( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) ) / ( MDR * MRS ) ) ) - ( ( RRS + BR ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Max( ( MUR * CS ),MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Max( ( MUC / RMSe ),CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.530214424951267, "obj2": 0.3856489810045964}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( BR - FirstVNF_CPU ) * Const ) - MDR ) ) ) - ( Min( ( MDR - MRS ) ,RRS ) * Max( ( RRS - Const ),Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( CS * RMSe ) / ( MUC * CS ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MUM ,MUM ) ) ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.37081251646648}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.6257309941520468, "obj2": 0.27213613165763645}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ARS ) ) / ( ( ( Max( ( MDR * AMS ),CRS ) + ( Max( FirstVNF_Mem,ARS ) - FirstVNF_Mem ) ) * Const ) - MDR ) ) ) - ( Max( ( RRS / Const ),( FirstVNF_CPU + FirstVNF_Mem ) ) * Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) ) )", "choosing": "( Max( MUR,RMSe ) * ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) * MUR ) )", "obj1": 0.746588693957115, "obj2": 0.1610294133850469}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( FirstVNF_CPU / ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( MLU / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.16534770964121392}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( Const - Const ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( RRS * BR ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) * ARS ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / Max( Max( ( RMSe + DS ),RRSe ),RRSe ) ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( MUM - Max( RCSe,MUC ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.660569051844937}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ACS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + Min( FirstVNF_Mem_Server ,( ACS + FirstVNF_CPU ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * Min( ( MLU - MUR ) ,Max( CS,CS ) ) ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( CS / ( Max( CS,RRSe ) * RMSe ) ),( Min( MUC ,MUM ) / Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867313}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( RRS - CRS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( ( MUC + MUM ) + ( Max( RRSe,Min( ( MUC / DS ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6861872404955033}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( ( ARS * ( ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) / ( AMS / ( ( FirstVNF_Mem_Server + AMS ) + AMS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( ( RRSe * ( MUM * Min( CS ,DS ) ) ) ,MUM ) + ( Max( RRSe,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / MLU ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6694554321784503}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( AMS - Const ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_Mem ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUR,( ( Max( MUR,( ( ( CS + MUR ) + ( MUC + RRSe ) ) / ( DS / MUR ) ) ) + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.8830409356725146, "obj2": 0.058103604724514625}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUC ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.6998050682261209, "obj2": 0.19745392080857369}, {"determining": "( ( ARS * Max( ( Const + CRS ),PN ) ) - ( Min( Max( MRS,( Max( CRS,MDR ) - ( ( MDR - FirstVNF_Mem_Server ) + PN ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( Min( CS ,CS ) ,( ( CS / Max( MUM,RRSe ) ) + Max( Max( CS,CS ),( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,MLU ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( CS / MLU ) - DS ),( RMSe * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.6354775828460039, "obj2": 0.2610660600915386}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - Max( ( CS / ( Max( CS,MUM ) * RMSe ) ),( Min( ( MUM + CS ) ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.4775828460038986, "obj2": 0.4464619137652088}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( ( Const - RRS ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( MLU / Min( CS ,( MUC / MUR ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.834307992202729, "obj2": 0.077994324793352}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( MLU / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.42884990253411304, "obj2": 0.5142719361190609}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) ) - MDR ) )", "choosing": "Min( Min( ( RCSe / RMSe ) ,RRSe ) ,Max( ( MUR + Min( Min( ( MUM / MUR ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9025341130604289, "obj2": 0.04449081048238536}, {"determining": "( ( ( ( ACS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ) ) - MDR ) - ARS ) / ( MDR - ( ( ( BR - FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( FirstVNF_RAM - BR ),CRS ) ) ) ) * ( MRS + PN ) ) ) )", "choosing": "Min( Max( ( ( ( ( Max( MUR,( MUR - RRSe ) ) / MUM ) / MUM ) - Max( Max( Min( ( MUM / RMSe ) ,( DS - RRSe ) ),Min( Max( RRSe,RMSe ) ,Max( RMSe,RMSe ) ) ),MLU ) ) * ( MUM / RMSe ) ),RCSe ) ,( RCSe / MUR ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ARS * ( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - ( Max( MDR,RRS ) + PN ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Max( Min( RRS ,MRS ),PN ) )", "choosing": "( ( RRSe / ( RCSe - RRSe ) ) - ( ( RCSe * RCSe ) - ( Min( RCSe ,( MLU * Max( ( ( MLU * MUC ) * RCSe ),MLU ) ) ) * ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,( CS * RMSe ) ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6970876316397959}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS + ( DS - Max( MUR,CS ) ) ) + RMSe ) + Max( MUR,MUR ) ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( Min( RMSe ,MLU ) + RRSe ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4374270403321952}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( Const * ( MRS / FirstVNF_CPU ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( ( Max( ACS,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) - Max( MDR,RRS ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * MRS ) ) ) ) ,AMS ) )", "choosing": "( ( RRSe / ( RCSe - RRSe ) ) - ( ( RCSe * RCSe ) - ( Min( RCSe ,( MLU * Max( ( MUC / RCSe ),MLU ) ) ) * ( DS * Min( Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ,Max( ( RCSe - DS ),DS ) ) ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ARS,AMS ) - ( MDR + ( ( ACS / ( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ACS - PN ) + ( ACS - ( ( FirstVNF_CPU + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( Min( MUC ,MUM ),RCSe ) + ( ( ( ( DS / ( CS * MUM ) ) + Min( RCSe ,( RMSe * MLU ) ) ) / ( ( MUR - ( MUR + MUM ) ) + ( MUR * MLU ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.49983296300932667}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - ( ( BR * BR ) / ( FirstVNF_CPU - CRS ) ) ) ) / ( CRS + ( ( ( Const * ( MRS / ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) + ( FirstVNF_CPU * PN ) ) * ( FirstVNF_RAM_Server + Max( DDR,( ( FirstVNF_Mem_Server / ( CRS * MDR ) ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MLU * Max( ( MUC / ( RCSe / MUM ) ),MLU ) ) + DS ) )", "obj1": 0.28460038986354774, "obj2": 0.7263348894511253}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( MDR,RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.5360623781676414, "obj2": 0.38027098967614587}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / ( ( RRSe * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ARS / ( ( ( ACS + ( MRS - Min( ( BR / ARS ) ,Min( ( BR / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( Max( Min( MLU ,( CS * RMSe ) ),MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.7485380116959064, "obj2": 0.14573401599999322}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( RRS,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( ACS ,BR ),FirstVNF_CPU_Server ) ) ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9239766081871345, "obj2": 0.034825050574419286}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + ( CRS * PN ) ) ) - FirstVNF_RAM_Server ),Const ) - ( ( RRS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( ( BR - ( BR + CRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - ( Min( ( ( MUR / RRSe ) + ( RMSe - ( RCSe / RRSe ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.3586744639376218, "obj2": 0.6208577873755052}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.034239692609410205}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) / ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS + FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS - BR ) ,( ACS + ARS ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR / Min( Min( Max( Max( ( RCSe - MUR ),MUC ),( CS * MUM ) ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( Min( Max( ( RCSe * MLU ),( DS - MUC ) ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.39571150097465885, "obj2": 0.5600821391789473}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( FirstVNF_RAM * MDR ) / ( ( PN - MDR ) / ( ARS * DDR ) ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( Max( ( ( CS / ( ( MUC * MUR ) / ( MUR * MLU ) ) ) - CS ),DS ) + ( MUC / RMSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Min( ( RMSe + ( MLU + MUR ) ) ,RRSe ) * Max( ( Max( ( Max( ( MLU * DS ),( MLU * RMSe ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( Min( Max( RMSe,RCSe ) ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + Max( DS,Max( RRSe,( MLU + DS ) ) ) ) ) ),RCSe ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( Min( MLU ,RRSe ) * DS ) + Max( DS,( MUR / MUM ) ) ) + Min( Min( ( MUR - RCSe ) ,( RRSe + DS ) ) ,Min( RMSe ,( MLU * CS ) ) ) ) ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( CS - MLU ),CS ) / Max( MUM,Max( MLU,MLU ) ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * CRS ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),Min( MUM ,( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( DS + CS ),Max( RMSe,MUM ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) + ACS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) * MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) - ( CS + MUM ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5692007797270955, "obj2": 0.33154954545873044}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( ( ARS * MDR ) + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( ( RRSe * MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( ( FirstVNF_CPU_Server / ACS ) / ( ARS * DDR ) ) / ( FirstVNF_Mem * Max( DDR,Min( FirstVNF_CPU ,( AMS + ( MDR - ( MRS / PN ) ) ) ) ) ) )", "choosing": "( Max( ( MLU / ( RRSe / Max( RRSe,MUC ) ) ),MUM ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( ( Min( RMSe ,CS ) + ( CS - CS ) ) * MLU ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ARS / ( ( ( ACS + ( MRS - Min( ( BR / ARS ) ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - Min( ( BR / ARS ) ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( Max( Min( MLU ,( ( Min( MUC ,MLU ) - MUR ) / RCSe ) ),MUC ) ,RMSe ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7210448558484044}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + Max( MLU,Min( ( MUC / MLU ) ,RRSe ) ) ) * MUR ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( Max( MUM,( RRSe / ( RRSe / Max( MLU,MUR ) ) ) ) / ( MUR * MLU ) )", "obj1": 0.672514619883041, "obj2": 0.221525942652803}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.33403281980831356}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( MLU / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4346978557504873, "obj2": 0.5079532855190346}, {"determining": "( ( AMS * PN ) - ( BR + ( ARS - Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3288582011900665}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) ) * ( ARS - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * ( RMSe - RMSe ) ) + MLU ) ) ) ) ) * Max( MLU,RCSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7319218113087416}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) - ( ARS / Min( ( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - CRS ) - MRS ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( MUR * MLU ) ,( MUR + Min( RCSe ,Max( MLU,RMSe ) ) ) ) * MUR ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( ( Min( Min( MLU ,DS ) ,( DS * RCSe ) ) / ( ( RCSe - RMSe ) / MUR ) ) * DS ) * DS ) * ( ( ( MLU * ( ( RMSe * RCSe ) * Min( RMSe ,RCSe ) ) ) - RMSe ) * Min( ( ( DS + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( ( FirstVNF_RAM_Server * ARS ),( MRS * FirstVNF_RAM ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MLU - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.33403281980831356}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem + PN ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + MUR ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.672514619883041, "obj2": 0.221525942652803}], "41": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS / MDR ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) * Max( ( DDR * AMS ),BR ) ) - ACS ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( MUR / ( RMSe + DS ) ) - ( RMSe / MUR ) ) ),( ( CS / ( CS - DS ) ) - MUR ) ) / ( Max( Max( DS,MUR ),( DS + MUC ) ) - ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) / ( MDR * MDR ) ) ) - Min( Max( ARS,( Min( AMS ,AMS ) / Const ) ) ,AMS ) )", "choosing": "( Min( MUR ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( ( ( MLU * DS ) * RMSe ),( ( CS / ( MUM - DS ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "( ( RMSe - ( RRSe * MUR ) ) - ( ( ( ( ( Min( Min( MLU ,DS ) ,( DS * RCSe ) ) / ( ( RCSe - RMSe ) / MUR ) ) * DS ) * DS ) * ( ( ( MLU * ( ( RMSe * RCSe ) * Min( RMSe ,RCSe ) ) ) - RMSe ) * Min( ( ( DS + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( ( ( DS * RRSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( MUC * MUM ) ) ),MUM ) * ( ( MUR + MUM ) + Min( Min( Max( MUR,RCSe ) ,( DS + MUR ) ) ,( MUM / MLU ) ) ) ) ) + Max( MUR,MUR ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR - ( ( MLU - CS ) - RRSe ) ) + ( MUR * MUR ) ) ) - ( CS * DS ) ) + ( RCSe + RCSe ) ) )", "obj1": 0.5282651072124757, "obj2": 0.4146436456581844}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.530214424951267, "obj2": 0.3856489810045964}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) + Min( FirstVNF_CPU_Server ,Min( Min( CRS ,BR ) ,FirstVNF_CPU_Server ) ) ) - ( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) ) / ( MDR * MRS ) ) ) - ( ( RRS + BR ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Max( ( MUR * CS ),MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Max( ( MUC / RMSe ),CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( BR - FirstVNF_CPU ) * Const ) - MDR ) ) ) - ( Min( ( MDR - MRS ) ,RRS ) * Max( ( RRS - Const ),Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( CS * RMSe ) / ( MUC * CS ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MUM ,MUM ) ) ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.37081251646648}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8226120857699805, "obj2": 0.08862063970193568}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( Const - Const ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.621832358674464, "obj2": 0.276848666657163}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( ARS * ( ( ( Max( ( MRS + PN ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - AMS ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - MDR )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUR,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( MUM * ( MUR * MUC ) ) )", "obj1": 0.783625730994152, "obj2": 0.11338992292923616}, {"determining": "( Min( ( MRS - Max( FirstVNF_Mem_Server,Min( MDR ,AMS ) ) ) ,AMS ) / ( ( ( ( ( PN - Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( MUM / Min( Min( Max( RCSe,RMSe ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5547942228757295}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( ( ARS * ( Max( ( ( Const - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * MDR ),FirstVNF_Mem ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RRSe + CS ) * ( ( Max( RMSe,( ( RCSe / ( MUM + DS ) ) + MUM ) ) * Min( Max( Min( Max( Min( DS ,DS ),RMSe ) ,( RCSe * DS ) ),MUC ) ,CS ) ) * ( ( ( DS - MLU ) - MUC ) + ( RCSe - RMSe ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * Max( ( Const + CRS ),PN ) ) - ( Min( Max( MRS,( Max( CRS,MDR ) - ( ( MDR - FirstVNF_Mem_Server ) + PN ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( Min( CS ,CS ) ,( ( CS / Max( MUM,RRSe ) ) + Max( Max( CS,CS ),( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,MLU ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( CS / MLU ) - DS ),( RMSe * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.6354775828460039, "obj2": 0.2610660600915386}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ACS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + Min( FirstVNF_Mem_Server ,( ACS + FirstVNF_CPU ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * Min( ( MLU - MUR ) ,Max( CS,CS ) ) ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( CS / ( Max( CS,RRSe ) * RMSe ) ),( Min( MUC ,MUM ) / Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867313}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ARS / ( ( ( ACS + ( MRS - Min( ( BR / ARS ) ,Min( ( BR / ARS ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * CS ) ,Min( Max( Min( MLU ,( CS * RMSe ) ),MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.7485380116959064, "obj2": 0.14573401599999322}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,Max( DDR,( ACS - AMS ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.29239766081871343, "obj2": 0.7178751189721554}, {"determining": "( ( ARS * ( ( AMS / ( CRS + BR ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) - MDR )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( Min( MUC ,MUM ) + ( Max( DS,Min( ( MUC / MLU ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MUC * Max( MUR,Max( RMSe,( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.35477582846003897, "obj2": 0.6215362442506578}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.645224171539961, "obj2": 0.25201097729102356}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server - ARS ) ) ) ) ) / ( MDR / AMS ) ) ) - Max( MRS,MDR ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - MUC ) ) ,( ( MLU - RRSe ) + ( MUR * ( MUR - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.834307992202729, "obj2": 0.07799432479335199}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( MUR + RRSe ) - ( ( ( ( ( Min( Min( MLU ,DS ) ,( DS * RCSe ) ) / ( ( RCSe - RMSe ) / MUR ) ) * DS ) * DS ) * ( ( ( MLU * ( ( RMSe * RCSe ) * Min( RMSe ,RCSe ) ) ) - RMSe ) * Min( ( ( DS + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17689334200809484}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( DS * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6470075367919167}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( ( ARS * MDR ) + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( MLU * DS ) ) ) * MUR ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * CRS ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),Min( MUM ,( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( DS + CS ),Max( RMSe,MUM ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( FirstVNF_CPU / Max( ( ( Max( ACS,( PN - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( DDR - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * Const ) ) ) ),MDR ) )", "choosing": "( ( MUR / RRSe ) * Min( Max( ( Min( ( Max( RRSe,( CS + DS ) ) - CS ) ,( MLU * Max( CS,MLU ) ) ) - Min( Min( RRSe ,MUM ) ,RRSe ) ),DS ) ,MUC ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + Max( Min( ACS ,ACS ),( MRS * FirstVNF_RAM ) ) ) ) - MDR ) )", "choosing": "Min( Min( ( RCSe / RMSe ) ,RRSe ) ,Max( ( MUR + Min( Min( ( MUM / MUR ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9025341130604289, "obj2": 0.04449081048238536}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_Mem ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + ( CS * DS ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.7037037037037037, "obj2": 0.19170439692689883}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( RRS - CRS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( ( MUC + MUM ) + ( Max( RRSe,Min( ( MUC / DS ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6861872404955033}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( Min( Min( ACS ,FirstVNF_RAM ) ,ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RMSe / DS ),( ( CS * MLU ) / DS ) ) * ( MUR - MLU ) )", "obj1": 0.6335282651072125, "obj2": 0.268378257044526}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - Const ) / ( PN * Min( Min( DDR ,( FirstVNF_Mem + BR ) ) ,ACS ) ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( Const ,FirstVNF_RAM_Server ) + Min( BR ,Min( AMS ,( FirstVNF_CPU * ARS ) ) ) ) ) )", "choosing": "( ( CS / ( DS / RMSe ) ) - ( ( ( DS * ( MLU * DS ) ) * ( ( ( ( MLU + ( CS - CS ) ) * MLU ) * ( CS * RRSe ) ) * ( Max( Max( RCSe,( MUC + DS ) ),MUC ) - RMSe ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21249153855339026}, {"determining": "( ( ARS * ( RRS * FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_Mem - ( AMS - ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - Const ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS + ( MUR / ( DS / ( Min( CS ,( MUM * RCSe ) ) * MUC ) ) ) ) ) - ( RRSe + MLU ) )", "obj1": 0.7134502923976608, "obj2": 0.1853507916977108}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + ( CRS * PN ) ) ) - FirstVNF_RAM_Server ),Const ) - ( ( RRS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( ( BR - ( BR + CRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - ( Min( ( ( MUR / RRSe ) + ( RMSe - ( RCSe / RRSe ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.3586744639376218, "obj2": 0.6208577873755052}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.6257309941520468, "obj2": 0.27213613165763645}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( RCSe - DS ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( Const - DDR ) * ( MRS / ( Const - CRS ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( ( CS + MUC ) - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( FirstVNF_CPU / ( ( ( Max( CRS,PN ) + ( ( FirstVNF_Mem_Server / BR ) * ( Const - BR ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / Min( FirstVNF_Mem_Server ,PN ) ) ) - MDR ) )", "choosing": "( ( DS * CS ) - ( MUM - ( DS + RCSe ) ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + RRSe ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.732943469785575, "obj2": 0.16318022813341498}, {"determining": "( ( ARS + ( Max( MDR,RRS ) / ( Max( RRS,( Max( ( AMS + ACS ),( DDR - FirstVNF_CPU ) ) / ( Max( MRS,PN ) - CRS ) ) ) * Min( BR ,ACS ) ) ) ) - ( ARS * Min( ( FirstVNF_RAM_Server * MDR ) ,AMS ) ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( Min( MUC ,MUR ) + ( Max( RRSe,Min( Max( RCSe,MUM ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),( MUC / ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7248340280927017}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) ) * ( ARS - ( MRS - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * ( RMSe - RMSe ) ) + MLU ) ) ) ) ) * Max( MLU,RCSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7319218113087416}, {"determining": "( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( AMS - Const ) - Max( ( ACS * BR ),CRS ) ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_Mem ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,DDR ) ) ) - MDR ) )", "choosing": "( Max( MUR,( ( Max( MUR,( ( ( CS + MUR ) + ( MUC + RRSe ) ) / ( DS / MUR ) ) ) + Max( MLU,( MUR * RCSe ) ) ) / ( RCSe * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.8830409356725146, "obj2": 0.058103604724514625}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / ( ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + Max( MLU,Min( ( MUC / MLU ) ,RRSe ) ) ) * MUR ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( RCSe / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ARS ) ) / ( ( ( Max( ( MDR * AMS ),CRS ) + ( Max( FirstVNF_Mem,ARS ) - FirstVNF_Mem ) ) * Const ) - MDR ) ) ) - ( Max( ( RRS / Const ),( FirstVNF_CPU + FirstVNF_Mem ) ) * Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) ) )", "choosing": "( Max( MUR,RMSe ) * ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + RMSe ) ) * MUR ) )", "obj1": 0.746588693957115, "obj2": 0.1610294133850469}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( ARS - RRS ) + Max( CRS,( ACS + ARS ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6775957894590321}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - Const ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( RMSe ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * ( CS / CS ) ) ),MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.034239692609410205}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) / ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS + FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS - BR ) ,( ACS + ARS ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR / Min( Min( Max( Max( ( RCSe - MUR ),MUC ),( CS * MUM ) ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ( PN / ( ARS * MRS ) ) + ( ARS + ( RRS * ( FirstVNF_RAM * ACS ) ) ) ) / ( ( AMS - MDR ) - MDR ) )", "choosing": "Min( Min( MLU ,Min( Max( RRSe,DS ) ,( RRSe / ( Max( RMSe,( DS * CS ) ) + MLU ) ) ) ) ,( RMSe / RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1858111541916862}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ARS ) ) / ( ( ( Max( ( MDR * AMS ),CRS ) + ( Max( FirstVNF_Mem,ARS ) - FirstVNF_Mem ) ) * Const ) - MDR ) ) ) - ( Max( ( RRS / Const ),( FirstVNF_CPU + FirstVNF_Mem ) ) * Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( Min( MLU ,( RCSe * CS ) ) + ( Min( ( RMSe * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.16193058364700058}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUC ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.6998050682261209, "obj2": 0.19745392080857369}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) + ACS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) * MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) - ( CS + MUM ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5692007797270955, "obj2": 0.33154954545873044}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * FirstVNF_RAM_Server ),AMS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( RRSe / Min( RRSe ,MUC ) ) ) ) / Max( RCSe,RCSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5035571955912508}, {"determining": "( FirstVNF_CPU / ( Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - Min( RRS ,CRS ) ) ) * AMS ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,( ( RCSe - MUC ) + ( MLU + MLU ) ) ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( ( Max( ( ( MUM / DS ) + RMSe ),MUC ) - RMSe ) * MUR ) ) * MUR ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / ( ( RRSe * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Min( ( ARS / ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) ) - MDR ) )", "choosing": "( Max( Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ),( MUM * ( ( Min( ( RCSe * ( MUC / RMSe ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) ) * ( ( ( ( MUM * Min( ( ( MUC - RRSe ) + RMSe ) ,( CS / CS ) ) ) * MUC ) * ( ( ( Min( ( MLU - RCSe ) ,Max( MUR,RMSe ) ) - Min( RMSe ,MLU ) ) + ( ( ( DS - RCSe ) + Max( CS,MUC ) ) * Max( DS,MUC ) ) ) * MUM ) ) * MLU ) )", "obj1": 0.9922027290448343, "obj2": 0.00377873490039396}, {"determining": "( FirstVNF_CPU / ( MDR - Max( ( Max( FirstVNF_RAM,DDR ) + ARS ),RRS ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11523577691628836}], "42": [{"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS / MDR ) / ( ( Min( FirstVNF_RAM_Server ,ACS ) * Max( ( DDR * AMS ),BR ) ) - ACS ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( MUR / ( RMSe + DS ) ) - ( RMSe / MUR ) ) ),( ( CS / ( CS - DS ) ) - MUR ) ) / ( Max( Max( DS,MUR ),( DS + MUC ) ) - ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) / ( ( ( BR / RRS ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( CS * RCSe ) ,( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( DS / ( ( MUM + RRSe ) + ( RMSe - MUR ) ) ) ) ) - ( DS + RRSe ) ) ) / ( RCSe + Min( Min( DS ,RRSe ) ,( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + ( BR / MRS ) ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,AMS ) ) ) * PN ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + Min( ( Min( ( RRSe / MUR ) ,DS ) * DS ) ,MUC ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.52046783625731, "obj2": 0.3885022579638135}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) )", "obj1": 0.49707602339181284, "obj2": 0.4177542365244408}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) + ACS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) * MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) - ( CS + MUM ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3293279494373291}, {"determining": "( ( ( ( DDR * RRS ) / MDR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - Min( BR ,Max( ( ACS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) ) ) * ( ( ACS * Max( FirstVNF_CPU_Server,( MRS * FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - PN ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.2372297843956075}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( BR - FirstVNF_CPU ) * Const ) - MDR ) ) ) - ( Min( ( MDR - MRS ) ,RRS ) * Max( ( RRS - Const ),Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( CS * RMSe ) / ( MUC * CS ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MUM ,MUM ) ) ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.37081251646648}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( ( MRS + PN ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - AMS ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - MDR )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUR,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( MUM * ( MUR * MUC ) ) )", "obj1": 0.783625730994152, "obj2": 0.11338992292923616}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Max( ( RRSe + MUC ),( ( RMSe * CS ) * ( MLU - MLU ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08957665001496479}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( Min( ( MRS - Max( FirstVNF_Mem_Server,Min( MDR ,AMS ) ) ) ,AMS ) / ( ( ( ( ( PN - Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( MUM / Min( Min( Max( RCSe,RMSe ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5547942228757295}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( ARS * ( ( ( Max( MDR,( Const - RRS ) ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( Const * Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( ( MLU * RMSe ) ,CS ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),Min( RRSe ,( ( MLU * ( CS / DS ) ) + ( DS - RMSe ) ) ) ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3834634189576857}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( Min( FirstVNF_RAM_Server ,( RRS + ( CRS * PN ) ) ) - FirstVNF_RAM_Server ),Const ) - ( ( RRS * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( ( BR - ( BR + CRS ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - ( Min( ( ( MUR / RRSe ) + ( RMSe - ( RCSe / RRSe ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.3586744639376218, "obj2": 0.6208577873755052}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( ( ARS * Max( ( Const + CRS ),PN ) ) - ( Min( Max( MRS,( Max( CRS,MDR ) - ( ( MDR - FirstVNF_Mem_Server ) + PN ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( Min( CS ,CS ) ,( ( CS / Max( MUM,RRSe ) ) + Max( Max( CS,CS ),( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,MLU ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( CS / MLU ) - DS ),( RMSe * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.6354775828460039, "obj2": 0.2610660600915386}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( MUR + RRSe ) - ( ( ( ( ( Min( Min( MLU ,DS ) ,( DS * RCSe ) ) / ( ( RCSe - RMSe ) / MUR ) ) * DS ) * DS ) * ( ( ( MLU * ( ( RMSe * RCSe ) * Min( RMSe ,RCSe ) ) ) - RMSe ) * Min( ( ( DS + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17689334200809484}, {"determining": "( ( FirstVNF_CPU_Server * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - ARS ) ) / ( ( ( Max( ( MDR * AMS ),CRS ) + MDR ) * Const ) - MDR ) ) ) - ( Max( ( RRS / Const ),( FirstVNF_CPU + FirstVNF_Mem ) ) * Min( ( MRS - ( Max( CRS,MDR ) - ( PN + Const ) ) ) ,RRS ) ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( Min( MLU ,( RCSe * CS ) ) + ( Min( ( RMSe * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( RRSe * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934404}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( Const - Const ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( MUR / RRSe ) * ( ( RRSe - Max( ( CS / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) + Min( FirstVNF_CPU_Server ,Min( Min( CRS ,BR ) ,FirstVNF_CPU_Server ) ) ) - ( Max( ( CRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) ) / ( MDR * MRS ) ) ) - ( ( RRS + BR ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Max( ( MUR * CS ),MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Max( ( MUC / RMSe ),CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( ARS - RRS ) + Max( CRS,( ACS + ARS ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6775957894590321}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( DS * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6470075367919167}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * CRS ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),Min( MUM ,( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( DS + CS ),Max( RMSe,MUM ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.43664717348927873, "obj2": 0.501599867292699}, {"determining": "( ARS / ( ( ( ( CRS * PN ) + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * MLU ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( ARS * ( Max( ( ( Const - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * MDR ),FirstVNF_Mem ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,CRS ) ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( RRSe + CS ) * ( ( Max( RMSe,( ( RCSe / ( MUM + DS ) ) + MUM ) ) * Min( Max( Min( Max( Min( DS ,DS ),RMSe ) ,( RCSe * DS ) ),MUC ) ,CS ) ) * ( ( ( DS - MLU ) - MUC ) + ( RCSe - RMSe ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( FirstVNF_RAM_Server - Min( ARS ,( AMS + FirstVNF_RAM ) ) ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - CS ) + ( MUM * RMSe ) ) / ( ( MUC * RMSe ) / ( ( MUR - ( RRSe + ( RMSe - MLU ) ) ) + ( MUR * MLU ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6033647034166457}, {"determining": "( ( RRS - CRS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( ( MUC + MUM ) + ( Max( RRSe,Min( ( MUC / DS ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6861872404955033}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS * ( Min( FirstVNF_Mem_Server ,( PN * PN ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( RRS,AMS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( Max( Min( MRS ,DDR ),( PN / FirstVNF_CPU_Server ) ) / Max( ( ( ACS + ARS ) - ( ( PN - ACS ) + ( ARS * Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) * Const ),( BR - Max( AMS,RRS ) ) ) ) ) ),MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( MUC / ( MLU + DS ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),( Min( ( RRSe * Min( MUM ,MUC ) ) ,DS ) - ( ( Max( RRSe,Min( MUC ,RMSe ) ) + ( RCSe - CS ) ) * RMSe ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49572263860534593}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( Min( Min( ACS ,FirstVNF_RAM ) ,ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RMSe / DS ),( ( CS * MLU ) / DS ) ) * ( MUR - MLU ) )", "obj1": 0.6335282651072125, "obj2": 0.268378257044526}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( ( ARS * ( RRS * FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_Mem - ( AMS - ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - Const ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS + ( MUR / ( DS / ( Min( CS ,( MUM * RCSe ) ) * MUC ) ) ) ) ) - ( RRSe + MLU ) )", "obj1": 0.7134502923976608, "obj2": 0.1853507916977108}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS - ( MRS - Min( ( ( ACS * Max( ( MRS * FirstVNF_CPU ),MRS ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,RRSe ) / RCSe ) / ( ( MLU + ( RRSe / Min( Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ,( Max( ( RMSe + MLU ),CS ) / Max( Max( MLU,MLU ),MUM ) ) ) ) ) * MLU ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.41325536062378165, "obj2": 0.5357915559071272}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( RCSe - DS ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.5984405458089669, "obj2": 0.2982717906168036}, {"determining": "( ( ARS * ( ( ( ( ( FirstVNF_RAM_Server - ACS ) / ( BR / Const ) ) - ( ARS - BR ) ) - ( ARS - Min( ARS ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( DS + ( ( ( RRSe * MUC ) + RCSe ) / ( Max( ( MUR + ( ( DS + MUC ) - ( MUC / MUC ) ) ),Max( RCSe,MUC ) ) + ( DS / ( DS * MUM ) ) ) ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6265415805581742}, {"determining": "( FirstVNF_CPU / ( ( ( Max( CRS,PN ) + ( ( FirstVNF_Mem_Server / BR ) * ( Const - BR ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / MDR ) ) - MDR ) )", "choosing": "( ( DS * CS ) - ( MUM - Max( RRSe,DS ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7124254437080076}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( RRSe * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.6257309941520468, "obj2": 0.27213613165763645}, {"determining": "( ( ARS - MDR ) / ( ( ( CRS * AMS ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( PN * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( Min( ( CS / ( DS / MUM ) ) ,( ( ( MUC / MUC ) + CS ) + MUM ) ) ,MUR ) / Max( ( CS / ( RMSe * Max( RCSe,( MUC / MUM ) ) ) ),( ( MUC - RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7582846003898636, "obj2": 0.13636528883825835}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( ARS - RRS ) + Max( CRS,( ACS + ARS ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.31773879142300193, "obj2": 0.681782947808924}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( Min( PN ,ACS ) + ( ( ( FirstVNF_Mem / DDR ) * ( ARS / FirstVNF_CPU_Server ) ) * Max( ( Const * Const ),AMS ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS / RMSe ),Min( RCSe ,MLU ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,RCSe ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15303035540956347}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - MRS )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7368421052631579, "obj2": 0.15647224517985756}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( Max( ( FirstVNF_CPU + CRS ),BR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + FirstVNF_Mem ) * MRS ) ) ) ) - MRS ) )", "choosing": "( ( ( ( ( Min( ( ( RCSe - RRSe ) + DS ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) + MUM ) / DS ) + ( MUM * RMSe ) ) / ( DS / MLU ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( RCSe / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( ARS * ( ( ( Max( ( ( MDR + FirstVNF_CPU_Server ) - ( ARS - ACS ) ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * ( ( PN - ACS ) + Min( Max( PN,MRS ) ,DDR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC * RMSe ) / ( ( MUR - ( RRSe + Min( RMSe ,MLU ) ) ) + ( MLU * RRSe ) ) ) / ( DS / ( CS / ( RMSe * Max( ( MUM + DS ),RRSe ) ) ) ) ) - ( CS + RRSe ) )", "obj1": 0.9922027290448343, "obj2": 0.003279098492773352}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ( DDR / BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( Min( Max( ( ( RCSe / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) ) * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.746588693957115, "obj2": 0.147998961777985}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( Min( Min( RCSe ,DS ) ,RRSe ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * ( ( ( ( MUR * ( CS / RCSe ) ) * ( RRSe - ( RCSe - DS ) ) ) - RMSe ) / CS ) )", "obj1": 0.41130604288499023, "obj2": 0.5417133325327159}, {"determining": "( ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) / ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS + FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS - BR ) ,( ACS + ARS ) ) ) ) )", "choosing": "Min( ( RCSe / MUR ) ,Max( ( MUR / Min( Min( Max( Max( ( RCSe - MUR ),MUC ),( CS * MUM ) ) ,Max( RRSe,( MUM - Max( RCSe,MUC ) ) ) ) ,( MUC * ( ( MUC * ( DS / MUR ) ) / MUC ) ) ) ),RCSe ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * ( MUR / RRSe ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ARS / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + RRSe ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.732943469785575, "obj2": 0.16318022813341498}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.39571150097465885, "obj2": 0.557519689596122}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.24915432451783673}, {"determining": "( ( ARS * ( ( ( Max( ( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - Const ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( DS + ( DS - Max( MUR,CS ) ) ) + RMSe ) + Max( MUR,MUR ) ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( Min( RMSe ,MLU ) + RRSe ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}], "43": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( CS + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( ACS * FirstVNF_RAM ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) + ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - MUC ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( PN - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( RRSe / ( RCSe - RRSe ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.5029239766081871, "obj2": 0.41477446788720673}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5185185185185185, "obj2": 0.3903876047042994}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ARS * ( ( ( Max( ( MRS + PN ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - AMS ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - MDR )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUR,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( MUM * ( MUR * MUC ) ) )", "obj1": 0.783625730994152, "obj2": 0.11338992292923616}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) - Min( ( Max( CRS,( ( FirstVNF_RAM / ( FirstVNF_CPU_Server / ACS ) ) + DDR ) ) * FirstVNF_CPU_Server ) ,AMS ) )", "choosing": "( ( Min( RRSe ,Min( CS ,RRSe ) ) - ( ( ( ( DS * Max( ( MUC / RMSe ),MUM ) ) / ( MUR * CS ) ) * MUM ) - MUC ) ) - ( ( RCSe * RCSe ) - ( RRSe * ( DS * Min( ( CS * RMSe ) ,Min( ( RCSe * ( MUC / CS ) ) ,MUM ) ) ) ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3771340230156247}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) + MDR ) ) * ( ( ( ACS - ACS ) - ACS ) + ( ACS - ( ( MDR + ( BR + PN ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( ( MUC * Min( RCSe ,MUC ) ) + CS ) - ( ( DS - ( CS + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) * Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe - CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5419103313840156, "obj2": 0.35649399171751334}, {"determining": "( ( ARS * Max( ( Const + CRS ),PN ) ) - ( Min( Max( MRS,( Max( CRS,MDR ) - ( ( MDR - FirstVNF_Mem_Server ) + PN ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( Min( CS ,CS ) ,( ( CS / Max( MUM,RRSe ) ) + Max( Max( CS,CS ),( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,MLU ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( CS / MLU ) - DS ),( RMSe * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.6354775828460039, "obj2": 0.2610660600915386}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( RRSe * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.41130604288499023, "obj2": 0.5359934211653719}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( Min( ACS ,FirstVNF_RAM_Server ) - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * ( MUR / RRSe ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.7076023391812866, "obj2": 0.19192464651109317}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( ARS * ( ( ( Max( MDR,( Const - RRS ) ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( Const * Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( ( MLU * RMSe ) ,CS ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),Min( RRSe ,( ( MLU * ( CS / DS ) ) + ( DS - RMSe ) ) ) ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3834634189576857}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) * CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + RRSe ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( Min( MUM ,RRSe ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( MRS + FirstVNF_RAM ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,DS ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( ( ( MLU * MUR ) - ( CS - CS ) ) * MUR ) )", "obj1": 0.9766081871345029, "obj2": 0.011087782716236031}, {"determining": "( ( ARS * ( RRS * FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_Mem - ( AMS - ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,( Const - Const ) ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS + ( MUR / ( DS / ( Min( CS ,( MUM * RCSe ) ) * MUC ) ) ) ) ) - ( RRSe + MLU ) )", "obj1": 0.7134502923976608, "obj2": 0.1853507916977108}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( MUR + RRSe ) - ( ( ( ( ( Min( Min( MLU ,DS ) ,( DS * RCSe ) ) / ( ( RCSe - RMSe ) / MUR ) ) * DS ) * DS ) * ( ( ( MLU * ( ( RMSe * RCSe ) * Min( RMSe ,RCSe ) ) ) - RMSe ) * Min( ( ( DS + ( CS - CS ) ) * MLU ) ,( CS * RRSe ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17689334200809484}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_CPU - Min( ARS ,Min( FirstVNF_RAM_Server ,Min( ACS ,AMS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - Max( CS,MUC ) ) + ( MUC * ( RRSe / MUR ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.36257309941520466, "obj2": 0.6131945897105145}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const * ( ( Const - ACS ) + Max( ( Const - Const ),CRS ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( ( DS * CS ) - ( MUM - Max( RRSe,DS ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) + ACS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) * MDR ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) - ( CS + MUM ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3293279494373291}, {"determining": "( Max( ARS,PN ) / ( ( ( Min( PN ,ACS ) + ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * Max( ( Const * Const ),AMS ) ) ) * ( ACS + ARS ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( ( RCSe - MUM ) / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6751281792417846}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Max( ( RRSe + MUC ),( ( RMSe * CS ) * ( MLU - MLU ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08957665001496479}, {"determining": "( ARS / ( ( ( ( CRS * PN ) + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( ( PN - ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * MLU ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( Min( ( MRS - Max( FirstVNF_Mem_Server,Min( MDR ,AMS ) ) ) ,AMS ) / ( ( ( ( ( PN - Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( MUM / Min( Min( Max( RCSe,RMSe ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5547942228757295}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS + ( ( ( Max( MDR,RRS ) - PN ) - ( ( CRS * Min( ( FirstVNF_CPU_Server - BR ) ,FirstVNF_CPU ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( Const ,( FirstVNF_Mem * ( Min( RRS ,Const ) / FirstVNF_CPU ) ) ) - MDR ) ) ) - Min( PN ,AMS ) )", "choosing": "( DS / ( ( Max( CS,CS ) + ( RMSe + RCSe ) ) + Min( RRSe ,( RRSe + ( Min( ( MUR + DS ) ,( DS - RRSe ) ) - ( MLU / MUM ) ) ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09877478858099233}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( Min( DDR ,RRS ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( DDR - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( DS ,( ( MUM - Min( MUM ,RCSe ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( DS * Min( RRSe ,( CS * RMSe ) ) ) * RRSe ),MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ARS / ( ( ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) * ( Min( Min( ACS ,FirstVNF_RAM ) ,ACS ) + ( ARS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( RMSe / DS ),( ( CS * MLU ) / DS ) ) * ( MUR - MLU ) )", "obj1": 0.6335282651072125, "obj2": 0.268378257044526}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.43664717348927873, "obj2": 0.501599867292699}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( FirstVNF_RAM_Server - Min( ARS ,( AMS + FirstVNF_RAM ) ) ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - CS ) + ( MUM * RMSe ) ) / ( ( MUC * RMSe ) / ( ( MUR - ( RRSe + ( RMSe - MLU ) ) ) + ( MUR * MLU ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6033647034166457}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ARS * ( ( ( Max( Const,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ACS / PN ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.2693763964790083}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( Max( FirstVNF_Mem,BR ) / ( ( ( ( ( BR / RRS ) - DDR ) - ( ( PN + Max( CRS,PN ) ) + ( ( ( FirstVNF_Mem - Const ) - ( ACS + ACS ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( ARS * PN ) ) ) ) ) * ( ( ( RRS * PN ) / ( MDR - Const ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MLU + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUM,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( Max( MUC,MLU ),( Max( CS,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( RCSe - Min( Min( ( ( ( RRSe * MUM ) + CS ) + ( CS * CS ) ) ,MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5611793832408842}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( ARS * Min( Min( MRS ,BR ) ,FirstVNF_RAM ) ) - ( Min( ( MDR * MRS ) ,RRS ) * Max( ( RRS - Const ),Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( ( Min( ( DS + MUR ) ,RRSe ) + ( ( ( MUR * MUR ) / CS ) * MLU ) ) - MUC ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( MUM - MLU ) / MLU ) / ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1530303554095634}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( ( RCSe - MUM ) + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.8596491228070176, "obj2": 0.06607065746503371}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( MLU ,( ( Min( RMSe ,RRSe ) - MUR ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( RRSe * ( DS * Min( RRSe ,( CS * RMSe ) ) ) ),MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ARS * ( ( ( Max( ( ( MDR + FirstVNF_CPU_Server ) - ( ARS - ACS ) ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * Min( AMS ,Max( BR,FirstVNF_Mem ) ) ) - ACS ) ) * ( ( PN - ACS ) + Min( Max( PN,MRS ) ,DDR ) ) ) - MDR ) )", "choosing": "( ( ( ( MUC * RMSe ) / ( ( MUR - ( RRSe + Min( RMSe ,MLU ) ) ) + ( MLU * RRSe ) ) ) / ( DS / ( CS / ( RMSe * Max( ( MUM + DS ),RRSe ) ) ) ) ) - ( CS + RRSe ) )", "obj1": 0.9922027290448343, "obj2": 0.003279098492773352}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - MRS )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7368421052631579, "obj2": 0.15647224517985756}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) - MDR ) / ( ARS - ( FirstVNF_Mem - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RMSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( Min( MUR ,( MUC * MUR ) ) * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3293279494373291}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / RRSe ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + ( BR / MRS ) ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,AMS ) ) ) * PN ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + Min( ( Min( ( RRSe / MUR ) ,DS ) * DS ) ,MUC ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.52046783625731, "obj2": 0.3885022579638135}, {"determining": "( ( RRS - CRS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( ( MUC + MUM ) + ( Max( RRSe,Min( ( MUC / DS ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6861872404955033}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( RCSe - DS ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU_Server ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + FirstVNF_Mem ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( ( RCSe - RRSe ) + MLU ) ,( Min( MLU ,MUR ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ( Const - BR ) ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( RCSe - ( DS * CS ) ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.9473684210526315, "obj2": 0.023801876201734823}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,RRSe ) ) + MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ( ARS - RRS ) + Max( CRS,( ACS + ARS ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( AMS / Const ) ,( ACS + ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - Max( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( ( MUM * RMSe ) * ( MUR + MUR ) ) ) ) ) ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.31773879142300193, "obj2": 0.681782947808924}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) )", "obj1": 0.49707602339181284, "obj2": 0.4177542365244408}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * CRS ) - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),Min( MUM ,( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( DS + CS ),Max( RMSe,MUM ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) * ( ( Max( RMSe,( ( ( MUM + DS ) / RCSe ) + MUM ) ) * Min( Max( Min( Max( Min( DS ,DS ),RMSe ) ,( RCSe * DS ) ),MUC ) ,CS ) ) * Max( MLU,( MUC * ( RMSe * CS ) ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5547942228757295}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * ( RCSe / MUM ) ) / MUR ) * CS ) )", "obj1": 0.7777777777777778, "obj2": 0.11892774287158348}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( DS * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6470075367919167}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.41325536062378165, "obj2": 0.5357915559071272}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.442495126705653, "obj2": 0.4977257203126516}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + FirstVNF_Mem ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( ( ( RRSe - RCSe ) - DS ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}], "44": [{"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( RRSe,MUC ) + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( CS + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( ( ( MDR / RRS ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( PN * DDR ) ) - FirstVNF_RAM_Server ) ) / ( ( Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) * Const ) - MDR ) ) ) - Min( AMS ,( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( PN * RRS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Max( ( DS / MUC ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( MUR * MUM ) ) ),CS ),( ( ( MLU * DS ) + Min( DS ,( MUM / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( RRS + BR ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) / ( ( ( ( Const + ( Const - RRS ) ) + Max( ( MDR * BR ),CRS ) ) * Const ) - MDR ) ) ) * ( Max( DDR,DDR ) - ( Min( PN ,AMS ) - ( ( FirstVNF_Mem + Const ) / ( MRS * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,MUC ) ) ) + ( ( ( ( MLU * DS ) + ( Max( RRSe,( CS + DS ) ) - CS ) ) + Min( Min( Max( MUR,RCSe ) ,( ( MUR * DS ) + DS ) ) ,( MUM / MLU ) ) ) * Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( RCSe * MUM ) ) ),CS ) ) ) * Min( ( CS - CS ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.28835912155058957}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3613078991734597}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5185185185185185, "obj2": 0.3903876047042994}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS * ( ( ( Max( MDR,( Const - RRS ) ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( Const * Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( ( MLU * RMSe ) ,CS ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),Min( RRSe ,( ( MLU * ( CS / DS ) ) + ( DS - RMSe ) ) ) ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3834634189576857}, {"determining": "( ( ( PN - ( FirstVNF_RAM * ( BR + FirstVNF_Mem_Server ) ) ) + ( ARS + ( RRS * DDR ) ) ) / ( ( ( ( MRS - RRS ) + Max( Const,Min( Max( BR,Const ) ,RRS ) ) ) * Min( FirstVNF_CPU_Server ,DDR ) ) - MDR ) )", "choosing": "Min( ( Min( RMSe ,( MUR / Min( ( DS / Min( MUM ,RCSe ) ) ,MLU ) ) ) / MLU ) ,( RMSe / ( MUR / RRSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.020160802572452854}, {"determining": "( ( ARS * ( ( ( Max( ( MRS + PN ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - AMS ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - MDR )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUR,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( MUM * ( MUR * MUC ) ) )", "obj1": 0.783625730994152, "obj2": 0.11338992292923616}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS * ( ( ( Min( ACS ,PN ) - PN ) - ( FirstVNF_RAM_Server - Min( ( MDR * BR ) ,Min( ( FirstVNF_RAM_Server * ARS ) ,( AMS / FirstVNF_RAM ) ) ) ) ) / ( BR - AMS ) ) ) - Min( DDR ,AMS ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( ( ( ( ( CS - MUR ) / ( RCSe * RCSe ) ) + RRSe ) + DS ) + Max( Max( RRSe,MUC ),CS ) ) ) ) * ( MUR - MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08594364148489829}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( ( RRS - CRS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( ( MUC + MUM ) + ( Max( RRSe,Min( ( MUC / DS ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6861872404955033}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) * ( ( ( MUR * ( Max( ( ( MLU + RRSe ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7953216374269005, "obj2": 0.10068588784187918}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - ( FirstVNF_CPU - RRS ) ) ) - FirstVNF_RAM_Server ) ) / ( MDR - ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) ) ) ) - ( Min( ( ( PN - MRS ) - Min( AMS ,( ACS * FirstVNF_Mem ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU + DS ) * CS ) * ( ( Max( ( Max( CS,( RCSe * DS ) ) - ( CS - MUC ) ),( ( ( MUM + DS ) / RCSe ) + MUM ) ) * DS ) * Max( ( MUC * ( RMSe * CS ) ),MLU ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713526}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.36257309941520466, "obj2": 0.6131945897105145}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.5555555555555556, "obj2": 0.3376743186907612}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.36257309941520466, "obj2": 0.6131945897105145}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,RRSe ) ) + MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( ( ARS - ( ( AMS - CRS ) - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.32932794943732907}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( FirstVNF_CPU / ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7179647049448494}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( Min( ( MRS - Max( FirstVNF_Mem_Server,Min( MDR ,AMS ) ) ) ,AMS ) / ( ( ( ( ( PN - Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( Max( MUM,( MLU / ( MUM / Min( Min( Max( RCSe,RMSe ) ,RCSe ) ,MUC ) ) ) ) / ( ( Min( Min( CS ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * ( Min( RMSe ,CS ) + ( CS - CS ) ) ) + Max( DS,( MUR / RCSe ) ) ) ) * MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5547942228757295}, {"determining": "( ( ARS - ( AMS / MRS ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ( ( Min( ACS ,ACS ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) * Max( Max( MUR,( MUM / MUR ) ),( ( CS / ( RMSe + Max( RCSe,MUR ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( CS / ( DS + ( MUR / ( DS / ( Min( CS ,( MUM * RCSe ) ) * MUC ) ) ) ) ) - ( RRSe + MLU ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( ( CS * RMSe ) * ( MLU + ( Max( RRSe,( MLU + DS ) ) + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.4756335282651072, "obj2": 0.44552814752342523}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( CS * MLU ) / DS ) ) / Max( RMSe,MUM ) )", "obj1": 0.7290448343079922, "obj2": 0.16689580380786265}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( DS * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6470075367919167}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Max( ( RRSe + MUC ),( ( RMSe * CS ) * ( MLU - MLU ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08957665001496479}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( AMS * MRS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - ARS ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( CS * Min( CS ,RCSe ) ) - ( ( MUC * DS ) / ( ( MUR - ( ( DS / MLU ) - ( MUR / MLU ) ) ) + ( MUR * MLU ) ) ) ) ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( ( Max( ( FirstVNF_RAM_Server - Min( ARS ,( AMS + FirstVNF_RAM ) ) ),Const ) - ( ( Const * ( ( Const - ACS ) + Max( ( FirstVNF_RAM_Server * ARS ),CRS ) ) ) - MDR ) ) / ( FirstVNF_Mem_Server + ( BR - ( PN + MDR ) ) ) ) )", "choosing": "( ( ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - CS ) + ( MUM * RMSe ) ) / ( ( MUC * RMSe ) / ( ( MUR - ( RRSe + ( RMSe - MLU ) ) ) + ( MUR * MLU ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6033647034166457}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.442495126705653, "obj2": 0.4977257203126516}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6758560580173577}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( RCSe ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUM / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.41130604288499023, "obj2": 0.5359934211653719}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * ( MUR / RRSe ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6432748538011696, "obj2": 0.2510115050928196}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6335282651072125, "obj2": 0.26489164201526716}, {"determining": "( FirstVNF_CPU / ( Min( ( Max( ACS,( BR * RRS ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( AMS - PN ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - ( Min( RCSe ,RRSe ) / ( RCSe / RMSe ) ) ) ) ) * MUR ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RMSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) )", "obj1": 0.42300194931773877, "obj2": 0.518887640076852}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( FirstVNF_Mem,( MRS * FirstVNF_CPU ) ) ) * ( ( FirstVNF_Mem / CRS ) * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( Min( AMS ,FirstVNF_CPU ) - FirstVNF_RAM_Server ) + ( Min( ( Const - BR ) ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( RCSe - ( ( RMSe + DS ) * CS ) ),DS ) ,( RRSe + MUC ) )", "obj1": 0.9473684210526315, "obj2": 0.023801876201734823}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_CPU - Min( ARS ,Min( FirstVNF_RAM_Server ,Min( ACS ,AMS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - Max( CS,MUC ) ) + ( MUC * ( RRSe / MUR ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( ( MUR + DS ),RRSe ) ) * MUR ) )", "obj1": 0.3060428849902534, "obj2": 0.6964984189275756}, {"determining": "( Max( ARS,PN ) / ( ( ( ACS + ARS ) * ( ( PN - ACS ) + ( ARS * Max( ( Const * Const ),AMS ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.43664717348927873, "obj2": 0.501599867292699}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ),( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( BR - FirstVNF_CPU ) * Const ) - MDR ) ) ) - ( Min( ( MDR - MRS ) ,RRS ) * Max( ( RRS - Const ),Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - MUC ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( Min( MUM ,Min( RMSe ,RRSe ) ) + MUC ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14478933227489482}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( RMSe * MLU ) )", "obj1": 0.8596491228070176, "obj2": 0.0660706574650337}, {"determining": "( ( ARS * ( ( ( Max( Const,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ACS / PN ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.2693763964790083}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe + ( DS * MLU ) ) - MUC ) - ( ( Min( ( CS * CS ) ,( ( CS / Max( MUR,RRSe ) ) + ( Max( CS,CS ) / ( MUC / MLU ) ) ) ) + ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( Max( MUR,DS ) * RMSe ) ) / RRSe ) ) ) ) * ( MUM * ( MUR * MUC ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5547942228757295}, {"determining": "( Min( DDR ,RRS ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( DDR - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RCSe * ( DS - MUM ) ) ,Min( ( Min( DS ,( ( MUM - Min( MUM ,RCSe ) ) / RCSe ) ) - MUC ) ,RMSe ) ) + Max( ( ( DS * Min( RRSe ,( CS * RMSe ) ) ) * RRSe ),MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( BR - ( ACS * FirstVNF_Mem ) ) * Const ) - MDR ) ) ) - ( Min( ( MDR - MRS ) ,RRS ) * Max( ( RRS - Const ),Max( PN,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( ( Min( ( ( MUR / RRSe ) + ( RMSe - ( DS / MUC ) ) ) ,RRSe ) + ( ( ( MUR * CS ) / CS ) * MLU ) ) - MUC ) ) ,( MUC + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.15111833478350514}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( FirstVNF_CPU / ( Min( ( ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) ,( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * ( RRSe / MUM ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.7368421052631579, "obj2": 0.15647224517985753}, {"determining": "( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / ( RRSe / MUC ) ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + ( BR / MRS ) ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,AMS ) ) ) * PN ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + Min( ( Min( ( RRSe / MUR ) ,DS ) * DS ) ,MUC ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.52046783625731, "obj2": 0.3885022579638135}, {"determining": "( Max( ACS,FirstVNF_RAM_Server ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) * CS ) ,RCSe ) / RRSe ) * ( ( ( MUR * ( Max( ( ( MLU + RRSe ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( Min( MUM ,RRSe ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( PN - MRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( DS / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - FirstVNF_CPU_Server ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + FirstVNF_Mem ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( ( RCSe - RRSe ) + MLU ) ,( Min( MLU ,MUR ) / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Const - Const ) ,( ACS + ARS ) ) * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( RRSe * CS ) - ( ( ( MLU * Min( MLU ,DS ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( RCSe - DS ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( ( DS * RCSe ) + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.1829108388102403}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( ( ( RRSe - RCSe ) - DS ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - ( Max( MUR,MUM ) + ( CS * RCSe ) ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - ( Const - RRS ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MUR * RCSe ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.6627680311890838, "obj2": 0.23135279194381955}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( ( ARS - ( Min( ( Const - ( Const - RRS ) ) ,Min( MRS ,MDR ) ) - ( ARS / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( ( PN + Max( CRS,PN ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( FirstVNF_Mem - Const ) ,( ACS + ARS ) ) ) ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( PN - FirstVNF_CPU ) ) ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - Max( ( MUR / DS ),( Min( RCSe ,Max( MUC,MUR ) ) * ( Min( Min( RMSe ,CS ) ,MLU ) + RMSe ) ) ) ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.3937621832358674, "obj2": 0.5611676280915119}], "45": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( Max( ARS,ARS ) + MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + Max( Min( ( MUR - MUR ) ,( MLU / ( MUC / MUM ) ) ),RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - ( ACS + ( FirstVNF_RAM_Server - Min( ARS ,Min( ( ARS / ARS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( RRSe,MUC ) + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( ( ( MDR / RRS ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( PN * DDR ) ) - FirstVNF_RAM_Server ) ) / ( ( Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) * Const ) - MDR ) ) ) - Min( AMS ,( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( PN * RRS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Max( ( DS / MUC ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( MUR * MUM ) ) ),CS ),( ( ( MLU * DS ) + Min( DS ,( MUM / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.35477582846003897, "obj2": 0.6298109153322659}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( ( DS * RCSe ) + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.1829108388102403}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3613078991734597}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( ( ( ( ACS + ARS ) * ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * PN ),CRS ) ) ) - MDR ) / Max( Max( PN,AMS ),PN ) )", "choosing": "( ( ( RMSe - ( Min( CS ,( MUC / MUR ) ) + ( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( Max( ( RRSe + RCSe ),MUC ) / RCSe ),MUM ) ) )", "obj1": 0.9902534113060428, "obj2": 0.013480868963488622}, {"determining": "( ( ARS * ( ( ( Max( MDR,( Const - RRS ) ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( Const * Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( ( MLU * RMSe ) ,CS ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),Min( RRSe ,( ( MLU * ( CS / DS ) ) + ( DS - RMSe ) ) ) ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3834634189576857}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.36257309941520466, "obj2": 0.610918726449208}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6758560580173577}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( Max( FirstVNF_RAM_Server,Max( PN,Max( FirstVNF_RAM,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.9005847953216374, "obj2": 0.04759434861768414}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( Const - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( RMSe * Max( RMSe,Min( CS ,MUR ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - Max( FirstVNF_Mem,( RRS * MRS ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RMSe * RRSe ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / MUC ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.46393762183235865, "obj2": 0.46388019089249016}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS - ( ( AMS - CRS ) - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.32932794943732907}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - MDR ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( MLU - RMSe ) ) ) * MUR ) )", "obj1": 0.6081871345029239, "obj2": 0.28580916407492285}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MUR / DS ),( ( Min( ( MUR + MLU ) ,MLU ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.01715746362543347}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( RRS - CRS ) - Min( PN ,AMS ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * ( ( MUC + MUM ) + ( Max( RRSe,Min( ( MUC / DS ) ,RRSe ) ) - CS ) ) ) ) * Max( Min( ( MLU * Max( MUR,( RMSe * ( DS / DS ) ) ) ) ,DS ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6861872404955033}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Max( CRS,MDR ) - ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - MRS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( Min( ARS ,FirstVNF_Mem_Server ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) ) )", "choosing": "( ( MUR - Min( RCSe ,( MUR / MUM ) ) ) - ( RRSe / CS ) )", "obj1": 0.7953216374269005, "obj2": 0.10068588784187918}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( RRS + PN ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MUR * RCSe ) ) - ( ( Max( MLU,RCSe ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.7855750487329435, "obj2": 0.11242434505950515}, {"determining": "( ( ARS - ( AMS / MRS ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ( ( Min( ACS ,ACS ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) * Max( Max( MUR,( MUM / MUR ) ),( ( CS / ( RMSe + Max( RCSe,MUR ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( ( CS * RMSe ) * ( MLU + ( Max( RRSe,( MLU + DS ) ) + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.4756335282651072, "obj2": 0.44552814752342523}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( DS * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6470075367919167}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( PN - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RCSe ,( MLU * RMSe ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( ( ( RRSe - RCSe ) - DS ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Max( ( RRSe + MUC ),( ( RMSe * CS ) * ( MLU - MLU ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08957665001496479}, {"determining": "( ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( MUR - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.40350877192982454, "obj2": 0.5486316746497208}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * ( MUR / RRSe ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5964912280701754, "obj2": 0.29836576418500316}, {"determining": "( ( ARS * ( ( ( Max( Const,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ACS / PN ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.2693763964790083}, {"determining": "( ( ARS - ( ( AMS - CRS ) - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / ( Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( CS / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) * MLU ) )", "obj1": 0.557504873294347, "obj2": 0.3348298301715624}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.5343618717332739}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( ( ( ( BR - Min( ( Max( DDR,MDR ) - FirstVNF_CPU ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_Mem + MDR ) - ( ( ( DDR * MRS ) / AMS ) - Const ) ) ) * ARS ) - Max( MRS,MDR ) )", "choosing": "( ( ( RRSe - Min( ( CS * Max( MLU,MUC ) ) ,MUC ) ) - MLU ) * Max( RCSe,( MLU * ( ( MLU / DS ) * RMSe ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( RRSe,MUC ) + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( ( PN - MRS ) / Min( AMS ,( ACS * FirstVNF_Mem ) ) ) ,RRS ) * Max( ( ( ARS / ( FirstVNF_CPU + ACS ) ) - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MLU + DS ) * CS ) * Max( RMSe,Max( Max( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + Max( Min( ( RMSe + MUR ) ,MUR ),MUC ) ),MLU ),MUM ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) )", "choosing": "( ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) ,RCSe ) / RRSe ) * ( ( ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.3001949317738791, "obj2": 0.700763463942518}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - Min( MRS ,PN ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_RAM_Server - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RRSe - ( Max( Min( ( MUC - Max( MUR,MUM ) ) ,Max( MLU,( MUR / MUR ) ) ),MUC ) - MUR ) ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( Max( ( MDR * ( ( FirstVNF_RAM / PN ) + Max( FirstVNF_RAM,( FirstVNF_Mem * PN ) ) ) ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,CS ) / DS ) ) / ( MUM / MUR ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.7251461988304093, "obj2": 0.17242083357866278}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( PN - MRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( Min( ( MLU + MLU ) ,( DS / Max( MLU,MUM ) ) ) - MUM ) ) / DS ) + ( MUM * RMSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7582846003898636, "obj2": 0.13646275310845124}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( RCSe ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),( ( ( MLU * DS ) + Max( DS,( MUM / RCSe ) ) ) + Min( Min( Max( MUR,RCSe ) ,( RRSe + DS ) ) ,Min( MLU ,MUM ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),( MDR + FirstVNF_CPU_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) * MLU ) )", "obj1": 0.8927875243664717, "obj2": 0.05015568487118824}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6335282651072125, "obj2": 0.26489164201526716}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ),PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Const - Const ) ,( ACS + ARS ) ) * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / Max( MLU,MUM ) ) * CS ) - ( ( ( MLU * Min( MLU ,DS ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( ( RCSe - ( DS * CS ) ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( ( CS / ( DS + ( MUR / ( DS / ( Min( CS ,( MUM * RCSe ) ) * MUC ) ) ) ) ) - ( RRSe + MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) * ( ( ( MUR * ( Max( ( ( MLU + RRSe ) + RMSe ),MUC ) - RMSe ) ) - Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.7953216374269005, "obj2": 0.10068588784187918}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + ( BR / MRS ) ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,AMS ) ) ) * PN ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + Min( ( Min( ( RRSe / MUR ) ,DS ) * DS ) ,MUC ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.52046783625731, "obj2": 0.3885022579638135}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( FirstVNF_CPU / ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7179647049448494}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_CPU - Min( ARS ,Min( FirstVNF_RAM_Server ,Min( ACS ,AMS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - Max( CS,MUC ) ) + ( MUC * ( RRSe / MUR ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "Min( Max( ( RCSe - ( DS * CS ) ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( PN / ( CRS * ( ARS - PN ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,RRSe ) * Max( RRSe,MUC ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_RAM_Server / ( PN * MRS ) ) * ( ARS - Min( FirstVNF_RAM_Server ,( ( PN - MRS ) / Min( AMS ,( ACS * FirstVNF_Mem ) ) ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( ( Min( ( RCSe / MLU ) ,DS ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) + Min( ( CS * RCSe ) ,MLU ) ) * ( ( MUM / CS ) - ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( ( ( MLU * MUR ) - ( Max( Max( ( ( MLU + RRSe ) * MUR ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.5419103313840156, "obj2": 0.3492158544985841}, {"determining": "( ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Const - Const ) ,( ACS + ARS ) ) * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) - MDR ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( MLU / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.7797270955165692, "obj2": 0.11808141266070511}], "46": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) ) - Min( FirstVNF_Mem ,( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server + Min( ARS ,( FirstVNF_CPU / RRS ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "Min( ( MUR / DS ) ,( CS / ( ( MUC - RCSe ) * Min( ( RMSe / RCSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( Max( ARS,ARS ) + MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + Max( Min( ( MUR - MUR ) ,( MLU / ( MUC / MUM ) ) ),RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( MUM * Max( MLU,( MUR * RCSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Max( Max( ( FirstVNF_Mem / Const ),( MDR / MRS ) ),MDR ) ) ) / ( MDR * ( Max( ( Const - FirstVNF_Mem ),Max( Min( MDR ,AMS ),CRS ) ) * Const ) ) ) ) - Max( Min( ARS ,ARS ),( ACS - AMS ) ) )", "choosing": "( Min( Min( ( MUC / MLU ) ,RRSe ) ,( MLU * RMSe ) ) * ( RMSe * ( Min( ( ( Max( RRSe,MUR ) + DS ) * MLU ) ,CS ) - ( Min( RCSe ,( ( ( RRSe + DS ) / ( MUC - DS ) ) + ( DS - CS ) ) ) + ( RMSe + ( MUC * ( ( DS - DS ) - ( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.142378628733491}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.35477582846003897, "obj2": 0.6298109153322659}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + ( BR / MRS ) ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,AMS ) ) ) * PN ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + Min( ( Min( ( RRSe / MUR ) ,DS ) * DS ) ,MUC ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.52046783625731, "obj2": 0.3885022579638135}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.36257309941520466, "obj2": 0.610918726449208}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( Max( ( MDR * ( ( FirstVNF_RAM / PN ) + Max( FirstVNF_RAM,( FirstVNF_Mem * PN ) ) ) ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,CS ) / DS ) ) / ( MUM / MUR ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.7251461988304093, "obj2": 0.17242083357866278}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.7251461988304093, "obj2": 0.17242083357866278}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - Max( FirstVNF_Mem,( RRS * MRS ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RMSe * RRSe ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / MUC ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.46393762183235865, "obj2": 0.46388019089249016}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3613078991734597}, {"determining": "( ( ARS * ( ( ( Max( MDR,( Const - RRS ) ) - ACS ) - ( Max( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ),( AMS / CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( Const * Min( Max( ( MRS * AMS ),CRS ) ,( Const - ( RRS + FirstVNF_CPU_Server ) ) ) ) - MDR ) ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( ( DS / RMSe ),( ( MLU + Min( ( MUM * RMSe ) ,( ( ( MLU * MLU ) + ( DS + RMSe ) ) + MUC ) ) ) * ( CS / Max( RCSe,Max( CS,CS ) ) ) ) ) * Max( RCSe,( MLU * Max( Max( ( Min( ( MLU * RMSe ) ,CS ) - ( ( MUC * CS ) / ( CS * MUM ) ) ),CS ),Min( RRSe ,( ( MLU * ( CS / DS ) ) + ( DS - RMSe ) ) ) ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3834634189576857}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( ( DS * RCSe ) + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.1829108388102403}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem / ( RRS + PN ) ) * ( ARS / FirstVNF_CPU_Server ) ) * Max( Min( Const ,Const ),( ARS / ( FirstVNF_CPU + ACS ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MLU * RMSe ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * MUR )", "obj1": 0.2884990253411306, "obj2": 0.7178238997573835}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.530214424951267, "obj2": 0.37049833623477063}, {"determining": "( PN / ( CRS * ( ARS - PN ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,RRSe ) * Max( RRSe,MUC ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_CPU - Min( ARS ,Min( FirstVNF_RAM_Server ,Min( ACS ,AMS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - Max( CS,MUC ) ) + ( MUC * ( RRSe / MUR ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6758560580173577}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( FirstVNF_RAM_Server / CRS ) * ( ( FirstVNF_RAM * FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( BR - ( MDR + PN ) ) ) ) )", "choosing": "( ( MUR / ( MUC * RCSe ) ) * Max( ( RRSe - Max( ( RCSe / DS ),( Min( RCSe ,Max( MUR,MUC ) ) * Min( RMSe ,( Max( RRSe,MLU ) * ( MUR + MUR ) ) ) ) ) ),( RMSe * CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7043201164098645}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.2821561135312888}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( ( CS * RMSe ) * ( MLU + ( Max( RRSe,( MLU + DS ) ) + ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.4756335282651072, "obj2": 0.44552814752342523}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.7953216374269005, "obj2": 0.10068588784187918}, {"determining": "( Max( AMS,MRS ) / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR - ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( ( Min( MLU ,MUM ) * DS ) - ( MUC + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5593460209826805}, {"determining": "( ( ARS * ( ( ( Max( Const,RRS ) - PN ) - ( FirstVNF_RAM_Server - ( ACS / PN ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( ( MLU * RMSe ) ,RCSe ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.2693763964790083}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( ( ( MDR - Min( ACS ,ACS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ) ) / ( ( ( MRS * RRS ) + DDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( Min( Max( ( DS / RMSe ),( MUM / MUR ) ) ,RRSe ) * Min( MUC ,RCSe ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) ) / ( ( ( Max( MLU,DS ) + ( Max( MUC,CS ) - ( MLU - CS ) ) ) - RMSe ) * MLU ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / Max( ( ARS * FirstVNF_RAM_Server ),Max( AMS,Const ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( Min( RMSe ,DS ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) + ARS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( CS * RCSe ) ,MLU ) + ( Min( ( RCSe / MLU ) ,DS ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * RRSe ) * RMSe ) ) / RRSe ) ) ) ) * ( MUC - MLU ) )", "obj1": 0.7875243664717348, "obj2": 0.11053321857807946}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( ( ( PN - CRS ) - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( RRSe,MUC ) + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( PN - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RCSe ,( MLU * RMSe ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( ( ( RRSe - RCSe ) - DS ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - ARS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,Max( MUR,( ( CS * ( Max( RRSe,CS ) / DS ) ) / DS ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6326658872130758}, {"determining": "( ( Min( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) ,FirstVNF_Mem ) * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( ( MLU * CS ) / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.98635477582846, "obj2": 0.006915751277839552}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( RRS + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( ( DS * RCSe ) + RCSe ) ) + ( MUR * Max( MLU,( MUR * RCSe ) ) ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.1829108388102403}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MUR / DS ),( ( Min( ( MUR + MLU ) ,MLU ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5646296247232921}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( ( Max( ( Min( PN ,ARS ) + FirstVNF_RAM_Server ),( ( ( CRS - Const ) - Min( FirstVNF_RAM ,CRS ) ) * FirstVNF_Mem_Server ) ) - Min( ( DDR / ARS ) ,FirstVNF_RAM ) ) / ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Min( Max( ( RCSe - ( ( MLU * RRSe ) + CS ) ),DS ) ,Max( RRSe,MUC ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( RRSe,MUC ) + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6335282651072125, "obj2": 0.26489164201526716}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * Max( PN,FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( Max( ( RRSe + MUC ),( ( RMSe * CS ) * ( MLU - MLU ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08957665001496479}, {"determining": "( ( ARS - MDR ) / ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( MLU * Min( ( ( MUM / ( RCSe * MUM ) ) + CS ) ,RRSe ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) - ( RMSe - RMSe ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13360693800132178}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * ( MUR / RRSe ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.47173489278752434, "obj2": 0.45016563486987615}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),MDR ) ) + ( ( FirstVNF_RAM_Server - ACS ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Min( ( RMSe * RMSe ) ,RCSe ) * ( ( RMSe - Max( Min( CS ,( ( CS * RCSe ) / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.3255360623781676, "obj2": 0.6661740555004209}, {"determining": "( ( ( ( Max( ACS,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_CPU_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( MUR - RRSe ) ) ) / RCSe ) + ( MUM * RMSe ) ) / Min( ( CS + Min( MUC ,MUM ) ) ,CS ) )", "obj1": 0.4015594541910331, "obj2": 0.5494569080145717}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MUR / ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ),( ( Min( ( MUR + MLU ) ,MLU ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) )", "obj1": 0.9590643274853801, "obj2": 0.020953528112731965}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS - ( AMS / MRS ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ( ( Min( ACS ,ACS ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) * Max( Max( MUR,( MUM / MUR ) ),( ( CS / ( RMSe + Max( RCSe,MUR ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ),PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Const - Const ) ,( ACS + ARS ) ) * PN ) ) / ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / Max( MLU,MUM ) ) * CS ) - ( ( ( MLU * Min( MLU ,( RRSe + DS ) ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Max( CRS,MDR ) - ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - MRS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( Min( ARS ,FirstVNF_Mem_Server ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) ) )", "choosing": "( ( MUR - Min( RCSe ,( MUR / MUM ) ) ) - ( RRSe / CS ) )", "obj1": 0.7953216374269005, "obj2": 0.10068588784187918}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_RAM_Server / ( PN * MRS ) ) * ( ARS - Min( FirstVNF_RAM_Server ,( ( PN - MRS ) / Min( AMS ,( ACS * FirstVNF_Mem ) ) ) ) ) ) - Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( ( Min( ( RCSe / MLU ) ,DS ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) + Min( ( CS * RCSe ) ,MLU ) ) * ( ( MUM / CS ) - ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * ( ( ( MLU * MUR ) - ( Max( Max( ( ( MLU + RRSe ) * MUR ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165202}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.45419103313840153, "obj2": 0.4768341895174382}, {"determining": "( ( Max( RRS,( ARS + Min( Min( DDR ,( ( PN + RRS ) * FirstVNF_CPU ) ) ,MDR ) ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( DDR * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( Min( MUC ,RCSe ) + Min( ( ( DS / RMSe ) * ( MUM / CS ) ) ,RRSe ) ),( CS / DS ) ) - ( MUR * ( MLU - RMSe ) ) ) * MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( RMSe * MLU ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( CS * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - Min( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),RRS ) - ( PN + Min( ACS ,ARS ) ) ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( DS * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6470075367919167}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + DDR ) ) ,FirstVNF_Mem ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - ARS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( DS + ( Max( RRSe,( MLU + DS ) ) - ( ( CS * Max( RRSe,RCSe ) ) + ( ( CS / CS ) * Min( MUC ,MUR ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9512670565302144, "obj2": 0.021792585273802012}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,ACS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MUR / DS ),( ( Min( ( MUR + MLU ) ,( MUC * DS ) ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00899233464921514}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.45614035087719296, "obj2": 0.4741626930609193}, {"determining": "( ( ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( MDR + MDR ) - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) / ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,Min( Max( Min( DS ,Min( MUM ,( MUC / MUC ) ) ),RMSe ) ,RMSe ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.01449568790181102}, {"determining": "( FirstVNF_CPU / ( ( ( ACS + ( MDR / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( Min( CS ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( Min( ( ( RMSe + CS ) - ( DS / CS ) ) ,( MLU / MUR ) ) / CS ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / Min( ( MUC + MLU ) ,CS ) ) )", "obj1": 0.7582846003898636, "obj2": 0.1364627531084512}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.679262383614598}], "47": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) ,FirstVNF_Mem ) * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ACS ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( ( MLU * CS ) / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUR ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( FirstVNF_CPU * FirstVNF_CPU ) ) ) - Min( FirstVNF_Mem ,( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server + Min( ARS ,( FirstVNF_CPU / RRS ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) )", "choosing": "Min( ( MUR / DS ) ,( CS / ( ( MUC - RCSe ) * Min( ( RMSe / RCSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) )", "choosing": "( ( RCSe / RRSe ) / ( MUM * Max( MLU,( MUR * RCSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( Min( ( DDR - CRS ) ,( FirstVNF_Mem - DDR ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_RAM_Server ) + ( Const - RRS ) ) * Min( Min( DDR ,( MDR - FirstVNF_RAM ) ) ,Min( AMS ,( MRS * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( Min( Max( DS,( MUM + ( MUM / MUM ) ) ) ,( ( MLU * RMSe ) / Min( ( MUR + RRSe ) ,( MLU * MUC ) ) ) ),( RCSe * MUR ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6658564443806705}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / Max( ( RMSe / Min( ( RRSe + RRSe ) ,MUM ) ),MUM ) ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,Min( MUC ,MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( FirstVNF_CPU / ( ( ( ( AMS * FirstVNF_CPU ) - MRS ) * ( ARS - Max( Max( Const,( FirstVNF_Mem_Server - ARS ) ),( ( PN - CRS ) / ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0680870379734636}, {"determining": "( ( ( MDR - Min( ACS ,ACS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ) ) / ( ( ( MRS * RRS ) + DDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( Min( Max( ( DS / RMSe ),( MUM / MUR ) ) ,RRSe ) * Min( MUC ,RCSe ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) ) / ( ( ( Max( MLU,DS ) + ( Max( MUC,CS ) - ( MLU - CS ) ) ) - RMSe ) * MLU ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.35477582846003897, "obj2": 0.62692729891128}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( ( Const + ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ACS ) ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem / MRS ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( PN + Const ) - Max( CRS,MDR ) ) ) / ( BR * ACS ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * PN ) ) ) * ( BR * ACS ) ) ,( FirstVNF_Mem_Server * BR ) ) ) ) / ( ( DDR / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) - ( MRS + DDR ) ) )", "choosing": "( Max( ( MUC / RMSe ),( MUM * Max( MLU,( CS * RCSe ) ) ) ) * Max( Min( MUM ,( RMSe - MUM ) ),( ( MUC * RMSe ) / ( ( ( MUR + MUM ) + MLU ) + ( RRSe / ( ( RCSe / MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15683134046203337}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( FirstVNF_CPU / ( ( ( ( Max( RRS,MDR ) - PN ) + ( Const - AMS ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - MDR ) )", "choosing": "( ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + MUM ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * ( ( Min( ( RCSe * ( MUC / ( MUC + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ),Max( ( ( RRSe + MLU ) / RCSe ),MUM ) ) )", "obj1": 0.7037037037037037, "obj2": 0.19144641881938385}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( RRS / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.38530162169880583}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( Max( RRS,( ARS + Min( Min( DDR ,( ( PN + RRS ) * FirstVNF_CPU ) ) ,MDR ) ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( DDR * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( Min( MUC ,RCSe ) + Min( ( ( DS / RMSe ) * ( MUM / CS ) ) ,RRSe ) ),( CS / DS ) ) - ( MUR * ( MLU - RMSe ) ) ) * MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.2821561135312888}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( ( ( MUM * MUM ) + ( RMSe + MUR ) ) / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.47683418951743817}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9590643274853801, "obj2": 0.02095352811273196}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / Max( ( ARS * FirstVNF_RAM_Server ),Max( AMS,Const ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( Min( RMSe ,DS ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( BR - Max( FirstVNF_Mem,PN ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( ( CS * CS ) + Max( MLU,( Min( Max( MUR,DS ) ,RRSe ) * ( MUM / MUR ) ) ) ) / ( MUR + ( RMSe * MUM ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5146198830409356, "obj2": 0.38879885027328037}, {"determining": "( Max( ( MDR * ( ( FirstVNF_RAM / PN ) + Max( FirstVNF_RAM,( FirstVNF_Mem * PN ) ) ) ),( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,CS ) / DS ) ) / ( MUM / MUR ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.7251461988304093, "obj2": 0.17242083357866278}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( RRSe - Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) ) - ( RMSe * CS ) ) / Min( ( MLU + MUC ) ,CS ) )", "obj1": 0.7953216374269005, "obj2": 0.10068588784187917}, {"determining": "( PN / ( CRS * ( ARS - PN ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,RRSe ) * Max( RRSe,MUC ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.8713450292397661, "obj2": 0.06045401090296314}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_CPU - Min( ARS ,Min( FirstVNF_RAM_Server ,Min( ACS ,AMS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,( MUR * RCSe ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - Max( CS,MUC ) ) + ( MUC * ( RRSe / MUR ) ) ) ) * ( MUC / RMSe ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6758560580173577}, {"determining": "( ( ARS - ( AMS / MRS ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ( ( Min( ACS ,ACS ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) * Max( Max( MUR,( MUM / MUR ) ),( ( CS / ( RMSe + Max( RCSe,MUR ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.7251461988304093, "obj2": 0.17242083357866278}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUM * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) ) ) * ( RMSe / RRSe ) )", "obj1": 0.7855750487329435, "obj2": 0.11040373997854414}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,ACS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MUR / DS ),( ( Min( ( MUR + MLU ) ,( MUC * DS ) ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00899233464921514}, {"determining": "( ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( BR - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),( ARS / Const ) ) ) * Const ) - MDR ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR / ( MUM * RCSe ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUM ) )", "obj1": 0.6335282651072125, "obj2": 0.2648481285521223}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,( FirstVNF_RAM_Server * ARS ) ) - Max( ( Const - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * ( MUR / RRSe ) ) ) ) * ( MUC / RMSe ) ) ) ) )", "obj1": 0.8206627680311891, "obj2": 0.08467522488176848}, {"determining": "( Max( AMS,MRS ) / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR - ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( ( Min( MLU ,MUM ) * DS ) - ( MUC + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5593460209826805}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Max( MDR,Const ) - PN ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.7738791423001949, "obj2": 0.12185908577120017}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.5925925925925926, "obj2": 0.30112849496796046}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - Min( FirstVNF_Mem_Server ,Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( Const - ( MDR * ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_RAM_Server - AMS ) ) ) ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( MUM ,( ( RMSe / CS ) + ( RRSe - CS ) ) ),MUR ) ) / DS ) ) / ( MLU - RMSe ) )", "obj1": 0.7641325536062378, "obj2": 0.13107754508091202}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.41325536062378165, "obj2": 0.5381043624797347}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MLU * ( ( MLU - DS ) * RMSe ) ) ) * MUR ) )", "obj1": 0.46588693957115007, "obj2": 0.46179956376510906}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( MUR - ( MLU * MUR ) ) - ( RRSe / CS ) )", "obj1": 0.7992202729044834, "obj2": 0.09882870726689634}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,ARS ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Min( RRS ,BR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( RRSe ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( RMSe * Max( CS,RRSe ) ) ) ) ) * Min( ( MUC + MUM ) ,MUC ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( CRS + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - ( ( Max( ( RRS + RRS ),FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Const ) ) )", "choosing": "( Min( RCSe ,( RMSe * RMSe ) ) * ( Min( ( ( Max( CS,RRSe ) * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + DDR ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,( FirstVNF_CPU + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUR / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6877429666656655}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * PN ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),( ACS - MRS ) ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - ( ( CS / ( Max( CS,RRSe ) * RMSe ) ) - ( Min( MUC ,MUM ) * Min( ( Min( DS ,MUM ) - MUC ) ,RRSe ) ) ) ),MUR ) )", "obj1": 0.7543859649122807, "obj2": 0.14003460161769227}, {"determining": "( ACS / ( ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server / ( ARS / Min( DDR ,( FirstVNF_CPU + MRS ) ) ) ) ) + MDR ) - Const ) )", "choosing": "( Max( RMSe,RCSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MLU * MUR ) ) ) / ( MUC + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14732964267861945}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( RRS + Const ) - Max( CRS,MDR ) ) ) / ( BR * ( ( FirstVNF_Mem - Const ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,RRSe ) ) + MUC ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18381200907219403}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( ( ARS * ( ( ( Max( Max( FirstVNF_RAM,ACS ),RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,ARS ) ,ARS ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( ( MDR + PN ),( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( ( ( ( DS + ( DS - Max( MUR,CS ) ) ) + RMSe ) + ( Max( ( ( MUC / RMSe ) - MUM ),Min( DS ,( MLU - RCSe ) ) ) / RCSe ) ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( Min( RMSe ,MLU ) + MUM ) ) - ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.36257309941520466, "obj2": 0.610918726449208}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ,RRS ) * Max( ( Max( MDR,RRS ) - PN ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * MUM ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( FirstVNF_CPU / ( Max( Max( FirstVNF_RAM,ACS ),Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( MLU ,RCSe ) * Max( RRSe,MUR ) ) + MLU ) ) ),( ( ( MUM * CS ) + Min( MUM ,( MUR + RRSe ) ) ) / MUM ) ) * ( Max( RCSe,( MLU * RMSe ) ) * ( ( RMSe - ( MUR - ( MUR + RRSe ) ) ) * MUR ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7124254437080076}, {"determining": "( ( ( ( ARS + MDR ) * ( ARS - ( CRS - Min( ( PN - MRS ) ,Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( ( RCSe * MUC ),MUC ) + DS ) ) - ( ( Min( MLU ,RCSe ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( RMSe * ( MLU + ( Min( ( Max( DS,MUR ) + RMSe ) ,MUR ) - ( ( ( MLU / MUC ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / DS ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( ( ARS * ( ( ( ( ARS - BR ) - Max( ACS,AMS ) ) - ( FirstVNF_Mem / RRS ) ) / ( BR * Max( BR,BR ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6042167918311221}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24826448084381358}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3595266554955798}, {"determining": "( ( ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( MDR + MDR ) - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) / ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,Min( Max( Min( DS ,Min( MUM ,( MUC / MUC ) ) ),RMSe ) ,RMSe ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.01449568790181102}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( CS + MLU ) ) ) ) ) * Max( ( MLU * ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) ),RCSe ) )", "obj1": 0.9239766081871345, "obj2": 0.03441527641151755}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem / ( RRS + PN ) ) * ( ARS / FirstVNF_CPU_Server ) ) * Max( Min( Const ,Const ),( ARS / ( FirstVNF_CPU + ACS ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,( MLU * RMSe ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * MUR )", "obj1": 0.2884990253411306, "obj2": 0.7178238997573835}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( ( MLU - DS ) * RMSe ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.2794090892822828}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.01449568790181102}, {"determining": "( ( ( ( Max( ACS,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_RAM - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_CPU_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( MUR - RRSe ) ) ) / RCSe ) + ( MUM * RMSe ) ) / Min( ( CS + Min( MUC ,MUM ) ) ,CS ) )", "obj1": 0.4015594541910331, "obj2": 0.5494569080145717}, {"determining": "( ( ARS - ( ( Const * ( ( Const - ACS ) + ( FirstVNF_CPU * PN ) ) ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,MDR ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( AMS,ACS ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( RRSe,MUC ) + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( MUM * ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RRSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - ARS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + MLU ) ) ) - ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6326658872130758}, {"determining": "( ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_CPU_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM + ( RRSe / ( MUR - RRSe ) ) ) / DS ) + ( MUM * RMSe ) ) / Min( ( MLU + ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) ) ,CS ) )", "obj1": 0.40350877192982454, "obj2": 0.5490939517039056}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * RCSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6786399331715548}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,Const ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( MLU / ( RMSe + MLU ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11442057179072516}, {"determining": "( FirstVNF_CPU / ( ( ( ( Min( FirstVNF_CPU ,CRS ) * ( Const - BR ) ) + Max( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ),PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( Min( ( Const - Const ) ,( ACS + ARS ) ) * PN ) ) / ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) - MDR ) )", "choosing": "( ( ( Min( MLU ,DS ) / Max( MLU,MUM ) ) * CS ) - ( ( ( MLU * Min( MLU ,( RRSe + DS ) ) ) / MUR ) * CS ) )", "obj1": 0.7758284600389863, "obj2": 0.1198837531846126}, {"determining": "( ( AMS + ( FirstVNF_Mem * Max( Max( FirstVNF_Mem_Server,( ACS / FirstVNF_Mem_Server ) ),Max( ( ACS + DDR ),MDR ) ) ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( Min( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) ,( MLU * RMSe ) ) * ( ( Max( Min( CS ,( MUC / MUR ) ),( ( ( ( MUC - MUM ) + CS ) - ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) - RMSe ) * MUR ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023942}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}], "48": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( AMS - FirstVNF_CPU ) - RRS ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( Min( MDR ,( BR + FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( CS / ( RMSe + Max( RCSe,RCSe ) ) ) * ( Max( ( Min( ( MUM + DS ) ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) ,FirstVNF_Mem ) * ( ( ( Max( ACS,RRS ) - ( ARS - BR ) ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ACS ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( ( MLU * CS ) / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUR ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,Max( Min( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,PN ),( ACS - AMS ) ) ) ) )", "choosing": "( ( RCSe / Max( RRSe,( MLU + DS ) ) ) / ( MUM * Max( MLU,( MUR * RCSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ( FirstVNF_RAM_Server * ARS ) ,ACS ) - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( Min( ACS ,PN ),RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( ( RMSe + Max( MLU,Min( ( MUM / MUR ) ,Min( Max( MUR,DS ) ,RRSe ) ) ) ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.025864164681481464}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MLU * ( ( MLU - DS ) * RMSe ) ) ) * MUR ) )", "obj1": 0.48148148148148145, "obj2": 0.45741827460491413}, {"determining": "( ( ( MDR - Min( ACS ,ACS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ) ) / ( ( ( MRS * RRS ) + DDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( Min( Max( ( DS / RMSe ),( MUM / MUR ) ) ,RRSe ) * Min( MUC ,RCSe ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) ) / ( ( ( Max( MLU,DS ) + ( Max( MUC,CS ) - ( MLU - CS ) ) ) - RMSe ) * MLU ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( ( ( MUM * MUM ) + ( RMSe + MUR ) ) / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.47683418951743817}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24815480074166277}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6386948561356323}, {"determining": "( Min( ( DDR - CRS ) ,( FirstVNF_Mem - DDR ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_RAM_Server ) + ( Const - RRS ) ) * Min( Min( DDR ,( MDR - FirstVNF_RAM ) ) ,Min( AMS ,( MRS * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( Min( Max( DS,( MUM + ( MUM / MUM ) ) ) ,( ( MLU * RMSe ) / Min( ( MUR + RRSe ) ,( MLU * MUC ) ) ) ),( RCSe * MUR ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6658564443806705}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3595266554955798}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ( Min( ACS ,PN ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( PN - AMS ) + ( ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ( PN * BR ) ) ) - ARS ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + RCSe ) - ( ( DS - ( RRSe + Min( ( MLU / MUC ) ,( RCSe * MUM ) ) ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( Max( RRS,( ARS + Min( Min( DDR ,( ( PN + RRS ) * FirstVNF_CPU ) ) ,MDR ) ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( DDR * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( Min( MUC ,RCSe ) + Min( ( ( DS / RMSe ) * ( MUM / CS ) ) ,RRSe ) ),( CS / DS ) ) - ( MUR * ( MLU - RMSe ) ) ) * MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / Max( ( ARS * FirstVNF_RAM_Server ),Max( AMS,Const ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( Min( RMSe ,DS ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( BR - Max( FirstVNF_Mem,PN ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( ( CS * CS ) + Max( MLU,( Min( Max( MUR,DS ) ,RRSe ) * ( MUM / MUR ) ) ) ) / ( MUR + ( RMSe * MUM ) ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5146198830409356, "obj2": 0.38879885027328037}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( RRS + Const ) - Max( CRS,MDR ) ) ) / ( BR * ( ( FirstVNF_Mem - Const ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,RRSe ) ) + MUC ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18381200907219403}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / Max( ( RMSe / Min( ( RRSe + RRSe ) ,MUM ) ),MUM ) ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,Min( MUC ,MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * Max( MUR,( MUR * ( RCSe + MUR ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6917602670925389}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS - ( AMS / MRS ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ( ( Min( ACS ,ACS ) - MDR ) * ( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) * Max( Max( MUR,( MUM / MUR ) ),( ( CS / ( RMSe + Max( RCSe,MUR ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,ACS ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MUR / DS ),( ( Min( ( MUR + MLU ) ,( MUC * DS ) ) + RMSe ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00899233464921514}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( Min( ( RCSe / MLU ) ,RRSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.9590643274853801, "obj2": 0.02095352811273196}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - CRS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,Max( MUM,DS ) ) / DS ) ) / DS ) ) / Max( CS,MUM ) )", "obj1": 0.7212475633528265, "obj2": 0.1742231741025702}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.46588693957115007, "obj2": 0.46179956376510906}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server / ARS ) * ARS ) ) ) ) - ( Max( MDR,RRS ) - PN ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Min( MDR ,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS + ( DS + MLU ) ) - DS ) ,MLU ) - DS ) / Max( MLU,MUM ) ) * CS ) - ( CS * ( ( MLU * Min( MLU ,( RRSe + DS ) ) ) / MUR ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( Const / ( ( Max( ( BR + Const ),FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU - RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( DDR * DDR ) ) ) ) - MDR ) )", "choosing": "( ( ( Max( ( MUR + DS ),( ( ( MLU / ( RMSe + MLU ) ) + ( DS / ( MUR - MUC ) ) ) * Min( RRSe ,Max( MUC,MUR ) ) ) ) - RRSe ) - ( RMSe * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.5477582846003899, "obj2": 0.3452412059554292}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * ACS ) ) ),PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MLU + CS ) - Max( MUM,CS ) ) ) ) * MUR ) )", "obj1": 0.6276803118908382, "obj2": 0.2674757024408807}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,CRS ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( RRSe ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8499025341130604, "obj2": 0.07073837852166784}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_Mem / Max( ( ( ARS - FirstVNF_CPU ) + FirstVNF_CPU_Server ),PN ) ) + ( ARS - ( ( MDR + ( BR - FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( RRSe ,( ( DS / RMSe ) * ( DS / MUR ) ) ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.41325536062378165, "obj2": 0.5379840228754598}, {"determining": "( ( MRS - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( Max( CRS,FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Max( Const,( FirstVNF_Mem_Server - ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( MUM ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR + MLU ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * ( MUM * Max( ( MUC / MUC ),MLU ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6562992992878771}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.7407407407407407, "obj2": 0.1548996679923431}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( Min( ( FirstVNF_Mem_Server - AMS ) ,Min( FirstVNF_CPU_Server ,RRS ) ) / ( ( ( ( Const - RRS ) + ( ( BR - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - ( ( MDR * AMS ) / FirstVNF_RAM ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( RRS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( ( Min( RCSe ,MUC ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) - ( ( Max( MUR,( DS / RCSe ) ) / RRSe ) * RMSe ) ) ) / ( RMSe * MLU ) )", "obj1": 0.6432748538011696, "obj2": 0.25054414051824186}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR / ( MUM * RCSe ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.31773879142300193, "obj2": 0.6729247151177411}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - Min( FirstVNF_Mem_Server ,Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( Const - ( MDR * ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_RAM_Server - AMS ) ) ) ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( MUM ,( ( RMSe / CS ) + ( RRSe - CS ) ) ),MUR ) ) / DS ) ) / ( MLU - RMSe ) )", "obj1": 0.7641325536062378, "obj2": 0.13107754508091202}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Max( MRS,Const ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( MUC / ( RRSe / MUM ) ) ) / ( ( ( ( MUC * RMSe ) / ( ( MUR / ( ( RCSe / MUR ) + RRSe ) ) + ( MUR + ( MUM / ( RCSe * MUR ) ) ) ) ) / ( CS * DS ) ) + Max( RCSe,RCSe ) ) )", "obj1": 0.594541910331384, "obj2": 0.30018381124286203}, {"determining": "( FirstVNF_CPU / ( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( MRS - ( ACS / AMS ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * ( ( MUM / MUR ) * ( DS / RMSe ) ) ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( MUR * MLU ) ) ) * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6204352271094378}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,ARS ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Min( RRS ,BR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( RRSe ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( RMSe * Max( CS,RRSe ) ) ) ) ) * Min( ( MUC + MUM ) ,MUC ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) / DS ) ) / Max( RMSe,MUM ) )", "obj1": 0.7699805068226121, "obj2": 0.12636495850341542}, {"determining": "( RRS / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.38530162169880583}, {"determining": "( Max( AMS,MRS ) / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR - ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( ( Min( MLU ,MUM ) * DS ) - ( MUC + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5593460209826805}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.6101364522417154, "obj2": 0.28406767347476125}, {"determining": "( ( ( ( ARS + MDR ) * ( ARS - ( CRS - Min( ( PN - MRS ) ,Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( MLU + ( Max( RRSe,( Max( ( RCSe * MUC ),MUC ) + DS ) ) - ( ( Min( MLU ,RCSe ) * Max( RRSe,RCSe ) ) + MLU ) ) ),( RMSe * ( MLU + ( Min( ( Max( DS,MUR ) + RMSe ) ,MUR ) - ( ( ( MLU / MUC ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / DS ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Max( ( Const - Const ),( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( ( FirstVNF_Mem_Server / ( MRS - FirstVNF_Mem ) ) - Max( ( PN - BR ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR / ( ( MUC - MUM ) - RMSe ) ) ) / ( ( ( CS + ( Min( RCSe ,MUC ) * MUC ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.8538011695906432, "obj2": 0.06718586771150988}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( Max( ( MDR / FirstVNF_RAM_Server ),PN ) / Max( PN,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM * ( ( Min( RRSe ,Max( ( ( MLU - MLU ) + MUC ),RRSe ) ) / ( ( RCSe / CS ) - ( DS / CS ) ) ) + Min( Min( CS ,MLU ) ,( ( MUC * ( MLU / ( MUC - RRSe ) ) ) + ( DS / MUM ) ) ) ) ) / Max( Max( Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ),MLU ),Max( ( ( MUC + DS ) / RCSe ),MUM ) ) )", "obj1": 0.7095516569200779, "obj2": 0.18764591998715593}, {"determining": "( FirstVNF_CPU / ( ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( MUC * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7543859649122807, "obj2": 0.13990553212277265}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.9239766081871345, "obj2": 0.034415276411517544}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( CRS + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - ( ( Max( ( RRS + RRS ),FirstVNF_RAM ) * FirstVNF_CPU_Server ) - Const ) ) )", "choosing": "( Min( RCSe ,( RMSe * RMSe ) ) * ( Min( ( ( Max( CS,RRSe ) * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( RRSe - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16689580380786265}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( MLU * ( ( MLU - DS ) * RMSe ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.2794090892822828}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( ARS - ( ( Const * Const ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,MDR ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( ACS,AMS ) ) ) ) - ( RRS - CRS ) ) )", "choosing": "( Max( Min( MUC ,MUC ),( MUM * ( ( RRSe / DS ) + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RRSe ) ) * ( ( RMSe - Max( Min( MUM ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,( MUM / MUR ) ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * ( ( MLU * MUC ) + Max( DS,( MUR / RCSe ) ) ) ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.35282651072124754, "obj2": 0.629239162917405}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,( ARS * ( ( MRS - FirstVNF_RAM_Server ) * PN ) ) ) ) ) - Min( PN ,( ( MDR + Const ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ) ) / ( ( ( ( ACS + ( MRS / ( ( DDR * FirstVNF_Mem ) - FirstVNF_RAM ) ) ) * ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - ( MLU * ( CS + MUM ) ) ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.9727095516569201, "obj2": 0.013539677588781905}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( ( ACS + ( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( CRS - MDR ) ) * MRS ) ) ) ) * CRS ) )", "choosing": "( Max( MUR,( ( DS * ( Max( RRSe,Min( RMSe ,RCSe ) ) / DS ) ) / DS ) ) / Max( RMSe,MUM ) )", "obj1": 0.7251461988304093, "obj2": 0.17236599352758736}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.14570182912477908}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( MLU,( MUR * RCSe ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7283280263217948}, {"determining": "( Min( Max( RRS,( Max( ( CRS - Const ),MRS ) + DDR ) ) ,FirstVNF_Mem ) / ( ACS / ( ( BR + ( ACS + Max( MRS,( FirstVNF_CPU + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUR / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6877429666656655}, {"determining": "( ( ARS * ( ( ( Max( MDR,Const ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( Const - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( RRSe / MUC ) )", "obj1": 0.9590643274853801, "obj2": 0.02095352811273196}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.35477582846003897, "obj2": 0.62692729891128}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,Const ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( MLU / ( RMSe + MLU ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11442057179072516}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) - ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( BR - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),( ARS / Const ) ) ) * Const ) - MDR ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR / ( MUM * RCSe ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUM ) )", "obj1": 0.6335282651072125, "obj2": 0.2648481285521223}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( ARS / Min( AMS ,( ARS * ARS ) ) ) ) ) ,RRS ) * Max( ( Max( MDR,RRS ) - PN ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUC ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * MUM ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.2567626917703075}], "49": [{"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( ( ( ( ( AMS - FirstVNF_CPU ) - RRS ) - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( Min( MDR ,( BR + FirstVNF_Mem_Server ) ) * ACS ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( CS / ( RMSe + Max( RCSe,RCSe ) ) ) * ( Max( ( Min( ( MUM + DS ) ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,Max( Min( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,PN ),( ACS - AMS ) ) ) ) )", "choosing": "( ( RCSe / Max( RRSe,( MLU + DS ) ) ) / ( MUM * Max( MLU,( MUR * RCSe ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / Max( ( ARS * FirstVNF_RAM_Server ),Max( AMS,Const ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( Min( RMSe ,DS ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR + ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * Max( AMS,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( RRSe - DS ) ) - ( ( ( RRSe + DS ) - DS ) * ( RRSe * MUM ) ) ) - CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45599642954097874}, {"determining": "( ( ( MDR - Min( ACS ,ACS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ) ) / ( ( ( MRS * RRS ) + DDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( Min( Max( ( DS / RMSe ),( MUM / MUR ) ) ,RRSe ) * Min( MUC ,RCSe ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) ) / ( ( ( Max( MLU,DS ) + ( Max( MUC,CS ) - ( MLU - CS ) ) ) - RMSe ) * MLU ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( ( ( MUM * MUM ) + ( RMSe + MUR ) ) / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.47683418951743817}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ( FirstVNF_RAM_Server * ARS ) ,ACS ) - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( Min( ACS ,PN ),RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.02586416468148146}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( RRS / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.38530162169880583}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.36062378167641324, "obj2": 0.6157593210861881}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24815480074166277}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4015594541910331, "obj2": 0.548251131075702}, {"determining": "( ( Max( RRS,( ARS + Min( Min( DDR ,( ( PN + RRS ) * FirstVNF_CPU ) ) ,MDR ) ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( DDR * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( Min( MUC ,RCSe ) + Min( ( ( DS / RMSe ) * ( MUM / CS ) ) ,RRSe ) ),( CS / DS ) ) - ( MUR * ( MLU - RMSe ) ) ) * MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,Const ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( MLU / ( RMSe + MLU ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11442057179072516}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ARS - ( ( Const * Const ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,MDR ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( ACS,AMS ) ) ) ) - ( RRS - CRS ) ) )", "choosing": "( Max( Min( MUC ,MUC ),( MUM * ( ( RRSe / DS ) + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RRSe ) ) * ( ( RMSe - Max( Min( MUM ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( FirstVNF_CPU / ( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - MDR ) )", "choosing": "( ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( CS,( ( MUR - DS ) + Min( MUR ,RCSe ) ) ) - ( ( Min( RCSe ,MLU ) * Max( CS,RCSe ) ) + MLU ) ) ) ) * ( ( Min( ( RCSe * ( MUC / ( RCSe + RCSe ) ) ) ,MUM ) + DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ),Max( ( ( RRSe + DS ) / RCSe ),MUM ) ) )", "obj1": 0.7037037037037037, "obj2": 0.19144641881938385}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR / ( MUM * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.8791423001949318, "obj2": 0.056336126981034435}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / Max( ( RMSe / Min( ( RRSe + RRSe ) ,MUM ) ),MUM ) ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,Min( MUC ,MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.46588693957115007, "obj2": 0.46179956376510906}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * AMS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) ) ) * ( ( MUR / ( MUM * RCSe ) ) * Max( ( MLU * DS ),RCSe ) ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( Min( ( DDR - CRS ) ,( FirstVNF_Mem - DDR ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_RAM_Server ) + ( Const - RRS ) ) * Min( Min( DDR ,( MDR - FirstVNF_RAM ) ) ,Min( AMS ,( MRS * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( Min( Max( DS,( MUM + ( MUM / MUM ) ) ) ,( ( MLU * RMSe ) / Min( ( MUR + RRSe ) ,( MLU * MUC ) ) ) ),( RCSe * MUR ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6658564443806705}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( Max( AMS,MRS ) / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR - ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( ( Min( MLU ,MUM ) * DS ) - ( MUC + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5593460209826805}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + MUM ) / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.732943469785575, "obj2": 0.16231432035330534}, {"determining": "( Max( AMS,BR ) - ( Min( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / ( AMS - ( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * ( ( ( ( MUC / MLU ) + DS ) - MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) * ( Min( ( ( RRSe * CS ) * ( ( MUC + RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6401624033774177}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Max( ( Const - Const ),( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( ( FirstVNF_Mem_Server / ( MRS - FirstVNF_Mem ) ) - Max( ( PN - BR ),FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR / ( ( MUC - MUM ) - RMSe ) ) ) / ( ( ( CS + ( Min( RCSe ,MUC ) * MUC ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.8538011695906432, "obj2": 0.06718586771150988}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS * ( ( ( ACS / Const ) * RRS ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),( Max( RRSe,( MLU + CS ) ) - ( ( Min( RCSe ,MLU ) * Max( RCSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.2734007704250759}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( BR - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server * Min( ARS ,Const ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( ( CS / MUM ) * MUC ) / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MLU ) ) ) ) )", "obj1": 0.41325536062378165, "obj2": 0.5361558076469914}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.31773879142300193, "obj2": 0.6729247151177411}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,ACS ) ) ) ) * ( MRS / ( Const - ( ( ( FirstVNF_RAM - CRS ) + ( ( RRS + Const ) - Max( CRS,MDR ) ) ) / ( BR * ( ( FirstVNF_Mem - Const ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe * CS ) ,( ( DS * ( MUC - Min( Min( MLU ,MUR ) ,RMSe ) ) ) + RMSe ) ) + ( ( ( MUC * RMSe ) / ( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,RRSe ) ) + MUC ) ) ) - ( CS + DS ) ) ) / ( RCSe + ( Min( DS ,RRSe ) - Min( Max( MUR,MUM ) ,( CS * RCSe ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18381200907219403}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - Min( FirstVNF_Mem_Server ,Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( Const - ( MDR * ( ( FirstVNF_CPU + MRS ) * ( FirstVNF_RAM_Server - AMS ) ) ) ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( MUM ,( ( RMSe / CS ) + ( RRSe - CS ) ) ),MUR ) ) / DS ) ) / ( MLU - RMSe ) )", "obj1": 0.7641325536062378, "obj2": 0.13107754508091202}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - CRS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,Max( MUM,DS ) ) / DS ) ) / DS ) ) / Max( CS,MUM ) )", "obj1": 0.7212475633528265, "obj2": 0.1742231741025702}, {"determining": "( ( CRS - Min( ( FirstVNF_CPU + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( DDR * MRS ) ) ) / Min( MDR ,( ( PN - FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Min( RCSe ,MUC ) * RMSe ) - ( Max( RMSe,MUR ) / ( MUM - DS ) ) ),DS ) ,( RRSe - MUC ) )", "obj1": 0.3138401559454191, "obj2": 0.6863608720316122}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.631578947368421, "obj2": 0.26396451887461125}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( Const - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,DS ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.6159844054580896, "obj2": 0.2775112858784069}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * Max( MUR,( MUR * ( RCSe + MUR ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6917602670925389}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * PN ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) + FirstVNF_Mem ) / FirstVNF_CPU )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR + MLU ) ),( Max( ( MLU + DS ),RRSe ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,CS ) ) + ( RRSe * ( CS + CS ) ) ) ) ) ) * MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.630278008113133}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,ARS ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Min( RRS ,BR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( RRSe ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( RMSe * Max( CS,RRSe ) ) ) ) ) * Min( ( MUC + MUM ) ,MUC ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( MUM + Max( MLU,Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ) ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * Min( ACS ,( PN - Const ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( RMSe - RMSe ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.949317738791423, "obj2": 0.0230864083743538}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server / ARS ) * ARS ) ) ) ) - ( Max( MDR,RRS ) - PN ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Min( MDR ,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( ( ( ( Min( ( ( DS + ( DS + MLU ) ) - DS ) ,MLU ) - DS ) / Max( MLU,MUM ) ) * CS ) - ( CS * ( ( MLU * Min( MLU ,( RRSe + DS ) ) ) / MUR ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR / ( MUM * RCSe ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUM ) )", "obj1": 0.3937621832358674, "obj2": 0.5646296247232921}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3613078991734597}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) / DS ) ) / Max( RMSe,MUM ) )", "obj1": 0.7699805068226121, "obj2": 0.12636495850341542}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + MDR ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) ,RCSe ) / ( ( ( ( MUM + ( MUC * RMSe ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.7446393762183235, "obj2": 0.15309732746843563}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( CS + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.9239766081871345, "obj2": 0.034415276411517544}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.5146198830409356, "obj2": 0.38879885027328037}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - ARS ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) / DS ) ) / Max( RMSe,( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) )", "obj1": 0.7699805068226121, "obj2": 0.12636495850341542}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.34502923976608185, "obj2": 0.6360335725566139}, {"determining": "( ( MDR * ACS ) / FirstVNF_CPU )", "choosing": "Min( ( MUR / DS ) ,( ( ( CS / ( MUC - RMSe ) ) * RCSe ) * Min( Min( ( ( CS + RMSe ) - Min( DS ,MUC ) ) ,MLU ) ,( ( MUR - RCSe ) * Max( MUM,( RRSe * MUC ) ) ) ) ) )", "obj1": 0.9551656920077972, "obj2": 0.02068712531631595}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,( MUM / MUR ) ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( FirstVNF_CPU / ( ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( MUC * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7602339181286549, "obj2": 0.13741876342148038}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( ( ( Min( MLU ,DS ) / Max( MLU,MUM ) ) * CS ) - ( ( ( MLU * Min( Min( RCSe ,MLU ) ,( RRSe + DS ) ) ) / MUR ) * CS ) )", "obj1": 0.32943469785575047, "obj2": 0.6603135880714098}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( ( ( ( FirstVNF_Mem - Const ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR / ( MUM * RCSe ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUM ) )", "obj1": 0.28460038986354774, "obj2": 0.7244461424762536}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,CRS ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( RRSe ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8499025341130604, "obj2": 0.07073837852166784}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( PN - Min( ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( RCSe + CS ),RCSe ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7179647049448494}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( FirstVNF_CPU / ( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * ( ( DS / RMSe ) * Min( CS ,( MUC / MUR ) ) ) ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.30409356725146197, "obj2": 0.700223606038631}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.6101364522417154, "obj2": 0.28406767347476125}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( MDR + ( BR + FirstVNF_Mem_Server ) ) + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - RCSe ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( FirstVNF_CPU / ( Max( ( MDR / FirstVNF_RAM_Server ),PN ) / Max( PN,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM * ( ( Min( RRSe ,Max( ( ( MLU - MLU ) + MUC ),RRSe ) ) / ( ( RCSe / CS ) - ( DS / CS ) ) ) + Min( Min( CS ,MLU ) ,( ( MUC * ( MLU / ( MUC - RRSe ) ) ) + ( DS / MUM ) ) ) ) ) / Max( Max( Min( Min( Max( MUR,DS ) ,RRSe ) ,( MUM / MUR ) ),MLU ),Max( ( ( MUC + DS ) / RCSe ),MUM ) ) )", "obj1": 0.7095516569200779, "obj2": 0.18764591998715593}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( ( Min( ( PN * FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,MRS ) ) - Max( FirstVNF_Mem,MDR ) ) * ( ( ( ARS - CRS ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ARS + ACS ) ) ) ),MDR ) )", "choosing": "( ( ( ( DS + ( DS - ( MUR - CS ) ) ) + RMSe ) + Max( MUR,Max( RMSe,CS ) ) ) / ( ( ( ( RCSe * Min( RMSe ,RMSe ) ) * MLU ) * DS ) + ( ( ( MUC * RMSe ) / ( ( MUR - ( MUM + Min( RMSe ,MLU ) ) ) + ( MUR * RRSe ) ) ) - ( CS * DS ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7076497075726591}], "50": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( BR - ( ( ( Max( ( ( FirstVNF_CPU_Server / MDR ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( ACS * PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,RRS ) - MDR ) )", "choosing": "( ( ( RCSe + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + ( ( RMSe / RRSe ) / DS ) ) ) ) ) - ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,Max( Min( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,PN ),( ACS - AMS ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / Max( ( ARS * FirstVNF_RAM_Server ),Max( AMS,Const ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( Min( RMSe ,DS ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + ( RCSe - RRSe ) ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.9844054580896686, "obj2": 0.007352785402828462}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( ( ( MUM * MUM ) + ( RMSe + MUR ) ) / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.47683418951743817}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ( FirstVNF_RAM_Server * ARS ) ,ACS ) - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( Min( ACS ,PN ),RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.02586416468148146}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.645224171539961, "obj2": 0.25005549477979044}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( Max( ( MLU * DS ),RCSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6846573141534421}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ARS - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3610770996954747}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,Const ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( MLU / ( RMSe + MLU ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11442057179072516}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( ARS - ( ( Const * Const ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,MDR ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( ACS,AMS ) ) ) ) - ( RRS - CRS ) ) )", "choosing": "( Max( Min( MUC ,MUC ),( MUM * ( ( RRSe / DS ) + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RRSe ) ) * ( ( RMSe - Max( Min( MUM ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.5146198830409356, "obj2": 0.38879885027328037}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( MDR + ( BR + FirstVNF_Mem_Server ) ) + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * ACS ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - RCSe ) - CS ) )", "obj1": 0.9025341130604289, "obj2": 0.04449081048238535}, {"determining": "( ( Min( AMS ,( ACS * ACS ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( MUR + RRSe ) * Max( ( MLU * DS ),RCSe ) ) ,RRSe ) * MUR ) )", "obj1": 0.3645224171539961, "obj2": 0.6103741130586487}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / Max( ( RMSe / Min( ( RRSe + RRSe ) ,MUM ) ),MUM ) ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,Min( MUC ,MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - Const ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ) ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.46588693957115007, "obj2": 0.4608000399889352}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / ( MUM - RRSe ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5263157894736842, "obj2": 0.3820306717796824}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.35477582846003897, "obj2": 0.6236181813263392}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( Max( AMS,BR ) - ( Min( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / ( AMS - ( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * ( ( ( ( MUC / MLU ) + DS ) - MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) * ( Min( ( ( RRSe * CS ) * ( ( MUC + RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6401624033774177}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - ARS ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) / DS ) ) / Max( RMSe,( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) )", "obj1": 0.7719298245614035, "obj2": 0.12551862829253707}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( ( DDR - PN ) - RRS ) / AMS ) ) ) * Min( PN ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( MUR,RRSe ) ) + MLU ) ) ),( DS / Min( ( RMSe / RCSe ) ,DS ) ) ) * ( ( RCSe * ( MLU * RMSe ) ) * ( MUC * RMSe ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1686112899513523}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM / RRSe ) + RRSe ) / RRSe ) / ( ( CS / CS ) * CS ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR + ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * Max( AMS,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( RRSe - DS ) ) - ( ( ( RRSe + DS ) - DS ) * ( RRSe * MUM ) ) ) - CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45599642954097874}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.36062378167641324, "obj2": 0.6157593210861881}, {"determining": "( FirstVNF_CPU / ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3499068207005937}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4015594541910331, "obj2": 0.548251131075702}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) + FirstVNF_Mem ) / FirstVNF_CPU )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUR + MLU ) ),( Max( ( MLU + DS ),RRSe ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,CS ) ) + ( RRSe * ( CS + CS ) ) ) ) ) ) * MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.630278008113133}, {"determining": "( FirstVNF_CPU / ( ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( MUC * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7602339181286549, "obj2": 0.13741876342148038}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,PN ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( MUR - Min( ( RRSe / MUM ) ,( MUC + MUC ) ) ) - CS ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.06153949981552757}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * Max( MUR,( MUR * ( RCSe + MUR ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6917602670925389}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( ( BR - ( ( ( Max( ( ( FirstVNF_CPU_Server / MDR ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( ACS * PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,RRS ) - ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + ( ( RMSe / RRSe ) / DS ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "( Min( ( DDR - CRS ) ,( FirstVNF_Mem - DDR ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_RAM_Server ) + ( Const - RRS ) ) * Min( Min( DDR ,( MDR - FirstVNF_RAM ) ) ,Min( AMS ,( MRS * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( Min( Max( DS,( MUM + ( MUM / MUM ) ) ) ,( ( MLU * RMSe ) / Min( ( MUR + RRSe ) ,( MLU * MUC ) ) ) ),( RCSe * MUR ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6658564443806705}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6994113449954709}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6729247151177411}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( RRS / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.38530162169880583}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * AMS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) ) ) * ( ( MUR / ( MUM * RCSe ) ) * Max( ( MLU * DS ),RCSe ) ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.631578947368421, "obj2": 0.26396451887461125}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24815480074166277}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - ARS ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - CS ) ) ,CS ),MUR ) ) / DS ) ) / Max( RMSe,( ( MUR + RRSe ) * ( ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) )", "obj1": 0.7641325536062378, "obj2": 0.131077545080912}, {"determining": "( ( ( MDR - Min( ACS ,ACS ) ) * ( ( ( ARS - FirstVNF_CPU ) / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + FirstVNF_RAM ) ) ) ) / ( ( ( MRS * RRS ) + DDR ) * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( Min( Max( ( DS / RMSe ),( MUM / MUR ) ) ,RRSe ) * Min( MUC ,RCSe ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) ) / ( ( ( Max( MLU,DS ) + ( Max( MUC,CS ) - ( MLU - CS ) ) ) - RMSe ) * MLU ) )", "obj1": 0.9044834307992202, "obj2": 0.04358964022043162}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.6588693957115009, "obj2": 0.23493532192468605}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( MLU - MLU ) + MUC ) - CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45599642954097874}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - PN ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * ( MLU * RMSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.631578947368421, "obj2": 0.26396451887461125}, {"determining": "( Max( AMS,MRS ) / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR - ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( ( Min( MLU ,MUM ) * DS ) - ( MUC + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5593460209826805}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14294347828784254}, {"determining": "( RRS / ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * Max( RCSe,RCSe ) ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7275262933798086}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) * MRS ) ) ) ) - ( ( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * AMS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) ) )", "choosing": "( ( ( ( MUM / RRSe ) + MUM ) / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7171914446283867}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,( MUM / MUR ) ) ) + MLU ) ) ),( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.34502923976608185, "obj2": 0.6360335725566139}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( RRSe / ( RCSe - RRSe ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,ARS ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( MUR - ( MUR + MUR ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.7212475633528265, "obj2": 0.1742231741025702}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( PN - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,CS ) / DS ) ) / DS ) ) / Max( RMSe,MUM ) )", "obj1": 0.8538011695906432, "obj2": 0.06718586771150988}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,CRS ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( RRSe ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8499025341130604, "obj2": 0.07073837852166784}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( Min( RRSe ,Min( RCSe ,RCSe ) ) * MLU ) ) ) - ( CS * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.6062378167641326, "obj2": 0.28744097457293366}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( ( BR * ACS ) - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( ( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) ) ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6276803118908382, "obj2": 0.2667379566849051}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.7485380116959064, "obj2": 0.14570182912477908}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5540983700177363}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.31773879142300193, "obj2": 0.6729247151177411}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,FirstVNF_Mem_Server ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.9551656920077972, "obj2": 0.02068712531631595}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( Max( RRS,( ARS + Min( Min( DDR ,( ( PN + RRS ) * FirstVNF_CPU ) ) ,MDR ) ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( DDR * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( Min( ( ( RRSe * CS ) * ( MUM / MUR ) ) ,RRSe ) * MUM ) + CS ) ) * ( ( Max( ( Min( MUC ,RCSe ) + Min( ( ( DS / RMSe ) * ( MUM / CS ) ) ,RRSe ) ),( CS / DS ) ) - ( MUR * ( MLU - RMSe ) ) ) * MUR ) )", "obj1": 0.6257309941520468, "obj2": 0.2730904852135539}], "51": [{"determining": "( Max( Max( ( AMS - DDR ),( ( PN * CRS ) / MDR ) ),( ARS / Min( ( CRS - ( FirstVNF_CPU / ( ( RRS / BR ) / FirstVNF_RAM ) ) ) ,( CRS + RRS ) ) ) ) / ( Max( AMS,Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( FirstVNF_CPU / ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * Max( MUR,( MUR * ( RCSe + MUR ) ) ) ) ) * ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( ( Max( ( ( FirstVNF_CPU_Server / MDR ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( ACS * PN ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,RRS ) - MDR ) )", "choosing": "( ( ( RCSe + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + ( ( RMSe / RRSe ) / DS ) ) ) ) ) - ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,Max( Min( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,PN ),( ACS - AMS ) ) ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / ( MUM - RRSe ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_Mem,PN ) ) - Max( MDR,MDR ) )", "choosing": "( ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( ( RRSe + RMSe ) - CS ) ) * MLU ) ,( MUR / MUC ) ) ) * Max( ( ( RCSe + Min( MLU ,DS ) ) - MUC ),( ( ( MLU - ( RCSe * CS ) ) + ( Min( ( RMSe * RCSe ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( ( RMSe * MUC ) * CS ),( Max( RRSe,RRSe ) * RMSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423577}, {"determining": "( Max( PN,PN ) / Max( MDR,DDR ) )", "choosing": "( ( ( ( MUR - MUR ) + Max( ( Max( ( MUC * Min( MUC ,DS ) ),( RRSe * MLU ) ) * RMSe ),Max( ( ( ( RCSe / RRSe ) + MUC ) / RRSe ),MUM ) ) ) + ( Min( RRSe ,MUR ) + RRSe ) ) / Max( Max( ( ( ( ( RCSe + Max( RCSe,MUC ) ) * MUM ) + ( Min( ( RMSe + CS ) ,MUR ) * MUC ) ) + MLU ),MUM ),RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.4901911994615313}, {"determining": "( ( ARS + Max( ACS,PN ) ) / ( ( ( ARS + Const ) * ( ( ACS - PN ) + ( ARS * Max( AMS,( FirstVNF_CPU_Server - ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( MUM * ( ( Min( ( RCSe * ( CS + MLU ) ) ,MUM ) * DS ) * ( Max( RRSe,MLU ) - CS ) ) ) / Max( RMSe,Max( ( CS * MLU ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5068970161661716}, {"determining": "( ( ARS * ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - ( ( ( ( DDR - ACS ) + Max( ( AMS * MRS ),Max( FirstVNF_Mem,AMS ) ) ) * Const ) - FirstVNF_Mem_Server ) ) ) - ( Min( ( RRS - Const ) ,Max( CRS,FirstVNF_Mem_Server ) ) * Min( ( MRS - MDR ) ,RRS ) ) )", "choosing": "( Max( ( RMSe / DS ),Min( RCSe ,MLU ) ) * ( Min( MUM ,Min( RMSe ,( MUR - Min( Max( Max( DS,RCSe ),( DS - MUC ) ) ,MUM ) ) ) ) + MUC ) )", "obj1": 0.4834307992202729, "obj2": 0.43825227369704606}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / Max( ( ARS * FirstVNF_RAM_Server ),Max( AMS,Const ) ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / Max( MUR,( Min( RMSe ,DS ) / ( ( ( MUC * RMSe ) / ( ( MUR - ( MUR + RRSe ) ) - ( MUR * ( MUR / RRSe ) ) ) ) * ( ( DS + MUR ) / RMSe ) ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08371921456873938}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ( ACS / RRS ) * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) * ( BR * DDR ) ) ,ARS ) ) ) / ( MDR - ( ( ( ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN + MRS ) / Min( AMS ,( PN * ARS ) ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUC + MUC ) - RRSe ) ) * ( MLU * DS ) )", "obj1": 0.5750487329434698, "obj2": 0.32346936390820913}, {"determining": "( ( ARS * ( ( ( ( ( ( DDR / FirstVNF_CPU_Server ) * CRS ) + Const ) - PN ) - ( Max( FirstVNF_Mem_Server,( AMS - CRS ) ) - FirstVNF_RAM_Server ) ) / ( ( ( ( Const - FirstVNF_Mem ) + Max( ( MRS * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( MUM * MUM ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),MLU ) ),( CS + Max( ( MUC - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( MUR + MLU ) ,( MUR / MUR ) ) * Max( ( RRSe / ( CS + MUC ) ),( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19922999510077916}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - ARS ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( ARS * Min( AMS ,( Min( ( MDR + PN ) ,( RRS - Const ) ) * ARS ) ) ) ) )", "choosing": "( Max( MUR,( Max( RMSe,Max( Min( ( ( MLU / CS ) + ( RRSe - MUR ) ) ,CS ),MUR ) ) / DS ) ) / Max( RMSe,( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.1821565006997726}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( BR * FirstVNF_Mem_Server ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ( FirstVNF_RAM_Server * ARS ) ,ACS ) - Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( Min( ACS ,PN ),RRS ) - PN ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.02586416468148146}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5277472102387772}, {"determining": "( ( ARS - ( ( Const * Const ) - MDR ) ) / ( ( ( ( BR - Min( ( Max( MDR,RRS ) - PN ) ,MDR ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),CRS ) ) ) ) * ( ( PN - ACS ) + ( ACS * Max( ACS,AMS ) ) ) ) - ( RRS - CRS ) ) )", "choosing": "( Max( Min( MUC ,MUC ),( MUM * ( ( RRSe / DS ) + ( Max( RRSe,( MLU + DS ) ) - ( ( ( MLU / MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) ) * ( Min( RCSe ,( MLU * RRSe ) ) * ( ( RMSe - Max( Min( MUM ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.0342396926094102}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - ( DDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,FirstVNF_Mem_Server ) ) ) ) ) - MDR ) )", "choosing": "Min( ( MUR / DS ) ,( Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) + ( Min( ( RMSe / RCSe ) ,DS ) * ( ( MUR - Min( ( RRSe / MUM ) ,( ( DS - MLU ) * RRSe ) ) ) - CS ) ) ) )", "obj1": 0.9551656920077972, "obj2": 0.02068712531631595}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),( RRS / FirstVNF_RAM_Server ) ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5175710992300844}, {"determining": "( FirstVNF_CPU / ( ( Max( FirstVNF_Mem_Server,( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( MDR * AMS ) / ( ( BR + ( ARS * DDR ) ) - FirstVNF_CPU_Server ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,Max( MUR,MUM ) ) / ( ( ( ( MUM + ( RRSe / ( CS - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) + ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / RCSe ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5395223378619554}, {"determining": "( FirstVNF_CPU / ( MDR / ( MDR - BR ) ) )", "choosing": "Min( ( ( RCSe + ( Max( ( RMSe + Min( CS ,RRSe ) ),RRSe ) + MUC ) ) - RMSe ) ,( RRSe / MUC ) )", "obj1": 0.5009746588693957, "obj2": 0.4142707596287911}, {"determining": "( ( PN - RRS ) / ( ( ( Max( ARS,PN ) + DDR ) * ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server + ( Const / DDR ) ) / MRS ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( RCSe + Min( MLU ,Max( Max( Max( MUC,MUR ),DS ),( MUC / MLU ) ) ) ) - MUC ),( ( Min( MLU ,( ( RCSe / MLU ) * CS ) ) + ( Min( ( ( RCSe / CS ) * CS ) ,Max( ( MLU * MUC ),( DS - MUR ) ) ) - ( Max( Min( CS ,MUR ),MUM ) * ( RCSe / ( RMSe / MLU ) ) ) ) ) * ( ( MUR - RRSe ) + ( RRSe / Max( ( RMSe * RMSe ),( MUC * ( MUR * DS ) ) ) ) ) ) ) * ( RCSe - Min( ( ( ( ( RRSe * MUM ) + CS ) + ( CS - CS ) ) * MLU ) ,( MUR / MUC ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05177009960244769}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( BR + FirstVNF_Mem_Server ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( MUC + MLU ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.38011695906432746, "obj2": 0.5773027464312033}, {"determining": "( ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( Max( FirstVNF_Mem_Server,AMS ) ,( FirstVNF_RAM_Server * AMS ) ) ) ) ) * ( ( Const - ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - MDR ) / FirstVNF_CPU )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6023391812865497, "obj2": 0.2912487942096046}, {"determining": "( ( ARS / ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ( CRS * FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( ( DS + MUC ) * ( Min( ( ( MUR + RRSe ) * ( Min( MUC ,RCSe ) * Min( ( ( MUM / MUR ) * ( MLU / RMSe ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3723196881091618, "obj2": 0.6023598690871539}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ,( RRS * PN ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + ( RCSe - RRSe ) ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.9844054580896686, "obj2": 0.007352785402828462}, {"determining": "( ( BR + ( Min( MRS ,RRS ) - FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * ( ( RRS / FirstVNF_Mem_Server ) + AMS ) ) * Max( ( RRS - Max( ( AMS + FirstVNF_RAM ),PN ) ),Max( CRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUM * ( RRSe / MUM ) ) / ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( DS ,( RCSe / MLU ) ) - ( Max( Max( CS,RMSe ),Max( MUC,RMSe ) ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM / CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( MUM ,CS ) )", "obj1": 0.4600389863547758, "obj2": 0.46909429579784684}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + Min( Min( ( MDR + PN ) ,( RRS - Const ) ) ,Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * RMSe ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.732943469785575, "obj2": 0.16231432035330534}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - ( Max( MDR,RRS ) - PN ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + ( RRSe / MUM ) ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.8810916179337231, "obj2": 0.055250638068470005}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( RRS * AMS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( MLU,( MUR * Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) ) ) ) ) * ( ( MUR / ( MUM * RCSe ) ) * Max( ( MLU * ( ( RMSe - MUM ) * DS ) ),RCSe ) ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( Max( ( ( BR + ( ( FirstVNF_RAM_Server - MRS ) / AMS ) ) + DDR ),FirstVNF_CPU_Server ) - ( Min( ( ( ( AMS * ACS ) - MDR ) - ( ( ( FirstVNF_CPU + DDR ) + Min( MDR ,AMS ) ) - FirstVNF_Mem ) ) ,RRS ) * Max( ( FirstVNF_Mem - Const ),Max( BR,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3145523589943893}, {"determining": "( ( Min( AMS ,( ACS * ACS ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Max( MDR,RRS ) - PN ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( MUR + RRSe ) * Max( ( MLU * DS ),RCSe ) ) ,RRSe ) * MUR ) )", "obj1": 0.3645224171539961, "obj2": 0.6103741130586487}, {"determining": "( Min( ( MDR / ( ( ACS + ( Min( PN ,AMS ) + Const ) ) * MRS ) ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - Min( Max( ARS,FirstVNF_RAM ) ,DDR ) )", "choosing": "Min( ( ( RRSe + ( Min( RMSe ,Max( MLU,MUC ) ) + CS ) ) - MUM ) ,( Max( MUM,MLU ) + MLU ) )", "obj1": 0.3898635477582846, "obj2": 0.5701491067584294}, {"determining": "( Min( ( DDR - CRS ) ,( FirstVNF_Mem - DDR ) ) / ( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + FirstVNF_RAM_Server ) + ( Const - RRS ) ) * Min( Min( DDR ,( MDR - FirstVNF_RAM ) ) ,Min( AMS ,( MRS * ARS ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Max( Min( Max( DS,( MUM + ( MUM / MUM ) ) ) ,( ( MLU * RMSe ) / Min( ( MUR + RRSe ) ,( MLU * MUC ) ) ) ),( RCSe * MUR ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6658564443806705}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * RRSe ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / Max( ( RMSe / Min( ( RRSe + RRSe ) ,MUM ) ),MUM ) ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,Min( MUC ,MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - Const ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ) ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.46588693957115007, "obj2": 0.4608000399889352}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,CRS ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( RRSe,MUR ) ) ) ) - Max( ( CS / ( RMSe * Max( CS,RRSe ) ) ),( Min( MUC ,MUM ) * Min( RRSe ,RRSe ) ) ) ) * MUR ) )", "obj1": 0.8499025341130604, "obj2": 0.07073837852166784}, {"determining": "( ( ARS * ( ( ( Max( RRS,MDR ) - PN ) - Max( FirstVNF_RAM_Server,Min( ARS ,Max( AMS,( ARS / MRS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( FirstVNF_Mem * FirstVNF_RAM ),CRS ) ) * Const ) - MDR ) ) ) - ( BR / Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server + ( ( ( DDR / ARS ) * DDR ) * ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) ),( ( FirstVNF_CPU_Server - ( ACS / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - MDR ) ) ) )", "choosing": "( ( ( ( Min( Min( Min( RRSe ,Min( RCSe ,RCSe ) ) ,RRSe ) ,MUR ) / RCSe ) + RRSe ) / ( MUR - MUC ) ) * Min( ( ( ( Min( RRSe ,MUC ) * RRSe ) / ( MUR * ( MLU + Max( DS,RCSe ) ) ) ) - RMSe ) ,CS ) )", "obj1": 0.49317738791423, "obj2": 0.4197857075107466}, {"determining": "( ( BR - ( ( ( Max( ( ( MRS + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),RRS ) / PN ) - ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) ) / ( ACS - FirstVNF_Mem ) ) ) - ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,CRS ) - MDR ) )", "choosing": "( ( ( DS + ( MUM - CS ) ) / ( ( RRSe * RCSe ) / ( MUM / ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) ) ) ) - ( DS / MUM ) )", "obj1": 0.5886939571150097, "obj2": 0.3106517385364365}, {"determining": "( ( ARS - ( ( AMS - MDR ) * Min( Min( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ,( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) + ( Min( ACS ,ACS ) - Max( ( ACS - PN ),Min( ACS ,FirstVNF_Mem ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( Max( ( MDR - ARS ),DDR ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( RCSe * CS ) - ( ( RCSe - CS ) + Max( RMSe,Min( CS ,MUR ) ) ) ) + ( ( ( MUC * RMSe ) / ( ( DS - ( MLU + RCSe ) ) + ( MUR * MUR ) ) ) - ( CS + DS ) ) ) / ( RCSe + Max( RMSe,DS ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3408188683627762}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - Const ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / ( DS - ( RRSe + DS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.9727095516569201, "obj2": 0.012803750964757964}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR + ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * Max( AMS,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( RRSe - DS ) ) - ( ( ( RRSe + DS ) - DS ) * ( RRSe * MUM ) ) ) - CS ) )", "obj1": 0.47173489278752434, "obj2": 0.45599642954097874}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_CPU ,ARS ) ) ) ) / Min( Min( BR ,( ARS - FirstVNF_Mem_Server ) ) ,( RRS * PN ) ) ) ) - ( Min( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6150475572700118}, {"determining": "( ( ( ( Max( MDR,( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6549707602339181, "obj2": 0.2452570267650174}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( PN - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( Max( MUR,( ( CS * ( Max( RRSe,CS ) / DS ) ) / DS ) ) / Max( RMSe,MUM ) )", "obj1": 0.8538011695906432, "obj2": 0.06718586771150988}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * ( ACS - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * MRS ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUC * DS ) + RRSe ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.672514619883041, "obj2": 0.2252285717335066}, {"determining": "( ( ARS * ( ( ( Min( ACS ,RRS ) - PN ) - ( ( Min( Const ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) * FirstVNF_RAM ) - Min( ( Const * ( MDR + BR ) ) ,( DDR / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR + RRS ) / FirstVNF_RAM ) - Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "( ( RMSe - ( Max( Min( CS ,MUC ),MUR ) / MUR ) ) - ( ( ( Max( ( Max( RCSe,( MLU * MUR ) ) - ( DS / ( RCSe * MLU ) ) ),CS ) * ( Min( ( MUM / RCSe ) ,Min( Max( RMSe,RCSe ) ,( MUC / MUR ) ) ) + Min( ( MLU * CS ) ,Max( MUR,MUM ) ) ) ) + ( DS * ( ( ( RCSe * RMSe ) * ( MUM / MUC ) ) / Min( ( MUR * MLU ) ,DS ) ) ) ) + Max( MLU,MUR ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6522106725016731}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( MDR,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( ( Max( ( CS / DS ),( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) - ( MUR * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) ) ) * MUR ) )", "obj1": 0.4015594541910331, "obj2": 0.548251131075702}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM / RRSe ) + RRSe ) / RRSe ) / ( ( CS / CS ) * CS ) )", "obj1": 0.7875243664717348, "obj2": 0.1095025697165904}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( BR + FirstVNF_Mem_Server ),CRS ) ) * Const ) - PN ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( MUM / MUR ) * MUR ) )", "obj1": 0.6393762183235867, "obj2": 0.26061445260278754}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) ),RRS ) ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * Min( MLU ,( Max( RRSe,( MLU - DS ) ) - ( ( ( MLU + DS ) * Max( RRSe,RCSe ) ) + ( ( MUC / RCSe ) - Max( MUM,CS ) ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6607739540751545}, {"determining": "( ( ARS * ( ( ( Max( RRS,( ( MDR + FirstVNF_CPU_Server ) - ( ARS - RRS ) ) ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( MDR * MDR ) ) ) - Min( ( ( ( ARS / ARS ) / Max( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ),Const ) ) - ARS ) ,AMS ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( ( ( MLU * MUR ) - ( Max( Max( Min( MUM ,MUM ),Max( MUC,RMSe ) ),( RRSe + ( ( RMSe - MUM ) * DS ) ) ) * Max( RRSe,( ( CS / ( MUM - RRSe ) ) - MUR ) ) ) ) * MUR ) )", "obj1": 0.8654970760233918, "obj2": 0.06365297615649577}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,Const ) ) - Max( Min( BR ,ACS ),Const ) ) ) ) ) ) - Max( MRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( Min( MUC ,MUM ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ),( CS / ( Max( CS,( RCSe - MLU ) ) * RMSe ) ) ) ),MUR ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM * Min( AMS ,MRS ) ) / Min( FirstVNF_CPU_Server ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / MDR ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5399610136452242, "obj2": 0.3518070540561356}, {"determining": "( FirstVNF_CPU / ( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ,RRSe ) * MUR ) )", "obj1": 0.7777777777777778, "obj2": 0.11797303090719742}, {"determining": "( FirstVNF_CPU / ( FirstVNF_RAM - Max( ARS,PN ) ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( Max( MLU,CS ) - RRSe ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),MLU ) ) * MUR ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2073283253672384}, {"determining": "( FirstVNF_CPU / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe / DS ),( MUM * Max( MUR,( MUR * ( RCSe + MUR ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6917602670925389}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( CS - ( MUC * DS ) ) * MUM ) * MUR ) ,RRSe ) * ( RCSe - ( Min( MUC ,( ( MLU + RMSe ) * CS ) ) / RMSe ) ) ) + DS ) * ( ( ( MLU - Min( RMSe ,MUM ) ) / DS ) * Min( MUM ,( ( DS * CS ) + RCSe ) ) ) )", "obj1": 0.5906432748538012, "obj2": 0.3020296652299141}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Max( ARS,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( BR ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,( ( PN * CRS ) * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + Max( ( RRSe * CS ),MUR ) ) * Max( ( Min( MUR ,( ( MUC / MUM ) * Max( MLU,Max( MUC,MUR ) ) ) ) - Max( ( CS / ( Max( CS,RRSe ) * RMSe ) ),( ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) * Min( ( ( RRSe * MUR ) * ( MUM / MUR ) ) ,RRSe ) ) ) ),MUR ) )", "obj1": 0.7543859649122807, "obj2": 0.141000640170009}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6441990207469906}, {"determining": "( FirstVNF_CPU / ( ( ( PN - FirstVNF_CPU_Server ) + ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) )", "choosing": "( MUC * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7602339181286549, "obj2": 0.13741876342148038}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( DS / RMSe ),( MUM * ( MLU + Max( RCSe,( MUC / ( MUM - RRSe ) ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.5263157894736842, "obj2": 0.3820306717796824}, {"determining": "( ( Max( RRS,( ARS + Min( Min( DDR ,( ( PN + RRS ) * FirstVNF_CPU ) ) ,MDR ) ) ) * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( DDR * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( MUM - RMSe ) ) ) + ( ( ( ( MUM + MUM ) + MUM ) - Max( ( CS - ( MUC / Min( MUM ,MUR ) ) ),( ( RRSe + ( DS + RRSe ) ) * RRSe ) ) ) - MUC ) ) ,( ( MUM / Min( CS ,RCSe ) ) + ( DS - Max( ( ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) / ( CS / Max( ( CS / MUM ),Min( MLU ,RMSe ) ) ) ),( Max( MUM,( ( CS / RCSe ) / ( RCSe + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.27392750584892106}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.31773879142300193, "obj2": 0.6729247151177411}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) * ( ( Min( ARS ,Const ) - ( FirstVNF_RAM_Server + Min( ARS ,( RRS / FirstVNF_CPU ) ) ) ) / ( ( ACS - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,RRS ) ) ) ) - Min( AMS ,DDR ) )", "choosing": "Min( ( MUR / DS ) ,( MLU + ( ( MUC + RMSe ) / ( Max( ( MUR + ( ( MUC / MUC ) - ( CS + MUC ) ) ),Max( RCSe,MUC ) ) + ( Max( RRSe,MUC ) / ( CS * MUM ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5902584867722879}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( Min( AMS ,( ARS * ARS ) ) - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( BR - Min( ( Max( DDR,MDR ) - PN ) ,FirstVNF_Mem ) ) + ( ( Max( ( ACS - BR ),AMS ) - FirstVNF_CPU ) + ( Min( ACS ,Min( FirstVNF_Mem ,MDR ) ) - Max( Min( PN ,ACS ),FirstVNF_Mem ) ) ) ) ) ) - Max( MRS,MDR ) )", "choosing": "( ( MUR - ( MUR + MUR ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.8382066276803118, "obj2": 0.07617735797867312}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( Min( FirstVNF_Mem ,MDR ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( MUR - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( ( ( MUM * MUM ) + ( RMSe + MUR ) ) / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.47683418951743817}, {"determining": "( FirstVNF_CPU / ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM / MDR ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( ( RRSe + ( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( ( MUR + ( CS - MUM ) ) * MLU ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.543859649122807, "obj2": 0.34898804794432164}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( ACS * ACS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.40143719660687865}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5646296247232921}, {"determining": "( RRS / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * RMSe ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.38530162169880583}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Max( MUR,( ( RRSe / ( RCSe - RRSe ) ) / ( MUR + RRSe ) ) ) / Max( RMSe,MUM ) )", "obj1": 0.5282651072124757, "obj2": 0.3702313762192276}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( FirstVNF_CPU - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( ( ( MDR + ( DDR + FirstVNF_Mem_Server ) ) * ( RRS / ARS ) ) - PN ) + ( PN - ACS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUM ,RRSe ) ,Max( MUR,MUR ) ) * ( Min( ( ( ( CS + ( MUC / Min( RCSe ,MUM ) ) ) - ( ( DS - ( RRSe + MLU ) ) * ( RRSe / MUM ) ) ) - Min( MUC ,( Min( MUC ,MUC ) + MLU ) ) ) ,RCSe ) / RRSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21718303775254083}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,Const ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( MLU / ( RMSe + MLU ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11442057179072516}, {"determining": "( ( Min( FirstVNF_CPU ,( Min( Const ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - Min( ( CRS + ( FirstVNF_CPU / MRS ) ) ,AMS ) ) ) ) / ( Max( BR,FirstVNF_CPU_Server ) * Max( Const,FirstVNF_RAM_Server ) ) ) - Min( CRS ,Max( Max( ( PN / ( ACS - ARS ) ),( Const + DDR ) ),( RRS + ( FirstVNF_Mem + AMS ) ) ) ) )", "choosing": "( ( RCSe - ( MLU * ( ( CS - DS ) / ( RRSe * Max( ( RRSe / ( MUR + RCSe ) ),CS ) ) ) ) ) - ( RRSe / CS ) )", "obj1": 0.6920077972709552, "obj2": 0.20572431672205532}, {"determining": "( ( ( MRS - ( ARS / Min( AMS ,Max( ACS,FirstVNF_CPU ) ) ) ) - Min( ( ( Const + MDR ) / ( MRS * Min( ( AMS / ( FirstVNF_CPU * ACS ) ) ,RRS ) ) ) ,PN ) ) / ( ( ( ( Const * ( Const - Const ) ) + Max( CRS,PN ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( FirstVNF_RAM_Server * PN ) ) / ( Max( FirstVNF_Mem,( CRS - RRS ) ) + PN ) ) ) - ( Const - ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MLU * ( CS + MUR ) ) / ( ( ( RMSe + DS ) / MUR ) - ( RMSe / MUR ) ) ),( RMSe * MUM ) ) / ( Max( RMSe,( Min( ( ( MLU / CS ) + ( RMSe - CS ) ) ,CS ) + MUR ) ) - ( ( RRSe / DS ) - ( CS + ( RRSe - ( MUC / RCSe ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21477670309365582}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( FirstVNF_Mem + ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( MUR - ( MUR + RRSe ) ) + ( Min( RRSe ,Min( RCSe ,RCSe ) ) * MLU ) ) ) - ( CS * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.6159844054580896, "obj2": 0.2828465400070418}, {"determining": "( ( Min( AMS ,( FirstVNF_RAM_Server * RRS ) ) - ( MRS - Min( ( ( ACS * Max( MRS,( MRS * FirstVNF_CPU ) ) ) * ( BR * ACS ) ) ,( BR * FirstVNF_Mem_Server ) ) ) ) / ( MDR - ( ( ( Const - ( ( AMS * ACS ) - MDR ) ) + ( ( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_CPU ) ) + ( Min( ACS ,ACS ) - Max( Min( ARS ,PN ),( ACS - AMS ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MLU + ( Min( RRSe ,( MLU + DS ) ) - ( ( ( MUC / ( MUM - MUR ) ) * Max( RRSe,MUR ) ) + MLU ) ) ),( DS / MUM ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( ( ( MLU + RMSe ) * CS ) ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.0033009334594031477}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ( MDR + ( BR + FirstVNF_Mem_Server ) ) + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * ACS ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - RCSe ) - CS ) )", "obj1": 0.9025341130604289, "obj2": 0.04449081048238535}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ( MDR + PN ) ,( BR * ACS ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / Max( AMS,RRS ) ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( MUM / RRSe ) + MUM ) / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.47173489278752434, "obj2": 0.45599642954097874}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,ACS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( Const ,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( MLU * RMSe ) ) * ( Min( ( ( RRSe * CS ) * ( Min( MUC ,RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.5146198830409356, "obj2": 0.38879885027328037}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR + Min( ( FirstVNF_RAM_Server * ARS ) ,( ACS * PN ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( Max( MDR,RRS ) * MRS ) ) ) ) - ( ( ( ARS - ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( RRS * AMS ) ) / ( FirstVNF_Mem_Server + PN ) ) ) * Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) - MDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe + RMSe ),MLU ) ) / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7088810711054565}, {"determining": "( Max( AMS,MRS ) / ( ( ( Max( ( PN - ( MDR + FirstVNF_CPU_Server ) ),ACS ) - ( MDR - ( Min( ACS ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - Max( CRS,MDR ) ) )", "choosing": "( ( RCSe / RRSe ) / ( Max( RCSe,RCSe ) + ( ( ( MUC * DS ) / ( ( ( Min( MLU ,MUM ) * DS ) - ( MUC + RRSe ) ) + ( MUR * MLU ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5593460209826805}, {"determining": "( ( ACS - ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + ( BR * FirstVNF_Mem_Server ) ) * MRS ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( MUR - ( MUR + RRSe ) ) + ( Min( RRSe ,Min( RCSe ,RCSe ) ) * MLU ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( Max( AMS,BR ) - ( Min( ( Max( ( Min( ACS ,ACS ) - MDR ),( Min( ( Const - Const ) ,( ACS + ARS ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( RRS * PN ) ) ) ) - ( FirstVNF_RAM_Server - ( ( PN - ARS ) / ( AMS - ( FirstVNF_RAM_Server * ARS ) ) ) ) ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,( MLU * ( ( ( ( MUC / MLU ) + DS ) - MUM ) + Max( DS,( MUR / RCSe ) ) ) ) ) * ( Min( ( ( RRSe * CS ) * ( ( MUC + RCSe ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ,RRSe ) * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6401624033774177}, {"determining": "( FirstVNF_CPU / ( ( ( ARS - ( FirstVNF_RAM_Server - ( ( PN - RRS ) / Min( AMS ,( FirstVNF_Mem * ACS ) ) ) ) ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU / ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ) ) ) - MDR ) )", "choosing": "( Max( ( MLU + ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,( MUM / MUR ) ) ) + MLU ) ) ),( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) ) * ( Min( RCSe ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( MUC / MUR ) ),RRSe ) ) * MUR ) ) )", "obj1": 0.5594541910331384, "obj2": 0.34064752603583554}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( MUM + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.7192982456140351, "obj2": 0.17773967221897322}, {"determining": "( ( ARS - ( FirstVNF_RAM_Server - Min( ( ( ACS * Max( Min( ACS ,FirstVNF_RAM_Server ),( MRS * CRS ) ) ) * ( BR * ACS ) ) ,ARS ) ) ) / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( Max( ( MLU * DS ),RCSe ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6846573141534421}, {"determining": "( FirstVNF_CPU / ( ( ( Max( ACS,( PN - ( MDR + FirstVNF_CPU_Server ) ) ) - ( MDR + ( Min( ACS ,( RRS - Const ) ) - Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ACS - ( ( MDR + ( BR + FirstVNF_RAM_Server ) ) * ( RRS / Max( CRS,PN ) ) ) ) ) ) - MDR ) )", "choosing": "Min( Max( ( ( ( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MUC ) * Max( RRSe,RCSe ) ) + MLU ) ) / RMSe ) - RCSe ),DS ) ,( ( ( MUM * MUM ) + ( RMSe + MUR ) ) / MUC ) )", "obj1": 0.45419103313840153, "obj2": 0.47683418951743817}, {"determining": "( ( Max( ( AMS - DDR ),( ( CRS * PN ) / MDR ) ) * ( ARS / Min( ( Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) ,( CRS + RRS ) ) ) ) / ( ( FirstVNF_RAM_Server / Const ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( CS - MUC ) * ( ( MUM - MLU ) * ( RMSe - MUM ) ) ) + ( MUM + ( Min( ( MLU + MLU ) ,( Min( MLU ,DS ) / Max( MLU,MUM ) ) ) - MUM ) ) ) ,( ( MUM * Min( CS ,RCSe ) ) + ( DS - Max( ( RRSe / ( ( Max( RRSe,CS ) / DS ) - Max( MUR,MLU ) ) ),( ( ( ( MUR - RRSe ) + RMSe ) - ( DS + MUC ) ) / ( ( MUM - MLU ) / MLU ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5887366078659062}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( ( ( ( MDR - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( ( CS / ( RMSe + Max( RCSe,RRSe ) ) ) * ( Max( ( Min( RCSe ,( MLU * RMSe ) ) - ( DS / ( CS * MUM ) ) ),CS ) * ( ( ( MLU * DS ) + Max( DS,( MUR / RCSe ) ) ) + Min( Min( Max( MUR,DS ) ,( RRSe + DS ) ) ,( MUM / MUR ) ) ) ) ) ) )", "obj1": 0.48927875243664715, "obj2": 0.42709322847172815}, {"determining": "( ( ARS * ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( AMS ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) ) / ( ( ( ( ( BR * ACS ) - FirstVNF_Mem ) + Max( ( MDR * AMS ),CRS ) ) * Const ) - MDR ) ) ) - ( Min( ( MRS - ( ( ARS * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) - ( PN + Const ) ) ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) )", "choosing": "( Min( ( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) ) ,( MLU * RMSe ) ) * ( ( RMSe - Max( Min( CS ,( RRSe * Max( ( RRSe / MUR ),MUM ) ) ),( Max( RRSe,( MLU + DS ) ) - ( ( Min( RCSe ,MLU ) * Max( RRSe,RCSe ) ) + MLU ) ) ) ) * MUR ) )", "obj1": 0.6276803118908382, "obj2": 0.2667379566849051}, {"determining": "( FirstVNF_CPU / ( ( ( FirstVNF_Mem_Server - ( MDR + ( Min( ( MDR + PN ) ,( RRS - Const ) ) - Max( ( RRS - FirstVNF_CPU ),FirstVNF_Mem ) ) ) ) * ( ( PN - AMS ) + ( ARS - ( ( MDR + ( BR + FirstVNF_Mem_Server ) ) * ( RRS / ACS ) ) ) ) ) - MDR ) )", "choosing": "( ( Min( MUR ,RCSe ) / ( ( ( ( MUM + ( RRSe / ( RCSe - RRSe ) ) ) / DS ) * MUM ) + CS ) ) * ( Max( ( ( RMSe / MUR ) + RMSe ),MUC ) - RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5540983700177363}, {"determining": "( AMS / ( ( ( ( Const - RRS ) + ( ( Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) * FirstVNF_CPU_Server ) + ( Min( ACS ,ACS ) - Max( Min( ACS ,FirstVNF_Mem ),( ACS - PN ) ) ) ) ) * ( ARS - ( FirstVNF_RAM_Server - ( ( PN - MRS ) / Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) ) - Max( ( ( FirstVNF_CPU_Server + MDR ) - ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ARS ) ) ) - RRS ) ),RRS ) ) )", "choosing": "( ( ( ( MUC + MUC ) - RRSe ) - MLU ) * Max( RCSe,( Max( ( MLU * DS ),RCSe ) * ( MUC / RCSe ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6846573141534421}, {"determining": "( FirstVNF_CPU / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + PN ) ) * Min( ARS ,Min( AMS ,Min( AMS ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( RCSe / RRSe ) / Max( Max( RCSe,Min( ( MUC / MLU ) ,RRSe ) ),( ( ( MUC * DS ) / ( ( MUR * MLU ) + ( MUR - ( ( MUC * DS ) + RRSe ) ) ) ) - ( CS * Min( CS ,RCSe ) ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6729247151177411}, {"determining": "( ( ( Min( ACS ,ACS ) - MDR ) * ( ( FirstVNF_CPU / ( RRS * PN ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ) / ( ( ( ( Const - RRS ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( Min( ACS ,ACS ) - Max( ( ACS - BR ),FirstVNF_Mem ) ) ) ) * ( ( PN - ACS ) + ( ACS - ( ( MDR + ( ARS + FirstVNF_Mem_Server ) ) * MRS ) ) ) ) - MDR ) )", "choosing": "( ( MUR - ( MUR + RRSe ) ) / ( ( ( CS + ( MUC * Min( RCSe ,MUC ) ) ) - ( ( DS - ( RRSe + DS ) ) * ( RRSe / MUM ) ) ) - CS ) )", "obj1": 0.9142300194931774, "obj2": 0.039289512000841104}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_Mem_Server - ARS ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * ( Max( CRS,MDR ) * Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) )", "choosing": "( ( RCSe / RRSe ) / Max( RMSe,( ( MUR + RRSe ) * ( ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) * Min( ( ( DS / RMSe ) * ( MUM / MUR ) ) ,RRSe ) ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.14937155100882868}, {"determining": "( ( FirstVNF_Mem + AMS ) / ( CRS - Min( ( FirstVNF_CPU + ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / CRS ) - FirstVNF_CPU_Server ) ) ,( DDR - MRS ) ) ) )", "choosing": "Min( ( ( ( Min( RCSe ,MUR ) / RMSe ) - Min( ( DS - ( RMSe + RCSe ) ) ,( Min( CS ,RCSe ) + Max( DS,RRSe ) ) ) ) / DS ) ,( RRSe / MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22796984198206544}, {"determining": "( ( ( ( Max( MDR,RRS ) - PN ) - ( FirstVNF_RAM_Server - Min( ARS ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ARS ) ) ) ) ) / ( Min( ( MRS - MDR ) ,RRS ) * Max( ( RRS - Const ),Max( CRS,PN ) ) ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MLU / RMSe ),( MUM * ( DS + ( ( ( ( MUM / RRSe ) + MUM ) - MUC ) - ( MUC + MLU ) ) ) ) ) * Max( ( MLU * DS ),RCSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24815480074166277}, {"determining": "( RRS / ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,( MLU * DS ) ) * ( RRSe / MUM ) ) - ( ( Min( ( RCSe * CS ) ,MLU ) + ( Min( ( RCSe / MLU ) ,RRSe ) - ( Max( Min( CS ,RMSe ),MUM ) * Max( CS,Max( MUC,MUR ) ) ) ) ) * ( ( MUM - CS ) + ( Max( ( RMSe * RMSe ),( ( MLU * DS ) * Max( RCSe,RCSe ) ) ) / RRSe ) ) ) ) * Min( RMSe ,Max( ( Max( Min( ( ( CS * DS ) + ( RMSe + MUR ) ) ,Max( ( RRSe - MUC ),CS ) ),( ( DS - MLU ) + Max( ( RCSe - CS ),MUR ) ) ) * ( ( DS + MUR ) - ( CS * RMSe ) ) ),( Min( ( Min( RCSe ,MUC ) + MLU ) ,( MUR - MUR ) ) * Max( CS,( CS * ( Min( MLU ,RCSe ) + MLU ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7275262933798086}]}