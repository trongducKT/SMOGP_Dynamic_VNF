{"1": [{"determining": "( ( FirstVNF_RAM - BR ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( ( ( RRSe - MUM ) + ( DS * ( ( RRSe / RCSe ) + RMSe ) ) ),DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( ( BR * BR ) + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( Max( RRSe,( MUR - MLU ) ),DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + RCSe ) + ( MUM * ( CS + CS ) ) )", "obj1": 0.7425149700598802, "obj2": 0.23408599462560042}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,( ( ( DDR - ( DDR / FirstVNF_Mem_Server ) ) / ( ( CRS / FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) - ACS ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( ( Max( CS,Max( RCSe,( MUR / MUC ) ) ) * ( MLU * MUR ) ) + MUC ) ) ) * ( Max( MUC,( CS * RRSe ) ) / ( RRSe - MUR ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5662549410373751}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - Max( MRS,ACS ) )", "choosing": "( ( MUM / DS ) / ( ( MLU * RRSe ) * ( MUC / RCSe ) ) )", "obj1": 0.2774451097804391, "obj2": 0.7001837146417388}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU + PN ),( Const - FirstVNF_Mem_Server ) ) + ( Min( DDR ,CRS ) / ( Const - BR ) ) )", "choosing": "Max( ( Max( RRSe,DS ) / MLU ),( DS + MUM ) )", "obj1": 0.4590818363273453, "obj2": 0.5292370985316887}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / MDR ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( Max( CS,RRSe ) + RRSe ) )", "obj1": 0.5069860279441117, "obj2": 0.47851297525740544}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( PN ,FirstVNF_RAM_Server ) - MRS ),( AMS * ACS ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( ( RRSe * Min( ( MUM / ( MUR + ( RRSe / MUM ) ) ) ,( RMSe + MUR ) ) ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.48303393213572854, "obj2": 0.48009511161627927}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( Min( ( Const + RRS ) ,MDR ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( ( MUM + ( ( MUM * DS ) / Min( ( MLU + MUM ) ,MUM ) ) ) ,DS ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Max( ( ( RRS * AMS ) - Const ),( RRS - ACS ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( ( Min( ( MUC / ( RCSe + RCSe ) ) ,MUC ) - ( ( Max( MUR,CS ) + ( CS / RCSe ) ) / ( DS - MUM ) ) ) + MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + RRS ) )", "choosing": "( ( MUR - ( ( RMSe - MLU ) / Max( MUC,RRSe ) ) ) - Min( ( MUM + Min( MLU ,RMSe ) ) ,( ( DS * MLU ) / ( RRSe - MLU ) ) ) )", "obj1": 0.46107784431137727, "obj2": 0.5233754239046194}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( RCSe * MUM ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.06505479113536707}, {"determining": "Max( ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) )", "obj1": 0.4750499001996008, "obj2": 0.49572794638357154}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( Min( ( AMS - RRS ) ,( FirstVNF_CPU - MRS ) ) * ( Min( DDR ,FirstVNF_CPU_Server ) - Max( PN,FirstVNF_Mem ) ) ) + Max( ( ( AMS + MRS ) * ( FirstVNF_CPU / FirstVNF_CPU ) ),( ( Const * FirstVNF_Mem_Server ) / ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) + ( ( ( MUR - MLU ) + ( RMSe + RCSe ) ) - ( Max( RCSe,RMSe ) - ( MLU - RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.5166436003804105}], "2": [{"determining": "( ( FirstVNF_RAM - BR ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( ( ( RRSe - MUM ) + ( DS * ( ( RRSe / RCSe ) + RMSe ) ) ),DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( ( BR * BR ) + ACS ) / ( DDR - FirstVNF_Mem ) )", "choosing": "( Min( MUC ,MUR ) - Max( Max( RRSe,( MUR - MLU ) ),DS ) )", "obj1": 0.7924151696606786, "obj2": 0.18923031562859935}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,( ( ( DDR - ( DDR / FirstVNF_Mem_Server ) ) / ( ( CRS / FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) - ACS ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( ( Max( CS,Max( RCSe,( MUR / MUC ) ) ) * ( MLU * MUR ) ) + MUC ) ) ) * ( Max( MUC,( CS * RRSe ) ) / ( RRSe - MUR ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5662549410373751}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( PN ,FirstVNF_RAM_Server ) - MRS ),( AMS * ACS ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,( ( DS + RRSe ) / Min( CS ,MUM ) ) ) * Min( ( ( RRSe * Min( ( MUM / ( MUR + ( RRSe / MUM ) ) ) ,( RMSe + MUR ) ) ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.48303393213572854, "obj2": 0.48009511161627927}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( Min( ( Const + RRS ) ,MDR ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( ( MUM + ( ( MUM * DS ) / Min( ( MLU + MUM ) ,MUM ) ) ) ,DS ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5340073516813716}, {"determining": "( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Max( ( ( RRS * AMS ) - Const ),( RRS - ACS ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( ( Min( ( MUC / ( RCSe + RCSe ) ) ,MUC ) - ( ( Max( MUR,CS ) + ( CS / RCSe ) ) / ( DS - MUM ) ) ) + MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( RCSe * MUM ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.06505479113536707}, {"determining": "Max( ( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ),( ( ( DDR - FirstVNF_Mem ) + ( MRS / Const ) ) * ( ( FirstVNF_RAM_Server - AMS ) * Max( ARS,ARS ) ) ) )", "choosing": "Max( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ),( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) * Max( ( MUR / RRSe ),( CS + DS ) ) ) )", "obj1": 0.4750499001996008, "obj2": 0.49572794638357154}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( ARS + ( MRS * Const ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( DS * MUC ) ,Min( MUR ,( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.5289421157684631, "obj2": 0.4340457963327705}, {"determining": "( ( ARS + Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( ( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) ) * MUC ) ,( MUR * MUR ) )", "obj1": 0.437125748502994, "obj2": 0.5180962277128458}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS / Const ) ,( MRS + Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( MUR * CS ) ) - ( MUM * RMSe ) )", "obj1": 0.405189620758483, "obj2": 0.5479197538072085}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.3280735205036608}, {"determining": "( ( AMS - ( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( MUM / Max( RCSe,MUR ) ) ) )", "obj1": 0.8163672654690619, "obj2": 0.1285952430246458}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( ( FirstVNF_Mem - BR ),CRS ) )", "choosing": "( ( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / MUR ) - ( ( MUM / Max( ( MUR + RMSe ),( DS + Min( Max( Max( RMSe,MUR ),MUM ) ,MUC ) ) ) ) / MUM ) )", "obj1": 0.4311377245508982, "obj2": 0.5333622765055525}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,( DS - ( ( DS / MUC ) - Min( Min( MUR ,DS ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.4517388810108941}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( FirstVNF_RAM + Const ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,MUM ) ) / RRSe ) ) )", "obj1": 0.9181636726546906, "obj2": 0.08499874394590615}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ARS * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),DS ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.8822355289421158, "obj2": 0.11349560805050307}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / ( MUM / MUR ) )", "obj1": 0.9281437125748503, "obj2": 0.05980622880491355}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) * Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( DS * MUM ) + Min( MUM ,( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ) )", "obj1": 0.4431137724550898, "obj2": 0.49840690377230623}, {"determining": "( Min( ( ( ( AMS * MDR ) * FirstVNF_Mem_Server ) * BR ) ,Const ) + ( ( FirstVNF_CPU / MRS ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * DS ) + Min( Max( RRSe,RCSe ) ,( DS + DS ) ) )", "obj1": 0.6327345309381237, "obj2": 0.34292115488280495}, {"determining": "Min( Min( ( DDR - CRS ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.46555282443735924}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,Min( Const ,RRS ) ) )", "choosing": "( ( ( Min( MUR ,( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ) * ( MUR - RCSe ) ) / MUR ) - ( RMSe / MLU ) )", "obj1": 0.33532934131736525, "obj2": 0.632586435812417}, {"determining": "Max( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ),( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) ) )", "choosing": "( Min( ( MUR * MUR ) ,( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.6098557548130046}, {"determining": "( Min( FirstVNF_CPU ,AMS ) / Max( Max( MDR,( CRS * FirstVNF_CPU_Server ) ),( RRS * BR ) ) )", "choosing": "( ( MUR + MUC ) + ( ( MUR - ( MUM + Min( MUC ,MLU ) ) ) - MUC ) )", "obj1": 0.3473053892215569, "obj2": 0.6183380687595847}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem_Server ,BR ) + Max( ( ARS - ( Max( FirstVNF_Mem_Server,( ( AMS - Const ) + Min( DDR ,ARS ) ) ) + ( Const / FirstVNF_CPU_Server ) ) ),CRS ) ) )", "choosing": "( Min( Min( MUR ,( RCSe - RCSe ) ) ,MUM ) / ( ( DS * MUM ) + Min( MUM ,CS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6929887146216861}, {"determining": "( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / ( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( Min( RCSe ,( MUM + MUM ) ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( MLU + MUR ) ) )", "obj1": 0.47704590818363274, "obj2": 0.48906517848286624}, {"determining": "Max( ( Const - DDR ),Min( RRS ,MDR ) )", "choosing": "Min( RMSe ,( MLU / RRSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4822508003884753}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( FirstVNF_RAM - BR ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( ( ( RRSe - MUM ) + ( DS * ( ( RRSe / RCSe ) + RMSe ) ) ),DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( FirstVNF_Mem / CRS ) - Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,( ( ( DDR - ( DDR / FirstVNF_Mem_Server ) ) / ( ( CRS / FirstVNF_RAM ) - FirstVNF_CPU_Server ) ) - ACS ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( MLU ,( ( Max( CS,Max( RCSe,( MUR / MUC ) ) ) * ( MLU * MUR ) ) + MUC ) ) ) * ( Max( MUC,( CS * RRSe ) ) / ( RRSe - MUR ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5662549410373751}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Max( ( ( RRS * AMS ) - Const ),( RRS - ACS ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( ( Min( ( MUC / ( RCSe + RCSe ) ) ,MUC ) - ( ( Max( MUR,CS ) + ( CS / RCSe ) ) / ( DS - MUM ) ) ) + MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.36926147704590817, "obj2": 0.5827948697718666}, {"determining": "( ( ARS + ( MRS * Const ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( DS * MUC ) ,Min( MUR ,( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.5289421157684631, "obj2": 0.4340457963327705}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS / Const ) ,( MRS + Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( MUR * CS ) ) - ( MUM * RMSe ) )", "obj1": 0.405189620758483, "obj2": 0.5479197538072085}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.3280735205036608}, {"determining": "( ( AMS - ( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( MUM / Max( RCSe,MUR ) ) ) )", "obj1": 0.8163672654690619, "obj2": 0.1285952430246458}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,( DS - ( ( DS / MUC ) - Min( Min( MUR ,DS ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.5029940119760479, "obj2": 0.4517388810108941}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( FirstVNF_RAM + Const ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,MUM ) ) / RRSe ) ) )", "obj1": 0.9181636726546906, "obj2": 0.08499874394590615}, {"determining": "( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ARS * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) )", "choosing": "( ( Max( ( RRSe - MUC ),DS ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) )", "obj1": 0.8822355289421158, "obj2": 0.11349560805050307}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / ( MUM / MUR ) )", "obj1": 0.9281437125748503, "obj2": 0.05980622880491355}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( AMS * MDR ) * FirstVNF_Mem_Server ) * BR ) ,Const ) + ( ( FirstVNF_CPU / MRS ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * DS ) + Min( Max( RRSe,RCSe ) ,( DS + DS ) ) )", "obj1": 0.6327345309381237, "obj2": 0.34292115488280495}, {"determining": "Min( Min( ( DDR - CRS ) ,Min( PN ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.46555282443735924}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ),( ( ARS + Max( ARS,ACS ) ) / Min( ( BR + ARS ) ,Const ) ) )", "choosing": "( Min( ( MUR * MUR ) ,( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ) * ( MUR - RCSe ) )", "obj1": 0.35728542914171657, "obj2": 0.6098557548130046}, {"determining": "( Min( FirstVNF_CPU ,AMS ) / Max( Max( MDR,( CRS * FirstVNF_CPU_Server ) ),( RRS * BR ) ) )", "choosing": "( ( MUR + MUC ) + ( ( MUR - ( MUM + Min( MUC ,MLU ) ) ) - MUC ) )", "obj1": 0.3473053892215569, "obj2": 0.6183380687595847}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem_Server ,BR ) + Max( ( ARS - ( Max( FirstVNF_Mem_Server,( ( AMS - Const ) + Min( DDR ,ARS ) ) ) + ( Const / FirstVNF_CPU_Server ) ) ),CRS ) ) )", "choosing": "( Min( Min( MUR ,( RCSe - RCSe ) ) ,MUM ) / ( ( DS * MUM ) + Min( MUM ,CS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6929887146216861}, {"determining": "( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / ( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( Min( RCSe ,( MUM + MUM ) ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( MLU + MUR ) ) )", "obj1": 0.47704590818363274, "obj2": 0.48906517848286624}, {"determining": "Max( ( Const - DDR ),Min( RRS ,MDR ) )", "choosing": "Min( RMSe ,( MLU / RRSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4822508003884753}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU ) * ( Max( MDR,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe - CS ) * RMSe )", "obj1": 0.47105788423153694, "obj2": 0.49002794638925373}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + MRS ) + PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * ( Max( MRS,Const ) / ( FirstVNF_CPU - Const ) ) )", "choosing": "Min( ( Min( MLU ,MUC ) / Max( RMSe,MUM ) ) ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( RMSe * DS ) ) )", "obj1": 0.9700598802395209, "obj2": 0.023604080268822415}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "Max( ( MRS - MRS ),( ( FirstVNF_Mem_Server - Const ) * ACS ) )", "choosing": "( Max( DS,MUR ) * Min( ( ( RRSe * DS ) - ( CS / RCSe ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) )", "obj1": 0.4930139720558882, "obj2": 0.4581369184532829}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - MRS )", "choosing": "( ( ( ( Min( Min( MUM ,RCSe ) ,( RMSe * DS ) ) - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( Min( MLU ,RMSe ),( DS + CS ) ) + ( CS / MUM ) ) )", "obj1": 0.3413173652694611, "obj2": 0.6251799112924985}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * ( DS / CS ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.05271415968965636}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - CRS ) ,Min( PN ,FirstVNF_RAM ) ) ,ACS )", "choosing": "Min( ( Min( Max( RRSe,RCSe ) ,RCSe ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) )", "obj1": 0.4590818363273453, "obj2": 0.49099130221750364}, {"determining": "Min( Min( ( DDR - CRS ) ,Min( PN ,FirstVNF_RAM ) ) ,( ARS + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,Min( RMSe ,RCSe ) )", "obj1": 0.48303393213572854, "obj2": 0.472828097700928}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( Min( MDR ,BR ) - CRS ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( DS - ( ( Max( CS,Max( ( MUC - ( RCSe / ( MLU - MUR ) ) ),Max( MUR,( RMSe / MLU ) ) ) ) + RRSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - Min( ( MRS / Const ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Min( ( Min( ( RCSe * MUR ) ,Min( CS ,RRSe ) ) - Min( ( MLU * DS ) ,( RCSe * MLU ) ) ) ,( ( ( MUR * MUC ) + ( MUR + MUM ) ) + ( ( MUM * MLU ) * ( RCSe + RRSe ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.13455890252605446}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server / Min( BR ,( ( RRS - ARS ) / MDR ) ) ) )", "choosing": "( ( Max( MUR,( ( MUM + ( ( ( CS / RMSe ) - Min( RMSe ,MUC ) ) + ( MUM * RRSe ) ) ) - ( Min( MUC ,( ( MUM * MUM ) * RRSe ) ) / Max( MLU,( RCSe / ( MUM + MUR ) ) ) ) ) ) - Min( Max( MUC,MUM ) ,( MUR * RRSe ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.06397575492909169}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,( ( RRSe * DS ) * ( MUR - MUM ) ) ) )", "obj1": 0.40718562874251496, "obj2": 0.5318968210629474}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( ( ( ( FirstVNF_RAM / CRS ) * BR ) * FirstVNF_Mem ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MLU * Max( ( ( ( DS + MUR ) / DS ) / RCSe ),Max( CS,DS ) ) ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02742396313741927}, {"determining": "( FirstVNF_Mem_Server * ( Min( FirstVNF_CPU ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,MUR ) * ( MLU * Max( CS,( CS - RMSe ) ) ) ) * Max( RRSe,RRSe ) ) + MUC ),MUC ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - MDR ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / ( ( FirstVNF_CPU - AMS ) * ( Max( Const,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + ( ( ( RMSe + MLU ) / CS ) * MUM ) ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 0.908183632734531, "obj2": 0.10212018415845504}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( Max( DS,Max( RCSe,( DS / ( DS - ( RCSe / ( RCSe / ( DS / RRSe ) ) ) ) ) ) ) ,Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5289421157684631, "obj2": 0.4340457963327705}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR + ARS ) ,Const ) / ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + DS ) ) ,MUR ) - Max( DS,DS ) )", "obj1": 0.9181636726546906, "obj2": 0.08499874394590615}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( ( Max( ( MUC - RCSe ),( CS + CS ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Max( Min( ( FirstVNF_Mem / DDR ) ,FirstVNF_Mem_Server ),ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( ( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) ) * MUC ) ,( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( RCSe * MUM ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.41916167664670656, "obj2": 0.5218288474525652}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( RCSe * MUM ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9101796407185628, "obj2": 0.09479092190896665}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - CRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( MUM,Max( RCSe,RCSe ) ) ) )", "obj1": 0.5329341317365269, "obj2": 0.43050093903140657}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "Max( ( FirstVNF_RAM - ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( ( MUR + MLU ) / Max( MUM,MUR ) ) ),( DS + RRSe ) )", "obj1": 0.3872255489021956, "obj2": 0.5710381651011914}, {"determining": "( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029361498742601595}, {"determining": "( Max( FirstVNF_Mem,( PN + Max( Max( FirstVNF_RAM_Server,DDR ),Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / Max( Const,FirstVNF_Mem ) ) ) ) ) ) ) * ( FirstVNF_CPU + DDR ) )", "choosing": "( ( RCSe - Max( Min( MUM ,MUR ),Max( MUR,RRSe ) ) ) * ( ( ( ( CS / ( ( MUC * DS ) - ( Min( RMSe ,RCSe ) * ( MUR + RRSe ) ) ) ) + DS ) * RMSe ) / MUR ) )", "obj1": 0.4031936127744511, "obj2": 0.5596083599978399}, {"determining": "Max( ( ARS / ACS ),( ( Const * MRS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,Max( Max( MUR,RRSe ),( MLU / RCSe ) ) ) * Min( ( ( RRSe * DS ) - ( CS / RCSe ) ) ,( RCSe * MUM ) ) )", "obj1": 0.46706586826347307, "obj2": 0.4907545772027321}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( Max( ( FirstVNF_RAM - ( RRS / ( CRS - BR ) ) ),( MRS + MDR ) ) ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( Max( ( MUM - ( MUR / Max( MLU,DS ) ) ),MLU ) / RRSe ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( RRS ,( PN - ARS ) ) * FirstVNF_RAM ) - BR ) / Const ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - ( DS * MLU ) ) + ( MUR * ( RRSe * MUC ) ) ) ) * ( DS / ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( ( FirstVNF_RAM + Min( CRS ,Const ) ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * ( Min( RRSe ,RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM - RCSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( ( ( FirstVNF_Mem / MRS ) / ( BR + FirstVNF_RAM ) ) / Const ) ) )", "choosing": "Min( ( Min( ( RCSe * MUR ) ,Min( CS ,RRSe ) ) - Min( ( MLU * DS ) ,( RCSe * MLU ) ) ) ,( ( ( ( ( MUM - RMSe ) - ( MUM - RCSe ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ) + ( MUR + MUM ) ) + ( ( MUM * MLU ) * ( RCSe + RRSe ) ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5607843406805}, {"determining": "( ( Const - ARS ) * Max( Max( Max( MDR,( FirstVNF_CPU_Server - RRS ) ),Max( FirstVNF_Mem,MRS ) ),PN ) )", "choosing": "( ( DS - ( RCSe / CS ) ) / ( RRSe * ( ( CS + ( MUC + ( MUR * DS ) ) ) - ( RMSe / ( ( ( RRSe + Max( RRSe,RMSe ) ) - RCSe ) - ( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + DS ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ACS,( AMS * BR ) ) )", "choosing": "( ( Min( ( Max( MLU,CS ) + Max( ( RCSe * MLU ),MUM ) ) ,Max( DS,( MUC + MUC ) ) ) - RRSe ) / CS )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Min( FirstVNF_Mem_Server ,BR ) + Max( ( ARS - ( Max( FirstVNF_Mem_Server,( ( AMS - Const ) + Min( DDR ,ARS ) ) ) + ( Const / FirstVNF_CPU_Server ) ) ),CRS ) ) )", "choosing": "( Min( Min( MUR ,( RCSe - RCSe ) ) ,MUM ) / ( ( DS * MUM ) + Min( MUM ,CS ) ) )", "obj1": 0.2774451097804391, "obj2": 0.6929887146216861}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "( Min( PN ,Const ) + ( ( FirstVNF_CPU / ( Max( Const,FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) + ( MUM * ( CS + CS ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) )", "obj1": 0.6626746506986028, "obj2": 0.3245110666407822}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Max( ( ( RRS * AMS ) - Const ),( RRS - ACS ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( ( Min( ( MUC / ( RCSe + RCSe ) ) ,MUC ) - ( ( Max( MUR,CS ) + ( CS / RCSe ) ) / ( DS - MUM ) ) ) + MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( BR - Min( ( MRS / Const ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Min( ( Min( ( RCSe * MUR ) ,Min( CS ,RRSe ) ) - Min( ( MLU * DS ) ,( RCSe * MLU ) ) ) ,( ( ( MUR * MUC ) + ( MUR + MUM ) ) + ( ( MUM * MLU ) * ( RCSe + RRSe ) ) ) ) )", "obj1": 0.8063872255489022, "obj2": 0.13455890252605446}, {"determining": "( Min( ( ( ( AMS * MDR ) * FirstVNF_Mem_Server ) * BR ) ,Const ) + ( ( FirstVNF_CPU / MRS ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * DS ) + Min( Max( RRSe,RCSe ) ,( DS + DS ) ) )", "obj1": 0.6327345309381237, "obj2": 0.34292115488280495}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( RCSe,DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06822900164572684}, {"determining": "( ( AMS - ( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( MUM / Max( RCSe,MUR ) ) ) )", "obj1": 0.8163672654690619, "obj2": 0.1285952430246458}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server / Min( BR ,( ( RRS - ARS ) / MDR ) ) ) )", "choosing": "( ( Max( MUR,( ( MUM + ( ( ( CS / RMSe ) - Min( RMSe ,MUC ) ) + ( MUM * RRSe ) ) ) - ( Min( MUC ,( ( MUM * MUM ) * RRSe ) ) / Max( MLU,( RCSe / ( MUM + MUR ) ) ) ) ) ) - Min( Max( MUC,MUM ) ,( MUR * RRSe ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.06397575492909169}, {"determining": "Min( Min( ( DDR - CRS ) ,( ARS + FirstVNF_CPU ) ) ,( ARS + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( ( ( RCSe - RRSe ) - ( RMSe / MLU ) ) - CS ) ) ,Min( RMSe ,RCSe ) )", "obj1": 0.37924151696606784, "obj2": 0.5520467259399126}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( ( FirstVNF_RAM - BR ) - ( DDR * DDR ) )", "choosing": "( ( DS + RRSe ) * Max( ( ( RRSe - MUM ) + ( DS * ( ( RRSe / RCSe ) + RMSe ) ) ),DS ) )", "obj1": 0.5469061876247505, "obj2": 0.414669775723175}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( Max( MDR,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + RMSe )", "obj1": 0.36726546906187624, "obj2": 0.5769076378921406}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6526946107784432, "obj2": 0.33600637862805743}, {"determining": "Min( ( RRS / Const ) ,( MRS + Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / ( MUR * CS ) ) - ( MUM * RMSe ) )", "obj1": 0.405189620758483, "obj2": 0.5479197538072085}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06822900164572684}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,( ( RRSe * DS ) * ( MUR - MUM ) ) ) )", "obj1": 0.40718562874251496, "obj2": 0.5318968210629474}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / ( MUM / MUR ) )", "obj1": 0.9281437125748503, "obj2": 0.05980622880491355}, {"determining": "( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / ( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( Min( RCSe ,( MUM + MUM ) ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( MLU + MUR ) ) )", "obj1": 0.4231536926147705, "obj2": 0.5124600602816284}, {"determining": "( ( ARS + Max( Min( ( FirstVNF_Mem / DDR ) ,FirstVNF_Mem_Server ),ACS ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( ( ( Max( ( RRSe - MUC ),( MUR - MUM ) ) * Min( ( RRSe + CS ) ,( RCSe + MUC ) ) ) + ( Min( ( DS / DS ) ,Min( MUR ,MUC ) ) * Min( ( MUC + MLU ) ,Max( RCSe,MUM ) ) ) ) * MUC ) ,( Max( Min( ( RRSe / DS ) ,( MUR * MLU ) ),( Max( DS,MUR ) - Min( RRSe ,RCSe ) ) ) / Max( ( RCSe * MUM ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.41916167664670656, "obj2": 0.5218288474525652}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * ( Max( MRS,Const ) / ( FirstVNF_CPU - Const ) ) )", "choosing": "Min( ( Min( MLU ,MUC ) / Max( RMSe,MUM ) ) ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( RMSe * DS ) ) )", "obj1": 0.9700598802395209, "obj2": 0.023604080268822415}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( FirstVNF_RAM + Const ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,MUM ) ) / RRSe ) ) )", "obj1": 0.9481037924151696, "obj2": 0.04637494086029834}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * ( DS / CS ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.05271415968965636}, {"determining": "( ( Min( ( BR + ARS ) ,Const ) / ( ( ( ( MDR / CRS ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),( DS - DS ) ) * Min( ( ( ( ( DS / DS ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 0.9600798403193613, "obj2": 0.0330757994873558}, {"determining": "( ( RRS / MDR ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( MUR * MUC ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.5409181636726547, "obj2": 0.42134540998381526}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - CRS ) / Const ) ) / Min( FirstVNF_CPU_Server ,Max( ( PN * ACS ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( MUM,Max( RCSe,RCSe ) ) ) )", "obj1": 0.5329341317365269, "obj2": 0.43050093903140657}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( BR - Min( ( ( CRS - AMS ) / ( AMS * DDR ) ) ,ARS ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Min( ( Min( ( RCSe * MUR ) ,Min( CS ,RRSe ) ) - Min( ( RMSe + RCSe ) ,( RCSe * MLU ) ) ) ,( ( ( MUR * MUC ) + ( MUR + MUM ) ) + ( ( ( ( ( MUR * MLU ) - ( MUR - MUM ) ) - MUR ) * MLU ) * ( RCSe + RRSe ) ) ) ) )", "obj1": 0.8083832335329342, "obj2": 0.13438001624869966}, {"determining": "( ( ARS + ( MRS * Const ) ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( ( DS * MUC ) ,Min( MUR ,( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.5289421157684631, "obj2": 0.4340457963327705}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( ( ( ( FirstVNF_RAM / CRS ) * BR ) * FirstVNF_Mem ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MLU * Max( ( ( ( DS + MUR ) / DS ) / RCSe ),Max( CS,DS ) ) ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02742396313741927}, {"determining": "( Min( Const ,FirstVNF_RAM_Server ) / Min( ( BR + ARS ) ,Const ) )", "choosing": "Min( Max( DS,Max( RCSe,( DS / ( DS - ( RCSe / ( RCSe / ( DS / RRSe ) ) ) ) ) ) ) ,Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5289421157684631, "obj2": 0.4340457963327705}, {"determining": "( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029361498742601595}, {"determining": "( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029361498742601595}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + MRS ) + PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( Min( MDR ,BR ) - CRS ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( DS - ( ( Max( CS,Max( ( MUC - ( RCSe / ( MLU - MUR ) ) ),Max( MUR,( RMSe / MLU ) ) ) ) + RRSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( FirstVNF_CPU ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,MUR ) * ( MLU * Max( CS,( CS - RMSe ) ) ) ) * Max( RRSe,RRSe ) ) + MUC ),MUC ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( ( Max( ( MUC - RCSe ),( CS + CS ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( Max( ( FirstVNF_RAM - ( RRS / ( CRS - BR ) ) ),( MRS + MDR ) ) ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( Max( ( MUM - ( MUR / Max( MLU,DS ) ) ),MLU ) / RRSe ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( RRS ,( PN - ARS ) ) * FirstVNF_RAM ) - BR ) / Const ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - ( DS * MLU ) ) + ( MUR * ( RRSe * MUC ) ) ) ) * ( DS / ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( ( FirstVNF_RAM + Min( CRS ,Const ) ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * ( Min( RRSe ,RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM - RCSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( Max( MDR,( FirstVNF_CPU_Server - RRS ) ),Max( FirstVNF_Mem,MRS ) ),PN ) )", "choosing": "( ( DS - ( RCSe / CS ) ) / ( RRSe * ( ( CS + ( MUC + ( MUR * DS ) ) ) - ( RMSe / ( ( ( RRSe + Max( RRSe,RMSe ) ) - RCSe ) - ( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + DS ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ACS,( AMS * BR ) ) )", "choosing": "( ( Min( ( Max( MLU,CS ) + Max( ( RCSe * MLU ),MUM ) ) ,Max( DS,( MUC + MUC ) ) ) - RRSe ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,( BR + ARS ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( MUC - RCSe ),( CS + CS ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * AMS ) ,DDR ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - ACS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,Min( RRSe ,( MUR * RRSe ) ) ) * Min( ( RMSe - Max( RCSe,MLU ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) ) / ( RCSe * DS ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( FirstVNF_RAM + RRS ) + Max( MRS,MDR ) ),( DDR * MRS ) ) )", "choosing": "( ( DS - RRSe ) / ( ( ( ( ( MUM - RMSe ) - Max( ( MLU * ( RMSe + MUM ) ),MUC ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ) + ( MUR + MUM ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Max( FirstVNF_RAM_Server,BR ) )", "choosing": "( Max( MUC,( ( ( Max( Min( RMSe ,MUR ),DS ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( Const * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( ( RCSe - CS ) * ( RCSe / ( MLU + Min( RMSe ,( MLU / RRSe ) ) ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( MLU - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Max( MRS,ACS ) )", "choosing": "( ( MUM / DS ) / ( MUC * ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ( AMS * FirstVNF_Mem_Server ) ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) + RMSe ) + ( Max( Min( RCSe ,MUM ),( RMSe * RRSe ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) / ( FirstVNF_RAM + PN ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / MUM ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( ( DS * RRSe ) ,Min( MUM ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) * DDR ) )", "choosing": "( ( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) + RRSe ) * Max( DS,DS ) )", "obj1": 0.6467065868263473, "obj2": 0.29773477572513}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "( ( AMS - ( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( RRS / Const ) ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / CS ) )", "obj1": 0.7924151696606786, "obj2": 0.13455347733287207}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( Min( ( ( ( AMS * MDR ) * FirstVNF_Mem_Server ) * BR ) ,Const ) + ( ( FirstVNF_CPU / MRS ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * DS ) + Min( Max( RRSe,RCSe ) ,( DS + DS ) ) )", "obj1": 0.6327345309381237, "obj2": 0.34292115488280495}, {"determining": "( ( FirstVNF_RAM / ( MDR * ( MRS * MRS ) ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) + MUR ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.37752800944088416}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Max( ( ( RRS * AMS ) - Const ),( RRS - ACS ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( ( Min( ( MUC / ( RCSe + RCSe ) ) ,MUC ) - ( ( Max( MUR,CS ) + ( CS / RCSe ) ) / ( DS - MUM ) ) ) + MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( FirstVNF_RAM - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( ( AMS - ( Min( ( ( MRS - FirstVNF_CPU_Server ) / ( MDR * RRS ) ) ,Max( ( RRS / FirstVNF_RAM_Server ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ( ( MRS - MRS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ) ) ) * ( Max( Max( PN,FirstVNF_RAM ),FirstVNF_RAM_Server ) * CRS ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * ( Min( ( RCSe * MLU ) ,Min( CS ,MUR ) ) / ( MUM / Max( RCSe,MUR ) ) ) )", "obj1": 0.8163672654690619, "obj2": 0.1285952430246458}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server / Min( BR ,( ( RRS - ARS ) / MDR ) ) ) )", "choosing": "( ( Max( MUR,( ( MUM + ( ( ( CS / RMSe ) - Min( RMSe ,MUC ) ) + ( MUM * RRSe ) ) ) - ( Min( MUC ,( ( MUM * MUM ) * RRSe ) ) / Max( MLU,( RCSe / ( MUM + MUR ) ) ) ) ) ) - Min( Max( MUC,MUM ) ,( MUR * RRSe ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.06397575492909169}, {"determining": "Min( Min( ( DDR - CRS ) ,( ARS + FirstVNF_CPU ) ) ,( ARS + ( DDR + MRS ) ) )", "choosing": "Min( ( ( RMSe + MUC ) * ( ( ( RCSe - RRSe ) - ( RMSe / MLU ) ) - CS ) ) ,Min( RMSe ,RCSe ) )", "obj1": 0.37924151696606784, "obj2": 0.5520467259399126}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( CS - Max( RCSe,RCSe ) ) ) )", "obj1": 0.8522954091816367, "obj2": 0.0738717979254334}, {"determining": "( ( ACS * FirstVNF_CPU ) - ( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe / RCSe ) - ( DS + RCSe ) )", "obj1": 0.9880239520958084, "obj2": 0.01418156023378097}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) ) )", "obj1": 0.37325349301397204, "obj2": 0.5708744191187721}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * ( Max( MRS,Const ) / ( FirstVNF_CPU - Const ) ) )", "choosing": "Min( ( Min( MLU ,MUC ) / Max( RMSe,MUM ) ) ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( RMSe * DS ) ) )", "obj1": 0.9700598802395209, "obj2": 0.023604080268822415}, {"determining": "( ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( CRS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,( Max( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,PN ) ) - FirstVNF_RAM_Server ),ACS ) / Const ) ) ,PN ) )", "choosing": "( Max( MUC,( ( MLU - ( RMSe / MUR ) ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.9481037924151696, "obj2": 0.04133819367659258}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "( BR - Min( ( ( CRS - AMS ) / ( AMS * DDR ) ) ,ARS ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Min( ( Min( ( RCSe * MUR ) ,Min( CS ,RRSe ) ) - Min( ( RMSe + RCSe ) ,( RCSe * MLU ) ) ) ,( ( ( MUR * MUC ) + ( MUR + MUM ) ) + ( ( ( ( ( MUR * MLU ) - ( MUR - MUM ) ) - MUR ) * MLU ) * ( RCSe + RRSe ) ) ) ) )", "obj1": 0.8083832335329342, "obj2": 0.13438001624869966}, {"determining": "( ( Min( ( BR + ARS ) ,Const ) / ( ( ( ( MDR / CRS ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( DS + MUC ),( DS - DS ) ) * Min( ( ( ( ( DS / DS ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 0.9600798403193613, "obj2": 0.0330757994873558}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( Max( MDR,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + RMSe )", "obj1": 0.36726546906187624, "obj2": 0.5769076378921406}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / Min( CRS ,BR ) )", "choosing": "( Min( Max( ( RMSe / RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + MUC ) ) ) / RRSe ) ) )", "obj1": 0.936127744510978, "obj2": 0.05858884335862391}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * ( DS / CS ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.05271415968965636}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / ( MUM / MUR ) )", "obj1": 0.9281437125748503, "obj2": 0.05980622880491355}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( ( ( ( FirstVNF_RAM / CRS ) * BR ) * FirstVNF_Mem ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MLU * Max( ( ( ( DS + MUR ) / DS ) / RCSe ),Max( CS,DS ) ) ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02742396313741927}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( Max( ( Min( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( ( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06822900164572684}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( ( RRS / FirstVNF_CPU ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( RMSe,CS ) * ( MLU * ( DS / CS ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.05271415968965636}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( RCSe,DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06822900164572684}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + MRS ) + PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( Min( MDR ,BR ) - CRS ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( DS - ( ( Max( CS,Max( ( MUC - ( RCSe / ( MLU - MUR ) ) ),Max( MUR,( RMSe / MLU ) ) ) ) + RRSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( FirstVNF_CPU ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,MUR ) * ( MLU * Max( CS,( CS - RMSe ) ) ) ) * Max( RRSe,RRSe ) ) + MUC ),MUC ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( ( Max( ( MUC - RCSe ),( CS + CS ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( Max( ( FirstVNF_RAM - ( RRS / ( CRS - BR ) ) ),( MRS + MDR ) ) ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( Max( ( MUM - ( MUR / Max( MLU,DS ) ) ),MLU ) / RRSe ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( RRS ,( PN - ARS ) ) * FirstVNF_RAM ) - BR ) / Const ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - ( DS * MLU ) ) + ( MUR * ( RRSe * MUC ) ) ) ) * ( DS / ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( ( FirstVNF_RAM + Min( CRS ,Const ) ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * ( Min( RRSe ,RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM - RCSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( Max( MDR,( FirstVNF_CPU_Server - RRS ) ),Max( FirstVNF_Mem,MRS ) ),PN ) )", "choosing": "( ( DS - ( RCSe / CS ) ) / ( RRSe * ( ( CS + ( MUC + ( MUR * DS ) ) ) - ( RMSe / ( ( ( RRSe + Max( RRSe,RMSe ) ) - RCSe ) - ( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + DS ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ACS,( AMS * BR ) ) )", "choosing": "( ( Min( ( Max( MLU,CS ) + Max( ( RCSe * MLU ),MUM ) ) ,Max( DS,( MUC + MUC ) ) ) - RRSe ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,( BR + ARS ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( MUC - RCSe ),( CS + CS ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * AMS ) ,DDR ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - ACS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,Min( RRSe ,( MUR * RRSe ) ) ) * Min( ( RMSe - Max( RCSe,MLU ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) ) / ( RCSe * DS ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( FirstVNF_RAM + RRS ) + Max( MRS,MDR ) ),( DDR * MRS ) ) )", "choosing": "( ( DS - RRSe ) / ( ( ( ( ( MUM - RMSe ) - Max( ( MLU * ( RMSe + MUM ) ),MUC ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ) + ( MUR + MUM ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Max( FirstVNF_RAM_Server,BR ) )", "choosing": "( Max( MUC,( ( ( Max( Min( RMSe ,MUR ),DS ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( Const * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( ( RCSe - CS ) * ( RCSe / ( MLU + Min( RMSe ,( MLU / RRSe ) ) ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( MLU - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Max( MRS,ACS ) )", "choosing": "( ( MUM / DS ) / ( MUC * ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ( AMS * FirstVNF_Mem_Server ) ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( Max( MUR,MUM ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) + RMSe ) + ( Max( Min( RCSe ,MUM ),( RMSe * RRSe ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - RRSe ) - ( RCSe + RMSe ) )", "obj1": 0.6506986027944112, "obj2": 0.24777579307794131}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) * DDR ) )", "choosing": "( ( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) + RRSe ) * Max( DS,DS ) )", "obj1": 0.6467065868263473, "obj2": 0.29773477572513}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( Min( ( ( ( AMS * MDR ) * FirstVNF_Mem_Server ) * BR ) ,Const ) + ( ( FirstVNF_CPU / MRS ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * DS ) + Min( Max( RRSe,RCSe ) ,( DS + DS ) ) )", "obj1": 0.6327345309381237, "obj2": 0.34292115488280495}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( FirstVNF_RAM / ( MDR * ( MRS * MRS ) ) ) * ( Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) - ARS ) )", "choosing": "Min( Min( DS ,Min( MUR ,( CS - RRSe ) ) ) ,( MUR * ( Min( ( MUR * ( MUR / RMSe ) ) ,( CS / RCSe ) ) - ( ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) + MUR ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.37752800944088416}, {"determining": "( ( FirstVNF_RAM * ( ( ACS - RRS ) / Const ) ) / Max( ( ( RRS * AMS ) - Const ),( RRS - ACS ) ) )", "choosing": "Min( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( ( Min( ( MUC / ( RCSe + RCSe ) ) ,MUC ) - ( ( Max( MUR,CS ) + ( CS / RCSe ) ) / ( DS - MUM ) ) ) + MUC ) ) ) ,( ( ( MUC + MLU ) + ( MLU - MUC ) ) + Max( ( CS + MUC ),Max( RCSe,RCSe ) ) ) )", "obj1": 0.5688622754491018, "obj2": 0.38884865272070185}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server / Min( BR ,( ( RRS - ARS ) / MDR ) ) ) )", "choosing": "( ( Max( MUR,( ( MUM + ( ( ( CS / RMSe ) - Min( RMSe ,MUC ) ) + ( MUM * RRSe ) ) ) - ( Min( MUC ,( ( MUM * MUM ) * RRSe ) ) / Max( MLU,( RCSe / ( MUM + MUR ) ) ) ) ) ) - Min( Max( MUC,MUM ) ,( MUR * RRSe ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.06397575492909169}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( FirstVNF_RAM - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( ( BR - Min( ( BR * FirstVNF_CPU_Server ) ,ARS ) ) + ( MRS * Const ) ) / Min( RRS ,Const ) )", "choosing": "Min( Max( CS,DS ) ,Min( MUR ,( Max( ( MUC - RCSe ),( DS * RMSe ) ) - MUC ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6453115413966505}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( Max( MDR,FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + RMSe )", "obj1": 0.36726546906187624, "obj2": 0.5769076378921406}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "( ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( CRS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,( Max( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,PN ) ) - FirstVNF_RAM_Server ),ACS ) / Const ) ) ,PN ) )", "choosing": "( Max( MUC,( ( MLU - ( RMSe / MUR ) ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.9481037924151696, "obj2": 0.04133819367659258}, {"determining": "Min( ( ( ( MDR + DDR ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * ( CRS / Max( DDR,PN ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + ( CS / ( MUR * MUM ) ) ) / ( MUM / MUR ) )", "obj1": 0.9680638722554891, "obj2": 0.023463240553399663}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( CS - Max( RCSe,RCSe ) ) ) )", "obj1": 0.8522954091816367, "obj2": 0.0738717979254334}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * MRS ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( MUC,Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6283184758417423}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / Min( CRS ,BR ) )", "choosing": "( Min( Max( ( RMSe / RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + MUC ) ) ) / RRSe ) ) )", "obj1": 0.9560878243512974, "obj2": 0.032091948960318445}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - RRS ) - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( CS * ( Min( RCSe ,( ( MUM - MUR ) + ( CS * RRSe ) ) ) / ( ( CS + MUC ) * MUM ) ) ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_CPU_Server ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + RMSe )", "obj1": 0.36726546906187624, "obj2": 0.5769076378921406}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( DDR / FirstVNF_CPU ) / ( Min( RRS ,( RRS / Max( MRS,Const ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,MUC ) - MLU ) * MUM ) ),( DS + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + Min( RRSe ,MLU ) ) ) ) / RRSe ) ) )", "obj1": 0.9580838323353293, "obj2": 0.0306759692765275}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,DDR ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8602794411177644, "obj2": 0.0662596047691765}, {"determining": "( Max( ( Min( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( ( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06822900164572684}, {"determining": "( Max( ( Min( ( Min( Const ,RRS ) / ( ARS - ( FirstVNF_Mem / CRS ) ) ) ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( ( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06822900164572684}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + MRS ) + PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( Min( MDR ,BR ) - CRS ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( DS - ( ( Max( CS,Max( ( MUC - ( RCSe / ( MLU - MUR ) ) ),Max( MUR,( RMSe / MLU ) ) ) ) + RRSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( FirstVNF_CPU ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,MUR ) * ( MLU * Max( CS,( CS - RMSe ) ) ) ) * Max( RRSe,RRSe ) ) + MUC ),MUC ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( ( Max( ( MUC - RCSe ),( CS + CS ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( Max( ( FirstVNF_RAM - ( RRS / ( CRS - BR ) ) ),( MRS + MDR ) ) ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( Max( ( MUM - ( MUR / Max( MLU,DS ) ) ),MLU ) / RRSe ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( RRS ,( PN - ARS ) ) * FirstVNF_RAM ) - BR ) / Const ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - ( DS * MLU ) ) + ( MUR * ( RRSe * MUC ) ) ) ) * ( DS / ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( ( FirstVNF_RAM + Min( CRS ,Const ) ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * ( Min( RRSe ,RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM - RCSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( Max( MDR,( FirstVNF_CPU_Server - RRS ) ),Max( FirstVNF_Mem,MRS ) ),PN ) )", "choosing": "( ( DS - ( RCSe / CS ) ) / ( RRSe * ( ( CS + ( MUC + ( MUR * DS ) ) ) - ( RMSe / ( ( ( RRSe + Max( RRSe,RMSe ) ) - RCSe ) - ( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + DS ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ACS,( AMS * BR ) ) )", "choosing": "( ( Min( ( Max( MLU,CS ) + Max( ( RCSe * MLU ),MUM ) ) ,Max( DS,( MUC + MUC ) ) ) - RRSe ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,( BR + ARS ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( MUC - RCSe ),( CS + CS ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * AMS ) ,DDR ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - ACS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,Min( RRSe ,( MUR * RRSe ) ) ) * Min( ( RMSe - Max( RCSe,MLU ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) ) / ( RCSe * DS ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( FirstVNF_RAM + RRS ) + Max( MRS,MDR ) ),( DDR * MRS ) ) )", "choosing": "( ( DS - RRSe ) / ( ( ( ( ( MUM - RMSe ) - Max( ( MLU * ( RMSe + MUM ) ),MUC ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ) + ( MUR + MUM ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Max( FirstVNF_RAM_Server,BR ) )", "choosing": "( Max( MUC,( ( ( Max( Min( RMSe ,MUR ),DS ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( Const * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( ( RCSe - CS ) * ( RCSe / ( MLU + Min( RMSe ,( MLU / RRSe ) ) ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( MLU - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Max( MRS,ACS ) )", "choosing": "( ( MUM / DS ) / ( MUC * ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( Max( ( MUC - RCSe ),( CS + CS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) - ( ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) * DDR ) )", "choosing": "( ( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) + RRSe ) * Max( DS,DS ) )", "obj1": 0.6467065868263473, "obj2": 0.29773477572513}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + ( Max( ( ( MUM - ( ( MUM - MUR ) * MUR ) ) * RRSe ),Max( CS,( MUR - MLU ) ) ) + ( CS / MUM ) ) ) )", "obj1": 0.7465069860279441, "obj2": 0.1230303339297969}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - RRSe ) - ( RCSe + RMSe ) )", "obj1": 0.6506986027944112, "obj2": 0.24777579307794131}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / MUR ) )", "obj1": 0.7844311377245509, "obj2": 0.0932064070529788}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server / Min( BR ,( ( RRS - ARS ) / MDR ) ) ) )", "choosing": "( ( Max( MUR,( ( MUM + ( ( ( CS / RMSe ) - Min( RMSe ,MUC ) ) + ( MUM * RRSe ) ) ) - ( Min( MUC ,( ( MUM * MUM ) * RRSe ) ) / Max( MLU,( RCSe / ( MUM + MUR ) ) ) ) ) ) - Min( Max( MUC,MUM ) ,( MUR * RRSe ) ) ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - Max( DS,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.06397575492909169}, {"determining": "( ( FirstVNF_RAM - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.562793036558899}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( ( ( BR - Min( ( BR * FirstVNF_CPU_Server ) ,ARS ) ) + ( MRS * Const ) ) / Min( RRS ,Const ) )", "choosing": "Min( Max( CS,DS ) ,Min( MUR ,( Max( ( MUC - RCSe ),( DS * RMSe ) ) - MUC ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6453115413966505}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( ( ( FirstVNF_Mem_Server - DDR ) - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + Max( RMSe,Min( DS ,RRSe ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6235100647622523}, {"determining": "( Min( Max( Const,Min( MDR ,( CRS - ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * RRS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Min( MUR ,RMSe ) * Max( ( Min( ( RCSe * DS ) ,RCSe ) / CS ),DS ) )", "obj1": 0.5229540918163673, "obj2": 0.4265846453419687}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "( ( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( CRS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,( Max( ( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,PN ) ) - FirstVNF_RAM_Server ),ACS ) / Const ) ) ,PN ) )", "choosing": "( Max( MUC,( ( MLU - ( RMSe / MUR ) ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.9481037924151696, "obj2": 0.04133819367659258}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "Min( ( ( ( MDR + DDR ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * ( CRS / Max( DDR,PN ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + ( CS / ( MUR * MUM ) ) ) / ( MUM / MUR ) )", "obj1": 0.9680638722554891, "obj2": 0.023463240553399663}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Max( ARS,FirstVNF_Mem ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),DS ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4781033214698184}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MLU ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.499656870682482}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / Min( CRS ,BR ) )", "choosing": "( Min( Max( ( RMSe / RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + MUC ) ) ) / RRSe ) ) )", "obj1": 0.9560878243512974, "obj2": 0.032091948960318445}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - RRS ) - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( CS * ( Min( RCSe ,( ( MUM - MUR ) + ( CS * RRSe ) ) ) / ( ( CS + MUC ) * MUM ) ) ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "( Min( DDR ,PN ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),( DS + MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.0018953000390963637}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( DDR / FirstVNF_CPU ) / ( Min( RRS ,( RRS / Max( MRS,Const ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,MUC ) - MLU ) * MUM ) ),( DS + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + Min( RRSe ,MLU ) ) ) ) / RRSe ) ) )", "obj1": 0.9580838323353293, "obj2": 0.0306759692765275}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,DDR ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8602794411177644, "obj2": 0.0662596047691765}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Const + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( RMSe - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + MRS ) + PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( Min( MDR ,BR ) - CRS ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( DS - ( ( Max( CS,Max( ( MUC - ( RCSe / ( MLU - MUR ) ) ),Max( MUR,( RMSe / MLU ) ) ) ) + RRSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( FirstVNF_CPU ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,MUR ) * ( MLU * Max( CS,( CS - RMSe ) ) ) ) * Max( RRSe,RRSe ) ) + MUC ),MUC ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( ( ( MLU - MUR ) / Min( CS ,MUM ) ) + Max( ( MUR + MUC ),( MLU * MUM ) ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) )", "choosing": "( Max( MUC,( ( ( Max( ( MUC - RCSe ),( CS + CS ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR - FirstVNF_CPU_Server ) ,Min( Max( ( FirstVNF_RAM - ( RRS / ( CRS - BR ) ) ),( MRS + MDR ) ) ,FirstVNF_RAM ) ) ,( ( AMS * ARS ) + ( DDR + MRS ) ) )", "choosing": "Min( ( ( Max( ( MUM - ( MUR / Max( MLU,DS ) ) ),MLU ) / RRSe ) * ( MUM - CS ) ) ,( ( MUM * CS ) - ( MUM - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( RRS ,( PN - ARS ) ) * FirstVNF_RAM ) - BR ) / Const ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUM - ( DS * MLU ) ) + ( MUR * ( RRSe * MUC ) ) ) ) * ( DS / ( MLU - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( ( FirstVNF_RAM + Min( CRS ,Const ) ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * ( Min( RRSe ,RMSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM - RCSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( Max( Max( MDR,( FirstVNF_CPU_Server - RRS ) ),Max( FirstVNF_Mem,MRS ) ),PN ) )", "choosing": "( ( DS - ( RCSe / CS ) ) / ( RRSe * ( ( CS + ( MUC + ( MUR * DS ) ) ) - ( RMSe / ( ( ( RRSe + Max( RRSe,RMSe ) ) - RCSe ) - ( RRSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + DS ) / Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ACS,( AMS * BR ) ) )", "choosing": "( ( Min( ( Max( MLU,CS ) + Max( ( RCSe * MLU ),MUM ) ) ,Max( DS,( MUC + MUC ) ) ) - RRSe ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - ( ( Max( Min( ( MRS - FirstVNF_CPU ) ,( BR + ARS ) ),MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( MUC - RCSe ),( CS + CS ) ) - ( RMSe / ( MUC - ( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ACS ,Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * AMS ) ,DDR ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - ACS ) ) + ( CRS - ( DDR + Const ) ) )", "choosing": "( ( CS + RRSe ) / ( ( ( Min( Max( Min( RRSe ,CS ),Min( MUM ,RRSe ) ) ,Min( RRSe ,( MUR * RRSe ) ) ) * Min( ( RMSe - Max( RCSe,MLU ) ) ,( ( CS * RMSe ) / ( MUC + MUM ) ) ) ) / ( RCSe * DS ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( FirstVNF_RAM + RRS ) + Max( MRS,MDR ) ),( DDR * MRS ) ) )", "choosing": "( ( DS - RRSe ) / ( ( ( ( ( MUM - RMSe ) - Max( ( MLU * ( RMSe + MUM ) ),MUC ) ) * ( Min( RRSe ,RRSe ) * ( MUM / RMSe ) ) ) + ( MUR + MUM ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,RRS ) / ( CRS + Min( PN ,FirstVNF_CPU ) ) ) - Max( FirstVNF_RAM_Server,BR ) )", "choosing": "( Max( MUC,( ( ( Max( Min( RMSe ,MUR ),DS ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( ( Const * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + DDR ) ) ,PN ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( ( RCSe - CS ) * ( RCSe / ( MLU + Min( RMSe ,( MLU / RRSe ) ) ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( FirstVNF_Mem_Server + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.6447105788423154, "obj2": 0.28576548572812493}, {"determining": "( FirstVNF_Mem_Server * ( Min( ACS ,BR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( MUR + MUR ) )", "obj1": 0.6906187624750499, "obj2": 0.21807891774601573}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - RRSe ) - ( RCSe + RMSe ) )", "obj1": 0.6506986027944112, "obj2": 0.24777579307794131}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.16986491838401555}, {"determining": "( Min( DDR ,PN ) - Min( ( ( ( RRS * ACS ) / FirstVNF_Mem ) - ( CRS - RRS ) ) ,MDR ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + ( ( RRSe - RCSe ) * ( ( RCSe * ( Max( CS,DS ) * ( RMSe * MUR ) ) ) / ( RCSe * MUM ) ) ) ) + ( Max( MUC,( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) ) ) + ( CS / MUM ) ) ) )", "obj1": 0.7465069860279441, "obj2": 0.12298830710434172}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / MUR ) )", "obj1": 0.7844311377245509, "obj2": 0.0932064070529788}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.562793036558899}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( ( FirstVNF_RAM - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( BR / FirstVNF_RAM_Server ) / ( Min( RRS ,( RRS / ( FirstVNF_CPU / ( PN / FirstVNF_RAM ) ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,( MUM + DS ) ) - MLU ) * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + ( RMSe + MUC ) ) ) ) / RRSe ) ) )", "obj1": 0.9481037924151696, "obj2": 0.040585475941518095}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - ( FirstVNF_RAM - BR ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4530938123752495, "obj2": 0.4869393539526963}, {"determining": "( Min( Max( Const,Min( MDR ,( CRS - ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * RRS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Min( MUR ,RMSe ) * Max( ( Min( ( RCSe * DS ) ,RCSe ) / CS ),DS ) )", "obj1": 0.5229540918163673, "obj2": 0.4265846453419687}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( ( ( FirstVNF_Mem_Server - DDR ) - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + Max( RMSe,Min( DS ,RRSe ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6235100647622523}, {"determining": "Min( ( ( ( MDR + DDR ) * ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( DDR ,( ARS - Min( DDR ,ARS ) ) ) + ( ACS - AMS ) ) * ( CRS / Max( DDR,PN ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + ( CS / ( MUR * MUM ) ) ) / ( MUM / MUR ) )", "obj1": 0.9680638722554891, "obj2": 0.023463240553399663}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( DDR - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006402001858484568}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( ( BR - Min( ( BR * FirstVNF_CPU_Server ) ,ARS ) ) + ( MRS * Const ) ) / Min( RRS ,Const ) )", "choosing": "Min( Max( CS,DS ) ,Min( MUR ,( Max( ( MUC - RCSe ),( DS * RMSe ) ) - MUC ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6453115413966505}, {"determining": "( ( ARS / Min( FirstVNF_CPU_Server ,DDR ) ) - Min( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( ( ( RMSe / Min( DS ,Min( MUM ,MUR ) ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.47105788423153694, "obj2": 0.47265062710583344}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.313373253493014, "obj2": 0.6392153992986026}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MLU ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.499656870682482}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Max( ARS,FirstVNF_Mem ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),DS ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4781033214698184}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / Min( CRS ,BR ) )", "choosing": "( Min( Max( ( RMSe / RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + MUC ) ) ) / RRSe ) ) )", "obj1": 0.9560878243512974, "obj2": 0.032091948960318445}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / MUR ) )", "obj1": 0.7504990019960079, "obj2": 0.12183895773687434}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / MUR ) )", "obj1": 0.7504990019960079, "obj2": 0.12183895773687434}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - RRS ) - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( CS * ( Min( RCSe ,( ( MUM - MUR ) + ( CS * RRSe ) ) ) / ( ( CS + MUC ) * MUM ) ) ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Max( DS,DS ),DS ) )", "obj1": 0.5209580838323353, "obj2": 0.43358087985046295}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,CS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( DDR / FirstVNF_CPU ) / ( Min( RRS ,( RRS / Max( MRS,Const ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,MUC ) - MLU ) * MUM ) ),( DS + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + Min( RRSe ,MLU ) ) ) ) / RRSe ) ) )", "obj1": 0.9580838323353293, "obj2": 0.0306759692765275}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Min( DDR ,( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) ) ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( Min( ( RCSe * DS ) ,RCSe ) / CS ),DS ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,DDR ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8602794411177644, "obj2": 0.0662596047691765}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / ( ARS / RRS ) ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( Max( MUC,( ( ( ( RMSe / ( RMSe / CS ) ) / RCSe ) - RMSe ) + MUM ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0024818876058342186}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Const + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( RMSe - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + Const ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( Min( MUM ,( Max( ( Min( MLU ,RRSe ) - MUR ),RRSe ) / RRSe ) ) + ( DS - ( MLU * ( ( RCSe + CS ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / BR ) * ( Const - Min( AMS ,( DDR * ( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + MRS ) + PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server + RRS ) ,( ( ( ( ( ( Min( MDR ,RRS ) * ( PN + MRS ) ) + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) - DDR ) / ARS ) * ( DDR - FirstVNF_RAM_Server ) ) - AMS ) )", "choosing": "( Min( Min( ( DS - MUM ) ,( ( RMSe + DS ) + ( ( Min( ( RCSe / RMSe ) ,( DS / DS ) ) * RCSe ) + ( CS * MLU ) ) ) ) ,( ( DS + Max( ( ( MUR / DS ) / RRSe ),RCSe ) ) / CS ) ) - ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( Min( MDR ,BR ) - CRS ) / ( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( DS - ( ( Max( CS,Max( ( MUC - ( RCSe / ( MLU - MUR ) ) ),Max( MUR,( RMSe / MLU ) ) ) ) + RRSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( Min( FirstVNF_CPU ,( Max( MRS,DDR ) * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / RRSe ) - MUC ) - CS ) - ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / ( Min( RRS ,Const ) * Const ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,MUR ) * ( MLU * Max( CS,( CS - RMSe ) ) ) ) * Max( RRSe,RRSe ) ) + MUC ),MUC ) - ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( Max( ACS,BR ) + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( FirstVNF_Mem_Server + RRS ) ) ) ) / Min( ( ( ARS / Max( FirstVNF_RAM_Server,BR ) ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Const - FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( ( CS + MUC ) * ( RRSe + ( MUM / DS ) ) ) ) ) ) / ( ( RMSe * RMSe ) + Max( RCSe,RMSe ) ) )", "obj1": 0.5608782435129741, "obj2": 0.37297754885087614}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUR ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.28515839721170705}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( RRS / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( DS,( DS / CS ) ) ) )", "obj1": 0.7425149700598802, "obj2": 0.12036489586471788}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / MUR ) )", "obj1": 0.7844311377245509, "obj2": 0.0932064070529788}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.16986491838401555}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.562793036558899}, {"determining": "Min( ( ARS + FirstVNF_CPU ) ,( ( FirstVNF_RAM_Server - Max( AMS,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( ( MUC * ( MUR / Min( ( CS / MLU ) ,( MUC * DS ) ) ) ) / RCSe ),( ( ( Max( Max( RMSe,MLU ),( DS * RMSe ) ) * Max( MUR,Max( RCSe,MUR ) ) ) + MUM ) + RCSe ) ) - RRSe ) - ( RMSe / MLU ) )", "obj1": 0.3592814371257485, "obj2": 0.5833728440425564}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( BR / FirstVNF_RAM_Server ) / ( Min( RRS ,( RRS / ( FirstVNF_CPU / ( PN / FirstVNF_RAM ) ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,( MUM + DS ) ) - MLU ) * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + ( RMSe + MUC ) ) ) ) / RRSe ) ) )", "obj1": 0.9481037924151696, "obj2": 0.040585475941518095}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - ( FirstVNF_RAM - BR ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4530938123752495, "obj2": 0.4869393539526963}, {"determining": "( Min( Max( Const,Min( MDR ,( CRS - ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * RRS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Min( MUR ,RMSe ) * Max( ( Min( ( RCSe * DS ) ,RCSe ) / CS ),DS ) )", "obj1": 0.5229540918163673, "obj2": 0.4265846453419687}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( ( ( FirstVNF_Mem_Server - DDR ) - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + Max( RMSe,Min( DS ,RRSe ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6235100647622523}, {"determining": "( ( FirstVNF_RAM - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.41317365269461076, "obj2": 0.517140275887081}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "( Min( Max( ( RRS / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / ( MUM / MUR ) ) )", "obj1": 0.7544910179640718, "obj2": 0.11843382060907158}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ),FirstVNF_Mem ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.16986491838401555}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( ( BR - Min( ( BR * FirstVNF_CPU_Server ) ,ARS ) ) + ( MRS * Const ) ) / Min( RRS ,Const ) )", "choosing": "Min( Max( CS,DS ) ,Min( MUR ,( Max( ( MUC - RCSe ),( DS * RMSe ) ) - MUC ) ) )", "obj1": 0.31137724550898205, "obj2": 0.6453115413966505}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( DDR - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006402001858484568}, {"determining": "( ( ARS / Min( FirstVNF_CPU_Server ,DDR ) ) - Min( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( ( ( RMSe / Min( DS ,Min( MUM ,MUR ) ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.47105788423153694, "obj2": 0.47265062710583344}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.313373253493014, "obj2": 0.6392153992986026}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,( CS / MUR ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.4870259481037924, "obj2": 0.4530748255909499}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MLU ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.499656870682482}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - BR ) * DDR )", "choosing": "( ( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RCSe / ( Max( DS,DS ) + MUR ) ) )", "obj1": 0.3992015968063872, "obj2": 0.5294410582664302}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Max( ARS,FirstVNF_Mem ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),DS ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4781033214698184}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),( MRS + MDR ) )", "choosing": "Max( Max( DS,( DS / CS ) ),( DS + RRSe ) )", "obj1": 0.5149700598802395, "obj2": 0.44446506501653693}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / Min( CRS ,BR ) )", "choosing": "( Min( Max( ( RMSe / RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + MUC ) ) ) / RRSe ) ) )", "obj1": 0.9560878243512974, "obj2": 0.032091948960318445}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( ( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( MUM / MUR ) )", "obj1": 0.7724550898203593, "obj2": 0.10630814353617092}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - RRS ) - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( CS * ( Min( RCSe ,( ( MUM - MUR ) + ( CS * RRSe ) ) ) / ( ( CS + MUC ) * MUM ) ) ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Max( DS,DS ),DS ) )", "obj1": 0.5209580838323353, "obj2": 0.43358087985046295}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,CS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( DDR / FirstVNF_CPU ) / ( Min( RRS ,( RRS / Max( MRS,Const ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,MUC ) - MLU ) * MUM ) ),( DS + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + Min( RRSe ,MLU ) ) ) ) / RRSe ) ) )", "obj1": 0.9580838323353293, "obj2": 0.0306759692765275}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,DDR ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8602794411177644, "obj2": 0.0662596047691765}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / ( ARS / RRS ) ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( Max( MUC,( ( ( ( RMSe / ( RMSe / CS ) ) / RCSe ) - RMSe ) + MUM ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0024818876058342186}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - ( ( FirstVNF_CPU + FirstVNF_Mem ) / FirstVNF_RAM_Server ) )", "choosing": "Max( MUC,Max( MUC,Min( ( MLU * ( ( ( DS - MUM ) / MUM ) - MUC ) ) ,CS ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( Max( FirstVNF_CPU,( FirstVNF_RAM / Const ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( ( MLU + Max( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ),DS ) ),DS ) )", "obj1": 0.5069860279441117, "obj2": 0.4464134671340965}, {"determining": "( Min( DDR ,( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) ) ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( Min( ( RCSe * DS ) ,RCSe ) / CS ),DS ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "( ( ( Const - AMS ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( Const + Max( Max( RRS,FirstVNF_RAM ),( BR / FirstVNF_RAM_Server ) ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( RMSe + MUC ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( RMSe - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.5049900199600799, "obj2": 0.4480991744122641}, {"determining": "( Max( ( ARS + ( MRS * ( AMS - Min( FirstVNF_Mem_Server ,ARS ) ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),RCSe ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - ( ( ARS / FirstVNF_RAM_Server ) * ( ARS * FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) / Max( Max( ( MUR + CS ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / RRS ) / ( CRS / Max( ACS,FirstVNF_Mem_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * PN ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( MUR * ( MUM + MUM ) ) * MUM ) ) * ( MUR / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( Max( ACS,BR ) + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( FirstVNF_Mem_Server + RRS ) ) ) ) / Min( ( ( ARS / Max( FirstVNF_RAM_Server,BR ) ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Const - FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( ( CS + MUC ) * ( RRSe + ( MUM / DS ) ) ) ) ) ) / ( ( RMSe * RMSe ) + Max( RCSe,RMSe ) ) )", "obj1": 0.5608782435129741, "obj2": 0.37297754885087614}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUR ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.28515839721170705}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( ( CS / MUR ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7265469061876247, "obj2": 0.1531371421290565}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( ( ( FirstVNF_RAM + AMS ) - ( ARS - FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( ( RRSe - RCSe ) * ( ( RMSe * MUM ) / MLU ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.35528942115768464, "obj2": 0.576481111721504}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( RMSe / ( MUC - Max( RCSe,RCSe ) ) ) ) )", "obj1": 0.36327345309381237, "obj2": 0.562793036558899}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.03347685534363695}, {"determining": "( Min( Max( Const,Min( MDR ,( CRS - ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * RRS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Min( MUR ,RMSe ) * Max( ( Min( ( RCSe * DS ) ,RCSe ) / CS ),DS ) )", "obj1": 0.5229540918163673, "obj2": 0.4265846453419687}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( ( ( FirstVNF_Mem_Server - DDR ) - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + Max( RMSe,Min( DS ,RRSe ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6235100647622523}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.500998003992016, "obj2": 0.4369261378808477}, {"determining": "( Min( Max( ( RRS / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / ( MUM / MUR ) ) )", "obj1": 0.7544910179640718, "obj2": 0.11843382060907158}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.41317365269461076, "obj2": 0.517140275887081}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "( ACS * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( ( Max( ( ( CS + MUR ) * RMSe ),RCSe ) + MLU ) ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7245508982035929, "obj2": 0.1602334637729176}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ACS - AMS ) )", "choosing": "( ( MUM / DS ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.31137724550898205, "obj2": 0.6428093173106322}, {"determining": "( Min( MRS ,FirstVNF_Mem ) * Max( ( ( RRS / ( MDR + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server - RRS ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe - Min( ( Min( RMSe ,RRSe ) - MUR ) ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RRSe / MUC ) )", "obj1": 0.43912175648702595, "obj2": 0.49101056401978865}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( ( ARS / Min( FirstVNF_CPU_Server ,DDR ) ) - Min( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( ( ( RMSe / Min( DS ,Min( MUM ,MUR ) ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.47105788423153694, "obj2": 0.47265062710583344}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / Min( CRS ,BR ) )", "choosing": "( Min( Max( ( RMSe / RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + MUC ) ) ) / RRSe ) ) )", "obj1": 0.9560878243512974, "obj2": 0.032091948960318445}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - ( FirstVNF_RAM - BR ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4530938123752495, "obj2": 0.4869393539526963}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,( CS / MUR ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.4870259481037924, "obj2": 0.4530748255909499}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.313373253493014, "obj2": 0.6392153992986026}, {"determining": "Min( FirstVNF_CPU_Server ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MLU ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.499656870682482}, {"determining": "( ( AMS - MRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - CS ) / RCSe ) * ( RRSe * RMSe ) ) / Min( ( RMSe + MLU ) ,MUC ) )", "obj1": 0.5169660678642715, "obj2": 0.43641147115692674}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Max( ARS,FirstVNF_Mem ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),DS ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4781033214698184}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_Mem_Server ) ) ,( ( RRS / ARS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ),FirstVNF_Mem ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,DS ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.16986491838401555}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.7085828343313373, "obj2": 0.16986491838401555}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09910637943229329}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( DDR - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006402001858484568}, {"determining": "( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( CRS + Min( PN ,( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) )", "choosing": "( Max( MUC,( MUC + RRSe ) ) * Max( Max( DS,DS ),DS ) )", "obj1": 0.5209580838323353, "obj2": 0.43358087985046295}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,MUC ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( ( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_RAM ) ),Min( PN ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUR + MLU ) / Max( MUM,MUR ) ) - ( ( CS / MUM ) + Max( RCSe,DS ) ) ) ,Min( ( DS / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.48902195608782434, "obj2": 0.44949992456529586}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006402001858484568}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,CS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "( ( FirstVNF_RAM_Server + ACS ) / ( ( ( DDR / FirstVNF_CPU ) / ( Min( RRS ,( RRS / Max( MRS,Const ) ) ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( ( Max( DS,CS ) * ( ( Max( RCSe,MUC ) - MLU ) * MUM ) ),( DS + ( DS * RMSe ) ) ) ,MUR ) - Max( DS,( ( CS + Max( CS,( RMSe + Min( RRSe ,MLU ) ) ) ) / RRSe ) ) )", "obj1": 0.9580838323353293, "obj2": 0.0306759692765275}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,DDR ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8602794411177644, "obj2": 0.0662596047691765}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / ( ARS / RRS ) ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( Max( MUC,( ( ( ( RMSe / ( RMSe / CS ) ) / RCSe ) - RMSe ) + MUM ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0024818876058342186}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( DDR ,( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( ( FirstVNF_CPU / MRS ) + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) ) ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( Min( ( RCSe * DS ) ,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ) / CS ),DS ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - ( ( FirstVNF_CPU + FirstVNF_Mem ) / FirstVNF_RAM_Server ) )", "choosing": "Max( MUC,Max( MUC,Min( ( MLU * ( ( ( DS - MUM ) / MUM ) - MUC ) ) ,CS ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,DDR ) * ( DDR / FirstVNF_Mem ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / RCSe ) * ( RRSe + MUC ) ) + Max( ( ( Max( MUR,MUM ) + Min( MUC ,( ( MUR * MUR ) / ( RCSe / CS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( ( MUM / DS ) + ( RCSe + RMSe ) ) ) ) ),Min( RCSe ,CS ) ) ) ,Min( ( Max( RCSe,RRSe ) - ( RRSe - CS ) ) ,Min( Min( Min( DS ,CS ) ,( CS / MUR ) ) ,Min( MUM ,MUM ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.029348722621945936}, {"determining": "( Max( ( ARS + ( MRS * ( AMS - Min( FirstVNF_Mem_Server ,ARS ) ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),RCSe ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( Max( ACS,BR ) + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( FirstVNF_Mem_Server + RRS ) ) ) ) / Min( ( ( ARS / Max( FirstVNF_RAM_Server,BR ) ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Const - FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( ( CS + MUC ) * ( RRSe + ( MUM / DS ) ) ) ) ) ) / ( ( RMSe * RMSe ) + Max( RCSe,RMSe ) ) )", "obj1": 0.5608782435129741, "obj2": 0.37297754885087614}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUR ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.28515839721170705}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( Max( Max( ARS,( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem ) * ( ACS - Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + Max( ( RMSe * RMSe ),DS ) ) * Min( Max( ( DS * CS ),RCSe ) ,RRSe ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - Min( Min( MUC ,MLU ) ,Max( MLU,DS ) ) ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ),RCSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06621105608985234}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "( Max( Max( ( DDR - FirstVNF_RAM_Server ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( ARS - RRS ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ),FirstVNF_Mem ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( RMSe ,( RRSe + RMSe ) ) - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( ( DS / MUC ) + RRSe ) ) ) - ( Max( MUR,CS ) - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) )", "obj1": 0.7365269461077845, "obj2": 0.14804722649599655}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "Min( ( DDR / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.1497811791802302}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),( ( FirstVNF_Mem_Server / BR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( FirstVNF_Mem_Server,RRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUM / DS ) + ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.4810379241516966, "obj2": 0.4437150572422321}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.4146590691576831}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.500998003992016, "obj2": 0.4369261378808477}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( Min( RRS ,DDR ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,( MLU * MUM ) ) ,( CS / MUR ) ) )", "obj1": 0.5129740518962076, "obj2": 0.4319782066037596}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( ( ( FirstVNF_RAM + AMS ) - ( ARS - FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( ( RRSe - RCSe ) * ( ( RMSe * MUM ) / MLU ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.35528942115768464, "obj2": 0.576481111721504}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( MDR * ( MRS * ( ( ( FirstVNF_Mem_Server - DDR ) - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / DS ) ) ) + Max( RMSe,Min( DS ,RRSe ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6235100647622523}, {"determining": "( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.6986027944111777, "obj2": 0.17499612322687366}, {"determining": "( Min( Max( ( RRS / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / ( MUM / MUR ) ) )", "obj1": 0.7544910179640718, "obj2": 0.11843382060907158}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.028893918258566423}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.03347685534363695}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ACS - AMS ) )", "choosing": "( ( MUM / DS ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.31137724550898205, "obj2": 0.6428093173106322}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( ( ARS / Min( FirstVNF_CPU_Server ,DDR ) ) - Min( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( ( ( RMSe / Min( DS ,Min( MUM ,MUR ) ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.47105788423153694, "obj2": 0.47265062710583344}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.41317365269461076, "obj2": 0.517140275887081}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Min( MRS ,FirstVNF_Mem ) * Max( ( ( RRS / ( MDR + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server - RRS ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe - Min( ( Min( RMSe ,RRSe ) - MUR ) ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RRSe / MUC ) )", "obj1": 0.43912175648702595, "obj2": 0.49101056401978865}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.313373253493014, "obj2": 0.6392153992986026}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5187980242353106}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Max( ARS,FirstVNF_Mem ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),DS ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4781033214698184}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( ( ( ( MDR + ( AMS + FirstVNF_Mem_Server ) ) * ( DDR / FirstVNF_Mem ) ) / ( Max( MRS,DDR ) + ( FirstVNF_RAM - ACS ) ) ) / ( FirstVNF_RAM + Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) ,( CS / CS ) )", "obj1": 0.9640718562874252, "obj2": 0.028669945887788678}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09910637943229329}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,CS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( Max( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,DDR ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8602794411177644, "obj2": 0.0662596047691765}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / ( ARS / RRS ) ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( Max( MUC,( ( ( ( RMSe / ( RMSe / CS ) ) / RCSe ) - RMSe ) + MUM ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0024818876058342186}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ( BR - ARS ),CRS ) - FirstVNF_RAM ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( DS - CS ) ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( DDR ,( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( ( FirstVNF_CPU / MRS ) + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) ) ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( Min( ( RCSe * DS ) ,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ) / CS ),DS ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( BR * FirstVNF_RAM ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( CS - RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( Max( ( ARS + ( MRS * ( AMS - Min( FirstVNF_Mem_Server ,ARS ) ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( AMS / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),RCSe ),( ( DS + MUR ) / Min( ( RMSe + MLU ) ,MUC ) ) ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06659755554388062}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,MUM ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( ( ( MUM / DS ) + ( RCSe + RMSe ) ) - CS ) ,MLU ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( MUR - ( MUM + RRSe ) ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( FirstVNF_Mem / CRS ) ) * ( Const * Max( ( FirstVNF_Mem * MRS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Min( CS ,RRSe ) ) + ( ( RMSe / ( ( MUM + MUM ) / ( RRSe - MUR ) ) ) * ( RMSe * MUC ) ) ) + Min( Max( ( RMSe * MUM ),Min( RRSe ,RCSe ) ) ,( ( RRSe * RCSe ) + ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MRS ) - Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( ( DS + MUR ) / ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,CS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( MRS - ( FirstVNF_RAM + Const ) ) ) ,Min( ( Min( RRS ,Const ) / ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM - MUR ),( ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) - DS ) ) / Min( RRSe ,( CS + Max( RCSe,Min( MLU ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( DDR / ( Min( Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - Max( RMSe,MUR ) ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.688622754491018, "obj2": 0.15674267006310996}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.27522359631562565}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( Max( ACS,BR ) + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( FirstVNF_Mem_Server + RRS ) ) ) ) / Min( ( ( ARS / Max( FirstVNF_RAM_Server,BR ) ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Const - FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( ( CS + MUC ) * ( RRSe + ( MUM / DS ) ) ) ) ) ) / ( ( RMSe * RMSe ) + Max( RCSe,RMSe ) ) )", "obj1": 0.5608782435129741, "obj2": 0.37297754885087614}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( Max( Max( ( DDR - FirstVNF_RAM_Server ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( ARS - RRS ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ),FirstVNF_Mem ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( RMSe ,( RRSe + RMSe ) ) - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( ( DS / MUC ) + RRSe ) ) ) - ( Max( MUR,CS ) - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) )", "obj1": 0.7365269461077845, "obj2": 0.14804722649599655}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( FirstVNF_RAM - CRS ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( Min( MUC ,MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5391235295769905}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "Min( ( MDR / ARS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( RMSe,( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.3790736666417873}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( Min( RRS ,DDR ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,( MLU * MUM ) ) ,( CS / MUR ) ) )", "obj1": 0.5129740518962076, "obj2": 0.4319782066037596}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( Const + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( ( FirstVNF_RAM - ( ACS - PN ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RCSe ) ,Min( ( CS + ( MUR / ( MUM - RMSe ) ) ) ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( ( RRSe / MUC ) - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08306036036285493}, {"determining": "Min( ( DDR / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.1497811791802302}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.4146590691576831}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "Max( ( ( Const * MRS ) + ( BR * ( DDR * ( Const / FirstVNF_CPU ) ) ) ),( ( FirstVNF_CPU / RRS ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS - RMSe ) ) - ( ( ( Max( RMSe,CS ) / Min( Max( RMSe,Min( ( MUM / DS ) ,Min( RMSe ,RCSe ) ) ) ,Max( ( ( MUR + DS ) + ( RRSe / RMSe ) ),( RCSe * MLU ) ) ) ) / MUR ) / RCSe ) )", "obj1": 0.2894211576846307, "obj2": 0.6527706319629112}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( ( ( FirstVNF_RAM + AMS ) - ( ARS - FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( ( RRSe - RCSe ) * ( ( RMSe * MUM ) / MLU ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.35528942115768464, "obj2": 0.576481111721504}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Min( Max( ( RRS / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / ( MUM / MUR ) ) )", "obj1": 0.7544910179640718, "obj2": 0.11843382060907158}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( Max( FirstVNF_Mem_Server,RRS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUM / DS ) + ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.4810379241516966, "obj2": 0.4437150572422321}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.028893918258566423}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( ( Const - ( CRS + Const ) ) / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUR + Min( Max( ( RRSe - CS ),DS ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( Max( DS,( DS + MUM ) ) - ( MLU - DS ) ) ) ,( Max( Max( MLU,Max( RMSe,MLU ) ),MLU ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4151696606786427, "obj2": 0.5066072899268691}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( ( ARS / Min( FirstVNF_CPU_Server ,DDR ) ) - Min( ( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( ( ( RMSe / Min( DS ,Min( MUM ,MUR ) ) ) / RCSe ) - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) )", "obj1": 0.47105788423153694, "obj2": 0.47265062710583344}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.313373253493014, "obj2": 0.6392153992986026}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.41317365269461076, "obj2": 0.517140275887081}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( DS / MUC ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.2994011976047904, "obj2": 0.6509514332419595}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Min( MRS ,FirstVNF_Mem ) * Max( ( ( RRS / ( MDR + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server - RRS ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe - Min( ( Min( RMSe ,RRSe ) - MUR ) ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RRSe / MUC ) )", "obj1": 0.43912175648702595, "obj2": 0.49101056401978865}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ACS - AMS ) )", "choosing": "( ( MUM / DS ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.31137724550898205, "obj2": 0.6428093173106322}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5187980242353106}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.03347685534363695}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Max( ARS,FirstVNF_Mem ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server - MRS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( MUR / RCSe ),DS ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4590818363273453, "obj2": 0.4781033214698184}, {"determining": "Min( Max( FirstVNF_RAM,CRS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( MUM ,( ( DS + RCSe ) * CS ) ) / ( MLU - Min( DS ,MUR ) ) )", "obj1": 0.45708582834331335, "obj2": 0.48092172236472436}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.9640718562874252, "obj2": 0.02837306121806018}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( MDR + DDR ) * ( ( ARS + DDR ) * Const ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( MUM ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9660678642714571, "obj2": 0.02715388657281528}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9261477045908184, "obj2": 0.033560157400142884}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.780439121756487, "obj2": 0.09587487562451945}, {"determining": "( ( PN / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( ( MUC * MLU ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / ( ( MUR + DS ) + MUR ) )", "obj1": 0.29141716566866266, "obj2": 0.6516179204641015}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( ( ( Const - FirstVNF_CPU ) / Max( Min( ( ( AMS + DDR ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ),MRS ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUR + DS ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,CS ) ) ) ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( RMSe ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.47904191616766467, "obj2": 0.4669599491914797}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / ( ARS / RRS ) ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( Max( MUC,( ( ( ( RMSe / ( RMSe / CS ) ) / RCSe ) - RMSe ) + MUM ) ) + Min( RRSe ,RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0024818876058342186}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9261477045908184, "obj2": 0.033560157400142884}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( ( Min( Min( MUR ,MLU ) ,RCSe ) - CS ) - ( MUC * MUR ) ) / ( ( MUR + MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( MRS - Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( Min( DDR ,( Min( ACS ,RRS ) - ( ( Min( Const ,RRS ) / ( ( FirstVNF_CPU / MRS ) + Min( ACS ,FirstVNF_CPU ) ) ) - Min( Max( FirstVNF_RAM_Server,BR ) ,PN ) ) ) ) - Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUM * RMSe ),Max( ( Min( ( RCSe * DS ) ,( ( MLU + ( RMSe * RCSe ) ) - ( MUR - MUR ) ) ) / CS ),DS ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( BR * FirstVNF_RAM ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( CS - RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001777596342902219}, {"determining": "( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ( BR - ARS ),CRS ) - FirstVNF_RAM ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( DS - CS ) ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( RCSe + RMSe ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.2694610778443114, "obj2": 0.6755751689721854}, {"determining": "Min( ( DDR / ( Min( Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - Max( RMSe,MUR ) ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.688622754491018, "obj2": 0.15674267006310996}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.27522359631562565}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( ( MDR / ARS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( RMSe,( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.3790736666417873}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Max( Max( ( DDR - FirstVNF_RAM_Server ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( ARS - RRS ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ),FirstVNF_Mem ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( RMSe ,( RRSe + RMSe ) ) - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( ( DS / MUC ) + RRSe ) ) ) - ( Max( MUR,CS ) - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) )", "obj1": 0.7365269461077845, "obj2": 0.14804722649599655}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( Min( RRS ,DDR ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,( MLU * MUM ) ) ,( CS / MUR ) ) )", "obj1": 0.5129740518962076, "obj2": 0.4319782066037596}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.4146590691576831}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( Const + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( ( FirstVNF_RAM - ( ACS - PN ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RCSe ) ,Min( ( CS + ( MUR / ( MUM - RMSe ) ) ) ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( ( RRSe / MUC ) - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08306036036285493}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.028893918258566423}, {"determining": "( Min( Max( ( RRS / Max( Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / ( MUM / MUR ) ) )", "obj1": 0.7544910179640718, "obj2": 0.11843382060907158}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ACS - AMS ) )", "choosing": "( ( MUM / DS ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.31137724550898205, "obj2": 0.6428093173106322}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / MUR ) )", "obj1": 0.9580838323353293, "obj2": 0.019558848388036797}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.313373253493014, "obj2": 0.6392153992986026}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.40718562874251496, "obj2": 0.5125091458118591}, {"determining": "( Min( MRS ,FirstVNF_Mem ) * Max( ( ( RRS / ( MDR + FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server - RRS ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe - Min( ( Min( RMSe ,RRSe ) - MUR ) ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) - CS ) * ( RRSe / MUC ) )", "obj1": 0.43912175648702595, "obj2": 0.49101056401978865}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - BR ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / MLU ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.03293386411639426}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5187980242353106}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9241516966067864, "obj2": 0.03595945155333021}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.780439121756487, "obj2": 0.09587487562451945}, {"determining": "( ( PN / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( ( MUC * MLU ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ) ) * ( Const - ( ( Max( Min( ( ( Const + DDR ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( RMSe,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9261477045908184, "obj2": 0.033560157400142884}, {"determining": "Min( Min( ( MDR * Max( RRS,( Min( MDR ,RRS ) / CRS ) ) ) ,( ( Const - DDR ) / ( Max( RRS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( MUR + MUR ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUC ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,RRSe ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( ( Min( Min( MUR ,MLU ) ,RCSe ) - CS ) - ( MUC * MUR ) ) / ( ( MUR + MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9261477045908184, "obj2": 0.033560157400142884}, {"determining": "( ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( ( Min( Min( MUR ,MLU ) ,RCSe ) - CS ) - ( MUC * MUR ) ) / ( ( MUR + MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( ( ( ( MRS - Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( Min( ( RMSe + RRSe ) ,Max( MUC,MLU ) ) ,MUM ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( Const ,Const ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( Max( Max( MRS,Const ),ACS ) - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,MUC ) ) * MUR ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ARS ) / Min( ( MRS * FirstVNF_Mem ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / Min( RCSe ,RMSe ) ) ) / Max( ( ( Min( DS ,Max( RCSe,Min( DS ,RCSe ) ) ) * MUM ) * MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( ( RRS / ARS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU - ( MUR / CS ) ) / MLU ) / MUM ) + CS ) * ( DS / ( MUM + Min( RMSe ,Max( RRSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - Const ) + ( FirstVNF_RAM_Server + DDR ) ) * ( ( FirstVNF_CPU * ( MDR - FirstVNF_RAM ) ) / ( PN * BR ) ) ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server + RRS ) ) ,( Min( FirstVNF_Mem ,BR ) - ( FirstVNF_RAM_Server * Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( Min( RCSe ,( RMSe + ( Max( MUR,MUM ) + MUC ) ) ),RRSe ) + ( Min( MLU ,RRSe ) - ( Max( ( CS - RMSe ),DS ) + CS ) ) ),( ( ( MUM - MLU ) + ( MUM + CS ) ) / ( ( RCSe * RRSe ) / ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,RRS ) ,FirstVNF_CPU ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( MUM - RRSe ) + MUR ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) - ( Max( ( DDR / AMS ),FirstVNF_CPU_Server ) + MDR ) )", "choosing": "Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_Mem ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ACS ) / FirstVNF_CPU ) + Max( MRS,MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,( RMSe + MUC ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.27522359631562565}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "Min( ( MDR / ARS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( RMSe,( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.3790736666417873}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06394229478491806}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Max( Max( ( DDR - FirstVNF_RAM_Server ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( ARS - RRS ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ),FirstVNF_Mem ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( RMSe ,( RRSe + RMSe ) ) - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( ( DS / MUC ) + RRSe ) ) ) - ( Max( MUR,CS ) - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) )", "obj1": 0.7365269461077845, "obj2": 0.14804722649599655}, {"determining": "( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( Max( DS,CS ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * Max( MUR,DS ) ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( Min( RRS ,DDR ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,( MLU * MUM ) ) ,( CS / MUR ) ) )", "obj1": 0.5129740518962076, "obj2": 0.4319782066037596}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.4146590691576831}, {"determining": "( ( ARS + ( ( Max( Max( FirstVNF_Mem,( Max( MRS,RRS ) + ( FirstVNF_RAM + MRS ) ) ),BR ) - FirstVNF_CPU_Server ) * ( AMS - Min( FirstVNF_Mem_Server ,( PN * DDR ) ) ) ) ) / Min( Max( DDR,MRS ) ,Const ) )", "choosing": "Min( Max( MUC,RMSe ) ,Min( MUR ,( Max( ( Min( ( CS / MLU ) ,DS ) - Min( MUM ,( Max( RCSe,MUR ) - ( RMSe - DS ) ) ) ),( CS + CS ) ) - MUC ) ) )", "obj1": 0.3393213572854291, "obj2": 0.5955854664132855}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "Min( ( DDR / ( Min( Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - Max( RMSe,MUR ) ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.688622754491018, "obj2": 0.15674267006310996}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( Const + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( ( FirstVNF_RAM - ( ACS - PN ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RCSe ) ,Min( ( CS + ( MUR / ( MUM - RMSe ) ) ) ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( ( RRSe / MUC ) - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08306036036285493}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * Min( MLU ,CS ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.812375249500998, "obj2": 0.08174964956810087}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.40718562874251496, "obj2": 0.5125091458118591}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / ( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.028893918258566423}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( BR + RRS ) )", "choosing": "( ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Min( CS ,( ( MUM + ( MUM / RMSe ) ) / RMSe ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( ( MUR + MUR ) ,( CS / MUR ) ) )", "obj1": 0.437125748502994, "obj2": 0.4897628946387116}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5187980242353106}, {"determining": "( Const * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.030303351243039883}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9221556886227545, "obj2": 0.042478654949138654}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9520958083832335, "obj2": 0.02311467351108303}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( Min( ( ( MLU + MUC ) * ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) ,( Min( MUM ,MLU ) + MUM ) ),RRSe ) ) - ( RMSe / ( ( MUM + ( ( ( DS * RMSe ) - MUR ) - Min( ( MUC * RMSe ) ,( CS / RRSe ) ) ) ) - ( RRSe + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9241516966067864, "obj2": 0.03595945155333021}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.780439121756487, "obj2": 0.09587487562451945}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / MUR ) )", "obj1": 0.9580838323353293, "obj2": 0.019558848388036797}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - AMS ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( Min( DS ,CS ) + ( ( ( ( DS + DS ) + ( RRSe * RRSe ) ) / Max( MUM,MUM ) ) + CS ) ) ) ) )", "obj1": 0.9261477045908184, "obj2": 0.03352266892022963}, {"determining": "Min( ( ARS + DDR ) ,( ( ( FirstVNF_Mem + AMS ) + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),( MUR + ( RMSe - MUC ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.3313373253493014, "obj2": 0.6157655614362756}, {"determining": "( ( PN / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( ( MUC * MLU ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9201596806387226, "obj2": 0.05520550412342941}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.9560878243512974, "obj2": 0.01981044796785812}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( Min( ( MDR * Max( RRS,( Min( MDR ,RRS ) / CRS ) ) ) ,( ( Const - DDR ) / ( Max( RRS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( MUR + MUR ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( Min( Max( ( RRS / ( ( ( PN + FirstVNF_RAM ) / FirstVNF_RAM ) / MRS ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) - PN ) * MDR ) * ( RRS / ACS ) ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( MUC,( ( Min( CS ,RCSe ) - MUM ) + Min( RRSe ,( ( ( MUC - RCSe ) * Min( DS ,Max( RMSe,Min( MUM ,RMSe ) ) ) ) / Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) ) )", "obj1": 0.9920159680638723, "obj2": 0.003266558074660909}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( DDR / AMS ) / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( RRSe,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,Min( Const ,DDR ) ) ) ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( ( Min( Min( MUR ,MLU ) ,RCSe ) - CS ) - ( MUC * MUR ) ) / ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUC ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( ( Min( Min( MUR ,MLU ) ,RCSe ) - CS ) - ( MUC * MUR ) ) / ( ( MUR + MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.003826667033783966}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) - ( AMS + ( MRS * ( DDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( MUC,( ( ( CS * MLU ) - ( CS / ( MLU / RRSe ) ) ) + MLU ) )", "obj1": 0.7684630738522954, "obj2": 0.10748504247391953}, {"determining": "( ( ( ( MRS - Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( Min( ( RMSe + RRSe ) ,Max( MUC,MLU ) ) ,MUM ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,RRSe ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( Max( MDR,Min( ARS ,FirstVNF_RAM ) ) * ( Const - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - ( ( ( Max( Max( RMSe,MLU ),MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ACS ) / FirstVNF_CPU ) + Max( MRS,MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,( RMSe + MUC ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( MDR / ARS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( RMSe,( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.3790736666417873}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( Min( Const ,( Const / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.2702874559610068}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( ( Max( DS,CS ) * ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5109780439121756, "obj2": 0.42363821531214685}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( DDR / ( Min( Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - Max( RMSe,MUR ) ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.688622754491018, "obj2": 0.15674267006310996}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( Const + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( ( FirstVNF_RAM - ( ACS - PN ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RCSe ) ,Min( ( CS + ( MUR / ( MUM - RMSe ) ) ) ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( ( RRSe / MUC ) - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08306036036285493}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Const * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.030303351243039883}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.4146590691576831}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * Min( MLU ,CS ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.812375249500998, "obj2": 0.08174964956810087}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.40718562874251496, "obj2": 0.5125091458118591}, {"determining": "Min( ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( ( MLU / ( MUR - CS ) ),RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.9441117764471058, "obj2": 0.027099648428517933}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.27522359631562565}, {"determining": "( Min( FirstVNF_CPU ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUM,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10744758029331883}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5187980242353106}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( ( MUM + Min( RMSe ,RRSe ) ) / RCSe ) ) ) )", "obj1": 0.5169660678642715, "obj2": 0.4219937274418036}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9520958083832335, "obj2": 0.02311467351108303}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / MUR ) )", "obj1": 0.9580838323353293, "obj2": 0.019558848388036797}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,( MUC - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.780439121756487, "obj2": 0.09587487562451945}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( RRS / FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Const ) * FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( MUC / MLU ) * RRSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RRSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( RRS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / DDR ) * ARS ) ) ) )", "choosing": "( ( ( MUR + DS ) / ( RRSe - Min( MUR ,CS ) ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.0028894290891328116}, {"determining": "Min( Min( ( MDR * Max( RRS,( Min( MDR ,RRS ) / CRS ) ) ) ,( ( Const - DDR ) / ( Max( RRS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( MUR + MUR ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.001900434746226571}, {"determining": "( ( Max( Max( ARS,FirstVNF_RAM ),FirstVNF_Mem ) * Min( Min( ( ( Const - ( MRS - DDR ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,( ( ( RRSe - DS ) + ( MUC - Max( RCSe,RCSe ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( ( MLU / ( MUR - CS ) ) - ( MUC * MUR ) ) / ( ( MUR + MUR ) - ( MUR * RCSe ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.0037768001126424785}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( DDR / AMS ) / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( RRSe,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( ( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( Min( RCSe ,MUM ) ,( DS + RMSe ) ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,RRSe ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( ( ( MRS - Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( Min( ( RMSe + RRSe ) ,Max( MUC,MLU ) ) ,MUM ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,( FirstVNF_Mem_Server - Const ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR / RCSe ),RMSe ) / ( RCSe - MLU ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - Const ) + ( DDR * ( ( BR * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) ) ) - ( ( MDR + MRS ) + PN ) )", "choosing": "( Min( ( ( MLU * ( MUC - Max( MUC,RMSe ) ) ) * DS ) ,( MLU * MUC ) ) / ( ( ( Max( DS,RMSe ) + ( RCSe / DS ) ) / ( MUC - DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) / RRS ) - Min( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - Min( ( DDR / MRS ) ,FirstVNF_Mem ) ) ) ,PN ) )", "choosing": "( Max( MUC,( ( Max( RRSe,( RRSe - ( ( MLU * CS ) * Min( RCSe ,RRSe ) ) ) ) - RMSe ) + MUM ) ) * Max( Min( ( Max( DS,Min( MUR ,DS ) ) * RMSe ) ,MUR ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( MDR / Min( FirstVNF_CPU_Server ,( AMS + Max( MRS,FirstVNF_CPU ) ) ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / Max( CS,Min( RMSe ,( DS + RCSe ) ) ) ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( PN,( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( RCSe / Max( Min( DS ,RCSe ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MRS - FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ,Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RRSe * DS ) + ( ( ( ( Max( MUC,( RRSe / CS ) ) - MUM ) / DS ) - Max( ( ( ( MLU - MLU ) / RRSe ) - Min( MUM ,( MLU / MUR ) ) ),( ( ( DS - RCSe ) - MUC ) - CS ) ) ) * ( ( ( RRSe + MLU ) * MLU ) / ( MUR + MUR ) ) ) ) ,( ( MUM * CS ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( ( FirstVNF_Mem_Server / BR ) * Min( PN ,DDR ) ) )", "choosing": "( Max( ( DS + MUC ),Max( Min( ( ( RCSe / ( ( MLU + CS ) - RRSe ) ) + MUR ) ,Min( RMSe ,Max( ( RCSe * MUR ),( Max( MLU,MLU ) * MLU ) ) ) ),MUR ) ) * Min( ( ( ( ( ( Max( MUR,MUR ) - ( MUR / RRSe ) ) - ( ( RMSe * RMSe ) - MLU ) ) - MUR ) + Min( ( ( ( MLU + RMSe ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) + RCSe ) ,Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN - BR ) / ( BR * CRS ) ) ,( ( RRS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem + CRS ) ) )", "choosing": "Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) )", "choosing": "( ( CS - RMSe ) / ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( ( ( Min( CRS ,MDR ) + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( ( CS - RMSe ) / Max( Min( DS ,( MUR + ( MLU + MUR ) ) ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Min( ARS ,FirstVNF_RAM ) ) * ( Const - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - ( ( ( Max( Max( RMSe,MLU ),MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( Min( Const ,( Const / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.2702874559610068}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( MRS,RRS ) ,( DDR * Max( Max( DDR,AMS ),DDR ) ) ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( ( ( MUR + DS ) / ( ( RRSe * MLU ) - ( RCSe - RRSe ) ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.3770949219806928}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( ( Max( DS,CS ) * ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5109780439121756, "obj2": 0.42363821531214685}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( DDR / ( Min( Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - Max( RMSe,MUR ) ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.688622754491018, "obj2": 0.15674267006310996}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( Const + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( ( FirstVNF_RAM - ( ACS - PN ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( RMSe + RCSe ) ,Min( ( CS + ( MUR / ( MUM - RMSe ) ) ) ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( ( RRSe / MUC ) - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08306036036285493}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ACS ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ) )", "obj1": 0.5369261477045908, "obj2": 0.3936938397573721}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,( Max( RRSe,DS ) * ( DS * RCSe ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.5269461077844312, "obj2": 0.39859357784528976}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) ) )", "obj1": 0.5209580838323353, "obj2": 0.4146590691576831}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "Min( ( MDR / ARS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( RMSe,( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.3790736666417873}, {"determining": "( Const * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.030303351243039883}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MRS / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * Min( MLU ,CS ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.812375249500998, "obj2": 0.08174964956810087}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( MRS * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.40718562874251496, "obj2": 0.5125091458118591}, {"determining": "Min( ( Max( ARS,( RRS - FirstVNF_CPU ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,( Max( ( RMSe + RMSe ),DS ) * CS ) ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.27522359631562565}, {"determining": "( Min( FirstVNF_CPU ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUM,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10744758029331883}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3972055888223553, "obj2": 0.5187980242353106}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( MDR / FirstVNF_RAM ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,Min( Min( CS ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * MUM ) ) ) ,( Min( RRSe ,MLU ) * DS ) ) )", "obj1": 0.9680638722554891, "obj2": 0.018692687832025393}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( ( MRS - ( FirstVNF_RAM + Const ) ) * ( DDR - Max( ( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MUM - RRSe ) ) - ( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,( ( MUM + Min( RMSe ,RRSe ) ) / RCSe ) ) ) )", "obj1": 0.5169660678642715, "obj2": 0.4219937274418036}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.026234337244163325}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.09264285146216789}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - ( RMSe / MUR ) )", "obj1": 0.9580838323353293, "obj2": 0.019558848388036797}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6646706586826348, "obj2": 0.20453206113885689}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * BR ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MLU ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.780439121756487, "obj2": 0.09418941909505253}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9520958083832335, "obj2": 0.02311467351108303}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - DS )", "obj1": 0.9481037924151696, "obj2": 0.0244802554363093}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( CS + RCSe ) ) ) ) ) ) ) - ( RMSe / ( MUC - Max( RCSe,( RRSe - MLU ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.025086289090108835}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( RRS / FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Const ) * FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( MUC / MLU ) * RRSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RRSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( DDR / AMS ) / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( RRSe,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( ( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( Min( RCSe ,MUM ) ,( DS + RMSe ) ) * MUR ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( ( MRS - Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( Min( ( RMSe + RRSe ) ,Max( MUC,MLU ) ) ,MUM ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,RRSe ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ACS ) / FirstVNF_CPU ) + Max( MRS,MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,( RMSe + MUC ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Max( Min( MRS ,ARS ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem + FirstVNF_RAM ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MUM - MUR ) + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( ( ( Min( CRS ,MDR ) + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( ( CS - RMSe ) / Max( Min( DS ,( MUR + ( MLU + MUR ) ) ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,( RRS + RRS ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN - Const ) )", "choosing": "( ( ( ( MUM - MLU ) + ( MUM + CS ) ) + Min( MUC ,Min( ( ( ( Min( MUM ,RMSe ) / Max( MUR,RCSe ) ) - ( ( RRSe - MUC ) / Min( DS ,MLU ) ) ) * MUM ) ,Min( MUC ,DS ) ) ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( Min( MLU ,( MUM - CS ) ) + ( DS * RMSe ) ) ) )", "obj1": 0.6087824351297405, "obj2": 0.29077960135882475}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( Min( Const ,( Const / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.6147704590818364, "obj2": 0.2702874559610068}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "Min( ( MDR / ARS ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ( ( ACS - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + Min( MUC ,Min( ( RMSe + Min( ( ( RRSe - RRSe ) / Min( MUR ,RRSe ) ) ,( MUR * ( DS + MUC ) ) ) ) ,Min( MUC ,DS ) ) ) ) / Max( RMSe,( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.5449101796407185, "obj2": 0.3790736666417873}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( MRS,RRS ) ,( DDR * Max( Max( DDR,AMS ),DDR ) ) ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( ( ( MUR + DS ) / ( ( RRSe * MLU ) - ( RCSe - RRSe ) ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.5528942115768463, "obj2": 0.3770949219806928}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "( ( DDR - Max( ACS,( MRS - FirstVNF_Mem_Server ) ) ) * ( ACS - ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( DS - RRSe ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4530938123752495, "obj2": 0.479170686301201}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( ( ( ( ARS + MDR ) + BR ) + ( ACS - FirstVNF_Mem_Server ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( Min( RRSe ,MUC ) * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08086523147115926}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Const * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.030303351243039883}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_Mem_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6436344598902762}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) )", "obj1": 0.6107784431137725, "obj2": 0.27522359631562565}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( Min( FirstVNF_CPU ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUM,( ( ( RCSe - Min( RCSe ,( ( MUM / DS ) * MUM ) ) ) * ( RRSe + RRSe ) ) + MLU ) )", "obj1": 0.7644710578842315, "obj2": 0.10744758029331883}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "Min( ( Max( ARS,( RRS - FirstVNF_CPU ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,( Max( ( RMSe + RMSe ),DS ) * CS ) ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7325349301397206, "obj2": 0.11987700468278568}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.026234337244163325}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6646706586826348, "obj2": 0.20453206113885689}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9520958083832335, "obj2": 0.02311467351108303}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,MUC ) - DS )", "obj1": 0.9481037924151696, "obj2": 0.0244802554363093}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( RRS / FirstVNF_RAM ) / ( Max( FirstVNF_Mem,Const ) * FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( MUC / MLU ) * RRSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RRSe ) ) )", "obj1": 0.8143712574850299, "obj2": 0.08075561779735733}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( CS + RCSe ) ) ) ) ) ) ) - ( RMSe / ( MUC - Max( RCSe,( RRSe - MLU ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.025086289090108835}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / AMS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( MRS + RRS ) ) ,( ( FirstVNF_CPU_Server * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RMSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( ( DDR / AMS ) / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( RRSe,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - ( ( FirstVNF_CPU_Server * ( BR * MDR ) ) / AMS ) ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - Min( ( MUR / MUM ) ,RMSe ) ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( DS / MUC ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( FirstVNF_CPU_Server + AMS ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,( MLU / ( MUR - CS ) ) ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) - Min( ( MRS + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) * ( DDR - Max( ACS,FirstVNF_Mem ) ) ) / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( ( Const - ARS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe - CS ) ,Max( MUC,Max( DS,Min( Min( ( RMSe + RRSe ) ,Max( MUC,MLU ) ) ,MUM ) ) ) ) ) - Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( MDR,Min( ARS ,FirstVNF_RAM ) ) * ( Const - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - ( ( ( Max( Max( RMSe,MLU ),MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ACS ) / FirstVNF_CPU ) + Max( MRS,MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,( RMSe + MUC ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) / FirstVNF_CPU ) + Max( Max( RRS,( FirstVNF_Mem_Server / FirstVNF_CPU ) ),MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,RMSe ) + ( ( ( CS * CS ) / MUM ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU + AMS ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU + RRS ) ) ) )", "choosing": "( ( Max( ( ( Min( CS ,MUC ) / MLU ) + CS ),RRSe ) + RMSe ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Max( ( ( ARS * Max( CRS,FirstVNF_Mem_Server ) ) / FirstVNF_CPU ),( Const * ( CRS + Min( MRS ,PN ) ) ) ) ) - ( Min( BR ,AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * CS ) / ( CS / MUR ) ) + Max( ( CS / ( Min( Min( Max( MUR,MUC ) ,MUM ) ,Min( MUR ,MLU ) ) - ( ( MLU - Max( MLU,Min( MUM ,MUC ) ) ) / CS ) ) ),( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) / ( RCSe / CS ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Max( ( MUM - MUR ),( ( Min( Min( RCSe ,MUM ) ,RCSe ) * MUR ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,( RRSe + RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MRS ,ARS ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem + FirstVNF_RAM ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MUM - MUR ) + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.5968063872255489, "obj2": 0.25251264454880357}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.376035884898696}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "( ( DDR - Max( ACS,( MRS - FirstVNF_Mem_Server ) ) ) * ( ACS - ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( DS - RRSe ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4530938123752495, "obj2": 0.479170686301201}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem / ( RRS - ( ARS - FirstVNF_CPU ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( DS / DS ),DS ) ,RRSe ) ) )", "obj1": 0.8163672654690619, "obj2": 0.07841945888011148}, {"determining": "( Min( Max( ( RRS / Max( FirstVNF_Mem,FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUC / MUR ) + RMSe ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7405189620758483, "obj2": 0.11910573899328965}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Const * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( RRSe ,CS ) ,( CS / MUR ) ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.030303351243039883}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07855818460488025}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( ( ACS - MDR ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( RMSe - ( MUM * CS ) ) + MUR ) * MUC ) )", "obj1": 0.7704590818363274, "obj2": 0.09864880227976565}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "Min( ( Max( ARS,( RRS - FirstVNF_CPU ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,( Max( ( RMSe + RMSe ),DS ) * CS ) ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( MUC ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Max( RMSe,RCSe ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.026234337244163325}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6646706586826348, "obj2": 0.20453206113885689}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9520958083832335, "obj2": 0.02311467351108303}, {"determining": "( Max( Max( ARS,( ( Max( FirstVNF_RAM_Server,CRS ) - ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,Min( DDR ,FirstVNF_RAM ) ) ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * MUR ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( MUM * MUR ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( ( ( ( ARS + MDR ) + BR ) + ( ACS - FirstVNF_Mem_Server ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( Min( RRSe ,MUC ) * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7864271457085829, "obj2": 0.08086523147115926}, {"determining": "( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( CS + RCSe ) ) ) ) ) ) ) - ( RMSe / ( MUC - Max( RCSe,( RRSe - MLU ) ) ) ) )", "obj1": 0.9461077844311377, "obj2": 0.024254696399749517}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - FirstVNF_Mem_Server ) ) + ( PN - ( ( FirstVNF_CPU * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( ( MUM * MUM ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7904191616766467, "obj2": 0.08009788837922269}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( CS + RCSe ) ) ) ) ) ) ) - ( RMSe / ( MUC - Max( RCSe,( RRSe - MLU ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.025086289090108835}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( MRS + RRS ) ) ,( ( FirstVNF_CPU_Server * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RMSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( ( AMS * FirstVNF_Mem ) * MRS ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( RRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( DS / MUC ) ) - ( RMSe / ( MUC - Max( RCSe,( RRSe - MLU ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.025927824718058393}, {"determining": "( Min( Max( ( RRS / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( RRSe,( MUM + Min( Min( RCSe ,MUM ) ,RMSe ) ) )", "obj1": 0.7764471057884231, "obj2": 0.09755727459198164}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / AMS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( FirstVNF_CPU_Server + AMS ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,( MLU / ( MUR - CS ) ) ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - ( ( FirstVNF_CPU_Server * ( BR * MDR ) ) / AMS ) ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - Min( ( MUR / MUM ) ,RMSe ) ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( DS / MUC ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( ( ( Min( CRS ,MDR ) + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( ( CS - RMSe ) / Max( Min( DS ,( MUR + ( MLU + MUR ) ) ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Min( ARS ,FirstVNF_RAM ) ) * ( Const - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - ( ( ( Max( Max( RMSe,MLU ),MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ACS ) / FirstVNF_CPU ) + Max( MRS,MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,( RMSe + MUC ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( AMS - ( FirstVNF_Mem_Server + ( ( ( MRS + ( Const - AMS ) ) * Const ) / PN ) ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( FirstVNF_CPU * BR ) ) - ( ( AMS * PN ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( PN + ( Const + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) / Min( DS ,Min( RRSe ,( RRSe + MUM ) ) ) ) * ( Max( CS,Max( MUR,MLU ) ) * Min( ( ( RRSe + CS ) + ( MUM - MUR ) ) ,( Max( MUR,MLU ) + Max( RMSe,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RMSe ,MUM ) ) - MLU ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,( RRSe + RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.5968063872255489, "obj2": 0.25251264454880357}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,( Max( FirstVNF_Mem,Const ) * FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6227544910179641, "obj2": 0.2400122910852963}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "( ( DDR - Max( ACS,( MRS - FirstVNF_Mem_Server ) ) ) * ( ACS - ( Min( PN ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) / PN ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( DS - RRSe ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4530938123752495, "obj2": 0.479170686301201}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem / ( RRS - ( ARS - FirstVNF_CPU ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( DS / DS ),DS ) ,RRSe ) ) )", "obj1": 0.8163672654690619, "obj2": 0.07841945888011148}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07855818460488025}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem + FirstVNF_RAM ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) * ( Const - ( ( Max( Min( ( ( Const + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Max( MUR,RCSe ) ) - ( RMSe / ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( ( ( MUM - MUR ) + RCSe ) ,( CS / MUR ) ) ) ) )", "obj1": 0.9301397205588823, "obj2": 0.03020482006442948}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "Min( ( Max( ARS,( RRS - FirstVNF_CPU ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,( Max( ( RMSe + RMSe ),DS ) * CS ) ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Max( RMSe,RCSe ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.026234337244163325}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6646706586826348, "obj2": 0.20453206113885689}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( MRS - ( FirstVNF_RAM + Const ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( MUM * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.20136241976872735}, {"determining": "( Max( Max( ARS,( ( Max( FirstVNF_RAM_Server,CRS ) - ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,Min( DDR ,FirstVNF_RAM ) ) ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * MUR ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( MUM * MUR ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / AMS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( ( AMS * FirstVNF_Mem ) * MRS ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( RRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( DS / MUC ) ) - ( RMSe / ( MUC - Max( RCSe,( RRSe - MLU ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.025927824718058393}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( FirstVNF_Mem_Server * AMS ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Max( RMSe,MUR ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RMSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,Max( ( RRS - ( DDR - DDR ) ),Max( FirstVNF_RAM,( FirstVNF_Mem_Server / Const ) ) ) ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + Max( Max( RMSe,RCSe ),( RCSe + MUM ) ) ),( ( MUC + MUR ) * ( DS / MUC ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( FirstVNF_CPU_Server + AMS ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,( MLU / ( MUR - CS ) ) ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( Max( Min( ( ( FirstVNF_Mem + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_Mem / ( ( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) * FirstVNF_RAM ) * AMS ) ) )", "choosing": "( Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - MLU ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( Min( MRS ,ARS ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem + FirstVNF_RAM ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MUM - MUR ) + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( ( ( Min( CRS ,MDR ) + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( ( CS - RMSe ) / Max( Min( DS ,( MUR + ( MLU + MUR ) ) ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Min( ARS ,FirstVNF_RAM ) ) * ( Const - ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - ( ( ( Max( Max( RMSe,MLU ),MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( ( ( ( ( Const / CRS ) * ACS ) / FirstVNF_CPU ) + Max( MRS,MDR ) ),PN ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,( RMSe + MUC ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( Min( ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,AMS ) - PN ) ,( MDR + DDR ) ) ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR * MUR ) / ( RCSe / CS ) ) / ( ( Min( CS ,MUM ) - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,Min( ( CS / RMSe ) ,DS ) ) / ( ( ( RCSe * ( MLU * MUM ) ) + Min( MUC ,RMSe ) ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) / ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( DDR / AMS ) ) ) / ( MDR / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_RAM - ACS ) ) ) - FirstVNF_Mem ) ) * FirstVNF_CPU_Server )", "choosing": "Min( MUR ,( ( ( MLU - RMSe ) + RMSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( FirstVNF_RAM,( FirstVNF_RAM + CRS ) ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ( ACS + ACS ) ) + ( PN - ( ( AMS * Const ) * BR ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( DS / DS ) / ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - ( ( BR * FirstVNF_RAM ) * ( MDR / MDR ) ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Max( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + ( MLU + RRSe ) ) ) ),RMSe ) / DS ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( MRS + ACS ) ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( Max( MRS,CRS ) + MDR ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( ( ( ( MUR / RRSe ) - DS ) - MLU ) - DS ) + MLU ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( Max( FirstVNF_RAM_Server,BR ) ,( ( MDR + Min( ( FirstVNF_RAM - ( RRS / ( FirstVNF_CPU / MRS ) ) ) ,FirstVNF_CPU ) ) + PN ) ) )", "choosing": "( Max( MUC,( Max( MUC,( ( DS - RMSe ) + MUM ) ) * Max( Min( RMSe ,MUR ),DS ) ) ) * Max( ( Min( ( RCSe * DS ) ,( MLU * MUC ) ) / ( Min( MUC ,MUM ) - Min( RRSe ,RCSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( RRS / PN ) - ACS ) ,( ( CRS / DDR ) + BR ) ) ,( Min( ( ( Min( AMS ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server * ACS ) ) + Min( ( CRS * BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( AMS * AMS ) + ( ARS * FirstVNF_CPU ) ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( FirstVNF_CPU - AMS ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( RMSe * ( Max( CS,Max( RCSe,( MUR * RCSe ) ) ) / MUR ) ) - DS ) ) / Max( DS,Min( ( ( ( ( MUR * MUR ) / ( RCSe / ( MLU - RRSe ) ) ) / ( ( MUM - MUR ) + ( MUM * CS ) ) ) * ( Min( ( CS + RMSe ) ,( MLU - MUM ) ) / ( ( RMSe / MUC ) * ( MUM / MUM ) ) ) ) ,( ( MUR * ( MLU - MUM ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Const,FirstVNF_Mem_Server ) - ( ( MRS + ( FirstVNF_CPU / ACS ) ) * ( MDR - BR ) ) ) ,( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( AMS - ACS ) ) - ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) + ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) - Max( PN,Min( FirstVNF_CPU ,( FirstVNF_CPU * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( Min( ( DS * MUR ) ,Max( MUR,MLU ) ),( ( MUM + RCSe ) / ( MUR - MUR ) ) ) * ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,Min( ( FirstVNF_Mem_Server / PN ) ,MDR ) ) - ( ( Min( CRS ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / ( MDR * DDR ) ) ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUM + Min( RRSe ,( MUM - ( MUC / MUR ) ) ) ) - MUR ) / ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RMSe ,MUM ) ) - MLU ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.5968063872255489, "obj2": 0.25251264454880357}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,( Max( FirstVNF_Mem,Const ) * FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6227544910179641, "obj2": 0.2400122910852963}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "( ( ( PN / ( DDR * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RMSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.46698824816926554}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.45708582834331335, "obj2": 0.45315812962904545}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem / ( RRS - ( ARS - FirstVNF_CPU ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( DS / DS ),DS ) ,RRSe ) ) )", "obj1": 0.8163672654690619, "obj2": 0.07841945888011148}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07855818460488025}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.026234337244163325}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "Min( ( Max( ARS,( RRS - FirstVNF_CPU ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,( Max( ( RMSe + RMSe ),DS ) * CS ) ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + ( RMSe + RRSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8562874251497006, "obj2": 0.06683854874486574}, {"determining": "( Max( Max( ARS,( ( Max( FirstVNF_RAM_Server,CRS ) - ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,Min( DDR ,FirstVNF_RAM ) ) ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * MUR ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( MUM * MUR ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6646706586826348, "obj2": 0.20453206113885689}, {"determining": "( Max( MDR,( ( ( RRS + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) * Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUR ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( ( MLU * MUM ) * Min( ( CS / RCSe ) ,Min( RRSe ,( RCSe / RRSe ) ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6686626746506986, "obj2": 0.2007610680383176}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( MRS - ( FirstVNF_RAM + Const ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( MUM * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.20136241976872735}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / AMS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,( DS - MUC ) ) ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.025688402076163866}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Max( RMSe,RCSe ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( FirstVNF_Mem_Server * AMS ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Max( RMSe,MUR ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RMSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - ( Max( DS,RMSe ) + ( RCSe / DS ) ) ) ) ) )", "obj1": 0.6626746506986028, "obj2": 0.20783965332482657}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( FirstVNF_CPU_Server + AMS ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( ( Const * ACS ) / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( RRSe ,( MLU / ( MUR - CS ) ) ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,Max( ( RRS - ( DDR - DDR ) ),Max( FirstVNF_RAM,( FirstVNF_Mem_Server / Const ) ) ) ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + Max( Max( RMSe,RCSe ),( RCSe + MUM ) ) ),( ( MUC + MUR ) * ( DS / MUC ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( Max( Min( ( ( FirstVNF_Mem + DDR ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / ( ( ( MUM * ( MUM + RCSe ) ) / MUM ) * RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( Max( Min( ( ( FirstVNF_Mem + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,( RRSe + RRSe ) ) * CS ) / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( MRS ,ARS ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem + FirstVNF_RAM ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR - CS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MUM - MUR ) + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) * ( FirstVNF_Mem_Server / ( PN + MRS ) ) ) * ( ( Max( ( ( Min( CRS ,MDR ) + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ),( DDR * FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUM - DS ) / Max( Min( CS ,MUC ),( ( ( CS - RMSe ) / Max( Min( DS ,( MUR + ( MLU + MUR ) ) ),( Max( MUC,( MUC / MLU ) ) / MUC ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / ( MDR * DDR ) ) ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) / ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,Min( ( FirstVNF_Mem_Server / PN ) ,MDR ) ) - ( ( Min( CRS ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / ( MDR * DDR ) ) ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( MUM + Min( RRSe ,( MUM - ( MUC / MUR ) ) ) ) - MUR ) / ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.5968063872255489, "obj2": 0.25251264454880357}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6606786427145709, "obj2": 0.19522738066721143}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ) * ( Min( Const ,ARS ) * PN ) )", "choosing": "( Max( ( CS * Max( ( ( RCSe + DS ) / RRSe ),( CS + ( ( ( RMSe + RRSe ) + ( RCSe + MUC ) ) - ( MUR + MUC ) ) ) ) ),Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( CS - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.4870259481037924, "obj2": 0.42690960450580073}, {"determining": "( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( ( ( FirstVNF_CPU / ACS ) / RRS ) / FirstVNF_CPU ) ) ,AMS ) ) )", "choosing": "Max( MUC,( CS / Max( ( RCSe + ( MUC - MUR ) ),( ( Min( ( DS - MUC ) ,DS ) * CS ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12484040948544407}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,( Max( FirstVNF_Mem,Const ) * FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6227544910179641, "obj2": 0.2400122910852963}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "( ( ( PN / ( DDR * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RMSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.46698824816926554}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),FirstVNF_Mem ) * ( DDR / DDR ) )", "choosing": "( ( ( MUC * MUR ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6668970759790878}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / ( CRS - MDR ) ) ) / ( ( ( ARS + Min( ( ( FirstVNF_RAM * Const ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / Min( ( BR + ARS ) ,Const ) ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( FirstVNF_CPU + DDR ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe / ( MLU / MUM ) ) ,DS ) / RMSe ) ) / Max( Min( ( CS + RCSe ) ,RRSe ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.44510978043912175, "obj2": 0.48573665998893517}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem / ( RRS - ( ARS - FirstVNF_CPU ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( DS / DS ),DS ) ,RRSe ) ) )", "obj1": 0.8163672654690619, "obj2": 0.07841945888011148}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.46107784431137727, "obj2": 0.4498132152989525}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07855818460488025}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38922155688622756, "obj2": 0.5190005154219913}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( FirstVNF_CPU_Server - PN ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( ( RCSe + ( ( MUC / DS ) * CS ) ) ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.026234337244163325}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( FirstVNF_CPU_Server / Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / MUR ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.43313373253493015, "obj2": 0.4880921903184884}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( FirstVNF_RAM_Server * MDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,( ( DS / RMSe ) + ( DS * RMSe ) ) ) - MUC ) + Max( RCSe,MUR ) )", "obj1": 0.38323353293413176, "obj2": 0.5250476503642176}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,( PN / BR ) ) ,( Max( PN,FirstVNF_CPU_Server ) * ACS ) ) ) * ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( MUC - Max( ( ( DS - MLU ) * MUC ),( ( MUC * Max( MLU,RRSe ) ) + ( DS * RMSe ) ) ) ) ) + ( ( RRSe - RCSe ) * ( MUM / ( MUM + RCSe ) ) ) ) + ( ( MUM / DS ) * MUM ) )", "obj1": 0.3073852295409182, "obj2": 0.6332834872571612}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + ( RMSe + RRSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8562874251497006, "obj2": 0.06683854874486574}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( ( Min( RMSe ,CS ) * CS ) - ( MUM - MUC ) ) ) ) - ( DS - MUC ) )", "obj1": 0.9520958083832335, "obj2": 0.020896266967580557}, {"determining": "( ( DDR - Max( ACS,( MRS - Min( ( RRS - RRS ) ,ACS ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( ( RRSe - RMSe ) + MUC ) * ( MUM - CS ) ) ,( ( Min( MUC ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,MUM ) ) - ( RCSe + RMSe ) )", "obj1": 0.4311377245508982, "obj2": 0.48912594010550076}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Max( RMSe,RCSe ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.45708582834331335, "obj2": 0.45315812962904545}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6392466716678493}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,( DS - MUC ) ) ) ) ) ) ) )", "obj1": 0.9421157684630739, "obj2": 0.025688402076163866}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "( Max( Max( ARS,( ( Max( FirstVNF_RAM_Server,CRS ) - ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,Min( DDR ,FirstVNF_RAM ) ) ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * MUR ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( MUM * MUR ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6367662877045321}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / AMS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( ( Max( Min( FirstVNF_RAM_Server ,CRS ),CRS ) / ( ( MRS * ACS ) + RRS ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MLU ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( RMSe - MUM ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,( FirstVNF_RAM_Server + BR ) ) ) ) ,( ( Const - DDR ) / ( FirstVNF_CPU_Server + AMS ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( ( Const * ACS ) / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( RRSe ,( MLU / ( MUR - CS ) ) ) * MUC ) - DS ) ) / Max( DS,( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + Max( Max( RMSe,RCSe ),( RCSe + MUM ) ) ),( ( MUC + MUR ) * ( DS / MUC ) ) ) - DS ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( FirstVNF_Mem + ( AMS / ACS ) ) + BR ),( Max( Min( ( ( FirstVNF_Mem + MRS ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - ( RRSe - CS ) ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( Max( Min( ( MDR + ( MRS + RRS ) ) ,( ( FirstVNF_CPU_Server * ACS ) / FirstVNF_CPU ) ),( FirstVNF_RAM - ( Min( ( MDR + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / ( FirstVNF_CPU / RRS ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( ( CS - DS ) / DS ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,( RRS / ( FirstVNF_CPU / MRS ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,( MLU + MUC ) ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( DDR - ( ( CRS * ACS ) * ARS ) ) + BR ),( Max( Min( ( ( FirstVNF_Mem + DDR ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( ( Max( RCSe,DS ) - MUC ) ,CS ) ,DS ) ) + DS ) / Max( DS,( MLU / ( ( ( MUM * ( MUM + RCSe ) ) / MUM ) * RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( ( RRS - Min( CRS ,DDR ) ) + ( CRS - ( ( ( ( ( BR + BR ) + ARS ) + ( PN - Max( ( FirstVNF_Mem_Server / ACS ),ACS ) ) ) + ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) + Const ) ) )", "choosing": "( ( CS - RMSe ) / ( ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RMSe ,MUM ) ) - MLU ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( Min( DDR ,PN ) - ( ( ( FirstVNF_CPU / MRS ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,RRSe ) ,RCSe ) ,RCSe ) - ( Min( Max( RRSe,RCSe ) ,DS ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( Min( ( Const + MRS ) ,( PN + ( Const + MDR ) ) ) ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / ( MDR * DDR ) ) ) + ( MRS / AMS ) ) ) ,( ARS - BR ) ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) / ( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.5968063872255489, "obj2": 0.25251264454880357}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ) * ( Min( Const ,ARS ) * PN ) )", "choosing": "( Max( ( CS * Max( ( ( RCSe + DS ) / RRSe ),( CS + ( ( ( RMSe + RRSe ) + ( RCSe + MUC ) ) - ( MUR + MUC ) ) ) ) ),Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( CS - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.4870259481037924, "obj2": 0.42690960450580073}, {"determining": "( ( ( PN / ( DDR * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RMSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.46698824816926554}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,BR ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * ( ( ( RMSe - MUM ) / MLU ) * MUM ) ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7245508982035929, "obj2": 0.12260151294437292}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6606786427145709, "obj2": 0.19522738066721143}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( ( ( ( Const + AMS ) + BR ) + Const ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - ( Min( Max( MRS,RRS ) ,FirstVNF_CPU ) / Const ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RRSe ) ),RCSe ) ) ) ) )", "obj1": 0.42714570858283435, "obj2": 0.4852694923018432}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6706586826347305, "obj2": 0.19035312782200842}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,PN ) ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * MUR ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) / Max( MUM,( MUR / RRSe ) ) )", "obj1": 0.6167664670658682, "obj2": 0.23990183548384295}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),FirstVNF_Mem ) * ( DDR / DDR ) )", "choosing": "( ( ( MUC * MUR ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6668970759790878}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5583680585887421}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem / ( RRS - ( ARS - FirstVNF_CPU ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + Min( Max( ( DS / DS ),DS ) ,RRSe ) ) )", "obj1": 0.8163672654690619, "obj2": 0.07841945888011148}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.46107784431137727, "obj2": 0.4498132152989525}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07855818460488025}, {"determining": "( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( PN / ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( ( DS - RCSe ) - RCSe ) ,( ( MLU / MUC ) / ( MUM + MUM ) ) ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38323353293413176, "obj2": 0.5177889863443077}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( Min( ACS ,PN ) - Min( FirstVNF_Mem ,Max( Max( Max( ACS,FirstVNF_CPU_Server ),AMS ),( MDR + ARS ) ) ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / ( DS * MUM ) ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - ( RRSe / Max( ( RMSe / MUM ),MLU ) ) ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7445109780439122, "obj2": 0.11125034717299613}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( Max( BR,PN ) - Min( ARS ,FirstVNF_Mem ) ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( Max( ( RRS / ( ( Min( DDR ,MRS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) / Min( DS ,MUM ) ) ) - ( ( RMSe + RMSe ) + ( MLU + MUM ) ) )", "obj1": 0.93812375249501, "obj2": 0.028120072482819784}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( Min( Max( ( RRS / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / MUC ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7744510978043913, "obj2": 0.09274467749382441}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6407185628742516, "obj2": 0.2164501287315782}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Max( Max( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ),( ACS + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / ( RRSe * CS ) ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6331588132162181}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6392466716678493}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( RCSe / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8562874251497006, "obj2": 0.0657504960657448}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( ( Min( RMSe ,CS ) * CS ) - ( MUM - MUC ) ) ) ) - ( DS - MUC ) )", "obj1": 0.9520958083832335, "obj2": 0.020896266967580557}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( RRS * MRS ) ) ) ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( MLU / ( ( MUM - RMSe ) - CS ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.02532256534341703}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.45708582834331335, "obj2": 0.45315812962904545}, {"determining": "( Max( MDR,( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / ( DDR + ( FirstVNF_Mem + DDR ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( FirstVNF_CPU,( MRS / Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * Min( MLU ,( MUR - RCSe ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * Max( RCSe,RCSe ) ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Min( Min( MDR ,AMS ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( ( DS / RMSe ) + ( Max( MLU,RMSe ) * RMSe ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7345309381237525, "obj2": 0.11778670775719229}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( MDR / FirstVNF_Mem ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Max( RMSe,RCSe ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7305389221556886, "obj2": 0.1194407576690098}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,ARS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( RRSe * ( ( RMSe / ( MUM + Max( RMSe,RMSe ) ) ) / RMSe ) ) ) ) - ( MLU * MLU ) )", "obj1": 0.9560878243512974, "obj2": 0.017848165734005574}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / AMS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / MRS ) ) ),Min( Max( ARS,( Max( RRS,( DDR + FirstVNF_Mem_Server ) ) + MRS ) ) ,AMS ) ) * ( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem + MRS ) ) - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_Mem_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),( MUR * ( RRSe * Min( ( ( RMSe - RCSe ) + ( MUR - RMSe ) ) ,( MUM + ( MUC - MUC ) ) ) ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.9540918163672655, "obj2": 0.019606813939012355}, {"determining": "Min( Min( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + RCSe ),( Max( ( MUR + ( RMSe * MUR ) ),RMSe ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - ( ( BR + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ARS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( Min( ( ( RCSe * CS ) + MUR ) ,RCSe ) * MUC ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9900199600798403, "obj2": 0.00369786710604474}, {"determining": "Min( ( Max( Min( FirstVNF_RAM_Server ,CRS ),CRS ) / ( ( MRS * ACS ) + RRS ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ARS + BR ),Min( Max( MDR,RRS ) ,AMS ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( Max( ( ( ( ( RMSe - MLU ) / MLU ) * MUM ) + RCSe ),( ( MUC + MUR ) * ( RMSe - MUM ) ) ) - DS ) ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9880239520958084, "obj2": 0.004579512425782856}, {"determining": "Min( Min( Max( Min( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ARS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ),MRS ) ,( ( Const - DDR ) / ( Max( ACS,( ( Max( FirstVNF_Mem_Server,MRS ) - AMS ) / MRS ) ) + FirstVNF_RAM_Server ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,ARS ) ) + Max( ( ( FirstVNF_Mem + ( AMS / ACS ) ) + BR ),( Max( Min( ( ( FirstVNF_Mem + DDR ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_Mem ) ),MDR ) * ARS ) ) ) )", "choosing": "( ( Max( MUC,Min( Min( MUR ,CS ) ,DS ) ) + DS ) / Max( DS,( Min( RRSe ,MLU ) / ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ) ) ) )", "obj1": 0.9960079840319361, "obj2": 0.001087305169356064}, {"determining": "( Max( Max( Min( ( MDR + ( MRS + RRS ) ) ,( ( FirstVNF_CPU_Server * ACS ) / FirstVNF_CPU ) ),( FirstVNF_RAM - ( Min( ( MDR + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / ( FirstVNF_CPU / RRS ) ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( ( CS - DS ) / DS ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}], "23": [{"determining": "( Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,PN ) - ( ( ( FirstVNF_CPU / MRS ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,RRSe ) ,RCSe ) ,RCSe ) - ( Min( Max( RRSe,RCSe ) ,DS ) - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "( Max( MDR,( DDR * Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.592814371257485, "obj2": 0.24687262951206632}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ) * ( Min( Const ,ARS ) * PN ) )", "choosing": "( Max( ( CS * Max( ( ( RCSe + DS ) / RRSe ),( CS + ( ( ( RMSe + RRSe ) + ( RCSe + MUC ) ) - ( MUR + MUC ) ) ) ) ),Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( CS - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.4870259481037924, "obj2": 0.42690960450580073}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - MUC ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7065868263473054, "obj2": 0.13838331006955032}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6606786427145709, "obj2": 0.19522738066721143}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.42714570858283435, "obj2": 0.4814227550549338}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6706586826347305, "obj2": 0.19035312782200842}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,PN ) ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * MUR ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) / Max( MUM,( MUR / RRSe ) ) )", "obj1": 0.6167664670658682, "obj2": 0.23990183548384295}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( Max( ( RRS / CRS ),( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( MUM - RRSe ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07790940950171005}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( Min( Min( Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( BR / ARS ) ) ,AMS ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( RRSe - MUC ) )", "obj1": 0.7245508982035929, "obj2": 0.12157056493504766}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + ( ACS - AMS ) ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( DDR ,AMS ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( MUR ,Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * ( MUR / MUC ) ) ) ) ,( Min( RRSe ,MLU ) * ( MLU - ( ( MUM + MUC ) + Max( RMSe,RRSe ) ) ) ) ) ) + Min( MUC ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + RCSe ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.47305389221556887, "obj2": 0.4361499578166896}, {"determining": "( ( ( PN / ( DDR * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RMSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.46698824816926554}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5536475162431561}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),( PN * ( Max( FirstVNF_CPU,MDR ) * FirstVNF_RAM ) ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS / RMSe ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( RRSe / RRSe ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.281437125748503, "obj2": 0.6599723779496603}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.46107784431137727, "obj2": 0.4498132152989525}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( PN / ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( ( DS - RCSe ) - RCSe ) ,( ( MLU / MUC ) / ( MUM + MUM ) ) ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38323353293413176, "obj2": 0.5177889863443077}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),FirstVNF_Mem ) * ( DDR / DDR ) )", "choosing": "( ( ( MUC * MUR ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6668970759790878}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( FirstVNF_CPU_Server / Max( ( Min( FirstVNF_Mem ,( ARS - BR ) ) * MDR ),ACS ) )", "choosing": "( ( Min( ( ( Min( ( DS - MUC ) ,DS ) * CS ) / ( MUM - ( RCSe + CS ) ) ) ,Min( MUR ,MUM ) ) - ( ( ( DS - CS ) + ( MUM - RRSe ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) ) ) + ( ( Max( ( CS + MUM ),MUC ) + MUC ) - Max( ( CS * RRSe ),( CS / MUC ) ) ) )", "obj1": 0.42115768463073855, "obj2": 0.4939851180997332}, {"determining": "( Min( ACS ,PN ) - Min( FirstVNF_Mem ,Max( Max( Max( ACS,FirstVNF_CPU_Server ),AMS ),( MDR + ARS ) ) ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / ( DS * MUM ) ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - ( RRSe / Max( ( RMSe / MUM ),MLU ) ) ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7445109780439122, "obj2": 0.11125034717299613}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( Max( BR,PN ) - Min( ARS ,FirstVNF_Mem ) ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( Max( ( RRS / ( ( Min( DDR ,MRS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) / Min( DS ,MUM ) ) ) - ( ( RMSe + RMSe ) + ( MLU + MUM ) ) )", "obj1": 0.93812375249501, "obj2": 0.028120072482819784}, {"determining": "( Min( Max( ( RRS / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / MUC ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7744510978043913, "obj2": 0.09274467749382441}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( ACS + AMS ) * ( ( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MUR - MUC ) + DS ) / ( ( ( ( RCSe * CS ) / ( Min( RCSe ,MUR ) - Min( DS ,Max( Min( MLU ,RMSe ),CS ) ) ) ) * MLU ) - ( RCSe - RRSe ) ) )", "obj1": 0.48502994011976047, "obj2": 0.4356776367865536}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6407185628742516, "obj2": 0.2164501287315782}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - Max( ACS,FirstVNF_Mem ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4550898203592814, "obj2": 0.4547112780041083}, {"determining": "( ( ( PN / ( DDR * Min( Const ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( Min( MUM ,MUM ) / CS )", "obj1": 0.4491017964071856, "obj2": 0.4655124944052098}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Max( Max( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ),( ACS + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / ( RRSe * CS ) ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6331588132162181}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "Min( ( CRS * FirstVNF_RAM_Server ) ,( Min( CRS ,FirstVNF_Mem_Server ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( CRS ,DDR ) ),FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( CS ,( ( Max( MUC,( RMSe + MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.4251497005988024, "obj2": 0.4924302117461933}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( ( RRS - ( Const - ( MRS - DDR ) ) ) - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( ( MUR - RCSe ) - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6392466716678493}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( RCSe / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8562874251497006, "obj2": 0.0657504960657448}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( ( Min( RMSe ,CS ) * CS ) - ( MUM - MUC ) ) ) ) - ( DS - MUC ) )", "obj1": 0.9520958083832335, "obj2": 0.020896266967580557}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( Min( Max( Max( AMS,Min( ( FirstVNF_RAM - ( FirstVNF_CPU_Server * DDR ) ) ,FirstVNF_CPU ) ),FirstVNF_RAM ) ,PN ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( MUM,Max( ( ( Min( MUC ,DS ) - ( CS - RMSe ) ) + ( Min( MUR ,( ( ( RCSe / RMSe ) / RRSe ) * DS ) ) * MUM ) ),CS ) )", "obj1": 0.9680638722554891, "obj2": 0.014178255653688918}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( RRS * MRS ) ) ) ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( MLU / ( ( MUM - RMSe ) - CS ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.02532256534341703}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.45708582834331335, "obj2": 0.45315812962904545}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( Max( ACS,FirstVNF_Mem ) / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_CPU ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( ( DS / RMSe ) + ( DS * RMSe ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,( ( RRSe * MUC ) - ( DS * ( ( ( RCSe / RMSe ) + RMSe ) * ( Max( MUC,RCSe ) * RRSe ) ) ) ) ) ) )", "obj1": 0.7285429141716567, "obj2": 0.11907843170215499}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Min( Max( ( RRS / FirstVNF_RAM ),( ( Max( FirstVNF_Mem_Server,AMS ) + ( PN - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7365269461077845, "obj2": 0.11692719399061574}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7305389221556886, "obj2": 0.11781882966450685}, {"determining": "( Min( Min( MDR ,AMS ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( ( DS / RMSe ) + ( Max( MLU,RMSe ) * RMSe ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7345309381237525, "obj2": 0.11778670775719229}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( MLU / RCSe ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006139005999611407}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,MRS ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,Max( ARS,( ACS + DDR ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RRSe - Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) ) - RCSe ) - ( MUM - CS ) ) - DS ) - ( RRSe * ( RRSe - MUR ) ) ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,ARS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( RRSe * ( ( RMSe / ( MUM + Max( RMSe,RMSe ) ) ) / RMSe ) ) ) ) - ( MLU * MLU ) )", "obj1": 0.9560878243512974, "obj2": 0.017848165734005574}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( MDR,( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / ( DDR + ( FirstVNF_Mem + DDR ) ) ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( FirstVNF_CPU,( MRS / Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * Min( MLU ,( MUR - RCSe ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * Max( RCSe,RCSe ) ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + ( ( MUC - CS ) - ( MUC * MUR ) ) ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.013119932134176624}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / Min( FirstVNF_CPU_Server ,Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / ( FirstVNF_Mem + BR ) ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,( Max( RRSe,RCSe ) - MUC ) ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / DS ) )", "obj1": 0.9700598802395209, "obj2": 0.013608117414777559}], "24": [{"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / MRS ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,Min( RCSe ,DS ) ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( Min( ( ( MLU + RRSe ) - ( Min( CS ,DS ) - RRSe ) ) ,MUC ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) + RCSe ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "( Max( MDR,( DDR * Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.592814371257485, "obj2": 0.24687262951206632}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ) * ( Min( Const ,ARS ) * PN ) )", "choosing": "( Max( ( CS * Max( ( ( RCSe + DS ) / RRSe ),( CS + ( ( ( RMSe + RRSe ) + ( RCSe + MUC ) ) - ( MUR + MUC ) ) ) ) ),Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( CS - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.4870259481037924, "obj2": 0.42690960450580073}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.42714570858283435, "obj2": 0.4814227550549338}, {"determining": "( ( ( PN / ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * DDR ) * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( RRS / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) / ( MLU + MLU ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.4528656122654666}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - MUC ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7065868263473054, "obj2": 0.13838331006955032}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.47305389221556887, "obj2": 0.4334328292590034}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6706586826347305, "obj2": 0.19035312782200842}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.46107784431137727, "obj2": 0.4498132152989525}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + Max( FirstVNF_CPU_Server,PN ) ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * MUR ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) / Max( MUM,( MUR / RRSe ) ) )", "obj1": 0.6167664670658682, "obj2": 0.23990183548384295}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( Max( ( RRS / CRS ),( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( MUM - RRSe ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07790940950171005}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - ( DDR * ( RRS + PN ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( Max( MDR,MDR ) / ( DDR + ( FirstVNF_Mem + DDR ) ) ) )", "choosing": "( ( MUR + ( Min( RRSe ,Min( RMSe ,DS ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4171656686626746, "obj2": 0.48833104637948443}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( Min( Min( Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( BR / ARS ) ) ,AMS ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( RRSe - MUC ) )", "obj1": 0.7245508982035929, "obj2": 0.12157056493504766}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),( PN * ( Max( FirstVNF_CPU,MDR ) * FirstVNF_RAM ) ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS / RMSe ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( RRSe / RRSe ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.281437125748503, "obj2": 0.6599723779496603}, {"determining": "( Max( MDR,( FirstVNF_RAM + BR ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS - MUC ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / RRSe ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6506986027944112, "obj2": 0.20216248502995762}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( PN / ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( ( DS - RCSe ) - RCSe ) ,( ( MLU / MUC ) / ( MUM + MUM ) ) ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38323353293413176, "obj2": 0.5177889863443077}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6606786427145709, "obj2": 0.19522738066721143}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( Max( FirstVNF_Mem,Const ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( MUM + ( MLU / ( MUR - CS ) ) ) )", "obj1": 0.7604790419161677, "obj2": 0.10706197043193935}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),FirstVNF_Mem ) * ( DDR / DDR ) )", "choosing": "( ( ( MUC * MUR ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6668970759790878}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5536475162431561}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( Max( BR,PN ) - Min( ARS ,FirstVNF_Mem ) ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( Max( ( RRS / ( ( Min( DDR ,MRS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) / Min( DS ,MUM ) ) ) - ( ( RMSe + RMSe ) + ( MLU + MUM ) ) )", "obj1": 0.93812375249501, "obj2": 0.028120072482819784}, {"determining": "( Min( Max( ( RRS / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / MUC ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7744510978043913, "obj2": 0.09274467749382441}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Min( ACS ,PN ) - Min( FirstVNF_Mem ,Max( Max( Max( ACS,FirstVNF_CPU_Server ),AMS ),( MDR + ARS ) ) ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / ( DS * MUM ) ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - ( RRSe / Max( ( RMSe / MUM ),MLU ) ) ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7445109780439122, "obj2": 0.11125034717299613}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6407185628742516, "obj2": 0.2164501287315782}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( Max( ( FirstVNF_CPU - ( DDR / ACS ) ),( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( Min( ( RMSe + RMSe ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( RMSe * MUC ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5459313431762568}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( ACS + FirstVNF_CPU ) ) ,( ( ARS + RRS ) * RRS ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe - ( CS + MUM ) ) ,Min( MUR ,MUM ) ) / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7345309381237525, "obj2": 0.11236220273914688}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( ( FirstVNF_RAM / Max( ( ( Const * FirstVNF_RAM_Server ) - AMS ),Const ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( ( ( Max( ( ( RCSe / ( MUC - RMSe ) ) * CS ),Max( RRSe,( RRSe - CS ) ) ) - MUC ) + MUC ) * ( ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) - CS ) ) )", "obj1": 0.9461077844311377, "obj2": 0.020549152674548772}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( ( RRS - ( Const - ( MRS - DDR ) ) ) - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( ( MUR - RCSe ) - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.626746506986028, "obj2": 0.23508646745398856}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( Max( Max( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ),( ACS + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / ( RRSe * CS ) ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6331588132162181}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6392466716678493}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( RCSe / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8562874251497006, "obj2": 0.0657504960657448}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7305389221556886, "obj2": 0.11781882966450685}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( Min( Max( Max( AMS,Min( ( FirstVNF_RAM - ( FirstVNF_CPU_Server * DDR ) ) ,FirstVNF_CPU ) ),FirstVNF_RAM ) ,PN ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( MUM,Max( ( ( Min( MUC ,DS ) - ( CS - RMSe ) ) + ( Min( MUR ,( ( ( RCSe / RMSe ) / RRSe ) * DS ) ) * MUM ) ),CS ) )", "obj1": 0.9680638722554891, "obj2": 0.014178255653688918}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( RRS * MRS ) ) ) ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( MLU / ( ( MUM - RMSe ) - CS ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.02532256534341703}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU / MRS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU - Max( ( RRS - CRS ),BR ) ) )", "choosing": "( ( ( ( ( RRSe * ( Min( RMSe ,MUC ) - RCSe ) ) / MUR ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( RRSe / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6311937934075451}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8582834331337326, "obj2": 0.06540827244052162}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5401696350757585}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,ARS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( RRSe * ( ( RMSe / ( MUM + Max( RMSe,RMSe ) ) ) / RMSe ) ) ) ) - ( MLU * MLU ) )", "obj1": 0.9560878243512974, "obj2": 0.017848165734005574}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9161676646706587, "obj2": 0.02964690713040377}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( MLU / RCSe ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006139005999611407}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( Max( ACS,FirstVNF_Mem ) / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_CPU ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( ( DS / RMSe ) + ( DS * RMSe ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,( ( RRSe * MUC ) - ( DS * ( ( ( RCSe / RMSe ) + RMSe ) * ( Max( MUC,RCSe ) * RRSe ) ) ) ) ) ) )", "obj1": 0.7285429141716567, "obj2": 0.11907843170215499}, {"determining": "( Min( Max( ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / ( ( RRSe / RMSe ) + MUR ) ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12031671656107962}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,MRS ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,Max( ARS,( ACS + DDR ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RRSe - Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) ) - RCSe ) - ( MUM - CS ) ) - DS ) - ( RRSe * ( RRSe - MUR ) ) ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.0036662864835105974}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + ( ( MUC - CS ) - ( MUC * MUR ) ) ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.013119932134176624}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ARS * MDR ) ) ) ,( Min( Max( MRS,FirstVNF_Mem ) ,Min( MRS ,( AMS - BR ) ) ) + Max( ( ARS + BR ),( RRS + Max( FirstVNF_Mem_Server,( Min( ARS ,CRS ) - AMS ) ) ) ) ) )", "choosing": "( Max( ( MUM - MUR ),( ( RMSe * MUR ) - DS ) ) / Max( DS,Min( Min( MUM ,( DS / MUC ) ) ,( ( MUR * ( MLU - ( MUR / ( CS / RCSe ) ) ) ) + Min( ( RRSe - CS ) ,MLU ) ) ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005655637861526522}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9580838323353293, "obj2": 0.017228471284663784}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * DDR ) ) * ( Const - ( ( Max( Min( ( MDR * AMS ) ,Max( FirstVNF_CPU,( AMS + BR ) ) ),DDR ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( RMSe - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.001066463601561303}, {"determining": "( Max( ( FirstVNF_RAM - ( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_CPU / Min( FirstVNF_CPU_Server ,Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ),Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( PN ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,BR ) / ( FirstVNF_Mem + BR ) ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + DS ) + RCSe ) / Max( ( Max( DS,CS ) * ( MLU * MUM ) ),Min( Min( ( DS / MUC ) ,( ( ( RMSe + MUC ) * ( MUM - CS ) ) * ( MLU * Max( RMSe,CS ) ) ) ) ,( Min( RRSe ,( Max( RRSe,RCSe ) - MUC ) ) * ( MLU - ( ( MUM + MUC ) + Max( MLU,RRSe ) ) ) ) ) ) ) - ( RMSe / DS ) )", "obj1": 0.9700598802395209, "obj2": 0.013608117414777559}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,ARS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( RRSe * ( ( RMSe / ( MUM + Max( RMSe,RMSe ) ) ) / RMSe ) ) ) ) - ( MLU * MLU ) )", "obj1": 0.9560878243512974, "obj2": 0.017848165734005574}], "25": [{"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( MLU + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / MRS ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,Min( RCSe ,DS ) ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( Min( ( ( MLU + RRSe ) - ( Min( CS ,DS ) - RRSe ) ) ,MUC ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( ( MUC - CS ) - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.5728542914171657, "obj2": 0.2804066308786114}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ) * ( Min( Const ,ARS ) * PN ) )", "choosing": "( Max( ( CS * Max( ( ( RCSe + DS ) / RRSe ),( CS + ( ( ( RMSe + RRSe ) + ( RCSe + MUC ) ) - ( MUR + MUC ) ) ) ) ),Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( CS - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.4870259481037924, "obj2": 0.42690960450580073}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "( Max( MDR,( DDR * Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.592814371257485, "obj2": 0.24687262951206632}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.42714570858283435, "obj2": 0.4814227550549338}, {"determining": "( ( ( PN / ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * DDR ) * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( RRS / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) / ( MLU + MLU ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.4528656122654666}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - MUC ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7065868263473054, "obj2": 0.13838331006955032}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.47305389221556887, "obj2": 0.4334328292590034}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - ( FirstVNF_CPU / MRS ) ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * MUR ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * ( MUM + Max( RMSe,RMSe ) ) ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6187624750499002, "obj2": 0.2329367947933282}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6706586826347305, "obj2": 0.19035312782200842}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.46107784431137727, "obj2": 0.4498132152989525}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( ( ( FirstVNF_Mem + ( AMS / ACS ) ) - PN ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( ( Min( CS ,RCSe ) - MUM ) + MUM ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.4091816367265469, "obj2": 0.5023771821228219}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( Max( ( RRS / CRS ),( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( MUM - RRSe ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07790940950171005}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( Max( MDR,( ( DDR * ( FirstVNF_CPU_Server / Const ) ) * Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) ) + ( ( Max( MUM,DS ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.5968063872255489, "obj2": 0.23589193945820663}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - ( DDR * ( RRS + PN ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( Max( MDR,MDR ) / ( DDR + ( FirstVNF_Mem + DDR ) ) ) )", "choosing": "( ( MUR + ( Min( RRSe ,Min( RMSe ,DS ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4171656686626746, "obj2": 0.48833104637948443}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "Min( ( ( ( BR + FirstVNF_Mem ) * PN ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( Min( Max( ( CS / DS ),Min( MUM ,RRSe ) ) ,MUR ) * RMSe ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6387225548902196, "obj2": 0.22798007993857666}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),( PN * ( Max( FirstVNF_CPU,MDR ) * FirstVNF_RAM ) ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS / RMSe ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( RRSe / RRSe ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.281437125748503, "obj2": 0.6599723779496603}, {"determining": "( Max( MDR,( FirstVNF_RAM + BR ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS - MUC ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / RRSe ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6506986027944112, "obj2": 0.20216248502995762}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( PN / ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( ( DS - RCSe ) - RCSe ) ,( ( MLU / MUC ) / ( MUM + MUM ) ) ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38323353293413176, "obj2": 0.5177889863443077}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6606786427145709, "obj2": 0.19522738066721143}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( ( ACS * FirstVNF_CPU ) - ( ACS - FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( DDR * RRS ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( MUM - RRSe ) / ( CS * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.8982035928143712, "obj2": 0.04118493175690561}, {"determining": "( Min( Max( ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_RAM + AMS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / ( DS + MUR ) ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7584830339321357, "obj2": 0.09684410097812719}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),FirstVNF_Mem ) * ( DDR / DDR ) )", "choosing": "( ( ( MUC * MUR ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6668970759790878}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( Max( BR,PN ) - Min( ARS ,FirstVNF_Mem ) ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( Max( ( RRS / ( ( Min( DDR ,MRS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) / Min( DS ,MUM ) ) ) - ( ( RMSe + RMSe ) + ( MLU + MUM ) ) )", "obj1": 0.93812375249501, "obj2": 0.028120072482819784}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "( Min( Max( ( RRS / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / MUC ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7744510978043913, "obj2": 0.09274467749382441}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Min( ACS ,PN ) - Min( FirstVNF_Mem ,Max( Max( Max( ACS,FirstVNF_CPU_Server ),AMS ),( MDR + ARS ) ) ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / ( DS * MUM ) ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - ( RRSe / Max( ( RMSe / MUM ),MLU ) ) ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7445109780439122, "obj2": 0.11125034717299613}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6407185628742516, "obj2": 0.2164501287315782}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5536475162431561}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( ACS + FirstVNF_CPU ) ) ,( ( ARS + RRS ) * RRS ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe - ( CS + MUM ) ) ,Min( MUR ,MUM ) ) / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7345309381237525, "obj2": 0.11236220273914688}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "( Min( Min( Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) * ( AMS / FirstVNF_CPU ) ) ) ,Min( MDR ,Max( ( AMS * RRS ),MDR ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ) ) + Min( RCSe ,MUR ) ),( ( ( Max( Min( MUM ,Min( ( MLU - DS ) ,( MUR / MUR ) ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * MUR ),DS ) ,RMSe ) ) )", "obj1": 0.7245508982035929, "obj2": 0.12157056493504766}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( Min( Min( Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( BR / ARS ) ) ,AMS ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( RRSe - MUC ) )", "obj1": 0.7245508982035929, "obj2": 0.12157056493504766}, {"determining": "( Max( Max( ARS,Max( ( ARS + BR ),( ( ( ( Const * ACS ) / FirstVNF_CPU ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( MLU / RCSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.846307385229541, "obj2": 0.06726809806601701}, {"determining": "( ( FirstVNF_RAM / Max( ( ( Const * FirstVNF_RAM_Server ) - AMS ),Const ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( ( ( Max( ( ( RCSe / ( MUC - RMSe ) ) * CS ),Max( RRSe,( RRSe - CS ) ) ) - MUC ) + MUC ) * ( ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) - CS ) ) )", "obj1": 0.9461077844311377, "obj2": 0.020549152674548772}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( Max( Max( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ),( ACS + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / ( RRSe * CS ) ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6331588132162181}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6392466716678493}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( Max( ( FirstVNF_CPU - ( DDR / ACS ) ),( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( Min( ( RMSe + RMSe ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( RMSe * MUC ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5488061076700954}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( RCSe / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / ( MUC - Max( Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ),RCSe ) ) ) )", "obj1": 0.8562874251497006, "obj2": 0.0657504960657448}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( Max( ( FirstVNF_CPU - ( DDR / ACS ) ),( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( Min( ( RMSe + RMSe ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( RMSe * MUC ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5459313431762568}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7305389221556886, "obj2": 0.11781882966450685}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( Min( Max( Max( AMS,Min( ( FirstVNF_RAM - ( FirstVNF_CPU_Server * DDR ) ) ,FirstVNF_CPU ) ),FirstVNF_RAM ) ,PN ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( MUM,Max( ( ( Min( MUC ,DS ) - ( CS - RMSe ) ) + ( Min( MUR ,( ( ( RCSe / RMSe ) / RRSe ) * DS ) ) * MUM ) ),CS ) )", "obj1": 0.9680638722554891, "obj2": 0.014178255653688918}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( RRS * MRS ) ) ) ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( MLU / ( ( MUM - RMSe ) - CS ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.02532256534341703}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU / MRS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU - Max( ( RRS - CRS ),BR ) ) )", "choosing": "( ( ( ( ( RRSe * ( Min( RMSe ,MUC ) - RCSe ) ) / MUR ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( RRSe / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6311937934075451}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5401696350757585}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,ARS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( RRSe * ( ( RMSe / ( MUM + Max( RMSe,RMSe ) ) ) / RMSe ) ) ) ) - ( MLU * MLU ) )", "obj1": 0.9560878243512974, "obj2": 0.017848165734005574}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9900199600798403, "obj2": 0.0036662864835105974}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( ( FirstVNF_RAM + MDR ) / ( AMS / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - Min( RMSe ,Max( MLU,CS ) ) ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) ) )", "obj1": 0.8602794411177644, "obj2": 0.06420248785024744}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( AMS + FirstVNF_CPU ) ) ) ) ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - MUC ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005392642002653363}, {"determining": "Min( Min( ( ( Max( BR,Const ) + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU * BR ) )", "choosing": "( ( DS - MUC ) / Max( Min( ( RMSe * MUM ) ,CS ),( ( DS + MUC ) / RCSe ) ) )", "obj1": 0.9940119760479041, "obj2": 0.0016309577540340957}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9161676646706587, "obj2": 0.02964690713040377}, {"determining": "Min( ( Max( ( RRS / CRS ),( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS - RRSe ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.998003992015968, "obj2": 0.00045898073898406616}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( MLU / RCSe ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006139005999611407}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( Max( ACS,FirstVNF_Mem ) / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_CPU ) ) ) ) ),( ( ( FirstVNF_Mem * ARS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( ( ( Max( ( ( DS / RMSe ) + ( DS * RMSe ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,( ( RRSe * MUC ) - ( DS * ( ( ( RCSe / RMSe ) + RMSe ) * ( Max( MUC,RCSe ) * RRSe ) ) ) ) ) ) )", "obj1": 0.7285429141716567, "obj2": 0.11907843170215499}, {"determining": "( Min( Max( ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / ( ( RRSe / RMSe ) + MUR ) ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7265469061876247, "obj2": 0.12031671656107962}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,MRS ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,Max( ARS,( ACS + DDR ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RRSe - Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) ) - RCSe ) - ( MUM - CS ) ) - DS ) - ( RRSe * ( RRSe - MUR ) ) ),( ( MUC + MUR ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( Max( ARS,Max( ( ARS + MRS ),( ( Max( Max( FirstVNF_RAM,ARS ),RRS ) / FirstVNF_CPU_Server ) * ARS ) ) ),FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( DS * RRSe ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUM / MLU ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6431831508824131}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem + BR ) - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU )", "choosing": "( Min( ( Min( CS ,MLU ) - MUC ) ,DS ) / Max( DS,( MLU / RCSe ) ) )", "obj1": 0.9920159680638723, "obj2": 0.002377321750992141}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + ( ( MUC - CS ) - ( MUC * MUR ) ) ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.013119932134176624}], "26": [{"determining": "( ( ( PN / ( DDR * Max( ( BR - ( DDR * ( RRS + PN ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( MUR + ( Min( RRSe ,Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( MLU + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM ) * ( ( ( MDR + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUC + Min( Min( ( ( ( Min( CS ,CS ) / ( RCSe - MUM ) ) / ( Max( CS,MUR ) + Max( MLU,MUC ) ) ) * MUM ) ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( MUM - RMSe ) / MUC ) ) ,( ( RMSe / ( MLU + RMSe ) ) * ( CS + Min( RCSe ,DS ) ) ) ) / DS ) * MUM ) ) )", "obj1": 0.26746506986027946, "obj2": 0.672515908850427}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Min( Const ,Min( MRS ,( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( ( MUC - CS ) - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / RCSe )", "obj1": 0.5728542914171657, "obj2": 0.2804066308786114}, {"determining": "Min( ( ( Min( PN ,( Const / FirstVNF_CPU ) ) - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Min( DS ,Min( MUC ,( Max( ( DS - MUC ),MUM ) - CS ) ) ) * MUC ),( MUR * ( MLU - MUC ) ) ) )", "obj1": 0.49700598802395207, "obj2": 0.38623804876419127}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + ( BR / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( DDR / DDR ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,( ( MUR / MLU ) + MUR ) ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUM + ( MUR + MLU ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5469061876247505, "obj2": 0.360422412230852}, {"determining": "Min( ( ( FirstVNF_RAM - ( Min( ( MDR + ( Max( MDR,MDR ) + ( FirstVNF_CPU_Server / Const ) ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) / ( Const + BR ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.5229540918163673, "obj2": 0.37075153471594197}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) + ( Min( Const ,( FirstVNF_RAM_Server / ARS ) ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( ( Max( CRS,CRS ) * MRS ) + ARS ) ) ,( ( Min( FirstVNF_RAM ,ACS ) + ( ACS - AMS ) ) * Max( FirstVNF_Mem_Server,( Const - AMS ) ) ) )", "choosing": "( ( ( ( Max( MLU,MUC ) + RRSe ) + Min( Max( RRSe,RCSe ) ,RCSe ) ) + RCSe ) / Max( ( ( ( RMSe - MLU ) * ( ( ( MUC / Min( RCSe ,MUM ) ) / Max( CS,RCSe ) ) + DS ) ) * ( MLU * MUM ) ),Min( Max( RRSe,RCSe ) ,RCSe ) ) )", "obj1": 0.5588822355289421, "obj2": 0.3316891813946304}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * ( BR - FirstVNF_Mem ) ) - Min( Const ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( PN * ACS ) / Max( BR,MRS ) ) ) ) ) / ( ( CRS + ACS ) + ( FirstVNF_RAM - ACS ) ) ) ,( ( ( RRS / ARS ) - Const ) * Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe / MUC ) + CS ) - MUM ) / DS ) + MUC ) ,MLU ) + Min( MUC ,Min( ( RMSe + RRSe ) ,( Min( RCSe ,( CS + MUR ) ) / Max( Max( ( MUM - RRSe ),( MUR - MUM ) ),MUC ) ) ) ) ) / ( MUR * RCSe ) )", "obj1": 0.5668662674650699, "obj2": 0.3122003476610922}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.42714570858283435, "obj2": 0.4814227550549338}, {"determining": "( ( ( PN / ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) * DDR ) * Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) ) ) + FirstVNF_Mem_Server ) * ( RRS / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) / ( MLU + MLU ) ) ) ) / CS )", "obj1": 0.4471057884231537, "obj2": 0.4528656122654666}, {"determining": "( Max( MDR,( DDR * Min( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.592814371257485, "obj2": 0.24687262951206632}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( ACS / FirstVNF_CPU_Server ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,( MLU + CS ) ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6786427145708582, "obj2": 0.16637220774961334}, {"determining": "( ( FirstVNF_RAM_Server / ( MDR * ( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ) * ( Min( Const ,ARS ) * PN ) )", "choosing": "( Max( ( CS * Max( ( ( RCSe + DS ) / RRSe ),( CS + ( ( ( RMSe + RRSe ) + ( RCSe + MUC ) ) - ( MUR + MUC ) ) ) ) ),Min( ( RRSe / CS ) ,Max( MUC,Max( DS,Min( ( CS - RRSe ) ,RCSe ) ) ) ) ) - ( RMSe / ( ( MUM + Min( RMSe ,RRSe ) ) - ( ( RRSe * CS ) + MUC ) ) ) )", "obj1": 0.4870259481037924, "obj2": 0.42690960450580073}, {"determining": "Min( ( ( ( MDR + DDR ) * ( DDR / FirstVNF_Mem ) ) / ( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ) + ( FirstVNF_RAM - ACS ) ) ) ,( PN * FirstVNF_Mem ) )", "choosing": "( Min( ( Min( RMSe ,RCSe ) * ( RMSe / MLU ) ) ,Max( ( ( ( MLU - ( RRSe / ( RRSe * CS ) ) ) / MUM ) + RMSe ),( RRSe * MLU ) ) ) / Max( DS,CS ) )", "obj1": 0.34331337325349304, "obj2": 0.5822537478317629}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - MUC ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7065868263473054, "obj2": 0.13838331006955032}, {"determining": "( Min( DDR ,PN ) - ( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) )", "choosing": "Max( MUC,( DS + ( Min( Min( Min( ( ( DS - RCSe ) - RCSe ) ,Max( MUM,Max( MUR,MUM ) ) ) ,RCSe ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.8243512974051896, "obj2": 0.075750104670535}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / DS ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6706586826347305, "obj2": 0.19035312782200842}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( ACS - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.46107784431137727, "obj2": 0.4498132152989525}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( Max( RRS,PN ),( FirstVNF_CPU_Server + Min( Max( MDR,RRS ) ,AMS ) ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( ( ( RMSe - MUM ) / MLU ) * MUM ) + ( ( Min( MLU ,DS ) / Max( CS,MUM ) ) + Max( MLU,DS ) ) ),( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) ) + MLU ) )", "obj1": 0.8802395209580839, "obj2": 0.045004290379597876}, {"determining": "( ( MRS - ( FirstVNF_RAM + ( FirstVNF_CPU / MRS ) ) ) * ( ( ( MRS + ( ( ( ( Const - DDR ) / ( RRS / PN ) ) * ARS ) * CRS ) ) - ( DDR * ( ( FirstVNF_RAM + DDR ) * ( DDR + Max( RRS,MRS ) ) ) ) ) - Max( ( Const * AMS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( RMSe / MUR ) ) - Max( ( MUM - MUR ),( ( Min( ( ( Max( MUC,RCSe ) / ( RMSe * RMSe ) ) * CS ) ,CS ) * ( MLU + CS ) ) - DS ) ) )", "obj1": 0.3912175648702595, "obj2": 0.5060170259629925}, {"determining": "( ( MRS - Min( PN ,PN ) ) * ( DDR - Max( ACS,Max( ( ARS * Min( ( CRS + AMS ) ,FirstVNF_CPU ) ),Max( ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,AMS ) ) * DDR ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RRSe + ( Max( RCSe,DS ) / MUM ) ) + Min( CS ,( ( CS - MUC ) / MUR ) ) ) / Max( Max( ( MUR * ( MUM + ( MUR - RCSe ) ) ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - Min( Min( DS ,CS ) ,( CS / MUR ) ) )", "obj1": 0.3532934131736527, "obj2": 0.5609317816109151}, {"determining": "Min( ( Max( ( RRS / CRS ),( ( Min( Max( ( RRS + Const ),RRS ) ,FirstVNF_CPU ) / Const ) - ( Min( ( MDR + ( AMS + FirstVNF_Mem ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( MUM - RRSe ) / DS ) ,Min( RCSe ,MUM ) ) - Max( ( ( Min( ( DS - MUC ) ,DS ) * CS ) + MUM ),MUC ) ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7924151696606786, "obj2": 0.07790940950171005}, {"determining": "Min( ( ( ( BR / ACS ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ( FirstVNF_Mem * PN ) - Min( Const ,BR ) ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - FirstVNF_CPU ) / Max( BR,MRS ) ) ) ) ) / ( FirstVNF_CPU - ARS ) ) ,( ( ( ( FirstVNF_CPU / MRS ) + ( FirstVNF_RAM - ACS ) ) + Min( DDR ,Max( FirstVNF_CPU,BR ) ) ) * Max( ( RRS / FirstVNF_RAM ),( ( ( ( BR + BR ) + ( ACS - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) + ( PN - ( ( BR * FirstVNF_RAM ) * BR ) ) ) + Max( ( RRS / ( FirstVNF_CPU / MRS ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,( ( MUR + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( CS / ( MLU / MUC ) ) ),RCSe ) ) ) + Min( MUC ,Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) / Max( ( ( ( ( DS - CS ) - RCSe ) + ( ( RMSe + MUR ) + RCSe ) ) - DS ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.3253493013972056, "obj2": 0.6025886142294944}, {"determining": "Min( ( DDR / ( Min( Min( ( Const + MRS ) ,( PN + ( ( MRS - DDR ) + MDR ) ) ) ,PN ) - ( ( Min( CRS ,( Const + AMS ) ) / Max( FirstVNF_RAM_Server,( PN - FirstVNF_RAM ) ) ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + RRSe ) / Min( ( ( RCSe + ( MUR / Min( MLU ,RMSe ) ) ) * RMSe ) ,MUC ) )", "obj1": 0.6866267465069861, "obj2": 0.15146341754007056}, {"determining": "( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),AMS ) / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) * ( Min( ( BR + ARS ) ,Const ) / DDR ) ) )", "choosing": "( ( Min( ( ( DS / CS ) + ( Max( ( Max( MUC,DS ) + MUM ),MUM ) - MUC ) ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + ( ( DS / RMSe ) + ( DS * RMSe ) ) ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.3313373253493014, "obj2": 0.591736294591831}, {"determining": "( ( ACS - FirstVNF_RAM ) * Min( ( FirstVNF_RAM - Min( ( ARS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ,PN ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( MUC * Max( MUM,( RRSe - MUC ) ) ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( RCSe / MUC ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( MUM / DS ) * MUM ) ) )", "obj1": 0.31736526946107785, "obj2": 0.6191538677931556}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( AMS + RRS ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) )", "obj1": 0.624750499001996, "obj2": 0.21757039336828868}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server * ( ACS - FirstVNF_Mem_Server ) ) * ( ( ( ( FirstVNF_RAM + AMS ) - ( CRS - ACS ) ) + ( ACS / DDR ) ) / Min( ( ( ARS / FirstVNF_Mem_Server ) + Max( DDR,MRS ) ) ,( ( Const - ( FirstVNF_CPU / MRS ) ) / Max( BR,MRS ) ) ) ) ) / ( Min( RRS ,DDR ) + ( FirstVNF_RAM - ACS ) ) ) ,( Min( Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server - Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( Const - Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( RCSe * MUR ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( DS / RMSe ) + ( DS * ( MUM + Max( RMSe,RMSe ) ) ) ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.6187624750499002, "obj2": 0.2329367947933282}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.47305389221556887, "obj2": 0.4334328292590034}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),( PN * ( Max( FirstVNF_CPU,MDR ) * FirstVNF_RAM ) ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS / RMSe ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( RRSe / RRSe ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.281437125748503, "obj2": 0.6599723779496603}, {"determining": "Min( ( Max( ARS,( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + ( AMS + RRS ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - ( Min( ( ( CS * ( Max( MUM,DS ) * CS ) ) / DS ) ,Min( RCSe ,MUM ) ) - MLU ) ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( RCSe - CS ) - MLU ) + RMSe ) ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.7025948103792415, "obj2": 0.14853371587621136}, {"determining": "( FirstVNF_CPU_Server / ( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( PN / ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( Min( Min( ( ( DS - RCSe ) - RCSe ) ,( ( MLU / MUC ) / ( MUM + MUM ) ) ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( ( ( MUR / MLU ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.38323353293413176, "obj2": 0.5177889863443077}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - ( DDR * ( RRS + PN ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( Max( MDR,MDR ) / ( DDR + ( FirstVNF_Mem + DDR ) ) ) )", "choosing": "( ( MUR + ( Min( RRSe ,Min( RMSe ,DS ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.4171656686626746, "obj2": 0.48833104637948443}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( ( ACS * FirstVNF_CPU ) - ( ACS - FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( DDR * RRS ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( MUM - RRSe ) / ( CS * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.8982035928143712, "obj2": 0.04118493175690561}, {"determining": "( Min( Max( ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_RAM + AMS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / ( DS + MUR ) ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7584830339321357, "obj2": 0.09684410097812719}, {"determining": "( ( ( PN / ( DDR * Max( ( BR - Min( MRS ,AMS ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * Min( ( MDR + ( ACS + FirstVNF_CPU ) ) ,( ( ARS + RRS ) * RRS ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( ( RMSe * MLU ) / ( RCSe - RCSe ) ) / Max( Max( Max( RMSe,MUC ),( ( MUM * MUR ) + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) ) / MLU )", "obj1": 0.4091816367265469, "obj2": 0.49914574737545336}, {"determining": "( Max( MDR,( FirstVNF_RAM + BR ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS - MUC ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / RRSe ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.6506986027944112, "obj2": 0.20216248502995762}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3812375249500998, "obj2": 0.5272060335412572}, {"determining": "( Min( Min( ( ACS + PN ) ,( FirstVNF_Mem - ( ( BR - Max( ( ACS + FirstVNF_Mem_Server ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,PN ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Min( Max( MDR,( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_Mem / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,Max( ( ( Min( ( ( MUC / RCSe ) / MUR ) ,MUC ) / MUR ) + DS ),MUC ) )", "obj1": 0.7524950099800399, "obj2": 0.10793508453040632}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.874251497005988, "obj2": 0.06192285081704463}, {"determining": "( Max( Max( ARS,( Min( ARS ,( BR + Max( FirstVNF_RAM_Server,CRS ) ) ) + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),FirstVNF_Mem ) * ( DDR / DDR ) )", "choosing": "( ( ( MUC * MUR ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.2694610778443114, "obj2": 0.6668970759790878}, {"determining": "( Max( ( Const + MDR ),Max( FirstVNF_CPU,MDR ) ) * ( ( ( MRS + ( ( FirstVNF_Mem * ARS ) * CRS ) ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) - Max( ( ( BR / BR ) / ( ( ( ( MDR * MRS ) / ( RRS * FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe * ( Min( Max( Max( MUR,MUC ),( MUR - MUC ) ) ,MUM ) + ( CS / RRSe ) ) ) + ( MUM - RRSe ) ) - Min( ( Max( MLU,MUM ) * ( RCSe - MUC ) ) ,Max( Min( CS ,MUC ),( MUC * MLU ) ) ) )", "obj1": 0.3712574850299401, "obj2": 0.5348795563563422}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( Max( BR,PN ) - Min( ARS ,FirstVNF_Mem ) ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( Max( ( RRS / ( ( Min( DDR ,MRS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) / Min( DS ,MUM ) ) ) - ( ( RMSe + RMSe ) + ( MLU + MUM ) ) )", "obj1": 0.93812375249501, "obj2": 0.028120072482819784}, {"determining": "( Min( ( AMS - BR ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * Max( MRS,BR ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( MUR + ( ( Max( MLU,RRSe ) + ( ( MUM - RRSe ) / MUR ) ) / ( ( RCSe / MLU ) / Max( Max( RCSe,DS ),MUR ) ) ) ) ) + MLU ) )", "obj1": 0.9041916167664671, "obj2": 0.038021448102923155}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ( Min( CRS ,FirstVNF_CPU ) / Const ) + ( MRS / ARS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( DS / MLU ) ,RCSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.6387225548902196, "obj2": 0.21595242512536628}, {"determining": "( Max( MDR,( ( ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( PN / ( RRS - FirstVNF_Mem_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( Min( ( ( DS - RCSe ) - RCSe ) ,( ( MLU / MUC ) / ( MUM + MUM ) ) ) ,RMSe ) - CS ) - ( RCSe + RMSe ) )", "obj1": 0.6047904191616766, "obj2": 0.23347664050939526}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( Const * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( RMSe / RRSe ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.8383233532934131, "obj2": 0.07379361611260693}, {"determining": "( Max( Max( ARS,( ACS + DDR ) ),( PN * ( Max( ( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ),MDR ) * FirstVNF_RAM ) ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS / RMSe ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( RRSe / RRSe ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.29740518962075846, "obj2": 0.6423623315181265}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_RAM / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - MUR ) / MUR ) ,Min( RRSe ,MUM ) ) ) - Max( ( Max( DS,CS ) * MUC ),( ( MUC - Max( RCSe,Min( MUM ,( DS + MUR ) ) ) ) * ( MLU - MUC ) ) ) )", "obj1": 0.846307385229541, "obj2": 0.06534760194113391}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9181636726546906, "obj2": 0.028784957152950118}, {"determining": "( Min( ACS ,PN ) - Min( FirstVNF_Mem ,Max( Max( Max( ACS,FirstVNF_CPU_Server ),AMS ),( MDR + ARS ) ) ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / ( DS * MUM ) ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - ( RRSe / Max( ( RMSe / MUM ),MLU ) ) ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( Max( CS,( ( MUC + CS ) / RMSe ) ),RCSe ) ) ) ) )", "obj1": 0.7445109780439122, "obj2": 0.11125034717299613}, {"determining": "( Max( MDR,( ( DDR * ( FirstVNF_CPU_Server / Const ) ) * Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM_Server + BR ) - ( ( FirstVNF_RAM_Server + BR ) - Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( Min( Max( RMSe,MUM ) ,RCSe ) / ( RMSe + ( MUC - MUM ) ) ) ,RCSe ) ) + ( ( Max( MUM,DS ) + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.5968063872255489, "obj2": 0.23589193945820663}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( ACS + FirstVNF_CPU ) ) ,( ( ARS + RRS ) * RRS ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe - ( CS + MUM ) ) ,Min( MUR ,MUM ) ) / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7345309381237525, "obj2": 0.11236220273914688}, {"determining": "( Min( ( Min( RRS ,RRS ) - ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_Mem ) ),MRS ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ,( PN - ( ( BR * FirstVNF_RAM ) * Max( ( MRS * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( Max( ( ( CS / ( Max( RCSe,Min( MUC ,DS ) ) + ( RRSe - RMSe ) ) ) * MUR ),MUR ) - RCSe ),( Min( MUC ,( CS * ( DS + MLU ) ) ) + Max( DS,( MUM / ( MLU / ( DS * MUC ) ) ) ) ) )", "obj1": 0.9141716566866267, "obj2": 0.032406075295960325}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) ) ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + Max( ( ( FirstVNF_RAM + MDR ) / ( AMS / MRS ) ),FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( MUM,Min( ( ( ( MLU + MUC ) - Min( RMSe ,Max( MLU,CS ) ) ) / MUR ) ,Min( RRSe ,MUM ) ) ) - ( RMSe / Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) ) )", "obj1": 0.8602794411177644, "obj2": 0.06420248785024744}, {"determining": "( Min( Min( Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( BR / ARS ) ) ,AMS ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + ( MUC * MUR ) ) + Min( RCSe ,MUR ) ),( RRSe - MUC ) )", "obj1": 0.7245508982035929, "obj2": 0.12157056493504766}, {"determining": "Min( ( Max( ( RRS / CRS ),( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) ) / ( Min( DDR ,PN ) - ( ACS - FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC / RMSe ) / Min( MUM ,( Min( ( ( CS * CS ) + ( ( ( CS - MUC ) - MLU ) + RMSe ) ) ,RMSe ) - ( MUM - RRSe ) ) ) )", "obj1": 0.41317365269461076, "obj2": 0.49802674623182486}, {"determining": "( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( ( RRSe + MUM ) / MLU ) ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / Max( DS,RMSe ) ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3153692614770459, "obj2": 0.6296142477900214}, {"determining": "( Max( MDR,( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6606786427145709, "obj2": 0.19522738066721143}, {"determining": "( Min( Min( Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( Min( Max( MRS,( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_Mem ) * ( AMS / FirstVNF_CPU ) ) ) ,Min( MDR ,Max( ( AMS * RRS ),MDR ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( ( ( RMSe + Max( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ),DS ) ) + Min( RCSe ,MUR ) ),( ( ( Max( Min( MUM ,Min( ( MLU - DS ) ,( MUR / MUR ) ) ),RMSe ) / DS ) + MUM ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * MUR ),DS ) ,RMSe ) ) )", "obj1": 0.7245508982035929, "obj2": 0.12157056493504766}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( ACS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RCSe - ( CS + MLU ) ) ,Min( MUR ,MUM ) ) / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.47904191616766467, "obj2": 0.43233608826421654}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,ARS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( Min( MUR ,RRSe ) - CS ) ) ,( RRSe * ( ( RMSe / ( MUM + Max( RMSe,RMSe ) ) ) / RMSe ) ) ) ) - ( MLU * MLU ) )", "obj1": 0.9560878243512974, "obj2": 0.017848165734005574}, {"determining": "( Min( Max( ( RRS / Max( ( FirstVNF_CPU * MDR ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / MDR ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS - MUC ) ,( MUR / MLU ) ) * CS ) / MUC ) / MUR ) + RMSe ) / Max( DS,( ( ( RRSe * MUC ) - Min( MUM ,MUM ) ) / MUC ) ) ) )", "obj1": 0.7744510978043913, "obj2": 0.09274467749382441}, {"determining": "( ( FirstVNF_RAM / Max( ( ( Const * FirstVNF_RAM_Server ) - AMS ),Const ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( ( ( Max( ( ( RCSe / ( MUC - RMSe ) ) * CS ),Max( RRSe,( RRSe - CS ) ) ) - MUC ) + MUC ) * ( ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) - CS ) ) )", "obj1": 0.9461077844311377, "obj2": 0.020549152674548772}, {"determining": "( Max( MDR,( ( Max( ( FirstVNF_Mem_Server / ACS ),ACS ) - ( Min( ( MDR + FirstVNF_Mem ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / ( FirstVNF_CPU / MRS ) ) ) * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,MUC ) ,RCSe ) * MUM ) - ( MUM - MUC ) ) ) ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6586826347305389, "obj2": 0.1973515062493815}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( ACS + FirstVNF_CPU ) ) ,( ( ARS + RRS ) * RRS ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( Min( ( RRSe - ( CS + MUM ) ) ,Min( MUR ,MUM ) ) / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7784431137724551, "obj2": 0.086450269524796}, {"determining": "( Min( CRS ,ACS ) * ( Const - ( ( FirstVNF_CPU * MDR ) / Min( ( ( FirstVNF_Mem_Server / RRS ) + ( ( RRS * Const ) + ACS ) ) ,( FirstVNF_CPU_Server + ( RRS - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( MUC ,MUC ) - Max( RCSe,( ( RCSe + Min( Min( ( ( MLU * RRSe ) * ( MUM * MUC ) ) ,MLU ) ,Max( RMSe,RMSe ) ) ) - MUM ) ) )", "obj1": 0.8423153692614771, "obj2": 0.06940474208252406}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) ) ) ,PN ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( ( ( RRSe - RRSe ) + DS ) / RCSe ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.7844311377245509, "obj2": 0.08003371684929816}, {"determining": "( Max( Max( ( ( ( ( Min( MRS ,BR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) * Min( ARS ,MDR ) ) - RRS ) / Const ),( ACS + DDR ) ),( PN * FirstVNF_CPU ) ) * ( PN - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + Min( Min( MUR ,MLU ) ,( RRSe * MUR ) ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( ( CS + MUM ) / MUC ) ) ,( ( CS / ( RRSe * CS ) ) / MUM ) ) / DS ) * Min( RMSe ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.3013972055888224, "obj2": 0.6331588132162181}, {"determining": "( Min( Min( Const ,DDR ) ,( FirstVNF_CPU_Server - Min( Max( Min( ARS ,Min( Min( MRS ,FirstVNF_Mem ) ,DDR ) ),Min( Max( ( FirstVNF_Mem_Server - DDR ),DDR ) ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MDR,RRS ) ,AMS ) ) )", "choosing": "Max( ( ( MUM - ( RCSe * ( MLU * MUC ) ) ) * ( Min( Min( Min( RCSe ,RCSe ) ,CS ) ,( MLU * ( MUR - RCSe ) ) ) * ( MUM * Min( ( RRSe - ( MUC + MUM ) ) ,RRSe ) ) ) ),( Max( MUC,( MUC + MUM ) ) * ( ( DS / RMSe ) + ( DS * RMSe ) ) ) )", "obj1": 0.8642714570858283, "obj2": 0.06253077380734309}, {"determining": "( FirstVNF_Mem_Server - Min( PN ,( ARS / Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( RCSe - ( CS + MLU ) ) )", "obj1": 0.9800399201596807, "obj2": 0.006374573429563653}, {"determining": "( Max( ( FirstVNF_RAM - ( ( ARS + Min( ( ( AMS + FirstVNF_Mem ) - ( CRS - RRS ) ) ,( ACS - ( ARS / FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU / MRS ) ) ),Min( FirstVNF_RAM_Server ,Min( MDR ,Const ) ) ) * ( Const - ( ( Max( ( RRS * ACS ),MDR ) / FirstVNF_RAM_Server ) / Max( ( RRS / ( ( Min( DDR ,FirstVNF_CPU_Server ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( MUM ,( Max( DS,CS ) / DS ) ),DS ) - ( MLU * MLU ) )", "obj1": 0.9600798403193613, "obj2": 0.016489428086074356}, {"determining": "( Max( MDR,( FirstVNF_RAM + BR ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( MUM / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( DS - MUC ) ),Min( ( RMSe + RRSe ) ,Min( MUC ,DS ) ) ) ) ) - ( Min( CS ,( ( Max( MUC,Min( ( MUM - MUM ) ,MUC ) ) - MLU ) / MUC ) ) / Max( ( Max( DS,( Max( MUR,MUR ) * ( RCSe + ( MLU - MUC ) ) ) ) * ( MLU * ( Min( ( DS / RRSe ) ,MUM ) / RRSe ) ) ),( ( DS / RMSe ) + ( DS * RMSe ) ) ) ) )", "obj1": 0.5948103792415169, "obj2": 0.24375968661583472}, {"determining": "( Min( Max( Max( AMS,Min( ( FirstVNF_RAM - ( FirstVNF_CPU_Server * DDR ) ) ,FirstVNF_CPU ) ),FirstVNF_RAM ) ,PN ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "Max( MUM,Max( ( ( Min( MUC ,DS ) - ( CS - RMSe ) ) + ( Min( MUR ,( ( ( RCSe / RMSe ) / RRSe ) * DS ) ) * MUM ) ),CS ) )", "obj1": 0.9680638722554891, "obj2": 0.014178255653688918}, {"determining": "( Min( Max( Max( ( FirstVNF_RAM * RRS ),Min( MDR ,( PN - DDR ) ) ),FirstVNF_RAM ) ,PN ) - DDR )", "choosing": "Max( ( MUR + CS ),Max( ( MUR + ( ( CS - DS ) * MUM ) ),Min( RCSe ,( Max( Max( ( ( RCSe * MUM ) * Max( RMSe,MLU ) ),RRSe ),( MUM + MUC ) ) - ( ( RCSe * CS ) * CS ) ) ) ) )", "obj1": 0.9740518962075848, "obj2": 0.011704409226865106}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( Max( ( FirstVNF_CPU - ( DDR / ACS ) ),( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( Min( ( RMSe + RMSe ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( RMSe * MUC ) ) )", "obj1": 0.36127744510978044, "obj2": 0.5488061076700954}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.2994011976047904, "obj2": 0.6392466716678493}, {"determining": "( ( ( PN / ( DDR * Max( Max( ( RRS - ( DDR - DDR ) ),( DDR - ( FirstVNF_CPU / MRS ) ) ),DDR ) ) ) + FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( Min( Max( MRS,( Max( Max( ACS,FirstVNF_CPU_Server ),AMS ) / BR ) ) ,FirstVNF_Mem ) - BR ) ) )", "choosing": "( ( MUR + ( ( DS - CS ) + ( ( MUR + Min( Max( ( RRSe - CS ),( MUR - MUC ) ) ,( RMSe / MUR ) ) ) / Max( Max( Max( RMSe,RCSe ),( RCSe + MUM ) ),Min( ( MUR * ( MLU - MUM ) ) ,Min( MUC ,DS ) ) ) ) ) ) / CS )", "obj1": 0.48502994011976047, "obj2": 0.42717397688189257}, {"determining": "( Max( MDR,( ( FirstVNF_Mem_Server / Min( AMS ,AMS ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) * ( ( ( DDR * FirstVNF_RAM ) * ( AMS * RRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUR + RRSe ) ) * CS ) - ( MUM - ( ( RCSe / MUC ) + ( CS + MLU ) ) ) ) ) ) + Min( ( Max( MUR,( RCSe / RRSe ) ) + Min( MUC ,RMSe ) ) ,( MLU - MUR ) ) ) - ( Min( Min( ( DS * MLU ) ,( MLU * ( DS - Min( ( MUR * MUR ) ,DS ) ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( ( ARS + ( ( Const / ARS ) - ( ( BR * FirstVNF_CPU_Server ) + BR ) ) ) * ( Const * Min( FirstVNF_CPU_Server ,( Max( ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) * ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( ( MUC + RRSe ) ,RCSe ) * CS ) - ( MUM - MUC ) ) ) ) + ( Min( MUM ,MUR ) * Max( RRSe,( Max( CS,DS ) - MLU ) ) ) ) - ( RCSe + RMSe ) )", "obj1": 0.6427145708582834, "obj2": 0.2108320225949894}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( Max( ( FirstVNF_CPU - ( DDR / ACS ) ),( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,FirstVNF_Mem_Server ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( Min( ( RMSe + RMSe ) ,RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( RRSe - Min( RMSe ,MUC ) ) ) + ( ( MLU - ( MUC * MUR ) ) / ( RMSe * MUC ) ) )", "obj1": 0.36327345309381237, "obj2": 0.5459313431762568}, {"determining": "( Min( ACS ,PN ) - Min( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ) ,MDR ) )", "choosing": "Max( ( ( ( ( RCSe * ( MLU * MUM ) ) + ( MLU / RCSe ) ) / Max( ( Max( DS,CS ) * MUC ),( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) / RMSe ) + ( DS * RMSe ) ) ) ) / Max( ( Max( DS,Min( ( RMSe + RRSe ) ,Min( Max( RRSe,RCSe ) ,DS ) ) ) * ( MLU * MUM ) ),( MUR * ( MLU - MUM ) ) ) ),( MUM + Min( MUC ,( ( MUR + ( ( Max( MUR,RRSe ) + ( MUM / MUR ) ) / ( ( RCSe * CS ) + MUR ) ) ) - Max( ( RRSe + MUM ),RCSe ) ) ) ) )", "obj1": 0.7305389221556886, "obj2": 0.11781882966450685}, {"determining": "Min( ( Max( ( RRS / CRS ),( RRS * FirstVNF_Mem ) ) / ( Min( DDR ,PN ) - ( Min( Max( ( Min( ACS ,Const ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ),( FirstVNF_CPU / ( FirstVNF_CPU / MRS ) ) ) ,AMS ) + ( MRS / AMS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC * Max( ( MUR + RCSe ),Max( ( ( ( Max( MUC,RCSe ) / MUR ) + ( RMSe * MLU ) ) + MUM ),RMSe ) ) ) / ( CS * ( RRSe / RMSe ) ) )", "obj1": 0.780439121756487, "obj2": 0.08236695538082033}, {"determining": "( FirstVNF_CPU_Server / ( ( ( AMS / FirstVNF_RAM_Server ) / ( Max( ( FirstVNF_CPU - ( DDR / ACS ) ),( DDR * Min( FirstVNF_Mem_Server ,DDR ) ) ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,FirstVNF_Mem_Server ) ) ) / DDR ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( RMSe ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5536475162431561}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.36726546906187624, "obj2": 0.5392304861829746}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( RRS * MRS ) ) ) ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MUM * RCSe ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( MLU / ( ( MUM - RMSe ) - CS ) ) ) ) ) ) )", "obj1": 0.9401197604790419, "obj2": 0.02532256534341703}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU / MRS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU - Max( ( RRS - CRS ),BR ) ) )", "choosing": "( ( ( ( ( RRSe * ( Min( RMSe ,MUC ) - RCSe ) ) / MUR ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( RRSe / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3073852295409182, "obj2": 0.6311937934075451}, {"determining": "( ( AMS / FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_Mem_Server / ( RRS - FirstVNF_CPU_Server ) ) * Max( ( MDR + Const ),MRS ) ) * FirstVNF_CPU ) * ( ( CRS + ( FirstVNF_Mem / Min( BR ,( FirstVNF_CPU + ( CRS - PN ) ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( ( ( MUR + RMSe ) - CS ) ,Min( MUR ,MUM ) ) - ( ( MLU + ( ( MUR * RCSe ) * ( CS + MLU ) ) ) - Min( RMSe ,( RMSe + MUR ) ) ) ) + ( RMSe / RRSe ) )", "obj1": 0.3652694610778443, "obj2": 0.5401696350757585}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( RRS - Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - ( Const - ( MRS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( ( Min( RCSe ,( MLU - MUC ) ) * ( Max( RMSe,MUR ) / ( DS * MLU ) ) ) * DS ) ) - ( RMSe / ( MUC - Max( RCSe,Min( MUM ,( ( MLU * MLU ) + Min( RCSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9441117764471058, "obj2": 0.022984986880860966}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( Max( ( AMS - CRS ),FirstVNF_Mem ) / MRS ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( RRSe / ( Min( RRSe ,( RRSe + MUM ) ) / RMSe ) ) / Max( DS,( DS / MUC ) ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( Max( Max( ARS,( FirstVNF_RAM - ( Min( ( MDR + ( AMS + FirstVNF_CPU ) ) ,( ( Const * ACS ) / FirstVNF_CPU ) ) / Max( MRS,MDR ) ) ) ),FirstVNF_Mem ) * ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( ( Max( MLU,MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( ( Min( Min( MLU ,RRSe ) ,( MUM * MUM ) ) * CS ) - ( DS - MUC ) ) ) ) + RRSe ) - ( CS - ( ( Min( Min( ( MUM / ( RMSe + RRSe ) ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.3093812375249501, "obj2": 0.6299227863446961}, {"determining": "( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Max( Min( Min( FirstVNF_Mem ,( ARS - BR ) ) ,PN ),FirstVNF_RAM ) ),FirstVNF_RAM ) ,PN ) - Min( FirstVNF_Mem ,Min( Max( MDR,( FirstVNF_CPU / ( FirstVNF_CPU / ( ( FirstVNF_RAM + ARS ) + AMS ) ) ) ) ,AMS ) ) )", "choosing": "Max( MUC,( ( ( ( ( Min( ( DS / MLU ) ,DS ) * CS ) / MUC ) / MUR ) + RMSe ) / ( Min( RCSe ,DS ) / MUR ) ) )", "obj1": 0.7684630738522954, "obj2": 0.09362274828472573}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( FirstVNF_CPU_Server / MDR ),( FirstVNF_RAM_Server / Max( MDR,FirstVNF_CPU_Server ) ) ) * ( DDR / DDR ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Min( MUR ,MUM ) ) - MUC ) + ( ( ( MUC - CS ) - ( MUC * MUR ) ) / ( ( ( RRSe / RMSe ) + MUR ) - ( MUR * ( MUM * MUR ) ) ) ) )", "obj1": 0.35728542914171657, "obj2": 0.5536475162431561}, {"determining": "( Min( Max( ( FirstVNF_CPU / ( FirstVNF_CPU / ( ARS - CRS ) ) ),( FirstVNF_CPU_Server + Max( ( RRS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ),Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) ,PN ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "Max( MUC,( ( RCSe - ( CS + MLU ) ) + Min( Max( ( ( ( MUM * ( RRSe - MUR ) ) / MUM ) * RMSe ),DS ) ,RMSe ) ) )", "obj1": 0.9720558882235529, "obj2": 0.012958623279042411}, {"determining": "( Max( ( ( FirstVNF_RAM / ( FirstVNF_RAM / ( PN - ( Max( BR,PN ) - Min( ARS ,FirstVNF_Mem ) ) ) ) ) * ( ( FirstVNF_RAM - BR ) * ( FirstVNF_CPU_Server / Const ) ) ),( Max( ( RRS / ( ( Min( DDR ,MRS ) / CRS ) * ( MDR / AMS ) ) ),FirstVNF_RAM ) + AMS ) ) * ( Const - ( ( Max( MDR,MDR ) / FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + ( RRS - FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MLU / ( ( MLU / MLU ) / Min( DS ,MUM ) ) ) - ( ( ( MLU / ( DS * MUC ) ) + RMSe ) + ( MLU + MUM ) ) )", "obj1": 0.9860279441117764, "obj2": 0.005218859424342161}, {"determining": "( Min( ( FirstVNF_RAM - BR ) ,( PN - ( ( BR * ( ( DDR + MRS ) * FirstVNF_RAM_Server ) ) * Max( ( MRS * ( ( DDR / ARS ) * ( FirstVNF_CPU_Server / Const ) ) ),( FirstVNF_CPU_Server + AMS ) ) ) ) ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "Max( MUC,( ( MUR * ( ( MUM + ( ( MUC * Min( DS ,DS ) ) - ( MUM - MUM ) ) ) + ( ( Max( MLU,RRSe ) + ( MUM / MUR ) ) / ( ( DS / CS ) * ( Max( MUM,DS ) * ( MUC + MUC ) ) ) ) ) ) + MLU ) )", "obj1": 0.9161676646706587, "obj2": 0.02964690713040377}, {"determining": "( Max( Max( ARS,Max( FirstVNF_CPU,RRS ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server + ( BR + ( FirstVNF_Mem_Server + PN ) ) ) - BR ) )", "choosing": "( ( ( Max( MLU,MUC ) + ( MUC + RRSe ) ) + Min( Min( MUR ,MLU ) ,RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( Max( ( CS - RRSe ),RMSe ) + DS ) ) / DS ) * MUM ) ) )", "obj1": 0.2834331337325349, "obj2": 0.6472237540826115}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / ( FirstVNF_CPU / Max( PN,FirstVNF_Mem_Server ) ) ) ) ) - Max( ACS,FirstVNF_Mem ) ) ,( ( Const - DDR ) / ( Max( ACS,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( ( ( DS - MUC ) / Max( DS,( RMSe + MUC ) ) ),MUC ) + Min( ( ( RMSe + MUC ) * ( MUM - CS ) ) ,( MLU / RCSe ) ) ) + ( MUM + RCSe ) ) - ( CS - ( ( Min( Min( ( MUM / MUC ) ,( MUR / MUC ) ) ,( ( CS / MUC ) / MUM ) ) / DS ) * MUM ) ) )", "obj1": 0.9840319361277445, "obj2": 0.006139005999611407}]}