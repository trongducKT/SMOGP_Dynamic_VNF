{"1": [{"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( ( FirstVNF_RAM * CRS ) + ( ARS / ARS ) )", "choosing": "Max( ( MUC * RRSe ),( MUR + RCSe ) )", "obj1": 0.3826429980276134, "obj2": 0.4985384665955343}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * Max( PN,FirstVNF_Mem ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe + DS ) )", "obj1": 0.49506903353057197, "obj2": 0.40837281859175417}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "Min( ( RMSe - MUC ) ,( RRSe * RMSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - RMSe ) - ( DS * MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.6408677802126818}, {"determining": "( ( ( FirstVNF_CPU - CRS ) / FirstVNF_Mem ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MUR - MLU ) - ( RCSe / MUR ) )", "obj1": 0.33530571992110453, "obj2": 0.539801925932531}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Min( CS ,MUC ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( PN,( CRS / CRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) + RCSe ) / RMSe ) * Min( MUR ,Min( RMSe ,RMSe ) ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "( ( ( DDR * CRS ) / ( MRS + Const ) ) * ( DDR - Min( ( MDR * ( ( BR + FirstVNF_Mem ) + DDR ) ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( ( ( ( MUC + MUR ) - RRSe ) / Max( MLU,RCSe ) ) / RCSe ) * MUC ) + ( CS - ( DS / ( Max( Max( MUR,RRSe ),MUM ) * DS ) ) ) ) * Max( DS,RRSe ) ) - ( ( MUR / MUR ) / ( CS / MLU ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7271207479952655}, {"determining": "Min( ( ( BR * BR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ) / ( ( RCSe / MUC ) - ( RRSe - MUR ) ) )", "obj1": 0.388560157790927, "obj2": 0.491856085194155}, {"determining": "Max( Min( RRS ,( MDR / ACS ) ),( ( ( MRS + FirstVNF_CPU_Server ) - ( ARS + ( ( DDR - ACS ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Min( MUC ,( ( MUC + RMSe ) - ( DS + Max( DS,( Min( RRSe ,CS ) - MUM ) ) ) ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.3668639053254438, "obj2": 0.5128884250551069}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( PN + FirstVNF_Mem ) )", "choosing": "( ( CS / ( RRSe * CS ) ) / ( ( RCSe / RMSe ) - Max( CS,RRSe ) ) )", "obj1": 0.34122287968441817, "obj2": 0.5367148589119546}, {"determining": "( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( CS * MUR ) ) - ( CS - RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.49416996859127393}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + ( MDR * PN ) ) ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( RCSe * RRSe ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "Max( Min( Max( CRS,CRS ) ,Const ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( ( ( RMSe * Min( RCSe ,MUR ) ) + Max( DS,( ( DS - RCSe ) * CS ) ) ),CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.9191321499013807, "obj2": 0.06743178074933454}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU + ACS ) - MDR ) )", "choosing": "Min( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( ( ( MLU * MLU ) - Max( DS,RRSe ) ) + ( Max( MUM,DS ) * Max( MLU,MLU ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5511007440324186}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / Const ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( RMSe,MUM ),( RMSe + RCSe ) ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - RMSe ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS + Max( ( FirstVNF_CPU / CRS ),Const ) ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( Max( MUM,RRSe ) + CS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( DDR + CRS ) - ( ( ( BR - BR ) - Max( FirstVNF_Mem,Min( Const ,FirstVNF_RAM ) ) ) / AMS ) )", "choosing": "Min( ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( ( Min( RMSe ,MUM ) - ( DS + MUC ) ) / Min( MUR ,CS ) ) ) ,Min( ( ( DS - MUM ) - Max( MUC,MLU ) ) ,( ( RRSe - RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.501032620754479}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}], "2": [{"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * Max( PN,FirstVNF_Mem ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe + DS ) )", "obj1": 0.49506903353057197, "obj2": 0.40837281859175417}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "Min( ( RMSe - MUC ) ,( RRSe * RMSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - RMSe ) - ( DS * MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.6408677802126818}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Min( CS ,MUC ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( PN,( CRS / CRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) + RCSe ) / RMSe ) * Min( MUR ,Min( RMSe ,RMSe ) ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( PN + FirstVNF_Mem ) )", "choosing": "( ( CS / ( RRSe * CS ) ) / ( ( RCSe / RMSe ) - Max( CS,RRSe ) ) )", "obj1": 0.34122287968441817, "obj2": 0.5367148589119546}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + ( MDR * PN ) ) ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( RCSe * RRSe ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU + ACS ) - MDR ) )", "choosing": "Min( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( ( ( MLU * MLU ) - Max( DS,RRSe ) ) + ( Max( MUM,DS ) * Max( MLU,MLU ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5511007440324186}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / Const ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( RMSe,MUM ),( RMSe + RCSe ) ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - RMSe ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS + Max( ( FirstVNF_CPU / CRS ),Const ) ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( Max( MUM,RRSe ) + CS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + Const ) * ( PN / Min( MRS ,CRS ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC / ( ( RCSe + ( DS / DS ) ) - CS ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - MUM ) * ( MUM + RMSe ) ) ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.3431952662721893, "obj2": 0.5165860923953617}, {"determining": "( ( Const - MDR ) - ( MDR / BR ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.002649360128477863}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS + RRS ) ,Min( MRS ,Max( ( DDR * Min( ACS ,BR ) ),( Const * CRS ) ) ) )", "choosing": "( ( MLU / MUM ) - ( CS * RRSe ) )", "obj1": 0.368836291913215, "obj2": 0.488668243746931}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - MDR ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU ) ) / PN ) ) ) ) )", "choosing": "Min( Max( ( ( ( RRSe / DS ) / ( DS * MUR ) ) / MUR ),MUC ) ,MUR )", "obj1": 0.9092702169625246, "obj2": 0.06702704944867241}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + CRS ) * CRS ) ,( DDR - ( PN * CRS ) ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( MUR + MUM ) )", "obj1": 0.2504930966469428, "obj2": 0.6204227473744892}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + MUC ) ) * ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7109144848100316}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + PN ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( PN * ( BR + FirstVNF_CPU ) ) * RRS ) ) )", "choosing": "( ( ( CS + ( MLU - MLU ) ) / RRSe ) / ( DS - Min( CS ,MUM ) ) )", "obj1": 0.2465483234714004, "obj2": 0.6336044074016505}, {"determining": "( Min( ( ( MRS / FirstVNF_RAM ) / ( DDR * FirstVNF_CPU_Server ) ) ,( ( Const * PN ) * ( ACS / DDR ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + RMSe ) ) ) ,( MUC * RRSe ) )", "obj1": 0.6015779092702169, "obj2": 0.2793985603734113}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN * Min( CRS ,CRS ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / Max( Max( FirstVNF_CPU,AMS ),( Max( MRS,ARS ) - FirstVNF_CPU ) ) ) )", "choosing": "( MUC - Max( Max( CS,( ( ( ( RRSe / ( MUM * DS ) ) - MLU ) * MUM ) / ( ( Min( ( MUR - MUR ) ,MUM ) * MUC ) * MUC ) ) ),CS ) )", "obj1": 0.3214990138067061, "obj2": 0.5386211403540165}, {"determining": "Max( Min( RRS ,( MDR / ACS ) ),( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.33925049309664695, "obj2": 0.5372918425126776}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( FirstVNF_RAM * AMS ) ,( ( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) ) - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - Max( ( ( Max( CS,MUC ) * DS ) - RCSe ),RMSe ) )", "obj1": 0.29191321499013806, "obj2": 0.5583149325790238}, {"determining": "Max( Max( FirstVNF_CPU,AMS ),Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe + MUR ) ,( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) )", "obj1": 0.3076923076923077, "obj2": 0.55733886106933}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server )", "choosing": "Min( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( ( ( MLU * MLU ) - Max( DS,RRSe ) ) + ( ( RMSe * DS ) * Max( MLU,MLU ) ) ) )", "obj1": 0.3905325443786982, "obj2": 0.48483842993858567}, {"determining": "Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - ( BR / ARS ) ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( ( MUC + MUR ),RMSe ) ) + ( DS * RRSe ) )", "obj1": 0.5641025641025641, "obj2": 0.3228695299522902}, {"determining": "( ( MRS - DDR ) * ( ( ( PN / RRS ) + MDR ) / PN ) )", "choosing": "( ( MUM * MUC ) / ( ( RCSe - RMSe ) - ( Max( ( MUR - MUM ),( MUC / ( DS / MUC ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "( Max( Max( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + AMS ) * Const ) + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( ( PN * FirstVNF_CPU ) * ACS ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( RCSe * ( CS / MLU ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.5073621614849285}, {"determining": "( ( ( DDR * CRS ) / ( MRS + Const ) ) * Min( ( Const / RRS ) ,( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( ( RRSe - MUR ) ,( MUC + CS ) ) - MUC )", "obj1": 0.3234714003944773, "obj2": 0.5377124475397647}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + Max( AMS,RRS ) ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) )", "choosing": "Min( ( Max( ( ( RCSe * RMSe ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MRS ) * DDR ) - Min( ( ( MRS * DDR ) - Min( ( ( MDR / FirstVNF_CPU ) - AMS ) ,MDR ) ) ,MDR ) )", "choosing": "( ( MUR + MUC ) / ( RCSe / CS ) )", "obj1": 0.3865877712031558, "obj2": 0.4876313524807855}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - MDR ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU ) ) / PN ) ) ) ) )", "choosing": "Min( Max( ( ( ( RRSe / DS ) / ( DS * MUR ) ) / MUR ),MUC ) ,MUR )", "obj1": 0.9092702169625246, "obj2": 0.06702704944867241}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + MUC ) ) * ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7109144848100316}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Max( MDR,RRS ) ) + ( ( DDR * CRS ) / ( MRS + Const ) ) )", "choosing": "( ( ( RRSe + ( ( ( ( ( RRSe + MUR ) - RRSe ) / Max( MLU,RCSe ) ) / RCSe ) * MUC ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7366829671104831}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( PN,( CRS / CRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) + RCSe ) / RMSe ) * Min( MUR ,Min( RMSe ,RMSe ) ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( Min( ( ( MRS / FirstVNF_RAM ) / ( DDR * FirstVNF_CPU_Server ) ) ,( ( Const * PN ) * ( ACS / DDR ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + RMSe ) ) ) ,( MUC * RRSe ) )", "obj1": 0.6015779092702169, "obj2": 0.2793985603734113}, {"determining": "( ( Const - MDR ) - ( MDR / BR ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.002649360128477863}, {"determining": "( ( DDR - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6168962916433769}, {"determining": "Min( ( ACS + RRS ) ,Min( MRS ,Max( ( DDR * Min( ACS ,BR ) ),( Const * CRS ) ) ) )", "choosing": "( ( MLU / MUM ) - ( CS * RRSe ) )", "obj1": 0.368836291913215, "obj2": 0.488668243746931}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / Max( Max( FirstVNF_CPU,AMS ),( ( RRS - ( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ) / AMS ) ) - FirstVNF_CPU ) ) ) )", "choosing": "( MUC - Max( Max( CS,( ( ( ( RRSe / CS ) - MLU ) * MUM ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3806706114398422, "obj2": 0.4621487542347004}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Min( CS ,MUC ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "( ( MDR * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC / CS ) + CS ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.5838264299802761, "obj2": 0.310535495682509}, {"determining": "( ( RRS * ( FirstVNF_RAM / CRS ) ) + Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - ( PN * CRS ) ) ) )", "choosing": "( Max( ( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / Min( ( MUM / MUM ) ,RCSe ) ) ) ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + MLU ) + RMSe ) )", "obj1": 0.4911242603550296, "obj2": 0.40168235479605446}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "Max( ( AMS / Const ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( RMSe,MUM ),( RMSe + RCSe ) ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - RMSe ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + ( MDR * PN ) ) ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( RCSe * RRSe ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "( Max( Max( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + AMS ) * Const ) + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( ( PN * FirstVNF_CPU ) * ACS ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( RCSe * ( CS / MLU ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.5073621614849285}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "Max( Min( ( FirstVNF_RAM * AMS ) ,( ( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) ) - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - Max( ( ( Max( CS,MUC ) * DS ) - RCSe ),RMSe ) )", "obj1": 0.29191321499013806, "obj2": 0.5583149325790238}, {"determining": "( ( Max( ( CRS + Max( ( FirstVNF_CPU / CRS ),Const ) ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( Max( MUM,RRSe ) + CS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Max( Min( BR ,RRS ),( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( ( MUM + MUC ),( MUC + ( DS * RRSe ) ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.33136094674556216, "obj2": 0.5287251380878397}, {"determining": "Min( ( ( PN * Min( CRS ,CRS ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / Max( Max( FirstVNF_CPU,AMS ),( Max( MRS,ARS ) - FirstVNF_CPU ) ) ) )", "choosing": "( MUC - Max( Max( CS,( ( ( ( RRSe / ( MUM * DS ) ) - MLU ) * MUM ) / ( ( Min( ( MUR - MUR ) ,MUM ) * MUC ) * MUC ) ) ),CS ) )", "obj1": 0.3214990138067061, "obj2": 0.5386211403540165}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( PN,( CRS / CRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) + RCSe ) / RMSe ) * Min( MUR ,Min( RMSe ,RMSe ) ) )", "obj1": 0.5779092702169625, "obj2": 0.32089826719831743}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( ( PN * FirstVNF_RAM_Server ) * ACS ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - ( MUM * MLU ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3037475345167653, "obj2": 0.5504523672286087}, {"determining": "( ( ( MRS + Const ) * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC / CS ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - MUM ) * Max( ( RRSe / RRSe ),( Max( MUM,RRSe ) + ( DS * MLU ) ) ) ) ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.34122287968441817, "obj2": 0.521166857920178}, {"determining": "( Max( Max( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + AMS ) * Const ) + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( ( PN * FirstVNF_CPU ) * ACS ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( RCSe * ( CS / MLU ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3037475345167653, "obj2": 0.5504523672286087}, {"determining": "( ( ( CRS + Const ) * ( PN / Min( MRS ,CRS ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC / ( ( RCSe + ( DS / DS ) ) - CS ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - MUM ) * ( MUM + RMSe ) ) ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.3431952662721893, "obj2": 0.5165860923953617}, {"determining": "Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - ( BR / ARS ) ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( ( MUC + MUR ),RMSe ) ) + ( DS * RRSe ) )", "obj1": 0.5641025641025641, "obj2": 0.3228695299522902}, {"determining": "( ( ( DDR * CRS ) / ( MRS + Const ) ) * Min( ( Const / RRS ) ,( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) ) )", "choosing": "( Min( ( RRSe - MUR ) ,( MUC + CS ) ) - MUC )", "obj1": 0.3234714003944773, "obj2": 0.5377124475397647}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) * ( ( ( PN / RRS ) + MDR ) / PN ) )", "choosing": "( ( MUM * MUC ) / ( ( RCSe - RMSe ) - ( Max( ( MUR - MUM ),( MUC / ( DS / MUC ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + Max( AMS,RRS ) ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) )", "choosing": "Min( ( Max( ( ( RCSe * RMSe ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - Max( ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( Min( AMS ,( FirstVNF_RAM * Const ) ) * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,( MUR + ( RMSe - ( ( ( MUR * ( MUM - MUR ) ) - MLU ) / RCSe ) ) ) ) / ( MUR / ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RMSe + MUR ) ,( ( RCSe - MUC ) - Max( Max( CS,( Min( MUR ,CS ) + MUM ) ),CS ) ) ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( DS ,MUM ) - ( CS * RMSe ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * DDR ) ,( DDR - ( BR - Max( ARS,RRS ) ) ) )", "choosing": "( ( RCSe - Min( ( CS / ( ( ( Min( MUM ,DS ) * ( RRSe / MUM ) ) * ( RMSe + MUM ) ) * MUM ) ) ,( MUM + MLU ) ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / ( DS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MRS + Const ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( CS - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,( ( Min( Const ,( ( FirstVNF_RAM * MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / DDR ) * DDR ) ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,Max( RMSe,MUR ) ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Const / ( Min( MRS ,RRS ) - ( ( ( ( FirstVNF_Mem_Server * RRS ) + ( Const / FirstVNF_CPU ) ) / DDR ) * CRS ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( RRSe + MUM ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) + Max( CRS,PN ) )", "choosing": "( Max( ( ( MLU - DS ) / ( DS - ( MUM / MUR ) ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + MLU ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MLU ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / MRS ) ,Max( FirstVNF_RAM_Server,( ( MRS - Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) ) * ( Const / PN ) ) ) )", "choosing": "Min( Max( Min( ( Max( ( DS - DS ),MLU ) + DS ) ,MUC ),DS ) ,( DS / Max( DS,( ( Max( DS,( MUC + ( DS - MUM ) ) ) + Min( ( CS / Max( RCSe,MUC ) ) ,RMSe ) ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( DDR ,( Max( ( ( RRS * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( RRS ,Const ) ),( PN / FirstVNF_RAM ) ) / AMS ) ),DDR ) ,( ( ( Max( MRS,MDR ) + RRS ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) ) / ( ( MUM * DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / ( RRS * ( FirstVNF_Mem / CRS ) ) ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) / ( MUR * Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( MUM + MUC ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - ( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUR ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( FirstVNF_CPU_Server + Max( ( AMS * MRS ),FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "Min( ( ( ( MUR + ( Max( ( RRSe / RRSe ),( Max( MUM,RRSe ) + ( DS * MLU ) ) ) * RMSe ) ) / ( MUC + MLU ) ) - MLU ) ,( MUC + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - CRS ) * DDR ) - Min( MRS ,DDR ) )", "choosing": "( ( Min( MUM ,MUR ) + DS ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - MDR ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU ) ) / PN ) ) ) ) )", "choosing": "Min( Max( ( ( ( RRSe / DS ) / ( DS * MUR ) ) / MUR ),MUC ) ,MUR )", "obj1": 0.9092702169625246, "obj2": 0.06702704944867241}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( CS - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.534861099674504}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( PN,( CRS / CRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) + RCSe ) / RMSe ) * Min( MUR ,Min( RMSe ,RMSe ) ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Min( ( FirstVNF_RAM * Max( ARS,FirstVNF_CPU_Server ) ) ,( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) + PN ) / MDR ) )", "choosing": "( ( Min( RRSe ,Min( MUM ,MUM ) ) - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.33136094674556216, "obj2": 0.516376115470736}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "( ( DDR - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6168962916433769}, {"determining": "Max( Min( BR ,RRS ),( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( ( MUM + MUC ),( MUC + ( DS * RRSe ) ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.13214990138067062, "obj2": 0.7333881491363236}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "Min( ( ACS + RRS ) ,Min( MRS ,Max( ( DDR * Min( ACS ,BR ) ),( Const * CRS ) ) ) )", "choosing": "( ( MLU / MUM ) - ( CS * RRSe ) )", "obj1": 0.368836291913215, "obj2": 0.488668243746931}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - ( AMS - MRS ) ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * ( ( AMS + BR ) / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( Min( MUC ,( ( Max( MUC,Max( RCSe,RCSe ) ) - ( ( DS + RRSe ) * RCSe ) ) / Max( CS,MUC ) ) ),( ( ( Max( DS,MUR ) + ( RMSe * DS ) ) * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.17751479289940827, "obj2": 0.7193740230105613}, {"determining": "( ( RRS * ( FirstVNF_RAM / CRS ) ) + Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - ( PN * CRS ) ) ) )", "choosing": "( Max( ( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / Min( ( MUM / MUM ) ,RCSe ) ) ) ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + MLU ) + RMSe ) )", "obj1": 0.4911242603550296, "obj2": 0.40168235479605446}, {"determining": "( Max( Max( ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) + AMS ) * Const ) + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( ( PN * FirstVNF_CPU ) * ACS ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( RCSe * ( CS / MLU ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.5073621614849285}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "Max( ( AMS / Const ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( RMSe,MUM ),( RMSe + RCSe ) ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - RMSe ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + ( MDR * PN ) ) ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( RCSe * RRSe ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Max( MDR,RRS ) ) + ( ( DDR * CRS ) / ( MRS + Const ) ) )", "choosing": "( ( ( RRSe + ( ( ( ( ( RRSe + MUR ) - RRSe ) / Max( MLU,RCSe ) ) / RCSe ) * MUC ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7366829671104831}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),Max( ( RCSe / RMSe ),( MUR / CS ) ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) )", "obj1": 0.5857988165680473, "obj2": 0.2868503839840929}, {"determining": "Min( ( ( ( ( MRS + FirstVNF_CPU_Server ) - ( ARS + ( ( DDR - ACS ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( MDR * PN ) ) * PN ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / ( ARS / Const ) ) )", "choosing": "( MUR - Max( Min( RRSe ,CS ),CS ) )", "obj1": 0.571992110453649, "obj2": 0.30345444800566024}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + MUC ) ) * ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7109144848100316}, {"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( Min( ( ( MRS / FirstVNF_RAM ) / ( DDR * FirstVNF_CPU_Server ) ) ,( ( Const * PN ) * ( ACS / DDR ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + RMSe ) ) ) ,( MUC * RRSe ) )", "obj1": 0.6015779092702169, "obj2": 0.2793985603734113}, {"determining": "Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Min( CS ,MUC ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "( ( Max( ( CRS + Max( ( FirstVNF_CPU / CRS ),Const ) ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( Max( MUM,RRSe ) + CS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / Max( Max( FirstVNF_CPU,AMS ),( ( RRS - ( ( ( BR - ARS ) - ( FirstVNF_RAM - BR ) ) / AMS ) ) - FirstVNF_CPU ) ) ) )", "choosing": "( MUC - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3727810650887574, "obj2": 0.4627337989743222}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - ( ( ( MUC + MUR ) - RRSe ) / Max( MLU,RCSe ) ) ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5680473372781065, "obj2": 0.31764652687071604}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / Max( Max( FirstVNF_CPU,AMS ),( ( RRS - ( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ) / AMS ) ) - FirstVNF_CPU ) ) ) )", "choosing": "( MUC - Max( Max( CS,( ( ( ( RRSe / CS ) - MLU ) * MUM ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3806706114398422, "obj2": 0.4621487542347004}, {"determining": "Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - ( BR / ARS ) ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( ( MUC + MUR ),RMSe ) ) + ( DS * RRSe ) )", "obj1": 0.5641025641025641, "obj2": 0.3228695299522902}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) * ( ( ( PN / RRS ) + MDR ) / PN ) )", "choosing": "( ( MUM * MUC ) / ( ( RCSe - RMSe ) - ( Max( ( MUR - MUM ),( MUC / ( DS / MUC ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + Max( AMS,RRS ) ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) )", "choosing": "Min( ( Max( ( ( RCSe * RMSe ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - Max( ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( Min( AMS ,( FirstVNF_RAM * Const ) ) * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,( MUR + ( RMSe - ( ( ( MUR * ( MUM - MUR ) ) - MLU ) / RCSe ) ) ) ) / ( MUR / ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RMSe + MUR ) ,( ( RCSe - MUC ) - Max( Max( CS,( Min( MUR ,CS ) + MUM ) ),CS ) ) ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( DS ,MUM ) - ( CS * RMSe ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * DDR ) ,( DDR - ( BR - Max( ARS,RRS ) ) ) )", "choosing": "( ( RCSe - Min( ( CS / ( ( ( Min( MUM ,DS ) * ( RRSe / MUM ) ) * ( RMSe + MUM ) ) * MUM ) ) ,( MUM + MLU ) ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / ( DS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MRS + Const ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( CS - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,( ( Min( Const ,( ( FirstVNF_RAM * MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / DDR ) * DDR ) ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,Max( RMSe,MUR ) ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Const / ( Min( MRS ,RRS ) - ( ( ( ( FirstVNF_Mem_Server * RRS ) + ( Const / FirstVNF_CPU ) ) / DDR ) * CRS ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( RRSe + MUM ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) + Max( CRS,PN ) )", "choosing": "( Max( ( ( MLU - DS ) / ( DS - ( MUM / MUR ) ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + MLU ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MLU ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / MRS ) ,Max( FirstVNF_RAM_Server,( ( MRS - Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) ) * ( Const / PN ) ) ) )", "choosing": "Min( Max( Min( ( Max( ( DS - DS ),MLU ) + DS ) ,MUC ),DS ) ,( DS / Max( DS,( ( Max( DS,( MUC + ( DS - MUM ) ) ) + Min( ( CS / Max( RCSe,MUC ) ) ,RMSe ) ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( DDR ,( Max( ( ( RRS * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( RRS ,Const ) ),( PN / FirstVNF_RAM ) ) / AMS ) ),DDR ) ,( ( ( Max( MRS,MDR ) + RRS ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) ) / ( ( MUM * DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / ( RRS * ( FirstVNF_Mem / CRS ) ) ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) / ( MUR * Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( MUM + MUC ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - ( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUR ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( FirstVNF_CPU_Server + Max( ( AMS * MRS ),FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "Min( ( ( ( MUR + ( Max( ( RRSe / RRSe ),( Max( MUM,RRSe ) + ( DS * MLU ) ) ) * RMSe ) ) / ( MUC + MLU ) ) - MLU ) ,( MUC + CS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( CRS * ( FirstVNF_Mem_Server - MDR ) ),( FirstVNF_Mem_Server / ARS ) ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + ( ( PN * ( FirstVNF_RAM * FirstVNF_CPU ) ) / PN ) ) ) ) )", "choosing": "Min( Max( ( ( ( RRSe / DS ) / ( DS * MUR ) ) / MUR ),MUC ) ,MUR )", "obj1": 0.9092702169625246, "obj2": 0.06702704944867241}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( PN,( CRS / CRS ) ) ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS * RCSe ) + RCSe ) / RMSe ) * Min( MUR ,Min( RMSe ,RMSe ) ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "( ( Max( ( CRS + Max( MRS,Const ) ),( FirstVNF_RAM_Server / ( ( BR - ARS ) - ( FirstVNF_RAM - BR ) ) ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.36911773587158825}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( CS - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.534861099674504}, {"determining": "Min( ( FirstVNF_RAM * Max( ARS,FirstVNF_CPU_Server ) ) ,( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) + PN ) / MDR ) )", "choosing": "( ( Min( RRSe ,Min( MUM ,MUM ) ) - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.33136094674556216, "obj2": 0.516376115470736}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( ( MUM * MUC ) / RRSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RMSe - MUR ) + MUC ) * Min( MLU ,Max( CS,MLU ) ) ) ) / ( MLU * MUC ) ) ),( DS - ( MUM * ( ( RMSe * RRSe ) + RMSe ) ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.4735848404972891}, {"determining": "( ( DDR - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6168962916433769}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "Max( Min( BR ,RRS ),( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( ( MUM + MUC ),( MUC + ( DS * RRSe ) ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.13214990138067062, "obj2": 0.7333881491363236}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - ( AMS - MRS ) ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * ( ( AMS + BR ) / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( Min( MUC ,( ( Max( MUC,Max( RCSe,RCSe ) ) - ( ( DS + RRSe ) * RCSe ) ) / Max( CS,MUC ) ) ),( ( ( Max( DS,MUR ) + ( RMSe * DS ) ) * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.17751479289940827, "obj2": 0.7193740230105613}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 0.2564102564102564, "obj2": 0.5995133429586851}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Max( MDR,RRS ) ) + ( ( DDR * CRS ) / ( MRS + Const ) ) )", "choosing": "( ( ( RRSe + ( ( ( ( ( RRSe + MUR ) - RRSe ) / Max( MLU,RCSe ) ) / RCSe ) * MUC ) ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7366829671104831}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + MUC ) ) * ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7109144848100316}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "( ( Max( ( CRS + Max( ( FirstVNF_CPU / CRS ),Const ) ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( Max( MUM,RRSe ) + CS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) * ( ( ( PN / RRS ) + MDR ) / PN ) )", "choosing": "( ( MUM * MUC ) / ( ( RCSe - RMSe ) - ( Max( ( MUR - MUM ),( MUC / ( DS / MUC ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + Max( AMS,RRS ) ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) )", "choosing": "Min( ( Max( ( ( RCSe * RMSe ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - Max( ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( Min( AMS ,( FirstVNF_RAM * Const ) ) * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,( MUR + ( RMSe - ( ( ( MUR * ( MUM - MUR ) ) - MLU ) / RCSe ) ) ) ) / ( MUR / ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RMSe + MUR ) ,( ( RCSe - MUC ) - Max( Max( CS,( Min( MUR ,CS ) + MUM ) ),CS ) ) ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( DS ,MUM ) - ( CS * RMSe ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * DDR ) ,( DDR - ( BR - Max( ARS,RRS ) ) ) )", "choosing": "( ( RCSe - Min( ( CS / ( ( ( Min( MUM ,DS ) * ( RRSe / MUM ) ) * ( RMSe + MUM ) ) * MUM ) ) ,( MUM + MLU ) ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / ( DS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MRS + Const ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( CS - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,( ( Min( Const ,( ( FirstVNF_RAM * MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / DDR ) * DDR ) ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,Max( RMSe,MUR ) ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Const / ( Min( MRS ,RRS ) - ( ( ( ( FirstVNF_Mem_Server * RRS ) + ( Const / FirstVNF_CPU ) ) / DDR ) * CRS ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( RRSe + MUM ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) + Max( CRS,PN ) )", "choosing": "( Max( ( ( MLU - DS ) / ( DS - ( MUM / MUR ) ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + MLU ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MLU ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / MRS ) ,Max( FirstVNF_RAM_Server,( ( MRS - Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) ) * ( Const / PN ) ) ) )", "choosing": "Min( Max( Min( ( Max( ( DS - DS ),MLU ) + DS ) ,MUC ),DS ) ,( DS / Max( DS,( ( Max( DS,( MUC + ( DS - MUM ) ) ) + Min( ( CS / Max( RCSe,MUC ) ) ,RMSe ) ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( DDR ,( Max( ( ( RRS * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( RRS ,Const ) ),( PN / FirstVNF_RAM ) ) / AMS ) ),DDR ) ,( ( ( Max( MRS,MDR ) + RRS ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) ) / ( ( MUM * DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / ( RRS * ( FirstVNF_Mem / CRS ) ) ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) / ( MUR * Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( MUM + MUC ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - ( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUR ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( FirstVNF_CPU_Server + Max( ( AMS * MRS ),FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "Min( ( ( ( MUR + ( Max( ( RRSe / RRSe ),( Max( MUM,RRSe ) + ( DS * MLU ) ) ) * RMSe ) ) / ( MUC + MLU ) ) - MLU ) ,( MUC + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( DDR ,( Max( ( ( RRS * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( RRS ,DDR ) ),( PN / FirstVNF_RAM ) ) / AMS ) ),DDR ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ( FirstVNF_RAM_Server - ACS ) ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * MUM ) / ( ( MUM / CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( ( MUR * ( MUM - MUR ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( ( PN * ( BR + FirstVNF_CPU ) ),( Min( MRS ,FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( DS ,MUM ) - ( CS * RMSe ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / ( RRS * ( FirstVNF_RAM / CRS ) ) ) - ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) / ( MUR * ( Max( ( ( MLU - DS ) / ( RMSe + DS ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + Min( RCSe ,RCSe ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - ( PN * CRS ) ) ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ( AMS - ( ( Min( ARS ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * RRS ) / ( PN + FirstVNF_CPU_Server ) ) ) ,Max( MDR,MDR ) )", "choosing": "( Max( ( ( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ) / ( RCSe * RCSe ) ) / ( RCSe / ( ( RRSe / ( CS / ( RMSe / RMSe ) ) ) - MUC ) ) ),MLU ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( AMS - MRS ) + Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ) )", "choosing": "( Max( DS,DS ) + ( MLU * DS ) )", "obj1": 0.6942800788954635, "obj2": 0.2156478741629212}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) / ( ( BR * CRS ) - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) ) ) )", "choosing": "Min( Max( ( ( Max( DS,( MUC + ( DS - MUM ) ) ) + Min( ( CS / Max( RCSe,MUC ) ) ,RMSe ) ) + DS ),MUC ) ,MUR )", "obj1": 0.9072978303747534, "obj2": 0.06465697863822345}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "( ( FirstVNF_RAM - ( ( Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * ( CS * RCSe ) ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 0.4358974358974359, "obj2": 0.40807959807058514}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "( ( Max( ( CRS + Max( MRS,Const ) ),( FirstVNF_RAM_Server / ( ( BR - ARS ) - ( FirstVNF_RAM - BR ) ) ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.36911773587158825}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "Min( ( FirstVNF_RAM * Max( ARS,FirstVNF_CPU_Server ) ) ,( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) + PN ) / MDR ) )", "choosing": "( ( Min( RRSe ,Min( MUM ,MUM ) ) - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.33136094674556216, "obj2": 0.516376115470736}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,( ( ACS + FirstVNF_CPU_Server ) + Min( AMS ,ACS ) ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( MUM * RCSe ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "( ( DDR - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6168962916433769}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( ( MUM * MUC ) / RRSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RMSe - MUR ) + MUC ) * Min( MLU ,Max( CS,MLU ) ) ) ) / ( MLU * MUC ) ) ),( DS - ( MUM * ( ( RMSe * RRSe ) + RMSe ) ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.4735848404972891}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.33727810650887574, "obj2": 0.48993402358791416}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7348078091451791}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( ARS - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + PN ) ) )", "choosing": "( ( ( CS + RCSe ) + ( MUR + MUC ) ) * ( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7109144848100316}, {"determining": "Max( Min( BR ,RRS ),( Const * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.14398422090729784, "obj2": 0.7258273359268482}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7296054837325783}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( ( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ),DS ) + ( RMSe * DS ) )", "obj1": 0.15384615384615385, "obj2": 0.7212858516650893}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - ( AMS - MRS ) ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * ( ( AMS + BR ) / AMS ) ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( Min( MUC ,( ( Max( MUC,Max( RCSe,RCSe ) ) - ( ( DS + RRSe ) * RCSe ) ) / Max( CS,MUC ) ) ),( ( ( Max( DS,MUR ) + ( RMSe * DS ) ) * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.17751479289940827, "obj2": 0.7193740230105613}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) * ( ( ( PN / RRS ) + MDR ) / PN ) )", "choosing": "( ( MUM * MUC ) / ( ( RCSe - RMSe ) - ( Max( ( MUR - MUM ),( MUC / ( DS / MUC ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + Max( AMS,RRS ) ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) )", "choosing": "Min( ( Max( ( ( RCSe * RMSe ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - Max( ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( Min( AMS ,( FirstVNF_RAM * Const ) ) * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,( MUR + ( RMSe - ( ( ( MUR * ( MUM - MUR ) ) - MLU ) / RCSe ) ) ) ) / ( MUR / ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RMSe + MUR ) ,( ( RCSe - MUC ) - Max( Max( CS,( Min( MUR ,CS ) + MUM ) ),CS ) ) ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( DS ,MUM ) - ( CS * RMSe ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * DDR ) ,( DDR - ( BR - Max( ARS,RRS ) ) ) )", "choosing": "( ( RCSe - Min( ( CS / ( ( ( Min( MUM ,DS ) * ( RRSe / MUM ) ) * ( RMSe + MUM ) ) * MUM ) ) ,( MUM + MLU ) ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / ( DS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MRS + Const ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( CS - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,( ( Min( Const ,( ( FirstVNF_RAM * MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / DDR ) * DDR ) ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,Max( RMSe,MUR ) ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Const / ( Min( MRS ,RRS ) - ( ( ( ( FirstVNF_Mem_Server * RRS ) + ( Const / FirstVNF_CPU ) ) / DDR ) * CRS ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( RRSe + MUM ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) + Max( CRS,PN ) )", "choosing": "( Max( ( ( MLU - DS ) / ( DS - ( MUM / MUR ) ) ),RRSe ) + ( ( Min( ( DS + MLU ) ,( MLU + MUR ) ) + MLU ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / MLU ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / MRS ) ,Max( FirstVNF_RAM_Server,( ( MRS - Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) ) * ( Const / PN ) ) ) )", "choosing": "Min( Max( Min( ( Max( ( DS - DS ),MLU ) + DS ) ,MUC ),DS ) ,( DS / Max( DS,( ( Max( DS,( MUC + ( DS - MUM ) ) ) + Min( ( CS / Max( RCSe,MUC ) ) ,RMSe ) ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( DDR ,( Max( ( ( RRS * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( RRS ,Const ) ),( PN / FirstVNF_RAM ) ) / AMS ) ),DDR ) ,( ( ( Max( MRS,MDR ) + RRS ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) ) / ( ( MUM * DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / ( RRS * ( FirstVNF_Mem / CRS ) ) ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) / ( MUR * Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * Max( FirstVNF_Mem,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUM ) ) / ( MUC + ( DS * RRSe ) ) ) / ( MUM + MUC ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ARS ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - ( Const * ( BR * Min( RRS ,( MDR / ACS ) ) ) ) ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * Min( RRSe ,( ( ( ( MLU + DS ) / ( MUR / MUR ) ) / ( MUC + ( DS * RRSe ) ) ) / Max( RRSe,( RCSe - MUR ) ) ) ) ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( ( FirstVNF_CPU_Server + Max( ( AMS * MRS ),FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "Min( ( ( ( MUR + ( Max( ( RRSe / RRSe ),( Max( MUM,RRSe ) + ( DS * MLU ) ) ) * RMSe ) ) / ( MUC + MLU ) ) - MLU ) ,( MUC + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( DDR ,( Max( ( ( RRS * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) + Min( RRS ,DDR ) ),( PN / FirstVNF_RAM ) ) / AMS ) ),DDR ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ( FirstVNF_RAM_Server - ACS ) ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * MUM ) / ( ( MUM / CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,( RRS / Max( ACS,( MRS / ACS ) ) ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,Max( RCSe,MUR ) ) - Min( ( MUR / MUC ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( Min( ARS ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * RRS ) / ( PN + FirstVNF_CPU_Server ) ) ) ,Max( MDR,MDR ) )", "choosing": "( Max( ( ( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ) / ( RCSe * RCSe ) ) / ( RCSe / ( ( RRSe / ( CS / ( RMSe / RMSe ) ) ) - MUC ) ) ),MLU ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 0.73767258382643, "obj2": 0.2095494001310394}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) / ( ( BR * CRS ) - FirstVNF_RAM_Server ) ),( ( ( ARS * Max( Min( FirstVNF_CPU_Server ,MDR ),Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) ) ) )", "choosing": "Min( Max( ( MLU + RRSe ),MUC ) ,MUR )", "obj1": 0.9171597633136095, "obj2": 0.0627344874019474}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "( ( Max( ( CRS + Max( MRS,Const ) ),( FirstVNF_RAM_Server / ( ( BR - ARS ) - ( FirstVNF_RAM - BR ) ) ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.36911773587158825}, {"determining": "( ( FirstVNF_RAM - ( ( Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * ( CS * RCSe ) ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 0.4358974358974359, "obj2": 0.40807959807058514}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / ( DS + RRSe ) ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5137094060946932}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.33727810650887574, "obj2": 0.48993402358791416}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( ( ( ACS - ( CRS + Max( ARS,ARS ) ) ) + ARS ) - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( DS / DS ) / Min( MLU ,( ( MUR / Min( ( CS * MLU ) ,( RMSe * DS ) ) ) + MUM ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "( ( AMS - MRS ) + Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ) )", "choosing": "( Max( DS,DS ) + ( MLU * DS ) )", "obj1": 0.6942800788954635, "obj2": 0.2156478741629212}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( Max( ( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ),( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( ( ( DS - Max( RRSe,Min( RCSe ,DS ) ) ) / ( MUR * Min( DS ,MUC ) ) ) ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4233629249901293}, {"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13609467455621302, "obj2": 0.7187618261939656}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU,Const ) + Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - ( RMSe + MUM ) ) ) ) ) + RMSe ) - ( RMSe * MUR ) ) / ( MLU * MUM ) )", "obj1": 0.16568047337278108, "obj2": 0.6995906024271047}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7348078091451791}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,( ( ACS + FirstVNF_CPU_Server ) + Min( AMS ,ACS ) ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( MUM * RCSe ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7296054837325783}, {"determining": "( ( FirstVNF_CPU_Server * CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.20907297830374755, "obj2": 0.6184378892452473}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.21893491124260356, "obj2": 0.6042570748557959}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + ( MRS * ( MDR + Max( ( ( CRS * ( FirstVNF_CPU_Server / ARS ) ) + Const ),AMS ) ) ) ) )", "choosing": "( ( MLU + ( MUR * ( Min( MUR ,( MUM - ( MUC / RRSe ) ) ) + MUC ) ) ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MRS - BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / MLU ) ),( DS - MUM ) ) )", "obj1": 0.358974358974359, "obj2": 0.46916874485919446}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM - DDR ) - ( FirstVNF_RAM_Server - MDR ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( MUR,( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( DS + MLU ),Min( RRSe ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.9921104536489151, "obj2": 0.009567982499896899}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_CPU_Server * DDR ),( MRS + CRS ) ) * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),Max( ( ( RRSe + CS ) / MLU ),DS ) ) )", "obj1": 0.34516765285996054, "obj2": 0.47410507750694664}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3609467455621302, "obj2": 0.45617019527402713}, {"determining": "( ( DDR - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6168962916433769}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.7830374753451677, "obj2": 0.0742946201010978}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - FirstVNF_RAM ) ,Min( CRS ,FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / ( ( ( Min( Min( RRSe ,MLU ) ,MUC ) + DS ) / Max( RCSe,RMSe ) ) * ( CS * RMSe ) ) ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7909270216962525, "obj2": 0.07119648436787629}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( ( MUM * MUC ) / RRSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RMSe - MUR ) + MUC ) * Min( MLU ,Max( CS,MLU ) ) ) ) / ( MLU * MUC ) ) ),( DS - ( MUM * ( ( RMSe * RRSe ) + RMSe ) ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.4735848404972891}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( MDR * FirstVNF_Mem ) )", "choosing": "( ( RRSe * MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) * ( ( ( PN / RRS ) + MDR ) / PN ) )", "choosing": "( ( MUM * MUC ) / ( ( RCSe - RMSe ) - ( Max( ( MUR - MUM ),( MUC / ( DS / MUC ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + Max( AMS,RRS ) ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) )", "choosing": "Min( ( Max( ( ( RCSe * RMSe ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + Max( FirstVNF_CPU_Server,( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( ( ( DS + RRSe ) / ( MUR / MLU ) ) / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - Max( ( FirstVNF_RAM - ( FirstVNF_CPU_Server / ( Min( AMS ,( FirstVNF_RAM * Const ) ) * FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,( MUR + ( RMSe - ( ( ( MUR * ( MUM - MUR ) ) - MLU ) / RCSe ) ) ) ) / ( MUR / ( RCSe + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RMSe + MUR ) ,( ( RCSe - MUC ) - Max( Max( CS,( Min( MUR ,CS ) + MUM ) ),CS ) ) ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,Max( ( FirstVNF_Mem - PN ),FirstVNF_CPU ) )", "choosing": "( ( DS - Min( Max( MLU,MUM ) ,Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( DS ,MUM ) - ( CS * RMSe ) ) ) ) ,( MUM * DS ) ) ) ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * DDR ) ,( DDR - ( BR - Max( ARS,RRS ) ) ) )", "choosing": "( ( RCSe - Min( ( CS / ( ( ( Min( MUM ,DS ) * ( RRSe / MUM ) ) * ( RMSe + MUM ) ) * MUM ) ) ,( MUM + MLU ) ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / ( DS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( MRS + Const ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( CS - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - Min( ( RMSe - MLU ) ,( MUR * MUR ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( CRS + ( FirstVNF_Mem - CRS ) ) ) + Const ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( ( MUC / MUM ) * ( MUR / MUR ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,( RRS / Max( ACS,( MRS / ACS ) ) ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,Max( RCSe,MUR ) ) - Min( ( MUR / MUC ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 0.73767258382643, "obj2": 0.2095494001310394}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( ACS + BR ) - Max( ACS,Max( ( Max( ( FirstVNF_CPU / DDR ),FirstVNF_RAM ) / ( ( BR * CRS ) - FirstVNF_RAM_Server ) ),( ( ( ARS * Max( Min( FirstVNF_CPU_Server ,MDR ),Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) ) ) )", "choosing": "Min( Max( ( MLU + RRSe ),MUC ) ,MUR )", "obj1": 0.9171597633136095, "obj2": 0.0627344874019474}, {"determining": "Min( ( ( ( ( MRS + FirstVNF_CPU_Server ) - ( ARS + ( ( DDR - ACS ) + ( DDR * ( DDR * FirstVNF_CPU_Server ) ) ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / ( MDR * PN ) ) * PN ) ) * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( ( CS * RMSe ) + ( CS * ( RCSe + RMSe ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.4339250493096647, "obj2": 0.402627043997236}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / ( DS + RRSe ) ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "( ( Max( ( CRS + Max( MRS,Const ) ),( FirstVNF_RAM_Server / ( ( BR - ARS ) - ( FirstVNF_RAM - BR ) ) ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.47534516765285995, "obj2": 0.36911773587158825}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUM + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.3112900781615761}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "( ( AMS - MRS ) + Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ) )", "choosing": "( Max( DS,DS ) + ( MLU * DS ) )", "obj1": 0.6942800788954635, "obj2": 0.2156478741629212}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Max( ( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ),( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( ( ( DS - Max( RRSe,Min( RCSe ,DS ) ) ) / ( MUR * Min( DS ,MUC ) ) ) ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4233629249901293}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( ( Max( FirstVNF_CPU,( ( ( ( ( DDR / AMS ) + ( DDR * AMS ) ) + Const ) * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) * Min( AMS ,Min( PN ,( AMS - MRS ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( DS * RCSe ) / ( Min( MUM ,MUM ) * Min( MUM ,Max( DS,MUR ) ) ) )", "obj1": 0.504930966469428, "obj2": 0.3659385785830472}, {"determining": "Min( ( BR + Max( Max( ( AMS + Const ),MDR ),FirstVNF_CPU ) ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( CS - MUM ),( RCSe - CS ) )", "obj1": 0.33530571992110453, "obj2": 0.51355816736846}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.5108481262327417, "obj2": 0.3424625255641167}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13609467455621302, "obj2": 0.7187618261939656}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ),( RCSe - CS ) )", "obj1": 0.9270216962524654, "obj2": 0.03640437664736137}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( ( ACS - MRS ) - ( ( ( RRS - DDR ) * RRS ) * MRS ) )", "choosing": "( Min( CS ,MUC ) / ( Min( MUM ,RMSe ) - RRSe ) )", "obj1": 0.20710059171597633, "obj2": 0.6109474738305366}, {"determining": "( FirstVNF_CPU_Server + ( Max( FirstVNF_CPU,Const ) + Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - ( RMSe + MUM ) ) ) ) ) + RMSe ) - ( RMSe * MUR ) ) / ( MLU * MUM ) )", "obj1": 0.16568047337278108, "obj2": 0.6995906024271047}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5137094060946932}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7348078091451791}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Min( AMS ,( Max( BR,( Max( ( RRS - ACS ),( FirstVNF_RAM_Server - RRS ) ) * MRS ) ) + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUM ) ,MUR ) ) ,Max( MUR,( MUR / RRSe ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( Max( Const,DDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( Min( DS ,MUR ),( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( ( MUR + ( RRSe * ( DS - RCSe ) ) ) + ( CS / Min( ( RMSe * MUM ) ,MUC ) ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,( ( ACS + FirstVNF_CPU_Server ) + Min( AMS ,ACS ) ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( MUM * RCSe ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.33727810650887574, "obj2": 0.48993402358791416}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7296054837325783}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( ( ( ACS - ( CRS + Max( ARS,ARS ) ) ) + ARS ) - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( DS / DS ) / Min( MLU ,( ( MUR / Min( ( CS * MLU ) ,( RMSe * DS ) ) ) + MUM ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.21893491124260356, "obj2": 0.6042570748557959}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / FirstVNF_RAM_Server ) / Min( ( ( Const / ( ARS + AMS ) ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( Max( ( DS + MLU ),Min( RRSe ,( MUC * MUR ) ) ) - RMSe ) ) + ( Max( MUR,MLU ) - RMSe ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 0.1913214990138067, "obj2": 0.6816199461215955}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,ARS ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5210699517817964}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3609467455621302, "obj2": 0.45617019527402713}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,Max( ( FirstVNF_CPU * Min( CRS ,MDR ) ),( FirstVNF_Mem_Server * CRS ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( RCSe,RMSe ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.3431952662721893, "obj2": 0.4813909686513613}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MRS - BR ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / MLU ) ),( DS - MUM ) ) )", "obj1": 0.358974358974359, "obj2": 0.46916874485919446}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - FirstVNF_RAM ) ,Min( CRS ,FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / ( ( ( Min( Min( RRSe ,MLU ) ,MUC ) + DS ) / Max( RCSe,RMSe ) ) * ( CS * RMSe ) ) ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7909270216962525, "obj2": 0.07119648436787629}, {"determining": "Min( ( ( BR / ( BR * Max( MRS,BR ) ) ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( DDR,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / ( MUM - DS ) ),Min( MUR ,( MUM - MUC ) ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3510848126232742, "obj2": 0.46997470770055294}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_CPU_Server * DDR ),( MRS + CRS ) ) * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),Max( ( ( RRSe + CS ) / MLU ),DS ) ) )", "obj1": 0.34516765285996054, "obj2": 0.47410507750694664}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.7850098619329389, "obj2": 0.07305973672508323}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( ( MUM * MUC ) / RRSe ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RMSe - MUR ) + MUC ) * Min( MLU ,Max( CS,MLU ) ) ) ) / ( MLU * MUC ) ) ),( DS - ( MUM * ( ( RMSe * RRSe ) + RMSe ) ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.4735848404972891}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - ( ( Max( ( DDR * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + Min( ( RMSe - MLU ) ,Max( ( MUC / MUM ),CS ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.9980276134122288, "obj2": 0.001872018540623766}, {"determining": "Min( ( AMS - ( ( Min( ARS ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * RRS ) / ( PN + FirstVNF_CPU_Server ) ) ) ,Max( MDR,MDR ) )", "choosing": "( Max( ( ( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ) / ( RCSe * RCSe ) ) / ( RCSe / ( ( RRSe / ( CS / ( RMSe / RMSe ) ) ) - MUC ) ) ),MLU ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server + Const ) ,PN ) )", "choosing": "( ( MUM - MUC ) / Min( Max( RMSe,MUC ) ,( MUC + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,BR ) * ( BR / Min( Min( ( FirstVNF_RAM_Server + PN ) ,Max( MDR,FirstVNF_CPU_Server ) ) ,AMS ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( ( MUC - ( RRSe * ( ( RRSe * MUC ) - ( MUR - ( MUR * MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( FirstVNF_CPU_Server * MDR ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) ) + Const ) ,( Const - ( ARS + RRS ) ) )", "choosing": "Max( ( RCSe + ( Min( CS ,RCSe ) + Max( ( ( MUC / Max( MLU,MLU ) ) + RCSe ),CS ) ) ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * DDR ) - Min( ( BR + Min( ( ( DDR * CRS ) - FirstVNF_RAM ) ,( Max( MDR,PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ) ) * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + ( ( MUR + MUC ) / ( MUC + MLU ) ) ) / ( DS + Max( DS,( ( RCSe * MLU ) + ( RCSe - ( RRSe * ( Max( CS,RMSe ) / RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - Max( ( AMS + BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,RCSe ) ,( MLU / CS ) ) - ( ( MUR + DS ) - ( CS / ( Min( MUC ,RCSe ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,( ( ACS + ( FirstVNF_CPU - ( MRS * FirstVNF_Mem_Server ) ) ) / ARS ) )", "choosing": "Min( ( ( MLU / DS ) - CS ) ,( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Min( ACS ,Max( ARS,( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,( ( FirstVNF_Mem / ARS ) * RRS ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,Min( ( RCSe + MUC ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( CRS + ( FirstVNF_Mem - CRS ) ) ) + Const ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( ( MUC / MUM ) * ( MUR / MUR ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( ( ( ( ( DDR / AMS ) + ( DDR * AMS ) ) + Const ) * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) * Min( AMS ,Min( PN ,( AMS - MRS ) ) ) ) + ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( DS * RCSe ) / ( ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) * Min( MUM ,Max( DS,MUR ) ) ) )", "obj1": 0.08875739644970414, "obj2": 0.7606652636351822}, {"determining": "Min( ( FirstVNF_Mem - ( Const - FirstVNF_RAM_Server ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.6942800788954635, "obj2": 0.12243522176962543}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.42998027613412226, "obj2": 0.36422693232345404}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.5108481262327417, "obj2": 0.3424625255641167}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( DS,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7554240631163708, "obj2": 0.08104876201593736}, {"determining": "Min( ( Max( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ),Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * PN ),BR ) * ( Min( ( AMS * ( Min( ARS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( DS + MLU ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) ),( RCSe - CS ) )", "obj1": 0.8599605522682445, "obj2": 0.0552176908199197}, {"determining": "( Max( ( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ),( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( ( ( DS - Max( RRSe,Min( RCSe ,DS ) ) ) / ( MUR * Min( DS ,MUC ) ) ) ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4233629249901293}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ),( RCSe - CS ) )", "obj1": 0.9270216962524654, "obj2": 0.03640437664736137}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,( AMS - ( ARS * ( ( Const - FirstVNF_RAM ) - ( ACS + Const ) ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),Min( CS ,RMSe ) ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.26232741617357, "obj2": 0.5792979146311789}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUM + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.3112900781615761}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( CRS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Min( Min( ( DS + RCSe ) ,RRSe ) ,MUM ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( Const,Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR / CS ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.6055226824457594, "obj2": 0.27288672717029644}, {"determining": "( ( ACS - MRS ) - ( ( ( RRS - DDR ) * RRS ) * MRS ) )", "choosing": "( Min( CS ,MUC ) / ( Min( MUM ,RMSe ) - RRSe ) )", "obj1": 0.20710059171597633, "obj2": 0.6109474738305366}, {"determining": "Min( ( AMS - Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) ) ,( FirstVNF_CPU * ARS ) )", "choosing": "( ( MUM - DS ) / Min( MUC ,DS ) )", "obj1": 0.16370808678500987, "obj2": 0.6988515551080092}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7348078091451791}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.8264299802761341, "obj2": 0.06166674057401466}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( ( ( ACS - ( CRS + Max( ARS,ARS ) ) ) + ARS ) - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( DS / DS ) / Min( MLU ,( ( MUR / Min( ( CS * MLU ) ,( RMSe * DS ) ) ) + MUM ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,( ( ACS + FirstVNF_CPU_Server ) + Min( AMS ,ACS ) ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( MUM * RCSe ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13609467455621302, "obj2": 0.7187618261939656}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7296054837325783}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5137094060946932}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( Max( Const,DDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( Min( DS ,MUR ),( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( ( MUR + ( RRSe * ( DS - RCSe ) ) ) + ( CS / Min( ( RMSe * MUM ) ,MUC ) ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.21893491124260356, "obj2": 0.6042570748557959}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / FirstVNF_RAM_Server ) / Min( ( ( Const / ( ARS + AMS ) ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( Max( ( DS + MLU ),Min( RRSe ,( MUC * MUR ) ) ) - RMSe ) ) + ( Max( MUR,MLU ) - RMSe ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 0.1913214990138067, "obj2": 0.6816199461215955}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Min( AMS ,( Max( BR,( Max( ( RRS - ACS ),( FirstVNF_RAM_Server - RRS ) ) * MRS ) ) + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUM ) ,MUR ) ) ,Max( MUR,( MUR / RRSe ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "( Min( MRS ,Const ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.34714003944773175, "obj2": 0.46202822453368414}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / ( DS + RRSe ) ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.33727810650887574, "obj2": 0.48993402358791416}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( ACS + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,( RCSe / RCSe ) ) * Min( MUM ,DS ) ) )", "obj1": 0.14003944773175542, "obj2": 0.7061138647811073}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_CPU,Const ) + Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5030196253598377}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,ARS ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5210699517817964}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,PN )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( CS,MUM ),CS ) ) ) / ( MUR - Min( ( MUM - MUC ) ,MUR ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5134132584498884}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3609467455621302, "obj2": 0.45617019527402713}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_CPU_Server * DDR ),( MRS + CRS ) ) * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),Max( ( ( RRSe + CS ) / MLU ),DS ) ) )", "obj1": 0.34516765285996054, "obj2": 0.47410507750694664}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,Max( ( FirstVNF_CPU * Min( CRS ,MDR ) ),( FirstVNF_Mem_Server * CRS ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( RCSe,RMSe ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.3431952662721893, "obj2": 0.4813909686513613}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( CS * ( RCSe + RMSe ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.507221721754972}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - FirstVNF_RAM ) ,Min( CRS ,FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / ( ( ( Min( Min( RRSe ,MLU ) ,MUC ) + DS ) / Max( RCSe,RMSe ) ) * ( CS * RMSe ) ) ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7909270216962525, "obj2": 0.07119648436787629}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Min( AMS ,( FirstVNF_CPU_Server + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Min( PN ,MDR ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( ( ( MLU / ( MUC - ( MLU - MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,( RMSe / MLU ) ) ) ),( MUR / RRSe ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "Min( ( ( ( ( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( Max( MUC,MLU ) + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.7850098619329389, "obj2": 0.07305973672508323}, {"determining": "Min( ( CRS / DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( ( RMSe + MUC ) + MUC ) ,( Max( MUR,RRSe ) + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),Min( MUM ,CS ) )", "obj1": 0.777120315581854, "obj2": 0.07613796628629974}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - ( ( Max( ( DDR * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + Min( ( RMSe - MLU ) ,Max( ( MUC / MUM ),CS ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.9980276134122288, "obj2": 0.001872018540623766}, {"determining": "( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,( RRS / Max( ACS,( MRS / ACS ) ) ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,Max( RCSe,MUR ) ) - Min( ( MUR / MUC ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( Min( ARS ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * RRS ) / ( PN + FirstVNF_CPU_Server ) ) ) ,Max( MDR,MDR ) )", "choosing": "( Max( ( ( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ) / ( RCSe * RCSe ) ) / ( RCSe / ( ( RRSe / ( CS / ( RMSe / RMSe ) ) ) - MUC ) ) ),MLU ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / DDR ) ) ,Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) ) )", "choosing": "( Min( Min( MUR ,Min( RRSe ,RMSe ) ) ,Max( RCSe,MUR ) ) - Min( CS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( BR * ( FirstVNF_CPU_Server * Min( FirstVNF_Mem ,Max( Max( BR,( Max( PN,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ),ACS ) ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUR + DS ) + Max( Max( MUM,( MUC * MUC ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( Max( Min( ( MRS + ACS ) ,Const ),( BR + Max( Max( Min( ( ARS / AMS ) ,FirstVNF_CPU ),MDR ),FirstVNF_CPU ) ) ) * AMS ) )", "choosing": "( ( DS - Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) / ( ( Min( Min( Max( ( Min( MUC ,MUM ) / RMSe ),( DS * ( MLU + RRSe ) ) ) ,( MUC - DS ) ) ,RRSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( PN - ACS ),Max( CRS,( FirstVNF_CPU - Const ) ) ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),( MUR - Min( ( MLU - MUM ) ,( MUR / RMSe ) ) ) ) * ( ( DS + MUC ) / RRSe ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ARS ) * RRS ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RCSe + MUC ) ,( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( Min( RMSe ,( MLU / CS ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server * RRS ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( RCSe * Min( ( RCSe / RMSe ) ,( DS - MUC ) ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( ( AMS * Max( DDR,MRS ) ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) )", "choosing": "Min( ( MUM / ( RCSe * ( ( RCSe / ( CS + RMSe ) ) - RRSe ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( Max( MDR,FirstVNF_RAM_Server ) + ( BR * ARS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( ( MLU - Max( MLU,Max( CS,( RCSe + RCSe ) ) ) ) * DS ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( Const ,RRS ),Max( ( BR / Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( Max( RRSe,MUR ),CS ) + RRSe ) ,( Min( Max( RMSe,MLU ) ,( DS / MLU ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,ACS ) ,( Max( Max( AMS,ARS ),( MRS + CRS ) ) * ( ( FirstVNF_RAM_Server - MDR ) - ( RRS / ( ( Max( ( ACS + FirstVNF_RAM_Server ),( DDR + FirstVNF_RAM_Server ) ) - BR ) / PN ) ) ) ) )", "choosing": "Min( Min( CS ,RMSe ) ,Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - ( Max( CS,Min( CS ,DS ) ) + ( Min( RRSe ,MUM ) / Min( DS ,RCSe ) ) ) ) * ( MUR + MUC ) ) + Min( ( RRSe * ( MLU * ( ( MUR / MUM ) - ( MUM * RMSe ) ) ) ) ,Min( RRSe ,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ( ( BR + MDR ) + PN ) ) / Max( FirstVNF_CPU,( ( Const + Min( FirstVNF_Mem ,ARS ) ) + Min( ( DDR * RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / ( ( RMSe + MUM ) + MUR ) ) / CS ) - ( MUM - RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * Min( RRSe ,MUR ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,( ( FirstVNF_Mem / ARS ) * RRS ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,Min( ( RCSe + MUC ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( ( ( ( ( DDR / AMS ) + ( DDR * AMS ) ) + Const ) * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) * Min( AMS ,Min( PN ,( AMS - MRS ) ) ) ) + ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( DS * RCSe ) / ( ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) * Min( MUM ,Max( DS,MUR ) ) ) )", "obj1": 0.08875739644970414, "obj2": 0.7606652636351822}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Max( MUC,( MUR + ( DS / MLU ) ) ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.6765285996055227, "obj2": 0.12806493391266793}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.42998027613412226, "obj2": 0.36422693232345404}, {"determining": "( Max( ( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ),( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( ( ( DS - Max( RRSe,Min( RCSe ,DS ) ) ) / ( MUR * Min( DS ,MUC ) ) ) ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4233629249901293}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.5108481262327417, "obj2": 0.3424625255641167}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_CPU_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - ( ( RMSe * CS ) - Max( MUR,DS ) ) ) ) )", "obj1": 0.4418145956607495, "obj2": 0.35419921520660774}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * MLU ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.26627218934911245, "obj2": 0.5766412598019215}, {"determining": "Min( ( FirstVNF_Mem - ( Const - FirstVNF_RAM_Server ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.6942800788954635, "obj2": 0.12243522176962543}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( ( ( DDR / AMS ) + ( DDR * AMS ) ) - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( ( ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) * Min( MUM ,Max( DS,MUR ) ) ),( DS - MUM ) ) )", "obj1": 0.903353057199211, "obj2": 0.05129508465657351}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( ( Const / Const ) + ( AMS + ARS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( ( MLU - RMSe ) / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.73767258382643, "obj2": 0.1017794135904862}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUM + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.3112900781615761}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "Min( ( FirstVNF_RAM * ( AMS - FirstVNF_RAM_Server ) ) ,( ( RRS + PN ) / ( DDR - ( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * RRS ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - MLU ) - Max( Max( CS,MUM ),( ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( Max( MUC,MUC ) / Max( MLU,MLU ) ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) + RCSe ) ) )", "obj1": 0.20512820512820512, "obj2": 0.6427300443693575}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ),( RCSe - CS ) )", "obj1": 0.9270216962524654, "obj2": 0.03640437664736137}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( Min( ( ( Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * RMSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.5857988165680473, "obj2": 0.2724506498323223}, {"determining": "( ( ACS - MRS ) - ( ( ( RRS - DDR ) * RRS ) * MRS ) )", "choosing": "( Min( CS ,MUC ) / ( Min( MUM ,RMSe ) - RRSe ) )", "obj1": 0.20710059171597633, "obj2": 0.6109474738305366}, {"determining": "Min( ( AMS - Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) ) ,( FirstVNF_CPU * ARS ) )", "choosing": "( ( MUM - DS ) / Min( MUC ,DS ) )", "obj1": 0.16370808678500987, "obj2": 0.6988515551080092}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( Max( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ),Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * PN ),BR ) * ( Min( ( AMS * ( Min( ARS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( DS + MLU ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) ),( RCSe - CS ) )", "obj1": 0.8599605522682445, "obj2": 0.0552176908199197}, {"determining": "( Max( ( ( ( ( BR * ( PN / MRS ) ) - ACS ) + Max( CRS,AMS ) ) + FirstVNF_Mem ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Max( Const,BR ) ) / PN ) ,( AMS - ( ARS * Max( ( AMS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( Min( ( MLU + CS ) ,( ( RRSe * RRSe ) / RRSe ) ) + RRSe ) ) * ( ( Min( MUR ,RMSe ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.512843851546057}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7348078091451791}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( Min( MRS ,CRS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUR + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( ( DS - RCSe ) * Min( MUM ,DS ) ) )", "obj1": 0.6074950690335306, "obj2": 0.26492168175216124}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( Max( Const,DDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( Min( DS ,MUR ),( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( ( MUR + ( RRSe * ( DS - RCSe ) ) ) + ( CS / Min( ( RMSe * MUM ) ,MUC ) ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ARS ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( DDR,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / ( MUM - DS ) ),( MUC + CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.32938856015779094, "obj2": 0.48883321905868565}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13609467455621302, "obj2": 0.7187618261939656}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( CS * ( RCSe + RMSe ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.507221721754972}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 0.5463510848126233, "obj2": 0.33415197167927474}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,( ( ACS + FirstVNF_CPU_Server ) + Min( AMS ,ACS ) ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( MUM * RCSe ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7296054837325783}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( DS,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7455621301775148, "obj2": 0.09476849641747101}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( ( ( ACS - ( CRS + Max( ARS,ARS ) ) ) + ARS ) - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( DS / DS ) / Min( MLU ,( ( MUR / Min( ( CS * MLU ) ,( RMSe * DS ) ) ) + MUM ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.21893491124260356, "obj2": 0.6042570748557959}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / FirstVNF_RAM_Server ) / Min( ( ( Const / ( ARS + AMS ) ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( Max( ( DS + MLU ),Min( RRSe ,( MUC * MUR ) ) ) - RMSe ) ) + ( Max( MUR,MLU ) - RMSe ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 0.1913214990138067, "obj2": 0.6816199461215955}, {"determining": "( Min( MRS ,Const ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.34714003944773175, "obj2": 0.46202822453368414}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( ( AMS + CRS ) * ( Min( ( ( Const / RRS ) * ( Min( ARS ,FirstVNF_CPU ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( ( CS * MUC ) + MLU ),( MUM - MLU ) ) ) ) ),( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.834319526627219, "obj2": 0.05876020257076078}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,ARS ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5210699517817964}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( ACS + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,( RCSe / RCSe ) ) * Min( MUM ,DS ) ) )", "obj1": 0.14003944773175542, "obj2": 0.7061138647811073}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,Max( ( FirstVNF_CPU * Min( CRS ,MDR ) ),( FirstVNF_Mem_Server * CRS ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( RCSe,RMSe ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.3431952662721893, "obj2": 0.4813909686513613}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3609467455621302, "obj2": 0.45617019527402713}, {"determining": "Min( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) ),FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( RMSe / ( MUM + ( RCSe * ( CS - ( MUC / MUR ) ) ) ) ) / ( ( RRSe * DS ) * ( CS * ( MLU * CS ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.854043392504931, "obj2": 0.05552337775184162}, {"determining": "( Min( Max( ( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) ),Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) + DS ) )", "obj1": 0.2465483234714004, "obj2": 0.5776423808488534}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( DS,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7554240631163708, "obj2": 0.08104876201593736}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_CPU_Server * DDR ),( MRS + CRS ) ) * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),Max( ( ( RRSe + CS ) / MLU ),DS ) ) )", "obj1": 0.34516765285996054, "obj2": 0.47410507750694664}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * Min( MUM ,( RCSe - CS ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.8086785009861933, "obj2": 0.06686672127924871}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.8264299802761341, "obj2": 0.06166674057401466}, {"determining": "Min( ( Max( ( ARS - AMS ),MRS ) * ( Min( Min( AMS ,PN ) ,FirstVNF_RAM ) / PN ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Max( ( Max( RMSe,( ( DS / MLU ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ),( MUR - DS ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7731755424063116, "obj2": 0.07965699444404474}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.757396449704142, "obj2": 0.08028101572741354}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( CRS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Min( Min( ( DS + RCSe ) ,RRSe ) ,MUM ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - ARS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( Max( ( RCSe / RMSe ),( MUR / CS ) ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,( MLU / MUC ) ) ,( ( MLU + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( RMSe / CS ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "Min( ( ( ( ( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( Max( MUC,MLU ) + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - ( ( ( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS * RMSe ) + ( CS * ( RCSe + RMSe ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( ( Max( MUC,MLU ) + MUC ) ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.507221721754972}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * Max( DS,MUR ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "Min( ( CRS / DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( ( RMSe + MUC ) + MUC ) ,( Max( MUR,RRSe ) + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),Min( MUM ,CS ) )", "obj1": 0.777120315581854, "obj2": 0.07613796628629974}, {"determining": "Min( ( FirstVNF_Mem - Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + Min( RCSe ,( DS / MUM ) ) ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7928994082840237, "obj2": 0.07093111252150304}, {"determining": "Min( Max( ( ( BR * AMS ) + Min( RRS ,PN ) ),Min( AMS ,( AMS + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * RRS ) )", "choosing": "( ( MLU / ( MUM * RMSe ) ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( MUC * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Min( AMS ,( Max( BR,( Max( ( RRS - ACS ),( FirstVNF_RAM_Server - RRS ) ) * MRS ) ) + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUM ) ,MUR ) ) ,Max( MUR,( MUR / RRSe ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / ( DS + RRSe ) ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - ( ( Max( ( DDR * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + Min( ( RMSe - MLU ) ,Max( ( MUC / MUM ),CS ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.9980276134122288, "obj2": 0.001872018540623766}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - MDR ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - ( RMSe + MUC ) ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7889546351084813, "obj2": 0.07233246581769508}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.7850098619329389, "obj2": 0.07305973672508323}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - FirstVNF_RAM ) ,Min( CRS ,FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / ( ( ( Min( Min( RRSe ,MLU ) ,MUC ) + DS ) / Max( RCSe,RMSe ) ) * ( CS * RMSe ) ) ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7909270216962525, "obj2": 0.07119648436787629}, {"determining": "Min( Max( ( ( ( Const / Const ) / FirstVNF_Mem_Server ) + Min( RRS ,PN ) ),Min( AMS ,( ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) - ( RRS + BR ) ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Min( PN ,MDR ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( ( ( MLU / ( MUC - ( MLU - DS ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,( RMSe / MLU ) ) ) ),( MUR / Min( ( DS / ( MUR * DS ) ) ,( RMSe * Max( RMSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_Mem_Server ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( Max( Max( DS,Min( ( MUM - MUC ) ,MUR ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( CRS + ( FirstVNF_Mem - CRS ) ) ) + Const ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( ( MUC / MUM ) * ( MUR / MUR ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,( RRS / Max( ACS,( MRS / ACS ) ) ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,Max( RCSe,MUR ) ) - Min( ( MUR / MUC ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( Min( ARS ,( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * RRS ) / ( PN + FirstVNF_CPU_Server ) ) ) ,Max( MDR,MDR ) )", "choosing": "( Max( ( ( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ) / ( RCSe * RCSe ) ) / ( RCSe / ( ( RRSe / ( CS / ( RMSe / RMSe ) ) ) - MUC ) ) ),MLU ) / ( ( ( MLU / RCSe ) + MLU ) * ( MUM * Min( RCSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( Min( Max( Min( ( RRSe - MUR ) ,MLU ),MLU ) ,MUC ) + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( ACS ,FirstVNF_CPU_Server ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + ( ( AMS / AMS ) - Min( BR ,BR ) ) ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( ( DS - ( ( ( ( RRSe - MLU ) + CS ) * MLU ) * MUM ) ),( RRSe * MLU ) ) / MUR ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,ARS ) - Min( MRS ,MDR ) )", "choosing": "( ( Min( ( DS / MUC ) ,MUR ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( AMS * FirstVNF_RAM ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,( MDR - RRS ) ) )", "choosing": "( Min( MUC ,MUM ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - AMS ),MRS ) * ( Min( ( DDR + Min( Const ,FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) / PN ) )", "choosing": "( ( Max( CS,MUR ) / Max( MLU,Min( RRSe ,( Max( RMSe,( Max( CS,MUM ) + Min( RCSe ,MLU ) ) ) / Max( ( CS / RMSe ),CS ) ) ) ) ) / ( ( ( MUC - MUM ) - Min( MUR ,MUC ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - ( ( FirstVNF_RAM / ( MRS * ( ( AMS * MRS ) * Const ) ) ) - AMS ) ) + ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) ) / ( ARS / MDR ) )", "choosing": "Min( ( ( RCSe + MUC ) - ( RCSe * MUC ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( ( FirstVNF_CPU + ( RRS - ACS ) ) ,( DDR / BR ) ) * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,Min( ( MLU / MUC ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( ( ( AMS * PN ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( Min( CS ,MUC ) / ( DS - RRSe ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * Min( RRSe ,MUR ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( ( ( ( ( DDR / AMS ) + ( DDR * AMS ) ) + Const ) * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) * Min( AMS ,Min( PN ,( AMS - MRS ) ) ) ) + ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( DS * RCSe ) / ( ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) * Min( MUM ,Max( DS,MUR ) ) ) )", "obj1": 0.08875739644970414, "obj2": 0.7606652636351822}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Max( MUC,( MUR + ( DS / MLU ) ) ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.6765285996055227, "obj2": 0.12806493391266793}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.42998027613412226, "obj2": 0.36422693232345404}, {"determining": "( Max( ( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ),( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( ( ( DS - Max( RRSe,Min( RCSe ,DS ) ) ) / ( MUR * Min( DS ,MUC ) ) ) ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4233629249901293}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.5108481262327417, "obj2": 0.3424625255641167}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.883629191321499, "obj2": 0.04943233427041551}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUM + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.3112900781615761}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / Min( RCSe ,Max( DS,MUR ) ) ) ),( DS - MUM ) ) )", "obj1": 0.45759368836291914, "obj2": 0.3539884421424755}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ),( RCSe - CS ) )", "obj1": 0.9270216962524654, "obj2": 0.03640437664736137}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Max( ( ( ( ( BR * ( PN / MRS ) ) - ACS ) + Max( CRS,AMS ) ) + FirstVNF_Mem ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Max( Const,BR ) ) / PN ) ,( AMS - ( ARS * Max( ( AMS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( Min( ( MLU + CS ) ,( ( RRSe * RRSe ) / RRSe ) ) + RRSe ) ) * ( ( Min( MUR ,RMSe ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.512843851546057}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ARS * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.20315581854043394, "obj2": 0.6327377956925059}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( Min( MDR ,ARS ) - Min( MRS ,MDR ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( RCSe,( Min( ( DS / MUC ) ,MUR ) + MUC ) ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.2603550295857988, "obj2": 0.5603038944889907}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11242603550295859, "obj2": 0.7348078091451791}, {"determining": "Min( ( AMS - Min( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,MDR ) ) ,( FirstVNF_CPU * ARS ) )", "choosing": "( ( MUM - DS ) / Min( MUC ,DS ) )", "obj1": 0.16370808678500987, "obj2": 0.6988515551080092}, {"determining": "Min( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) ),FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( RMSe / ( MUM + ( RCSe * ( CS - ( MUC / MUR ) ) ) ) ) / ( ( RRSe * DS ) * ( CS * ( MLU * CS ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.7100591715976331, "obj2": 0.10004499977265609}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + ARS ) ) * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( CS * ( RCSe + RMSe ) ) ) * ( ( ( RRSe - MUR ) + Min( RRSe ,CS ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3214990138067061, "obj2": 0.49079207435865446}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( Max( RRS,FirstVNF_CPU ) * Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR - Min( ( MUM - MUC ) ,MUR ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + Min( Max( ( DS - Max( MUM,CS ) ),RRSe ) ,( RRSe * RRSe ) ) ) - ( CS / CS ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.4494578023492078}, {"determining": "( Min( ( ( Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * RMSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.5857988165680473, "obj2": 0.2724506498323223}, {"determining": "( Min( ( ( Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Min( PN ,MDR ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM - DS ) / ( ( ( ( RMSe * Max( RMSe,RRSe ) ) / RCSe ) + MLU ) * RMSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.5976331360946746, "obj2": 0.2619237298464808}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( ( ( ACS - ( CRS + Max( ARS,ARS ) ) ) + ARS ) - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( DS / DS ) / Min( MLU ,( ( MUR / Min( ( CS * MLU ) ,( RMSe * DS ) ) ) + MUM ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( ACS - MRS ) - ( ( ( RRS - DDR ) * RRS ) * MRS ) )", "choosing": "( Min( CS ,MUC ) / ( Min( MUM ,RMSe ) - RRSe ) )", "obj1": 0.20710059171597633, "obj2": 0.6109474738305366}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( CRS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Min( Min( ( DS + RCSe ) ,RRSe ) ,MUM ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 0.5463510848126233, "obj2": 0.33415197167927474}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,( ( ACS + FirstVNF_CPU_Server ) + Min( AMS ,ACS ) ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( MUM * RCSe ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ( MDR + AMS ) / ACS ) )", "choosing": "( ( ( Max( Max( MLU,( ( RCSe * ( DS + RRSe ) ) * ( MUC - RCSe ) ) ),Min( ( MLU + ( ( CS * MUM ) - ( MLU - MUM ) ) ) ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7236126127709267}, {"determining": "Min( ( FirstVNF_Mem - ( Const - ( ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) - ( RRS + BR ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) ) - ( Min( ( Min( ( MUR / RMSe ) ,( DS - MUC ) ) + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7061143984220908, "obj2": 0.11903443707888615}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + ARS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( MUC,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.73767258382643, "obj2": 0.09645028427447193}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - ( RMSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13609467455621302, "obj2": 0.7187618261939656}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( Max( Const,DDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( Min( DS ,MUR ),( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( ( MUR + ( RRSe * ( DS - RCSe ) ) ) + ( CS / Min( ( RMSe * MUM ) ,MUC ) ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.21893491124260356, "obj2": 0.6042570748557959}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_CPU_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - ( ( RMSe * CS ) - Max( MUR,DS ) ) ) ) )", "obj1": 0.4418145956607495, "obj2": 0.35419921520660774}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / FirstVNF_RAM_Server ) / Min( ( ( Const / ( ARS + AMS ) ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( Max( ( DS + MLU ),Min( RRSe ,( MUC * MUR ) ) ) - RMSe ) ) + ( Max( MUR,MLU ) - RMSe ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 0.1913214990138067, "obj2": 0.6816199461215955}, {"determining": "( Min( Max( ( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) ),Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) + DS ) )", "obj1": 0.2465483234714004, "obj2": 0.5776423808488534}, {"determining": "( Min( MRS ,Const ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.34714003944773175, "obj2": 0.46202822453368414}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "Min( ( Max( ( ( DDR + ( CRS + AMS ) ) - FirstVNF_CPU ),Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * PN ),BR ) * ( Min( ( AMS * ( Min( ARS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( ( RRSe + ( RCSe + Min( ( DS + CS ) ,( MUM + MUR ) ) ) ) * Max( Max( ( DS + MLU ),Min( ( CS * DS ) ,( MUC * MUR ) ) ),RRSe ) ) ),( RCSe - CS ) )", "obj1": 0.8599605522682445, "obj2": 0.0552176908199197}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( ( AMS + CRS ) * ( Min( ( ( Const / RRS ) * ( Min( ARS ,FirstVNF_CPU ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( ( CS * MUC ) + MLU ),( MUM - MLU ) ) ) ) ),( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.834319526627219, "obj2": 0.05876020257076078}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,ARS ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5210699517817964}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( ACS + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,( RCSe / RCSe ) ) * Min( MUM ,DS ) ) )", "obj1": 0.14003944773175542, "obj2": 0.7061138647811073}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Max( Const,FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ),Max( ( ( ( MUC + ( CS * ( MUM * MLU ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.2583826429980276, "obj2": 0.5629662551687868}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,Max( ( FirstVNF_CPU * Min( CRS ,MDR ) ),( FirstVNF_Mem_Server * CRS ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( RCSe,RMSe ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.3431952662721893, "obj2": 0.4813909686513613}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ARS ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( DDR,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / ( MUM - DS ) ),( MUC + CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.32938856015779094, "obj2": 0.48883321905868565}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3609467455621302, "obj2": 0.45617019527402713}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( ( DDR + FirstVNF_RAM ) + ARS ) )", "choosing": "( Max( ( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) ),MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * MLU ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.23668639053254437, "obj2": 0.5882318011172848}, {"determining": "Min( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) ),FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( RMSe / ( MUM + ( RCSe * ( CS - ( MUC / MUR ) ) ) ) ) / ( ( RRSe * DS ) * ( CS * ( MLU * CS ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.854043392504931, "obj2": 0.05552337775184162}, {"determining": "Min( ( FirstVNF_Mem - ( Const - FirstVNF_RAM_Server ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Max( ( ( MUR - MUC ) + MLU ),( MUR - DS ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.6942800788954635, "obj2": 0.12243522176962543}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_CPU_Server * DDR ),( MRS + CRS ) ) * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),Max( ( ( RRSe + CS ) / MLU ),DS ) ) )", "obj1": 0.34516765285996054, "obj2": 0.47410507750694664}, {"determining": "Min( ( FirstVNF_Mem_Server + ( ( PN + ( PN + AMS ) ) * MDR ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / RMSe ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( Min( ( MLU / RCSe ) ,MLU ) * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( DS,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7455621301775148, "obj2": 0.09476849641747101}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_RAM_Server / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( ( MUC / MUM ) / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.7495069033530573, "obj2": 0.08369468662630938}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * Min( MUM ,( RCSe - CS ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.8086785009861933, "obj2": 0.06686672127924871}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( Max( FirstVNF_CPU,Const ),( FirstVNF_Mem * ( FirstVNF_RAM * AMS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( RMSe * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ),( RCSe - CS ) )", "obj1": 0.6863905325443787, "obj2": 0.12707640052985286}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.8264299802761341, "obj2": 0.06166674057401466}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - ARS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( Max( ( RCSe / RMSe ),( MUR / CS ) ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( ( ( ( Max( Const,FirstVNF_RAM ) + ( ( BR * Const ) - ACS ) ) + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( Max( MUC,MLU ) + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( RRS * FirstVNF_CPU ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( ( MUM / MUC ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7613412228796844, "obj2": 0.07914661371723293}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.9723865877712031, "obj2": 0.012200319008814848}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( DS,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7554240631163708, "obj2": 0.08104876201593736}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * Max( DS,MUR ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "Min( ( Max( FirstVNF_CPU,( MDR + FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * Min( MUM ,( RCSe - CS ) ) ),( ( Min( RCSe ,( ( RMSe * MUC ) + RMSe ) ) - RCSe ) - CS ) )", "obj1": 0.8185404339250493, "obj2": 0.0625825100804483}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( ( ( ( MUC + ( CS * ( RCSe * MLU ) ) ) - MUR ) + MUC ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.0784559800263153}, {"determining": "Min( ( FirstVNF_Mem - Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + Min( RCSe ,( DS / MUM ) ) ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7928994082840237, "obj2": 0.07093111252150304}, {"determining": "Min( Max( ( ( BR * AMS ) + Min( RRS ,PN ) ),Min( AMS ,( AMS + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( ( ARS + FirstVNF_RAM_Server ) ,( AMS * CRS ) ) ) * RRS ) )", "choosing": "( ( MLU / ( MUM * RMSe ) ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( MLU,Max( RRSe,( MUC * RCSe ) ) ) ) ,DS ) )", "obj1": 0.5364891518737672, "obj2": 0.33881965134859826}, {"determining": "Min( Max( ( FirstVNF_CPU_Server + Min( RRS ,PN ) ),Min( AMS ,( Max( BR,( Max( ( RRS - ACS ),( FirstVNF_RAM_Server - RRS ) ) * MRS ) ) + ACS ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUM ) ,MUR ) ) ,Max( MUR,( MUR / RRSe ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - ( ( Max( ( DDR * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + Min( ( RMSe - MLU ) ,Max( ( MUC / MUM ),CS ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.9980276134122288, "obj2": 0.001872018540623766}, {"determining": "Min( ( CRS / DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( ( RMSe + MUC ) + MUC ) ,( Max( MUR,RRSe ) + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),Min( MUM ,CS ) )", "obj1": 0.7810650887573964, "obj2": 0.07514542680655602}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,( MLU / MUC ) ) ,( ( MLU + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( RMSe / CS ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( CRS / DDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( ( RMSe + MUC ) + MUC ) ,( Max( MUR,RRSe ) + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),Min( MUM ,CS ) )", "obj1": 0.777120315581854, "obj2": 0.07613796628629974}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * MDR ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( Min( RCSe ,MUM ) - RCSe ) ),( RCSe - CS ) )", "obj1": 0.7712031558185405, "obj2": 0.07798562771732835}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / ( DS + RRSe ) ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - MDR ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - ( RMSe + MUC ) ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7889546351084813, "obj2": 0.07233246581769508}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - FirstVNF_RAM ) ,Min( CRS ,FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / ( ( ( Min( Min( RRSe ,MLU ) ,MUC ) + DS ) / Max( RCSe,RMSe ) ) * ( CS * RMSe ) ) ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7909270216962525, "obj2": 0.07119648436787629}, {"determining": "Min( Max( ( ( ( Const / Const ) / FirstVNF_Mem_Server ) + Min( RRS ,PN ) ),Min( AMS ,( ( ( FirstVNF_CPU_Server / ( CRS + ( RRS * MDR ) ) ) + Const ) - ( RRS + BR ) ) ) ) ,( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Min( PN ,MDR ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU / MUR ) * Min( Min( ( MUR - Min( ( MUM - MUC ) ,MUR ) ) ,Max( ( ( MLU / ( MUC - ( MLU - DS ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,( RMSe / MLU ) ) ) ),( MUR / Min( ( DS / ( MUR * DS ) ) ,( RMSe * Max( RMSe,RRSe ) ) ) ) ) ) ,DS ) )", "obj1": 0.5424063116370809, "obj2": 0.33758534536671986}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.7850098619329389, "obj2": 0.07305973672508323}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / Min( AMS ,ARS ) ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Min( MUR ,MUR ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.757396449704142, "obj2": 0.08028101572741354}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_Mem_Server ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( Max( Max( DS,Min( ( MUC / MUR ) ,MUR ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.07288082893504828}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.757396449704142, "obj2": 0.08028101572741354}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_Mem_Server ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( Max( Max( DS,Min( ( MUM - MUC ) ,MUR ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( PN + Const ) ,( Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,( ( FirstVNF_Mem / ARS ) * RRS ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( CS,Min( ( Max( CS,( CS + DS ) ) + ( MUC * Max( MUC,MLU ) ) ) ,Min( ( RCSe + MUC ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( ( ( FirstVNF_CPU_Server / ( CRS + ( FirstVNF_Mem - CRS ) ) ) + Const ) - ( RRS + BR ) ) ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( MUC * ( ( MUC / MUM ) * ( MUR / MUR ) ) ) * MUM ) / DS ) / MUC ) * ( Min( RRSe ,RRSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - DDR ) - Min( FirstVNF_CPU_Server ,( RRS / Max( ACS,( MRS / ACS ) ) ) ) )", "choosing": "( Min( Min( MUR ,MLU ) ,Max( RCSe,MUR ) ) - Min( ( MUR / MUC ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( ( Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( Min( CS ,DS ) + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS * PN ) - FirstVNF_CPU_Server ) * RRS ) * MRS ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( Min( CS ,MUC ) / ( DS - RRSe ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( ( ( ( ( DDR / AMS ) + ( DDR * AMS ) ) + Const ) * ( PN / Const ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) * Min( AMS ,Min( PN ,( AMS - MRS ) ) ) ) + ( FirstVNF_RAM + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( DS * RCSe ) / ( ( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) ) * Min( MUM ,Max( DS,MUR ) ) ) )", "obj1": 0.08875739644970414, "obj2": 0.7606652636351822}, {"determining": "( ( AMS - MRS ) + ( ( DDR + PN ) + Max( FirstVNF_CPU,Const ) ) )", "choosing": "( Max( DS,DS ) + ( RMSe * DS ) )", "obj1": 0.6745562130177515, "obj2": 0.22594972082094475}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Max( MUC,( MUR + ( DS / MLU ) ) ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.6765285996055227, "obj2": 0.12806493391266793}, {"determining": "( Max( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,ARS ),( Min( ( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( CRS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Min( ( MUC + MUC ) ,MUM ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.42209072978303747, "obj2": 0.4077747903232832}, {"determining": "( ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) + ( ACS * MRS ) )", "choosing": "( ( ( Max( Max( MLU,( DS * ( MUC - RCSe ) ) ),Min( MUM ,MUC ) ) + RMSe ) - Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.10059171597633136, "obj2": 0.7172938581148051}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,( MUM + ( MLU + CS ) ) ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.3112900781615761}, {"determining": "Min( ( Const / PN ) ,( FirstVNF_Mem_Server + ARS ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * CS ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.6153846153846154, "obj2": 0.25252296607464697}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.5108481262327417, "obj2": 0.3424625255641167}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( ACS * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( ( Min( MUM ,RMSe ) - RRSe ) - MUM ) ) )", "obj1": 0.42998027613412226, "obj2": 0.362382835050262}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / Min( RCSe ,Max( DS,MUR ) ) ) ),( DS - MUM ) ) )", "obj1": 0.45759368836291914, "obj2": 0.3539884421424755}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( ( RRSe - MUC ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5581854043392505, "obj2": 0.27377900170056285}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_RAM ) ,( Max( DDR,MRS ) + Max( ACS,MDR ) ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( RRSe / ( RRSe + RMSe ) ) ) ) ),( RCSe - ( MLU * ( MUM + MUM ) ) ) )", "obj1": 0.9289940828402367, "obj2": 0.021256834166810772}, {"determining": "( Max( ( ( ( ( BR * ( PN / MRS ) ) - ACS ) + Max( CRS,AMS ) ) + FirstVNF_Mem ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Max( Const,BR ) ) / PN ) ,( AMS - ( ARS * Max( ( AMS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( Min( ( MLU + CS ) ,( ( RRSe * RRSe ) / RRSe ) ) + RRSe ) ) * ( ( Min( MUR ,RMSe ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.512843851546057}, {"determining": "( Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( Max( MUR,( MLU / RCSe ) ) + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + ( ACS + Max( FirstVNF_Mem_Server,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUR,MUC ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,( RCSe / RCSe ) ) * Min( MUM ,DS ) ) )", "obj1": 0.14003944773175542, "obj2": 0.7061138647811073}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ARS * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.20315581854043394, "obj2": 0.6327377956925059}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR - DS ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ),( RCSe - CS ) )", "obj1": 0.9270216962524654, "obj2": 0.03640437664736137}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,( Min( MDR ,ARS ) - Min( MRS ,MDR ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( RCSe,( Min( ( DS / MUC ) ,MUR ) + MUC ) ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.2603550295857988, "obj2": 0.5603038944889907}, {"determining": "( Max( ( ( ( ( BR * ( PN / MRS ) ) - ACS ) + Max( CRS,AMS ) ) + FirstVNF_Mem ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,Max( Const,BR ) ) / PN ) ,( AMS - ( ARS * Max( ( AMS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( Min( ( MLU + CS ) ,( ( RRSe * RRSe ) / RRSe ) ) + RRSe ) ) * ( ( Min( MUR ,RMSe ) + ( MUC / MUR ) ) - Max( Min( MUR ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.534516765285996, "obj2": 0.3317159923255311}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + ( DDR / Min( FirstVNF_CPU ,( ARS / ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) ) ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RMSe ,MUC ),( RCSe - ( Max( Max( ( RMSe + Max( DS,MLU ) ),MLU ),( ( CS + ( CS + RCSe ) ) * MUR ) ) + ( ( ( CS + MUR ) * MUC ) * Min( RCSe ,MLU ) ) ) ) ) / ( Min( MUM ,MUM ) * Min( ( MUR - ( CS + ( ( Min( RCSe ,MUM ) - Min( RRSe ,MUC ) ) / MUM ) ) ) ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) ),FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( RMSe / ( MUM + ( RCSe * ( CS - ( MUC / MUR ) ) ) ) ) / ( ( RRSe * DS ) * ( CS * ( MLU * CS ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.7100591715976331, "obj2": 0.10004499977265609}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8875739644970414, "obj2": 0.04277903658204418}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),ARS ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / DS ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.16173570019723865, "obj2": 0.6949132747735456}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + ARS ) ) * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( CS * RMSe ) + ( CS * ( RCSe + RMSe ) ) ) * ( ( ( RRSe - MUR ) + Min( RRSe ,CS ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.3214990138067061, "obj2": 0.49079207435865446}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( Max( ACS,( MRS / ACS ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR - Min( Min( MUR ,MLU ) ,Max( RCSe,MUR ) ) ) / Max( MUC,Min( ( RCSe - MUC ) ,MUC ) ) ),( RCSe - CS ) )", "obj1": 0.9723865877712031, "obj2": 0.012181744586796524}, {"determining": "( Max( ( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( Const - Const ) - ( ACS + Const ) ) ) ) ),( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( ( ( DS - Max( RRSe,Min( RCSe ,DS ) ) ) / ( MUR * Min( DS ,MUC ) ) ) ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4233629249901293}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3747534516765286, "obj2": 0.4425787434776268}, {"determining": "( ( ACS - MRS ) - ( ( ( RRS - DDR ) * RRS ) * MRS ) )", "choosing": "( Min( CS ,MUC ) / ( Min( MUM ,RMSe ) - RRSe ) )", "obj1": 0.20710059171597633, "obj2": 0.6109474738305366}, {"determining": "Min( ( Max( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ),Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) ),FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( RMSe / ( MUM + ( RCSe * ( CS - ( MUC / MUR ) ) ) ) ) / ( ( MUM * DS ) * ( CS * ( MLU * CS ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.6903353057199211, "obj2": 0.10773282675995782}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( MRS + RRS ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( CS,( Min( RRSe ,( MUR / CS ) ) + ( MUM - Min( Min( MUM ,RCSe ) ,MUM ) ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.42412135718476696}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( RRSe,MUC ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + ARS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( MUC,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.73767258382643, "obj2": 0.09645028427447193}, {"determining": "( ( Max( ( ACS / ( AMS + ( Const / PN ) ) ),( FirstVNF_CPU * ACS ) ) * Min( AMS ,Min( PN ,MDR ) ) ) + ( ARS / ACS ) )", "choosing": "( ( MLU / ( MUC - ( MLU - MUR ) ) ) / Min( RRSe ,RRSe ) )", "obj1": 0.1873767258382643, "obj2": 0.683521024526717}, {"determining": "( Min( ( ( Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Min( PN ,MDR ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM - DS ) / ( ( ( ( RMSe * Max( RMSe,RRSe ) ) / RCSe ) + MLU ) * RMSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.5976331360946746, "obj2": 0.2619237298464808}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.21893491124260356, "obj2": 0.6042570748557959}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / FirstVNF_RAM_Server ) / Min( ( ( Const / ( ARS + AMS ) ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( Max( ( DS + MLU ),Min( RRSe ,( MUC * MUR ) ) ) - RMSe ) ) + ( Max( MUR,MLU ) - RMSe ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 0.1913214990138067, "obj2": 0.6816199461215955}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.883629191321499, "obj2": 0.04943233427041551}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_CPU_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - ( ( RMSe * CS ) - Max( MUR,DS ) ) ) ) )", "obj1": 0.4418145956607495, "obj2": 0.35419921520660774}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( ( ( ACS - ( CRS + Max( ARS,ARS ) ) ) + ARS ) - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( DS / DS ) / Min( MLU ,( ( MUR / Min( ( CS * MLU ) ,( RMSe * DS ) ) ) + MUM ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "( Min( ( ( Max( MDR,Min( Min( MRS ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM - DS ) / ( ( ( MLU / RCSe ) + MLU ) * RMSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.5857988165680473, "obj2": 0.2724506498323223}, {"determining": "( ( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + Min( BR ,MRS ) ) - ARS ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + MLU ) - Min( MUR ,MUR ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6007059570912566}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Min( ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ,( PN - MDR ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - ( RMSe + MUC ) ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) - CS ) )", "obj1": 0.8599605522682445, "obj2": 0.05139456872574875}, {"determining": "( ( Max( Max( FirstVNF_RAM,( Max( ( ARS - FirstVNF_Mem_Server ),AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( Const - FirstVNF_CPU_Server ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( Min( ( MLU / RCSe ) ,MLU ) / CS ) ) * ( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 0.5207100591715976, "obj2": 0.3352577598958534}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,ARS ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( DDR,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / ( MUM - DS ) ),( MUC + CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.32938856015779094, "obj2": 0.48883321905868565}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( ( AMS + CRS ) * ( Min( ( ( Const / RRS ) * ( Min( ARS ,FirstVNF_CPU ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( ( CS * MUC ) + MLU ),( MUM - MLU ) ) ) ) ),( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.834319526627219, "obj2": 0.05876020257076078}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,ARS ) - ( ( RRS - CRS ) * DDR ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Max( DS,( MUC - Max( RMSe,MUR ) ) ),MUM ) * DS ) + Max( DS,MUR ) ) ) * ( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.2859960552268245, "obj2": 0.5210699517817964}, {"determining": "Min( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( ( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) ),FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( RMSe / ( MUM + ( RCSe * ( CS - ( MUC / MUR ) ) ) ) ) / ( ( RRSe * DS ) * ( CS * ( MLU * CS ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.854043392504931, "obj2": 0.05552337775184162}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,Max( ( FirstVNF_CPU * Min( CRS ,( ( ARS - FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + PN ) + FirstVNF_RAM_Server ) ) ) ),( FirstVNF_Mem_Server * CRS ) ) )", "choosing": "( Min( ( RMSe + MUR ) ,( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,MUR ) / CS ) - MUC ) - Max( Max( MUC,RMSe ),CS ) ) ) / Min( MLU ,MUR ) )", "obj1": 0.3431952662721893, "obj2": 0.47928875064782933}, {"determining": "( Min( ( ( PN / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( Max( Const,DDR ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( Min( DS ,MUR ),( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) * ( ( MUR + ( RRSe * ( DS - RCSe ) ) ) + ( CS / Min( ( RMSe * MUM ) ,MUC ) ) ) )", "obj1": 0.650887573964497, "obj2": 0.2299272220324302}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( ( DDR + FirstVNF_RAM ) + ARS ) )", "choosing": "( Max( ( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) ),MUC ) - Max( Min( RRSe ,CS ),Max( ( ( ( MUC + ( CS * ( RCSe * MLU ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.23668639053254437, "obj2": 0.5882318011172848}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Max( Const,FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ),Max( ( ( ( MUC + ( CS * ( MUM * MLU ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.252465483234714, "obj2": 0.5753390114768605}, {"determining": "Min( Min( FirstVNF_RAM ,( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) ,( ARS * ( ( Min( ( MDR + FirstVNF_Mem ) ,Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( CRS + AMS ) ),FirstVNF_CPU_Server ) ) * DDR ) / Max( ( Const + AMS ),( ( ( Max( FirstVNF_RAM_Server,AMS ) + ( CRS * MDR ) ) - ARS ) * Max( MRS,( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) * MUC ) + RMSe ) / ( RRSe / DS ) )", "obj1": 0.6568047337278107, "obj2": 0.2281434643522854}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.6883629191321499, "obj2": 0.1232853602338893}, {"determining": "Min( ( ( Max( AMS,( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Max( Const,BR ) ) / PN ) ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_RAM_Server / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - ( Min( MUR ,RMSe ) + ( MUC / MUR ) ) ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( ( MUC / MUM ) / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.7396449704142012, "obj2": 0.08667963190045333}, {"determining": "( Min( MRS ,Const ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.34714003944773175, "obj2": 0.46202822453368414}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,Max( Const,FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) - Max( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ),Max( ( ( ( MUC + ( CS * ( MUM * MLU ) ) ) - MUR ) + MUC ),RRSe ) ) )", "obj1": 0.2583826429980276, "obj2": 0.5629662551687868}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * ( CS - CS ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( ( Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ,( AMS - ( ARS * Max( ( CRS - DDR ),FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server )", "choosing": "( ( ( ( RMSe * CS ) - Max( MUR,DS ) ) + ( ( Max( Min( Min( ( DS + RCSe ) ,RRSe ) ,MUM ),RRSe ) * DS ) + Max( DS,MUR ) ) ) * ( ( ( RRSe - MUR ) + ( MUC / MUR ) ) - Max( Min( MUM ,RCSe ),( MUC + MUC ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5254715916517749}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( ( FirstVNF_CPU_Server * DDR ),( MRS + CRS ) ) * ( Max( ( MRS / ( ARS / FirstVNF_CPU ) ),FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( DS + MUR ) / ( MLU * MUC ) ) ),Max( ( ( RRSe + CS ) / MLU ),DS ) ) )", "obj1": 0.34516765285996054, "obj2": 0.47410507750694664}, {"determining": "( Min( ( ( Max( MDR,Max( DDR,FirstVNF_Mem ) ) / FirstVNF_RAM ) / Const ) ,( FirstVNF_Mem - DDR ) ) * ( Min( ( BR / FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,Const ) ) * ( FirstVNF_Mem_Server / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM - DS ) / ( ( ( ( RCSe / CS ) / RCSe ) + MLU ) * RMSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Min( CS ,MUC ) ) )", "obj1": 0.5877712031558185, "obj2": 0.2671883518426824}, {"determining": "( ( Min( FirstVNF_Mem ,PN ) - ( AMS / FirstVNF_CPU_Server ) ) + ( ( ( ( ARS * Min( MRS ,Const ) ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) + Max( FirstVNF_Mem_Server,( ( Min( AMS ,FirstVNF_Mem ) * RRS ) - Const ) ) ) )", "choosing": "( ( ( ( Min( Max( Min( RRSe ,MUR ),MUC ) ,( MLU + CS ) ) / CS ) - Max( RRSe,RMSe ) ) * ( ( Min( ( MLU + CS ) ,( CS / RRSe ) ) + RRSe ) - Min( MUR ,MUR ) ) ) / ( Min( Min( ( MLU + MUC ) ,RRSe ) ,MUM ) * Min( MUM ,( RCSe - CS ) ) ) )", "obj1": 0.2445759368836292, "obj2": 0.5833215321461377}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.3609467455621302, "obj2": 0.45617019527402713}, {"determining": "( ( CRS / ( DDR + FirstVNF_RAM ) ) / ( ( CRS - ( AMS * Max( CRS,FirstVNF_RAM ) ) ) - MRS ) )", "choosing": "( Max( MUR,( RMSe * MUC ) ) - Max( ( ( Max( MUR,MLU ) * RCSe ) * MUR ),RRSe ) )", "obj1": 0.9940828402366864, "obj2": 0.002606165729530354}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM_Server,( CRS + RRS ) ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) * ( Min( RCSe ,( DS / CS ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.35700197238658776, "obj2": 0.46168654568226775}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( Min( RCSe ,MUM ) - RCSe ) - CS ) )", "obj1": 0.8264299802761341, "obj2": 0.06166674057401466}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_RAM_Server / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( ( MUC / MUM ) / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.7495069033530573, "obj2": 0.08369468662630938}, {"determining": "Min( ( FirstVNF_Mem + ( ( PN / FirstVNF_RAM ) / Const ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,( MLU / MUC ) ) ,( ( MLU + MUM ) / RRSe ) ) / MUC ) ) ) ,( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / Min( Max( Min( DS ,MUR ),( RMSe + Min( MUR ,CS ) ) ) ,Min( RCSe ,Min( RRSe ,RRSe ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8086785009861933, "obj2": 0.06557345211907555}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( ARS * ( ( ( RRS * MRS ) - Const ) - ( ACS + Const ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( Min( DS ,DS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( Max( FirstVNF_CPU,Const ),( FirstVNF_Mem * ( FirstVNF_RAM * AMS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( RMSe * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ),( RCSe - CS ) )", "obj1": 0.6863905325443787, "obj2": 0.12707640052985286}, {"determining": "( Min( Max( ( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - CRS ) ) ),Min( FirstVNF_RAM_Server ,DDR ) ) ,DDR ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( ( MUM + ( ( Max( MUR,MUC ) / Min( CS ,RMSe ) ) / RCSe ) ),MUM ) - ( ( Max( MUC,( MUR + ( DS / MLU ) ) ) + ( DS / ( ( MUM / MUC ) * RMSe ) ) ) + DS ) )", "obj1": 0.2465483234714004, "obj2": 0.5776423808488534}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - ARS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( Max( ( RCSe / RMSe ),( MUR / CS ) ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) - FirstVNF_RAM ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( MUR / DS ) ) - DS ) ),( RCSe - CS ) )", "obj1": 0.796844181459566, "obj2": 0.06728382436368513}, {"determining": "Min( ( ( ( MRS + FirstVNF_RAM_Server ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / DDR ) ),Max( ( BR / Min( RRS ,PN ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( ( DS - RCSe ),MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RMSe - MLU ) )", "obj1": 0.9842209072978304, "obj2": 0.007785777946893176}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( RRS * FirstVNF_CPU ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( ( MUM / MUC ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7613412228796844, "obj2": 0.07914661371723293}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( Min( ( ( DDR + ACS ) * CRS ) ,( DDR - FirstVNF_CPU_Server ) ),FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ( ( Const / RRS ) * ( Min( ARS ,FirstVNF_CPU ) - ACS ) ) ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Max( CRS,DDR ) - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( ( DS / CS ),( MLU / MUC ) ) ,( ( MLU + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8027613412228797, "obj2": 0.06694324682620412}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( Min( RRS ,( AMS - ( AMS - ( FirstVNF_Mem / Min( FirstVNF_Mem_Server ,( MRS / Const ) ) ) ) ) ),Max( AMS,Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( RMSe,( CS - Max( RMSe,MUR ) ) ),RRSe ) * ( Max( Min( DS ,MLU ),Max( MUR,RCSe ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3668639053254438, "obj2": 0.45245141036190073}, {"determining": "Min( ( Max( FirstVNF_CPU,( MDR + FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM_Server,( CRS + ( CRS - RRS ) ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM * ( DDR / ACS ) ),AMS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( MUM ,DS ) * Min( MUM ,( RCSe - CS ) ) ),( ( Min( RCSe ,( ( RMSe * MUC ) + RMSe ) ) - RCSe ) - CS ) )", "obj1": 0.8185404339250493, "obj2": 0.0625825100804483}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ,( ARS / ARS ) ),Max( ( BR / ( FirstVNF_Mem / ( BR - FirstVNF_Mem ) ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + ( ( CS - RCSe ) + Min( RMSe ,MUM ) ) ) ) ,Max( ( ( ( MUC + ( CS * ( RCSe * MLU ) ) ) - MUR ) + MUC ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.7692307692307693, "obj2": 0.0784559800263153}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( RRS * FirstVNF_CPU ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / ( FirstVNF_RAM - DDR ) ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( ( MUM / MUC ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * Min( RCSe ,MUM ) ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.777120315581854, "obj2": 0.07450082380456347}, {"determining": "Min( ( FirstVNF_Mem - Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Min( ( RMSe + Min( RCSe ,( DS / MUM ) ) ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7928994082840237, "obj2": 0.07093111252150304}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( FirstVNF_CPU / RRS ) / FirstVNF_Mem ) )", "choosing": "Max( ( MUR * ( Min( ( ( ( CS / RMSe ) + MUM ) + ( MUM / ( MLU + ( RCSe / RRSe ) ) ) ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Max( Min( BR ,RRS ),( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_RAM ) / PN ) ) - ( ARS * ( BR - BR ) ) ) * ( BR * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( MUM - DS ) - MUM ) ,MUM ) / ( Max( Min( Max( Max( MLU,( DS * Max( DS,MUR ) ) ),Min( RCSe ,( Min( MLU ,MLU ) - ( MUC - CS ) ) ) ) ,( MUM * DS ) ),( MUC + ( DS * RRSe ) ) ) / ( ( CS - RCSe ) + ( ( RRSe / MUR ) + ( Min( CS ,MUM ) * Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.7046049414560348}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( MRS + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( ( RMSe * MUC ) / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7534516765285996, "obj2": 0.0813973921304737}, {"determining": "( ( Const + MDR ) - Max( ( FirstVNF_RAM - DDR ),( FirstVNF_RAM - ( ( Max( ( DDR * CRS ),CRS ) * ACS ) - ( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( CS ,( MUR + ( RRSe + Min( ( RMSe - MLU ) ,Max( ( MUC / MUM ),CS ) ) ) ) ) / Min( MUC ,MUC ) )", "obj1": 0.9980276134122288, "obj2": 0.001872018540623766}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,( MLU / MUC ) ) ,( ( MLU + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( RMSe / CS ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * MDR ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( Min( RCSe ,MUM ) - RCSe ) ),( RCSe - CS ) )", "obj1": 0.7712031558185405, "obj2": 0.07798562771732835}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_Mem_Server ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( Max( Max( DS,Min( ( MUM - MUC ) ,MUR ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - MDR ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - ( RMSe + MUC ) ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7889546351084813, "obj2": 0.07233246581769508}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) - FirstVNF_RAM ) ,Min( CRS ,FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe / ( ( ( Min( Min( RRSe ,MLU ) ,MUC ) + DS ) / Max( RCSe,RMSe ) ) * ( CS * RMSe ) ) ) * ( Min( RCSe ,DS ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * ( DS + RRSe ) ),( MUM - MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7909270216962525, "obj2": 0.07119648436787629}, {"determining": "Min( ( Max( FirstVNF_CPU,Const ) + ( Max( ( ( AMS / ( ARS + ACS ) ) * Min( ARS ,ARS ) ),BR ) * ( Min( ( ( Const / RRS ) * ( Min( CRS ,DDR ) - ACS ) ) ,( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) + ( Min( ARS ,Const ) * FirstVNF_CPU ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MLU * MLU ) * ( Min( RCSe ,( RRSe - ( DS - MLU ) ) ) - ( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * Max( ( RCSe * DS ),( MUM - MLU ) ) ) ) ),( ( RRSe / RCSe ) - Max( RMSe,( Max( ( ( MLU * RRSe ) / ( MLU + ( CS + MLU ) ) ),( MUM * ( ( RCSe - MUR ) - MUC ) ) ) - MUC ) ) ) )", "obj1": 0.7850098619329389, "obj2": 0.07305973672508323}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,( ARS + PN ) ) / MRS ) ),( MRS + CRS ) ) * ( MRS - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( ( ( Min( MUM ,MUR ) + MUC ) / ( MUC + MLU ) ) * ( Min( RCSe ,Max( DS,MUR ) ) * RCSe ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.7554240631163708, "obj2": 0.08104876201593736}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),Max( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ),( Const - FirstVNF_CPU_Server ) ) ) ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( ( MUR + MUM ) / RRSe ) ) / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / ( DS + RRSe ) ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.8165680473372781, "obj2": 0.06284138490406052}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / MRS ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.757396449704142, "obj2": 0.08028101572741354}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_Mem_Server ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( FirstVNF_RAM - DDR ),FirstVNF_Mem_Server ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( Min( Max( RMSe,MLU ) ,( DS / RRSe ) ) / MUC ) ) ) ,( ( Max( Max( DS,Min( ( MUC / MUR ) ,MUR ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.07288082893504828}, {"determining": "Min( ( ( PN - MDR ) * FirstVNF_Mem_Server ) ,( Max( Max( FirstVNF_RAM,( Max( MRS,AMS ) / Min( AMS ,ARS ) ) ),( MRS + CRS ) ) * ( ( Min( FirstVNF_Mem ,( ( ( Const * FirstVNF_RAM_Server ) + CRS ) - CRS ) ) / ACS ) - ( ( MDR - PN ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe / MUR ) + MLU ) - Max( Max( CS,( ( Min( MUR ,MUR ) * ( Min( RCSe ,( DS / MUM ) ) * ( RCSe * DS ) ) ) / ( MLU * MUC ) ) ),( DS - MUM ) ) )", "obj1": 0.757396449704142, "obj2": 0.08028101572741354}, {"determining": "Min( ( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( Min( ( Const - FirstVNF_Mem_Server ) ,( ARS / ARS ) ),( AMS - ( ARS * Max( ( FirstVNF_RAM - DDR ),( ( AMS - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Max( ( RCSe - MUC ),CS ) * Min( ( ( ( MLU - MLU ) * RCSe ) / CS ) ,MLU ) ) ) ,( ( Max( Max( DS,( MUC - Max( MUR,MUR ) ) ),MUM ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS - RCSe ) + ( ( RRSe / MUR ) + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07409426941177524}, {"determining": "Min( ( ( ( MDR + FirstVNF_RAM_Server ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * Min( RRSe ,MUR ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( Max( MLU,Min( MLU ,( ( CS + RMSe ) * DS ) ) ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}