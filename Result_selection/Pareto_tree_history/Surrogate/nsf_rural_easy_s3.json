{"1": [{"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( BR + BR ) ),Max( ARS,FirstVNF_Mem ) )", "choosing": "Min( Max( MUR,MLU ) ,( ( RRSe - MUM ) + CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6674837071492834}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6764243257071405}, {"determining": "( ( BR + Const ) - Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - Min( Min( ACS ,Min( Max( ( FirstVNF_CPU / DDR ),DDR ) ,FirstVNF_RAM_Server ) ) ,RRS ) )", "choosing": "( Min( MUC ,DS ) / Min( RRSe ,( MUC - RMSe ) ) )", "obj1": 0.3779527559055118, "obj2": 0.52421334169053}, {"determining": "( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( CS + MLU ) * ( MLU + RRSe ) )", "obj1": 0.18503937007874016, "obj2": 0.7615572626918703}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server + Min( Min( Const ,MDR ) ,DDR ) ) + FirstVNF_CPU_Server ),DDR ) * ( MDR - ACS ) )", "choosing": "Max( ( ( MUR / Max( MUM,( ( ( RCSe / RMSe ) + ( Min( CS ,MLU ) - MUC ) ) + ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) ) ) ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( FirstVNF_RAM,AMS ) - ( DDR * PN ) ),Max( ( Const / ACS ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( MLU ,RCSe ),DS ) - ( ( MUC - CS ) + CS ) )", "obj1": 0.20275590551181102, "obj2": 0.6829483799465793}, {"determining": "( ( AMS + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.599588539720452}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( BR,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM * MRS ) / ( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + ( DS * Max( RMSe,( ( Max( RMSe,RRSe ) - DS ) * Max( RMSe,MUR ) ) ) ) ) - DS ) ,( MUR + RRSe ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "Max( ( DDR * FirstVNF_CPU ),( CRS * ACS ) )", "choosing": "( ( ( RCSe * DS ) / ( RCSe / RRSe ) ) + Max( ( MLU * MUC ),Max( RRSe,RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5726387435800265}, {"determining": "( ( ( CRS / AMS ) / ( AMS * MRS ) ) + Max( ( FirstVNF_RAM_Server * PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( DS - RRSe ) / CS ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.33505616590752535}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ( Min( Max( PN,DDR ) ,AMS ) + AMS ) + ( AMS + Const ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MUR + ( ( RRSe + ( MLU - ( ( ( RMSe / RCSe ) + MUM ) * ( ( MUC * CS ) / MUM ) ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( ( MDR / BR ) - ( CRS * MDR ) )", "choosing": "Min( ( Min( MUR ,MUM ) - ( CS / MUR ) ) ,( Max( MUR,CS ) - RRSe ) )", "obj1": 0.2736220472440945, "obj2": 0.6241954872754046}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( ( Max( ( PN - FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,( ACS + ( Const * MRS ) ) ) ) - Max( ( Max( ARS,FirstVNF_Mem_Server ) * PN ),( CRS * DDR ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( MUR - ( Max( ( ( RCSe * ( ( MUM / RCSe ) * Min( MUM ,RMSe ) ) ) + DS ),( RRSe - DS ) ) - CS ) ) + Min( RRSe ,( ( RCSe / ( ( ( ( RCSe + RCSe ) + Min( MLU ,MUC ) ) - ( ( RRSe / MUC ) / ( MUM + RCSe ) ) ) - RCSe ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( Min( AMS ,MRS ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( Max( DS,DS ) / Max( RRSe,RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7617465095440685}, {"determining": "Min( ( MDR + CRS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( DS - MUM ) ) / MLU ) / RRSe ) ) / ( RCSe * RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) / ( Min( ( MRS / DDR ) ,( FirstVNF_Mem_Server / BR ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( DDR,MRS ) ) ) )", "choosing": "Min( ( CS - ( DS / MUR ) ) ,Min( MUC ,( ( DS / MUC ) * CS ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5436927504336001}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( RCSe / ( RMSe - RMSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6989237396408006}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.6341300324116035}, {"determining": "( ( ( Min( FirstVNF_Mem ,AMS ) / ( AMS - RRS ) ) / FirstVNF_Mem_Server ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS + RMSe ),( MUM + DS ) ) ,Max( ( RCSe / CS ),Min( MUR ,RMSe ) ) ) - ( Max( ( MUR / MUR ),RMSe ) / Max( ( MLU + ( RRSe / Min( Min( ( RCSe - MLU ) ,RMSe ) ,RRSe ) ) ),DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - DDR ) - MRS ) )", "choosing": "( ( MUR + Min( DS ,RMSe ) ) + ( ( MUR / ( ( CS - ( CS - MUR ) ) + MUR ) ) * Min( MUM ,( RCSe + ( MUC * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( Max( DDR,FirstVNF_Mem ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( RRSe,MUM ) * CS ) ,Min( MUM ,MUM ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( ACS - ( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Min( ( DS + DS ) ,( MLU * ( Max( ( MUR + DS ),RCSe ) / MUM ) ) )", "obj1": 0.5984251968503937, "obj2": 0.4484432319469959}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6019376074856335}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MLU - CS ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) - Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server + Min( Min( Const ,MDR ) ,DDR ) ) + FirstVNF_CPU_Server ),DDR ) * ( MDR - ACS ) )", "choosing": "Max( ( ( MUR / Max( MUM,( ( ( RCSe / RMSe ) + ( Min( CS ,MLU ) - MUC ) ) + ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) ) ) ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( BR,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM * MRS ) / ( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + ( DS * Max( RMSe,( ( Max( RMSe,RRSe ) - DS ) * Max( RMSe,MUR ) ) ) ) ) - DS ) ,( MUR + RRSe ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "Max( ( DDR * FirstVNF_CPU ),( CRS * ACS ) )", "choosing": "( ( ( RCSe * DS ) / ( RCSe / RRSe ) ) + Max( ( MLU * MUC ),Max( RRSe,RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5726387435800265}, {"determining": "( ( ( CRS / AMS ) / ( AMS * MRS ) ) + Max( ( FirstVNF_RAM_Server * PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( DS - RRSe ) / CS ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ( Min( Max( PN,DDR ) ,AMS ) + AMS ) + ( AMS + Const ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MUR + ( ( RRSe + ( MLU - ( ( ( RMSe / RCSe ) + MUM ) * ( ( MUC * CS ) / MUM ) ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( ( MDR / BR ) - ( CRS * MDR ) )", "choosing": "Min( ( Min( MUR ,MUM ) - ( CS / MUR ) ) ,( Max( MUR,CS ) - RRSe ) )", "obj1": 0.2736220472440945, "obj2": 0.6241954872754046}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( ( Max( ( PN - FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,( ACS + ( Const * MRS ) ) ) ) - Max( ( Max( ARS,FirstVNF_Mem_Server ) * PN ),( CRS * DDR ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( MUR - ( Max( ( ( RCSe * ( ( MUM / RCSe ) * Min( MUM ,RMSe ) ) ) + DS ),( RRSe - DS ) ) - CS ) ) + Min( RRSe ,( ( RCSe / ( ( ( ( RCSe + RCSe ) + Min( MLU ,MUC ) ) - ( ( RRSe / MUC ) / ( MUM + RCSe ) ) ) - RCSe ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( Min( AMS ,MRS ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( Max( DS,DS ) / Max( RRSe,RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7617465095440685}, {"determining": "Min( ( MDR + CRS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( DS - MUM ) ) / MLU ) / RRSe ) ) / ( RCSe * RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.6341300324116035}, {"determining": "( ( ( Min( FirstVNF_Mem ,AMS ) / ( AMS - RRS ) ) / FirstVNF_Mem_Server ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS + RMSe ),( MUM + DS ) ) ,Max( ( RCSe / CS ),Min( MUR ,RMSe ) ) ) - ( Max( ( MUR / MUR ),RMSe ) / Max( ( MLU + ( RRSe / Min( Min( ( RCSe - MLU ) ,RMSe ) ,RRSe ) ) ),DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - DDR ) - MRS ) )", "choosing": "( ( MUR + Min( DS ,RMSe ) ) + ( ( MUR / ( ( CS - ( CS - MUR ) ) + MUR ) ) * Min( MUM ,( RCSe + ( MUC * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( Max( DDR,FirstVNF_Mem ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( RRSe,MUM ) * CS ) ,Min( MUM ,MUM ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6019376074856335}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MLU - CS ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + AMS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( BR + MRS ) - Max( BR,Const ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( MRS * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - RRS ) - ( ( FirstVNF_CPU_Server + MDR ) + ( ARS + AMS ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( ( ( RRSe + ( Min( RRSe ,RCSe ) - DS ) ) + MLU ) ,DS ) - ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( Max( Min( ( RRSe / RMSe ) ,MUC ),Min( CS ,MUM ) ) ,Min( MUC ,( Max( RCSe,CS ) + ( ( MUC - MLU ) + Max( DS,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "Min( ( RRSe - Max( MUC,( Max( MUM,Min( MUC ,RCSe ) ) - Max( MUC,RCSe ) ) ) ) ,( ( MUM - MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) + PN ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * RMSe ) - Max( RRSe,CS ) )", "obj1": 0.3090551181102362, "obj2": 0.5800829457502259}, {"determining": "( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) )", "obj1": 0.2755905511811024, "obj2": 0.6069239674269714}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( ( AMS * PN ),Const ) ),FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS / DS ),Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( ACS / BR ) ) + Max( FirstVNF_RAM,PN ) ) / Max( FirstVNF_CPU,ARS ) )", "choosing": "Max( ( DS * Min( ( Min( MUM ,MLU ) - MUM ) ,MUR ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS * MLU ),( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU / Const ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RRSe ) ,( RMSe - RRSe ) )", "obj1": 0.9114173228346457, "obj2": 0.08206393123868755}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( CS * ( ( Min( RRSe ,RCSe ) - ( MUM * MUR ) ) - ( ( RMSe * RRSe ) - Max( MLU,MUR ) ) ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ( ( ( ( FirstVNF_CPU_Server + ( MDR * BR ) ) * Min( BR ,( FirstVNF_CPU - AMS ) ) ) * FirstVNF_RAM ) - FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - ( ( ( MUC + Min( MUM ,Min( MUM ,MUM ) ) ) + CS ) - ( RRSe / MUM ) ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUM ) - ( CS / MUR ) ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "( Min( FirstVNF_CPU ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,( ( Const + MDR ) - AMS ) ) + Min( DDR ,( Max( Max( RRS,MRS ),Const ) / ARS ) ) ) / ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( DS * MUC ),( MUM * RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "Min( ( DS + CS ) ,Min( ( Min( MLU ,MUM ) - RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,Max( CS,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6911731245610512}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Min( ( Min( MUR ,MUM ) - ( CS / MUR ) ) ,( Max( MUR,CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) - Max( ( DDR * ( DDR + AMS ) ),FirstVNF_CPU ) )", "choosing": "Min( RRSe ,Max( MLU,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ( ( MDR * PN ) / ( FirstVNF_CPU_Server / CRS ) ) ,Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( ACS * ARS ) ) ),FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - ( ( ( MLU * RRSe ) + ( DS + CS ) ) * Min( ( MUC - MLU ) ,( MUC * CS ) ) ) ) / RCSe ) * ( RCSe / ( RMSe - RMSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6978678134972993}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR / Max( DDR,PN ) ) ) - ( MDR / ACS ) )", "choosing": "( MUR + ( MUM + ( ( MLU / MUM ) + Min( ( ( MUM + CS ) / ( ( MUC * MUC ) / RRSe ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - RRS ),Max( FirstVNF_Mem,MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5435495965918643}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Max( FirstVNF_RAM,MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + ( ( ( Max( FirstVNF_Mem_Server,MDR ) / FirstVNF_RAM ) / AMS ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - ( ( MUM * ( DS / ( MLU * DS ) ) ) / ( MUM / ( Min( MUM ,CS ) + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Min( Max( ( ( RRSe / RMSe ) * MUC ),Min( CS ,MUM ) ) ,Min( ( Min( Max( MUM,( ( Min( DS ,RCSe ) / ( MUR + MUM ) ) - MUC ) ) ,MUM ) + Min( ( MUM / MUR ) ,MLU ) ) ,RRSe ) )", "obj1": 0.9212598425196851, "obj2": 0.07669089129755458}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( CS * CS ) - ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / RRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - AMS ) ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe + RCSe ) ,( ( MUC * RMSe ) * ( RMSe - ( RMSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( MDR * CRS ) )", "choosing": "Min( ( ( ( CS - CS ) / ( MUR + RRSe ) ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( RRSe - RMSe ) + ( MLU + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.19911131118045733}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}], "3": [{"determining": "( ( ( FirstVNF_RAM + DDR ) * ( MDR + ACS ) ) - Max( ACS,AMS ) )", "choosing": "Min( Max( ( Max( ( ( MLU * ( MUC / MLU ) ) - MUC ),( RMSe - ( ( RMSe - MUC ) * RRSe ) ) ) * RMSe ),( DS * MUM ) ) ,( MUC / ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + CRS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( DS - MUM ) ) / MLU ) / RRSe ) ) / ( RCSe * RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( RRSe - RMSe ) + ( MLU + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.19911131118045733}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( ( ( FirstVNF_CPU / Const ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RRSe ) ,( RMSe - RRSe ) )", "obj1": 0.9114173228346457, "obj2": 0.08206393123868755}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.7440944881889764, "obj2": 0.21463188546292222}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( Min( AMS ,MRS ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( Max( DS,DS ) / Max( RRSe,RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7617465095440685}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Max( BR,RRS ) - MDR ) )", "choosing": "Min( ( ( RRSe - Max( MUC,( Max( MUM,Min( MUC ,RCSe ) ) - Max( MUC,RCSe ) ) ) ) - MUR ) ,DS )", "obj1": 0.11220472440944881, "obj2": 0.8389424032206826}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( ( Min( FirstVNF_Mem ,AMS ) / ( AMS - RRS ) ) / FirstVNF_Mem_Server ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS + RMSe ),( MUM + DS ) ) ,Max( ( RCSe / CS ),Min( MUR ,RMSe ) ) ) - ( Max( ( MUR / MUR ),RMSe ) / Max( ( MLU + ( RRSe / Min( Min( ( RCSe - MLU ) ,RMSe ) ,RRSe ) ) ),DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8693652460874725}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( ACS - Max( MDR,Const ) ) )", "choosing": "Min( ( MLU * ( Max( ( MUR + DS ),Max( MLU,RRSe ) ) / MUM ) ) ,( DS + DS ) )", "obj1": 0.4409448818897638, "obj2": 0.46100761509664556}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) )", "obj1": 0.28937007874015747, "obj2": 0.5903583150035585}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) )", "obj1": 0.2755905511811024, "obj2": 0.6069239674269714}, {"determining": "Max( ( DDR * FirstVNF_CPU ),( CRS * ACS ) )", "choosing": "( ( ( RCSe * DS ) / ( RCSe / RRSe ) ) + Max( ( MLU * MUC ),Max( RRSe,RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5726387435800265}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) + PN ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( ( MUM * RMSe ) - Max( RRSe,CS ) )", "obj1": 0.3090551181102362, "obj2": 0.5800829457502259}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.03029778836558362}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8096311272948729}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( Max( DDR,FirstVNF_Mem ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( RRSe,MUM ) * CS ) ,Min( MUM ,MUM ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( ( AMS + ( Min( AMS ,RRS ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,MUC ) ,DS ) / ( Max( RMSe,RCSe ) * ( RCSe - DS ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5411797040485185}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Min( ( ( MDR / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Min( Max( ( ( RRSe / RMSe ) * MUC ),Min( CS ,MUM ) ) ,Min( ( Min( Max( MUM,( ( Min( DS ,RCSe ) / ( MUR + MUM ) ) - MUC ) ) ,MUM ) + Min( ( MUM / MUR ) ,MLU ) ) ,RRSe ) )", "obj1": 0.9212598425196851, "obj2": 0.07669089129755458}, {"determining": "( ( Max( FirstVNF_CPU,( ( Const + MDR ) - AMS ) ) + Min( DDR ,( Max( Max( RRS,MRS ),Const ) / ARS ) ) ) / ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( DS * MUC ),( MUM * RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( BR,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM * MRS ) / ( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + ( DS * Max( RMSe,( ( Max( RMSe,RRSe ) - DS ) * Max( RMSe,MUR ) ) ) ) ) - DS ) ,( MUR + RRSe ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( CRS + ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5435495965918643}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6019376074856335}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + ( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) ) ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6968806656655462}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) + ( Min( Max( PN,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * ( MUC * MUM ) ) ,Min( DS ,MUM ) ),( ( MUM + MUM ) - RMSe ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,Max( CS,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6911731245610512}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - MDR ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( DS ,( MLU - ( DS / ( RCSe - ( MUM / MLU ) ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47219916474592355}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( MDR * CRS ) )", "choosing": "Min( ( ( ( CS - CS ) / ( MUR + RRSe ) ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( Min( ( MDR * AMS ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( FirstVNF_RAM,CRS ) ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) / ( ( RCSe + CS ) * MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.6046051892639719}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) - Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server + Min( Min( Const ,MDR ) ,DDR ) ) + FirstVNF_CPU_Server ),DDR ) * ( MDR - ACS ) )", "choosing": "Max( ( ( MUR / Max( MUM,( ( ( RCSe / RMSe ) + ( Min( CS ,MLU ) - MUC ) ) + ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) ) ) ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ( Min( Max( PN,DDR ) ,AMS ) + AMS ) + ( AMS + Const ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MUR + ( ( RRSe + ( MLU - ( ( ( RMSe / RCSe ) + MUM ) * ( ( MUC * CS ) / MUM ) ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( PN - FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,( ACS + ( Const * MRS ) ) ) ) - Max( ( Max( ARS,FirstVNF_Mem_Server ) * PN ),( CRS * DDR ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( MUR - ( Max( ( ( RCSe * ( ( MUM / RCSe ) * Min( MUM ,RMSe ) ) ) + DS ),( RRSe - DS ) ) - CS ) ) + Min( RRSe ,( ( RCSe / ( ( ( ( RCSe + RCSe ) + Min( MLU ,MUC ) ) - ( ( RRSe / MUC ) / ( MUM + RCSe ) ) ) - RCSe ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - DDR ) - MRS ) )", "choosing": "( ( MUR + Min( DS ,RMSe ) ) + ( ( MUR / ( ( CS - ( CS - MUR ) ) + MUR ) ) * Min( MUM ,( RCSe + ( MUC * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MLU - CS ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + AMS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( BR + MRS ) - Max( BR,Const ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( MRS * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - RRS ) - ( ( FirstVNF_CPU_Server + MDR ) + ( ARS + AMS ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( ( ( RRSe + ( Min( RRSe ,RCSe ) - DS ) ) + MLU ) ,DS ) - ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( Max( Min( ( RRSe / RMSe ) ,MUC ),Min( CS ,MUM ) ) ,Min( MUC ,( Max( RCSe,CS ) + ( ( MUC - MLU ) + Max( DS,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "Min( ( RRSe - Max( MUC,( Max( MUM,Min( MUC ,RCSe ) ) - Max( MUC,RCSe ) ) ) ) ,( ( MUM - MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( ( AMS * PN ),Const ) ),FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS / DS ),Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( ACS / BR ) ) + Max( FirstVNF_RAM,PN ) ) / Max( FirstVNF_CPU,ARS ) )", "choosing": "Max( ( DS * Min( ( Min( MUM ,MLU ) - MUM ) ,MUR ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS * MLU ),( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( CS * ( ( Min( RRSe ,RCSe ) - ( MUM * MUR ) ) - ( ( RMSe * RRSe ) - Max( MLU,MUR ) ) ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ( ( ( ( FirstVNF_CPU_Server + ( MDR * BR ) ) * Min( BR ,( FirstVNF_CPU - AMS ) ) ) * FirstVNF_RAM ) - FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - ( ( ( MUC + Min( MUM ,Min( MUM ,MUM ) ) ) + CS ) - ( RRSe / MUM ) ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "Min( ( DS + CS ) ,Min( ( Min( MLU ,MUM ) - RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Min( ( Min( MUR ,MUM ) - ( CS / MUR ) ) ,( Max( MUR,CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) - Max( ( DDR * ( DDR + AMS ) ),FirstVNF_CPU ) )", "choosing": "Min( RRSe ,Max( MLU,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR / Max( DDR,PN ) ) ) - ( MDR / ACS ) )", "choosing": "( MUR + ( MUM + ( ( MLU / MUM ) + Min( ( ( MUM + CS ) / ( ( MUC * MUC ) / RRSe ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS - RRS ),Max( FirstVNF_Mem,MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Max( FirstVNF_RAM,MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + ( ( ( Max( FirstVNF_Mem_Server,MDR ) / FirstVNF_RAM ) / AMS ) / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - ( ( MUM * ( DS / ( MLU * DS ) ) ) / ( MUM / ( Min( MUM ,CS ) + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( CS * CS ) - ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server / AMS ) / RRS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) - AMS ) ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe + RCSe ) ,( ( MUC * RMSe ) * ( RMSe - ( RMSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( AMS * FirstVNF_Mem_Server ),( Min( Const ,PN ) / ( Min( AMS ,Min( MDR ,( PN - FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) ) ) ) / ( MDR - DDR ) )", "choosing": "Min( ( ( RRSe + ( DS * Max( ( ( ( MLU / MUR ) + MLU ) / MUR ),( ( Max( RMSe,RRSe ) - DS ) * Max( RMSe,MUR ) ) ) ) ) / DS ) ,( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ( PN - ( MDR * FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RRSe ,MUM ) / ( ( DS - RMSe ) * ( MUM + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( MUC * Max( ( Min( MLU ,RCSe ) / Max( MUC,RCSe ) ),MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,Max( DDR,FirstVNF_RAM ) ) * ( MDR - ACS ) )", "choosing": "Max( ( DS / DS ),( Max( ( DS * MLU ),( MUM * RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "Min( ( Min( CS ,MUR ) - ( RMSe / RCSe ) ) ,( Min( MUR ,RMSe ) + ( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - BR ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ( MDR + BR ) ) ) )", "choosing": "Min( ( MLU - ( RRSe + ( DS * Max( RMSe,( ( Max( RMSe,RRSe ) + ( MUM * MUR ) ) * Max( RMSe,MUR ) ) ) ) ) ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * ( MDR - ACS ) ) / ( MRS * MDR ) )", "choosing": "Max( ( DS * Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + DDR ) * ( MDR + ACS ) ) - Max( ACS,AMS ) )", "choosing": "Min( Max( ( Max( ( ( MLU * ( MUC / MLU ) ) - MUC ),( RMSe - ( ( RMSe - MUC ) * RRSe ) ) ) * RMSe ),( DS * MUM ) ) ,( MUC / ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + CRS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( DS - MUM ) ) / MLU ) / RRSe ) ) / ( RCSe * RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( ( FirstVNF_CPU / Const ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RRSe ) ,( RMSe - RRSe ) )", "obj1": 0.9114173228346457, "obj2": 0.08206393123868755}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.7440944881889764, "obj2": 0.21463188546292222}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( DS + ( MLU + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.8051181102362205, "obj2": 0.20808720876530434}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8693652460874725}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6402774479403729}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + ( DDR / Const ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.7736220472440944, "obj2": 0.2137394047729871}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) )", "obj1": 0.2755905511811024, "obj2": 0.6069239674269714}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_RAM / AMS ),( AMS * MRS ) ) ) - MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( RCSe * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5708511802491869}, {"determining": "Min( ( Min( CRS ,DDR ) + ( BR - ARS ) ) ,( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server / MRS ),Max( ACS,ARS ) ) ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS / RCSe ) * ( ( Max( MUM,( RCSe + RCSe ) ) - RMSe ) + ( MUR - DS ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.578617552155773}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( ACS - Max( MDR,Const ) ) )", "choosing": "Min( ( MLU * ( Max( ( MUR + DS ),Max( MLU,RRSe ) ) / MUM ) ) ,( DS + DS ) )", "obj1": 0.4409448818897638, "obj2": 0.46100761509664556}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) )", "obj1": 0.28937007874015747, "obj2": 0.5903583150035585}, {"determining": "( ( ( Min( FirstVNF_Mem ,AMS ) / ( AMS - RRS ) ) / FirstVNF_Mem_Server ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS + RMSe ),( MUM + DS ) ) ,Max( ( RCSe / CS ),Min( MUR ,RMSe ) ) ) - ( Max( ( MUR / MUR ),RMSe ) / Max( ( MLU + ( RRSe / Min( Min( ( RCSe - MLU ) ,RMSe ) ,RRSe ) ) ),DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( Max( DDR,FirstVNF_Mem ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( RRSe,MUM ) * CS ) ,Min( MUM ,MUM ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( ( Const / FirstVNF_Mem ) + ( ( Const / FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( RRSe / RMSe ) * MUC ),Min( CS ,MUM ) ) ,Min( ( Min( Max( MUM,( Max( Min( MUC ,RCSe ),( DS + DS ) ) * RCSe ) ) ,MUM ) + Min( ( Max( MUM,Min( MUC ,MLU ) ) - Max( RCSe,MUC ) ) ,MLU ) ) ,RRSe ) )", "obj1": 0.9212598425196851, "obj2": 0.07473171880294181}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Min( Max( ( ARS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,( Max( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),FirstVNF_CPU ),( MRS * ( RRS - FirstVNF_CPU ) ) ) + Min( ACS ,DDR ) ) ) ,( DDR / MRS ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),( MUR / ( RRSe * RMSe ) ) ) ) ,( RRSe * MUM ) ),( RMSe - RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.5019751302105002}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Max( FirstVNF_CPU,( ( Const + MDR ) - AMS ) ) + Min( DDR ,( Max( Max( RRS,MRS ),Const ) / ARS ) ) ) / ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( DS * MUC ),( MUM * RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( BR,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM * MRS ) / ( ARS - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + ( DS * Max( RMSe,( ( Max( RMSe,RRSe ) - DS ) * Max( RMSe,MUR ) ) ) ) ) - DS ) ,( MUR + RRSe ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "( Min( ( FirstVNF_Mem_Server * AMS ) ,BR ) * ( ( Const - ARS ) * MDR ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,( MUR * ( CS + MUC ) ) ) / CS ),MLU ) )", "obj1": 0.1377952755905512, "obj2": 0.7812033044193815}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - MLU ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3464566929133858, "obj2": 0.551911810463389}, {"determining": "Min( ( ( Const * FirstVNF_RAM ) * ( MDR - FirstVNF_Mem_Server ) ) ,( Max( ( Max( CRS,BR ) * PN ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe - RMSe ) * ( ( ( MLU - Max( MUM,CS ) ) / MUC ) + MLU ) ) * ( MUM + CS ) ) + ( ( Max( RMSe,( RCSe / MLU ) ) - Max( MUM,Min( MLU ,RRSe ) ) ) + Max( MLU,RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.032695661780919115}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9783464566929134, "obj2": 0.025402946820442286}, {"determining": "Max( ( BR / ( MRS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,PN ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( MUC ,( ( MUC / DS ) * Max( RRSe,DS ) ) ) ),( Max( RCSe,DS ) * Max( DS,MLU ) ) )", "obj1": 0.2854330708661417, "obj2": 0.6006827189347526}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ) ) ) / Max( Min( DS ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.5101553901007685}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) + ( Min( Max( PN,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * ( MUC * MUM ) ) ,Min( DS ,MUM ) ),( ( MUM + MUM ) - RMSe ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( Min( ( MUC * Max( ( Min( MLU ,RCSe ) / Max( MUM,RCSe ) ),MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.984251968503937, "obj2": 0.017899697991833875}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8096311272948729}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server * ARS ) ,Max( ARS,( FirstVNF_CPU / FirstVNF_RAM ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ),( Min( ( ARS * AMS ) ,( CRS * BR ) ) / Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) ) ) / ( PN - Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),Max( DS,( ( Max( Max( MUM,DS ),RCSe ) / ( DS - ( MLU - MUC ) ) ) - MUC ) ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * MUM ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,( CS * RMSe ) ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Max( BR,RRS ) - MDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6917946716101997}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.03029778836558362}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - MDR ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( DS ,( MLU - ( DS / ( RCSe - ( MUM / MLU ) ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47219916474592355}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / Max( MUC,RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6019376074856335}, {"determining": "( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,Max( CS,MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6911731245610512}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + ( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) ) ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6968806656655462}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_CPU_Server * DDR ) + RRS ) * ARS ) / FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( MUC * Max( MUC,( MUC + Min( ( RRSe * Min( DS ,RRSe ) ) ,Max( CS,MUC ) ) ) ) ) ,Min( MUM ,DS ) ),( RMSe - MUM ) )", "obj1": 0.4330708661417323, "obj2": 0.4662640354652157}, {"determining": "( ( MRS / RRS ) / ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6985414849897748}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( MDR * CRS ) )", "choosing": "Min( ( ( ( CS - CS ) / ( MUR + RRSe ) ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * ( Min( MUC ,MUM ) / MUR ) ) ,DS )", "obj1": 0.4330708661417323, "obj2": 0.4662640354652157}, {"determining": "( Min( ( MDR * AMS ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( FirstVNF_RAM,CRS ) ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUM,RMSe ) / ( ( RCSe + CS ) * MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.6046051892639719}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ( PN * ( FirstVNF_CPU / Const ) ) )", "choosing": "Min( ( DS - MUR ) ,Max( ( ( RCSe + RMSe ) / MLU ),MUC ) )", "obj1": 0.19094488188976377, "obj2": 0.6911731245610512}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) - Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server + Min( Min( Const ,MDR ) ,DDR ) ) + FirstVNF_CPU_Server ),DDR ) * ( MDR - ACS ) )", "choosing": "Max( ( ( MUR / Max( MUM,( ( ( RCSe / RMSe ) + ( Min( CS ,MLU ) - MUC ) ) + ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) ) ) ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ( Min( Max( PN,DDR ) ,AMS ) + AMS ) + ( AMS + Const ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MUR + ( ( RRSe + ( MLU - ( ( ( RMSe / RCSe ) + MUM ) * ( ( MUC * CS ) / MUM ) ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( PN - FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,( ACS + ( Const * MRS ) ) ) ) - Max( ( Max( ARS,FirstVNF_Mem_Server ) * PN ),( CRS * DDR ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( MUR - ( Max( ( ( RCSe * ( ( MUM / RCSe ) * Min( MUM ,RMSe ) ) ) + DS ),( RRSe - DS ) ) - CS ) ) + Min( RRSe ,( ( RCSe / ( ( ( ( RCSe + RCSe ) + Min( MLU ,MUC ) ) - ( ( RRSe / MUC ) / ( MUM + RCSe ) ) ) - RCSe ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - DDR ) - MRS ) )", "choosing": "( ( MUR + Min( DS ,RMSe ) ) + ( ( MUR / ( ( CS - ( CS - MUR ) ) + MUR ) ) * Min( MUM ,( RCSe + ( MUC * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MLU - CS ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + AMS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( BR + MRS ) - Max( BR,Const ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( MRS * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - RRS ) - ( ( FirstVNF_CPU_Server + MDR ) + ( ARS + AMS ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( ( ( RRSe + ( Min( RRSe ,RCSe ) - DS ) ) + MLU ) ,DS ) - ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( Max( Min( ( RRSe / RMSe ) ,MUC ),Min( CS ,MUM ) ) ,Min( MUC ,( Max( RCSe,CS ) + ( ( MUC - MLU ) + Max( DS,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "Min( ( RRSe - Max( MUC,( Max( MUM,Min( MUC ,RCSe ) ) - Max( MUC,RCSe ) ) ) ) ,( ( MUM - MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( ( AMS * PN ),Const ) ),FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS / DS ),Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ( ACS / BR ) ) + Max( FirstVNF_RAM,PN ) ) / Max( FirstVNF_CPU,ARS ) )", "choosing": "Max( ( DS * Min( ( Min( MUM ,MLU ) - MUM ) ,MUR ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( DS * MLU ),( MUM * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( CS * ( ( Min( RRSe ,RCSe ) - ( MUM * MUR ) ) - ( ( RMSe * RRSe ) - Max( MLU,MUR ) ) ) ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ( ( ( ( FirstVNF_CPU_Server + ( MDR * BR ) ) * Min( BR ,( FirstVNF_CPU - AMS ) ) ) * FirstVNF_RAM ) - FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC - ( ( ( MUC + Min( MUM ,Min( MUM ,MUM ) ) ) + CS ) - ( RRSe / MUM ) ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "Min( ( DS + CS ) ,Min( ( Min( MLU ,MUM ) - RCSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( BR / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server + AMS ) + ( Const + AMS ) ) ) )", "choosing": "Max( Min( ( MUC * Max( ( Min( MLU ,RCSe ) / Max( MUM,RCSe ) ),MUM ) ) ,Min( DS ,MUM ) ),( RMSe - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * ( MDR - ACS ) ) / ( MRS * MDR ) )", "choosing": "Max( ( DS * Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + CRS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( DS - MUM ) ) / MLU ) / RRSe ) ) / ( RCSe * RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( ( FirstVNF_CPU / Const ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RRSe ) ,( RMSe - RRSe ) )", "obj1": 0.9114173228346457, "obj2": 0.08206393123868755}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.7440944881889764, "obj2": 0.21463188546292222}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8693652460874725}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + ( DDR / Const ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.7736220472440944, "obj2": 0.2137394047729871}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( DS + ( MLU + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.8051181102362205, "obj2": 0.20808720876530434}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6864688210672965}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6402774479403729}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( ACS - Max( MDR,Const ) ) )", "choosing": "Min( ( MLU * ( Max( ( MUR + DS ),Max( MLU,RRSe ) ) / MUM ) ) ,( DS + DS ) )", "obj1": 0.4409448818897638, "obj2": 0.46100761509664556}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) )", "choosing": "( ( MLU / MUM ) / Min( MLU ,CS ) )", "obj1": 0.2578740157480315, "obj2": 0.6065986857440004}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "Min( ( Min( CRS ,DDR ) + ( BR - ARS ) ) ,( ( FirstVNF_Mem_Server + Max( ( FirstVNF_Mem_Server / MRS ),Max( ACS,ARS ) ) ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS / RCSe ) * ( ( Max( MUM,( RCSe + RCSe ) ) - RMSe ) + ( MUR - DS ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.578617552155773}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( DS + ( MLU + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.8031496062992126, "obj2": 0.21370466951870443}, {"determining": "( Max( ( AMS * ( FirstVNF_CPU - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( ( MUR - Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ),( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( RCSe ,RMSe ) ) ) ) / CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ),RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6379985497060874}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_RAM / AMS ),( AMS * MRS ) ) ) - MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,Max( ( RCSe * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) / Max( Min( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.33661417322834647, "obj2": 0.5708511802491869}, {"determining": "( Min( Max( ( ARS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,( Max( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),FirstVNF_CPU ),( MRS * ( RRS - FirstVNF_CPU ) ) ) + Min( ACS ,DDR ) ) ) ,( DDR / MRS ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),( MUR / ( RRSe * RMSe ) ) ) ) ,( RRSe * MUM ) ),( RMSe - RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.5019751302105002}, {"determining": "( ( Max( FirstVNF_CPU,( ( Const + MDR ) - AMS ) ) + Min( DDR ,( Max( Max( RRS,MRS ),Const ) / ARS ) ) ) / ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( DS * MUC ),( MUM * RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( CRS ,Max( MDR,Const ) ) * Max( Const,( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + CS ) - Min( Min( ( CS / RRSe ) ,( Min( RCSe ,( Max( ( MLU + RRSe ),( MUR + RRSe ) ) - MUC ) ) * RRSe ) ) ,( ( ( MLU * MUM ) * MUM ) + ( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5801983357492274}, {"determining": "( Min( ( FirstVNF_Mem_Server * AMS ) ,BR ) * ( ( Const - ARS ) * MDR ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,( MUR * ( CS + MUC ) ) ) / CS ),MLU ) )", "obj1": 0.1377952755905512, "obj2": 0.7812033044193815}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( MUM,MUR ) )", "obj1": 0.984251968503937, "obj2": 0.01773959002220734}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5647172348367145}, {"determining": "Min( ( ( MRS * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,CRS ) ) ,( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) + Const ) )", "choosing": "( ( Min( MUR ,Max( MUR,( ( ( MLU + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5922051062423812}, {"determining": "( ( ( Min( FirstVNF_Mem ,AMS ) / ( AMS - RRS ) ) / FirstVNF_Mem_Server ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS + RMSe ),( MUM + DS ) ) ,Max( ( RCSe / CS ),Min( MUR ,RMSe ) ) ) - ( Max( ( MUR / MUR ),RMSe ) / Max( ( MLU + ( RRSe / Min( Min( ( RCSe - MLU ) ,RMSe ) ,RRSe ) ) ),DS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( ( MUC * Max( MUC,( DS / RCSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.008214951319420492}, {"determining": "( ( Const / FirstVNF_Mem ) + ( ( Const / FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( RRSe / RMSe ) * MUC ),Min( CS ,MUM ) ) ,Min( ( Min( Max( MUM,( Max( Min( MUC ,RCSe ),( DS + DS ) ) * RCSe ) ) ,MUM ) + Min( ( Max( MUM,Min( MUC ,MLU ) ) - Max( RCSe,MUC ) ) ,MLU ) ) ,RRSe ) )", "obj1": 0.9212598425196851, "obj2": 0.07473171880294181}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5882409391190336}, {"determining": "Min( ( ( Const * FirstVNF_RAM ) * ( MDR - FirstVNF_Mem_Server ) ) ,( Max( ( Max( CRS,BR ) * PN ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe - RMSe ) * ( ( ( MLU - Max( MUM,CS ) ) / MUC ) + MLU ) ) * ( MUM + CS ) ) + ( ( Max( RMSe,( RCSe / MLU ) ) - Max( MUM,Min( MLU ,RRSe ) ) ) + Max( MLU,RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.032695661780919115}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47837965984472547}, {"determining": "( Max( ( RRS / FirstVNF_CPU_Server ),( RRS * Min( PN ,FirstVNF_Mem ) ) ) * ( Const * ARS ) )", "choosing": "( ( DS + RCSe ) - ( RMSe / Min( CS ,MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Max( BR,RRS ) - MDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6917946716101997}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) )", "obj1": 0.27165354330708663, "obj2": 0.6040452057152667}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8096311272948729}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.2736220472440945, "obj2": 0.603319486172864}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MUR ) + ( Min( MUC ,Min( MLU ,( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ) ) ) / Max( Min( DS ,( MUR / RMSe ) ),MLU ) ) )", "obj1": 0.3956692913385827, "obj2": 0.5101553901007685}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.03029778836558362}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - MDR ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( DS ,( MLU - ( DS / ( RCSe - ( MUM / MLU ) ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47219916474592355}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ),( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( DS / MUC ) )", "obj1": 0.421259842519685, "obj2": 0.47505522327943245}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9783464566929134, "obj2": 0.025402946820442286}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + ( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) ) ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6968806656655462}, {"determining": "( ( MRS / RRS ) / ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6985414849897748}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( ACS - ( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.39173228346456695, "obj2": 0.510407175621033}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5647172348367145}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server * ARS ) ,Max( ARS,( FirstVNF_CPU / FirstVNF_RAM ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ),( Min( ( ARS * AMS ) ,( CRS * BR ) ) / Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) ) ) / ( PN - Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),Max( DS,( ( Max( Max( MUM,DS ),RCSe ) / ( DS - ( MLU - MUC ) ) ) - MUC ) ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * MUM ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,( CS * RMSe ) ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server * ARS ) ,Max( ARS,( FirstVNF_CPU / FirstVNF_RAM ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ),( Min( ( ARS * AMS ) ,( CRS * BR ) ) / Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) ) ) / ( PN - Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),Max( DS,( ( Max( Max( MUM,DS ),RCSe ) / ( DS - ( MLU - MUC ) ) ) - MUC ) ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * MUM ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,( CS * RMSe ) ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( ( ( FirstVNF_RAM + DDR ) * ( MDR + ACS ) ) - Max( ACS,AMS ) )", "choosing": "Min( Max( ( Max( ( ( MLU * ( MUC / MLU ) ) - MUC ),( RMSe - ( ( RMSe - MUC ) * RRSe ) ) ) * RMSe ),( DS * MUM ) ) ,( MUC / ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) - Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server + Min( Min( Const ,MDR ) ,DDR ) ) + FirstVNF_CPU_Server ),DDR ) * ( MDR - ACS ) )", "choosing": "Max( ( ( MUR / Max( MUM,( ( ( RCSe / RMSe ) + ( Min( CS ,MLU ) - MUC ) ) + ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) ) ) ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ( Min( Max( PN,DDR ) ,AMS ) + AMS ) + ( AMS + Const ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MUR + ( ( RRSe + ( MLU - ( ( ( RMSe / RCSe ) + MUM ) * ( ( MUC * CS ) / MUM ) ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( PN - FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,( ACS + ( Const * MRS ) ) ) ) - Max( ( Max( ARS,FirstVNF_Mem_Server ) * PN ),( CRS * DDR ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( MUR - ( Max( ( ( RCSe * ( ( MUM / RCSe ) * Min( MUM ,RMSe ) ) ) + DS ),( RRSe - DS ) ) - CS ) ) + Min( RRSe ,( ( RCSe / ( ( ( ( RCSe + RCSe ) + Min( MLU ,MUC ) ) - ( ( RRSe / MUC ) / ( MUM + RCSe ) ) ) - RCSe ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - DDR ) - MRS ) )", "choosing": "( ( MUR + Min( DS ,RMSe ) ) + ( ( MUR / ( ( CS - ( CS - MUR ) ) + MUR ) ) * Min( MUM ,( RCSe + ( MUC * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MLU - CS ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + AMS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( BR + MRS ) - Max( BR,Const ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( MRS * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - RRS ) - ( ( FirstVNF_CPU_Server + MDR ) + ( ARS + AMS ) ) )", "choosing": "Max( Min( MUR ,RMSe ),( Min( ( ( RRSe + ( Min( RRSe ,RCSe ) - DS ) ) + MLU ) ,DS ) - ( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( Max( Min( ( RRSe / RMSe ) ,MUC ),Min( CS ,MUM ) ) ,Min( MUC ,( Max( RCSe,CS ) + ( ( MUC - MLU ) + Max( DS,MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) - ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "Min( ( RRSe - Max( MUC,( Max( MUM,Min( MUC ,RCSe ) ) - Max( MUC,RCSe ) ) ) ) ,( ( MUM - MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( BR / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server + AMS ) + ( Const + AMS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUR ) ,( MUR - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( BR / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server + AMS ) + ( Const + AMS ) ) ) )", "choosing": "Max( Min( ( MUC * Max( ( Min( MLU ,RCSe ) / Max( MUM,RCSe ) ),MUM ) ) ,Min( DS ,MUM ) ),( RMSe - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * ( RRS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( ( Max( RMSe,MUR ) / ( MUR * DS ) ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8686892639390329}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( ( ( ( AMS * FirstVNF_RAM_Server ) + Max( MDR,AMS ) ) / Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,AMS ) ) ) * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( MUM * DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8630691762359485}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * MLU ) + MUR ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.22478966271084627}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 0.3346456692913386, "obj2": 0.5639780844993164}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19094488188976377, "obj2": 0.6864688210672965}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "( Max( ( AMS * ( Const - ( ( CRS + Const ) / FirstVNF_Mem_Server ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6402774479403729}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( ACS - Max( MDR,Const ) ) )", "choosing": "Min( ( MLU * ( Max( ( MUR + DS ),Max( MLU,RRSe ) ) / MUM ) ) ,( DS + DS ) )", "obj1": 0.4409448818897638, "obj2": 0.46100761509664556}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( ( FirstVNF_CPU / Const ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RRSe ) ,( RMSe - RRSe ) )", "obj1": 0.9114173228346457, "obj2": 0.08206393123868755}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( Min( DDR ,CRS ) + Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( RRSe - MLU ),( DS - RMSe ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,RMSe ) / ( ( ( RCSe - CS ) / RMSe ) * MLU ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5768225753640857}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( Min( Max( ( ARS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,( Max( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),FirstVNF_CPU ),( MRS * ( RRS - FirstVNF_CPU ) ) ) + Min( ACS ,DDR ) ) ) ,( DDR / MRS ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),( MUR / ( RRSe * RMSe ) ) ) ) ,( RRSe * MUM ) ),( RMSe - RMSe ) )", "obj1": 0.39960629921259844, "obj2": 0.5019751302105002}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( CS ,RRSe ) ),( RRSe / RRSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5951399448645711}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUM * ( ( DS / MUM ) * RRSe ) ) * DS )", "obj1": 0.7460629921259843, "obj2": 0.2137770162751665}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( ( Max( FirstVNF_CPU,( ( Const + MDR ) - AMS ) ) + Min( DDR ,( Max( Max( RRS,MRS ),Const ) / ARS ) ) ) / ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( DS * MUC ),( MUM * RCSe ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( ( FirstVNF_Mem_Server * AMS ) ,BR ) * ( ( Const - ARS ) * MDR ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,( MUR * ( CS + MUC ) ) ) / CS ),MLU ) )", "obj1": 0.1377952755905512, "obj2": 0.7812033044193815}, {"determining": "( Max( ( AMS * FirstVNF_RAM_Server ),Max( MDR,AMS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * ( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) - ( MLU * MLU ) ) ) ) ,( ( MUR * DS ) + ( MUM * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5125634655268564}, {"determining": "( Max( ( AMS * ( FirstVNF_CPU - ( FirstVNF_Mem_Server / ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) ),ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( ( MUR - Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ),( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( RCSe ,RMSe ) ) ) ) / CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ),RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6379985497060874}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48719304652930906}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.7440944881889764, "obj2": 0.21463188546292222}, {"determining": "( ( Const / FirstVNF_Mem ) + ( ( Const / FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( RRSe / RMSe ) * MUC ),Min( CS ,MUM ) ) ,Min( ( Min( Max( MUM,( Max( Min( MUC ,RCSe ),( DS + DS ) ) * RCSe ) ) ,MUM ) + Min( ( Max( MUM,Min( MUC ,MLU ) ) - Max( RCSe,MUC ) ) ,MLU ) ) ,RRSe ) )", "obj1": 0.9212598425196851, "obj2": 0.07473171880294181}, {"determining": "Min( ( ( MRS * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,CRS ) ) ,( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) + Const ) )", "choosing": "( ( Min( MUR ,Max( MUR,( ( ( MLU + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5922051062423812}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5882409391190336}, {"determining": "Min( ( ( Const * FirstVNF_RAM ) * ( MDR - FirstVNF_Mem_Server ) ) ,( Max( ( Max( CRS,BR ) * PN ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe - RMSe ) * ( ( ( MLU - Max( MUM,CS ) ) / MUC ) + MLU ) ) * ( MUM + CS ) ) + ( ( Max( RMSe,( RCSe / MLU ) ) - Max( MUM,Min( MLU ,RRSe ) ) ) + Max( MLU,RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.032695661780919115}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.4153543307086614, "obj2": 0.4777234955850934}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( CRS ,Max( MDR,Const ) ) * Max( Const,( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + CS ) - Min( Min( ( CS / RRSe ) ,( Min( RCSe ,( Max( ( MLU + RRSe ),( MUR + RRSe ) ) - MUC ) ) * RRSe ) ) ,( ( ( MLU * MUM ) * MUM ) + ( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5801983357492274}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( MUM,MUR ) )", "obj1": 0.984251968503937, "obj2": 0.01773959002220734}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Max( BR,RRS ) - MDR ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.1830708661417323, "obj2": 0.6917946716101997}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "( ( MRS / RRS ) / ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * Min( DS ,( MUR / RMSe ) ) )", "obj1": 0.3937007874015748, "obj2": 0.509142072601616}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ),( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( DS / MUC ) )", "obj1": 0.421259842519685, "obj2": 0.47505522327943245}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.03029778836558362}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( ( MUC * Max( MUC,( DS / RCSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.008214951319420492}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9783464566929134, "obj2": 0.025402946820442286}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( ( FirstVNF_CPU_Server - MRS ) - MDR ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( DS ,( MLU - ( DS / ( RCSe - ( MUM / MLU ) ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.47219916474592355}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( AMS * ( MRS / CRS ) ) ) ) * Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8096311272948729}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + ( ( RRS + MDR ) - ( ( ( DDR / MRS ) - ( MDR * MRS ) ) - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) ) ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6968806656655462}, {"determining": "( ( MRS / RRS ) / ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6985414849897748}, {"determining": "( Max( FirstVNF_RAM_Server,ARS ) * ( ( ( RRS * DDR ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),( ( ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) * Max( ( RCSe * DS ),( MUC - MUM ) ) ) - Max( ( RRSe - RCSe ),Min( MLU ,MUM ) ) ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( ( MUR * Max( ( RCSe * DS ),( MUC - MUM ) ) ),RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6379985497060874}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( Max( ( RRS / FirstVNF_CPU_Server ),( RRS * Min( PN ,FirstVNF_Mem ) ) ) * ( Const * ARS ) )", "choosing": "( ( DS + RCSe ) - ( RMSe / Min( CS ,MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( ACS - ( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.39173228346456695, "obj2": 0.510407175621033}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( ( ( ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( Const * MRS ) ) ),( AMS / ( ARS + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) + MDR ) - AMS ) + RRS ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( DS / MUR ),( ( ( Max( MUC,( DS * ( MLU + MUR ) ) ) + MLU ) * ( MLU - MUM ) ) - MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( Max( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,FirstVNF_CPU ) ),( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / Min( ( ARS * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) ) ,( Const * BR ) ) ) ) / ( MDR - DDR ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( Max( Max( Min( ( FirstVNF_Mem_Server * ARS ) ,Max( ARS,( FirstVNF_CPU / FirstVNF_RAM ) ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ),( Min( ( ARS * AMS ) ,( CRS * BR ) ) / Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) ) ) / ( PN - Max( ARS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),Max( DS,( ( Max( Max( MUM,DS ),RCSe ) / ( DS - ( MLU - MUC ) ) ) - MUC ) ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * MUM ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,( CS * RMSe ) ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * ( MDR - ACS ) ) / ( MRS * MDR ) )", "choosing": "Max( ( DS * Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + DDR ) * ( MDR + ACS ) ) - Max( ACS,AMS ) )", "choosing": "Min( Max( ( Max( ( ( MLU * ( MUC / MLU ) ) - MUC ),( RMSe - ( ( RMSe - MUC ) * RRSe ) ) ) * RMSe ),( DS * MUM ) ) ,( MUC / ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) - Max( ( FirstVNF_CPU_Server / DDR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server + Min( Min( Const ,MDR ) ,DDR ) ) + FirstVNF_CPU_Server ),DDR ) * ( MDR - ACS ) )", "choosing": "Max( ( ( MUR / Max( MUM,( ( ( RCSe / RMSe ) + ( Min( CS ,MLU ) - MUC ) ) + ( ( RRSe + ( CS + DS ) ) - ( RMSe - CS ) ) ) ) ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_Mem ) - ( ( Min( Max( PN,DDR ) ,AMS ) + AMS ) + ( AMS + Const ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( MUR + ( ( RRSe + ( MLU - ( ( ( RMSe / RCSe ) + MUM ) * ( ( MUC * CS ) / MUM ) ) ) ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( PN - FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,( ACS + ( Const * MRS ) ) ) ) - Max( ( Max( ARS,FirstVNF_Mem_Server ) * PN ),( CRS * DDR ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Const ) )", "choosing": "( ( MUR - ( Max( ( ( RCSe * ( ( MUM / RCSe ) * Min( MUM ,RMSe ) ) ) + DS ),( RRSe - DS ) ) - CS ) ) + Min( RRSe ,( ( RCSe / ( ( ( ( RCSe + RCSe ) + Min( MLU ,MUC ) ) - ( ( RRSe / MUC ) / ( MUM + RCSe ) ) ) - RCSe ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server - DDR ) - MRS ) )", "choosing": "( ( MUR + Min( DS ,RMSe ) ) + ( ( MUR / ( ( CS - ( CS - MUR ) ) + MUR ) ) * Min( MUM ,( RCSe + ( MUC * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Min( Const ,Min( CRS ,FirstVNF_RAM_Server ) ) ) + MDR ) ,( ( MDR * BR ) + MRS ) )", "choosing": "( ( ( ( RRSe + ( DS * RRSe ) ) - MUC ) / RCSe ) / Min( MLU ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( FirstVNF_RAM_Server / PN ) ) * ARS ) - ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem ) )", "choosing": "Min( ( MLU - CS ) ,Max( ( MLU / CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_RAM_Server ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,( MUR * ( CS + MUC ) ) ) / Min( DS ,( MUR / RMSe ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server + AMS ) + ( Const + AMS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUR ) ,( MUR - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( AMS - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,Min( DS ,RMSe ) ) / CS ),MLU ) )", "obj1": 0.4704724409448819, "obj2": 0.43491347850081247}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.6437007874015748, "obj2": 0.2912786582677399}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - Max( Const,FirstVNF_Mem ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MUM / MUR ) ),( ( MUC / RCSe ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MLU + MUR ),RMSe ) ) ) ) ) - ( MLU + CS ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6340147907386915}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( ( ( ( AMS * FirstVNF_RAM_Server ) + Max( MDR,AMS ) ) / Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,AMS ) ) ) * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( MUM * DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8630691762359485}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( Min( MUM ,RMSe ) + ( Min( MUM ,( ( CS + MUC ) * MUR ) ) / CS ) ) * MLU )", "obj1": 0.6732283464566929, "obj2": 0.25924143371403674}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( Max( ( PN + PN ),( RRS * FirstVNF_Mem_Server ) ) + ( Min( AMS ,( AMS * ( ( ( CRS / ( FirstVNF_Mem * BR ) ) + RRS ) - PN ) ) ) / MDR ) )", "choosing": "Max( ( DS * RMSe ),Min( RRSe ,MLU ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * MLU ) + MUR ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.22478966271084627}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( ACS - Max( MDR,Const ) ) )", "choosing": "Min( ( MLU * ( Max( ( MUR + DS ),Max( MLU,RRSe ) ) / MUM ) ) ,( DS + DS ) )", "obj1": 0.4409448818897638, "obj2": 0.46100761509664556}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 0.3346456692913386, "obj2": 0.5639780844993164}, {"determining": "( ( ( FirstVNF_CPU / Const ) * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RRSe ) ,( RMSe - RRSe ) )", "obj1": 0.9114173228346457, "obj2": 0.08206393123868755}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "Min( Min( DDR ,FirstVNF_CPU ) ,( ( Max( ARS,BR ) + RRS ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * ( RRS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( ( Max( RMSe,MUR ) / ( MUR * DS ) ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8686892639390329}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( CS ,RRSe ) ),( RRSe / RRSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5951399448645711}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUM * ( ( DS / MUM ) * RRSe ) ) * DS )", "obj1": 0.7460629921259843, "obj2": 0.2137770162751665}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) / PN ) * ( RRS * FirstVNF_RAM ) )", "choosing": "( ( Min( Min( CS ,Min( MUR ,CS ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.39960629921259844, "obj2": 0.49760642945804634}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( Min( ( FirstVNF_Mem_Server * AMS ) ,BR ) * ( ( Const - ARS ) * MDR ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,( MUR * ( CS + MUC ) ) ) / CS ),MLU ) )", "obj1": 0.1377952755905512, "obj2": 0.7812033044193815}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,Min( CS ,RRSe ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5761141359683609}, {"determining": "( ( FirstVNF_RAM / ( BR / ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM / MDR ) ) ) ) * ( RRS * FirstVNF_RAM ) )", "choosing": "( ( Min( Min( ( CS * CS ) ,( ( MLU + RRSe ) + RMSe ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3700787401574803, "obj2": 0.5362407685479519}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "Max( ( ( Min( FirstVNF_RAM_Server ,RRS ) - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( PN,FirstVNF_RAM ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( Max( ( ( MLU * ( ( MLU + MUR ) * MUM ) ) * MLU ),( MLU / Max( MLU,CS ) ) ) ,MLU ) ),( Max( DS,MLU ) * Max( RCSe,DS ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5136247830380541}, {"determining": "( ( Const / FirstVNF_Mem ) + ( ( Const / FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( RRSe / RMSe ) * MUC ),Min( CS ,MUM ) ) ,Min( ( Min( Max( MUM,( Max( Min( MUC ,RCSe ),( DS + DS ) ) * RCSe ) ) ,MUM ) + Min( ( Max( MUM,Min( MUC ,MLU ) ) - Max( RCSe,MUC ) ) ,MLU ) ) ,RRSe ) )", "obj1": 0.9212598425196851, "obj2": 0.07473171880294181}, {"determining": "Min( ( ( MRS * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,CRS ) ) ,( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) + Const ) )", "choosing": "( ( Min( MUR ,Max( MUR,( ( ( MLU + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5922051062423812}, {"determining": "( ( ( PN - DDR ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( RCSe * Max( Min( ( ( MUC / ( MUM * Min( CS ,RMSe ) ) ) * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( ( MUC / Max( MUR,MUR ) ) - Max( MLU,RCSe ) ) ) ) - Max( MUM,MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.5691594907957478}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,MRS ) * MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC + RMSe ) ,( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - MLU ) )", "obj1": 0.2854330708661417, "obj2": 0.5882409391190336}, {"determining": "Min( ( ( Const * FirstVNF_RAM ) * ( MDR - FirstVNF_Mem_Server ) ) ,( Max( ( Max( CRS,BR ) * PN ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe - RMSe ) * ( ( ( MLU - Max( MUM,CS ) ) / MUC ) + MLU ) ) * ( MUM + CS ) ) + ( ( Max( RMSe,( RCSe / MLU ) ) - Max( MUM,Min( MLU ,RRSe ) ) ) + Max( MLU,RCSe ) ) )", "obj1": 0.9704724409448819, "obj2": 0.032695661780919115}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ARS * ( FirstVNF_CPU * ( Min( DDR ,DDR ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( CS,( ( DS / CS ) + ( DS + MUC ) ) ) + ( ( CS * RMSe ) + Min( ( MLU + RMSe ) ,RRSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Max( ( RRS / FirstVNF_CPU_Server ),( RRS * Min( PN ,FirstVNF_Mem ) ) ) * ( Const * ARS ) )", "choosing": "( ( DS + RCSe ) - ( RMSe / Min( CS ,MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( CRS ,Max( MDR,Const ) ) * Max( Const,( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + CS ) - Min( Min( ( CS / RRSe ) ,( Min( RCSe ,( Max( ( MLU + RRSe ),( MUR + RRSe ) ) - MUC ) ) * RRSe ) ) ,( ( ( MLU * MUM ) * MUM ) + ( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5801983357492274}, {"determining": "Min( ( Min( CRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48719304652930906}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( MUM,MUR ) )", "obj1": 0.984251968503937, "obj2": 0.01773959002220734}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) + ( Min( DDR ,CRS ) + Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( RRSe - MLU ),( DS - RMSe ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,RMSe ) / ( ( ( RCSe - CS ) / RMSe ) * MLU ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5758042141835289}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( MDR + DDR ) / FirstVNF_RAM_Server ) ) ,BR ) + MRS )", "choosing": "( ( ( Max( RRSe,DS ) / MUC ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) / ( MUM * RCSe ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.057844005335962324}, {"determining": "( Min( Max( ( FirstVNF_Mem - MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( FirstVNF_RAM_Server,AMS ) ,( ( BR / ( FirstVNF_RAM * ( ACS - PN ) ) ) / ( ( FirstVNF_CPU / MDR ) / BR ) ) ) * ( ( DDR + RRS ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( ( MLU - ( MLU - RCSe ) ),Min( ( MUC * Max( MUC,MUM ) ) ,Min( MUM ,DS ) ) )", "obj1": 0.9744094488188977, "obj2": 0.03029778836558362}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( ( MUC * Max( MUC,( DS / RCSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.9940944881889764, "obj2": 0.008214951319420492}, {"determining": "Min( Max( Const,Max( Min( ( MDR - FirstVNF_Mem_Server ) ,AMS ),BR ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MUM / MUR ) ),( ( MUC / RCSe ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( ( RRSe / ( RCSe * CS ) ) - DS ) ) ) ) ,Max( Min( RMSe ,MUR ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.47488258959899377}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9783464566929134, "obj2": 0.025402946820442286}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( MUM / MUR ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 0.7362204724409449, "obj2": 0.22286008918613728}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.4153543307086614, "obj2": 0.4777234955850934}, {"determining": "( ( ( ( PN * ( BR * ( RRS * Max( Const,PN ) ) ) ) - MRS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( DS ,( MUR - Max( RRSe,RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.4672402044130299}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Max( BR,RRS ) - MDR ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8093422792095412}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3937007874015748, "obj2": 0.5063653946679683}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,AMS ) / PN ) )", "choosing": "( ( RRSe + RRSe ) * MLU )", "obj1": 0.7401574803149606, "obj2": 0.21972986248459211}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( ACS - ( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.39173228346456695, "obj2": 0.510407175621033}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3937007874015748, "obj2": 0.5063653946679683}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * MLU ) + MUR ) * DS )", "obj1": 0.7421259842519685, "obj2": 0.2184009752458564}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.7440944881889764, "obj2": 0.21463188546292222}, {"determining": "( ( Const * ARS ) / ( Min( MRS ,DDR ) + Max( Const,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( ( RRSe - MLU ),( DS - RMSe ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,RMSe ) / ( ( ( RCSe - CS ) / RMSe ) * MLU ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.5758042141835289}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.937007874015748, "obj2": 0.05717911508971934}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( Max( ( AMS * FirstVNF_RAM_Server ),Max( MDR,AMS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * ( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) - ( MLU * MLU ) ) ) ) ,( ( MUR * DS ) + ( MUM * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5125634655268564}, {"determining": "( ( ( ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( Const * MRS ) ) ),( AMS / ( ARS + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) + MDR ) - AMS ) + RRS ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( DS / MUR ),( ( ( Max( MUC,( DS * ( MLU + MUR ) ) ) + MLU ) * ( MLU - MUM ) ) - MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( Max( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,FirstVNF_CPU ) ),( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( ARS * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) ) ,( Const * BR ) ) ) ) / ( MDR - DDR ) )", "choosing": "Min( ( Max( Max( DS,Max( MUR,MUR ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * MUM ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MUC ,DS ) / ( Max( MLU,MUM ) * ( RCSe - RMSe ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( Max( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,FirstVNF_CPU ) ),( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / Min( ( ARS * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) ) ,( Const * BR ) ) ) ) / ( MDR - DDR ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( BR / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server + AMS ) + ( Const + AMS ) ) ) )", "choosing": "Max( Min( ( MUC * Max( ( Min( MLU ,RCSe ) / Max( MUM,RCSe ) ),MUM ) ) ,Min( DS ,MUM ) ),( RMSe - Max( RCSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * ( MDR - ACS ) ) / ( MRS * MDR ) )", "choosing": "Max( ( DS * Min( MUC ,Min( MLU ,Max( ( MUR * Max( ( RCSe * MUM ),( MUR / RRSe ) ) ),MUC ) ) ) ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + DDR ) * ( MDR + ACS ) ) - Max( ACS,AMS ) )", "choosing": "Min( Max( ( Max( ( ( MLU * ( MUC / MLU ) ) - MUC ),( RMSe - ( ( RMSe - MUC ) * RRSe ) ) ) * RMSe ),( DS * MUM ) ) ,( MUC / ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( FirstVNF_CPU * FirstVNF_Mem ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Min( Max( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + ( RRS - ACS ) ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_RAM_Server ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( ( Min( MUM ,( MUR * ( CS + MUC ) ) ) / Min( DS ,( MUR / RMSe ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "( ( CRS * ( Max( DDR,( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + Max( ( FirstVNF_RAM_Server * DDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) ) - Min( AMS ,( FirstVNF_RAM / RRS ) ) ) ) - ( ACS - MDR ) )", "choosing": "( ( MUC - ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),DS ) ) - ( MLU * CS ) ) ) / Max( RCSe,( MUR / RRSe ) ) )", "obj1": 0.8720472440944882, "obj2": 0.14608449692587472}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.13380919643643246}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( ( ( ( AMS * FirstVNF_RAM_Server ) + Max( MDR,AMS ) ) / Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM ,AMS ) ) ) * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( MUM * DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8630691762359485}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( ACS - Max( MDR,Const ) ) )", "choosing": "Min( ( MLU * ( Max( ( MUR + DS ),Max( MLU,RRSe ) ) / MUM ) ) ,( DS + DS ) )", "obj1": 0.4409448818897638, "obj2": 0.46100761509664556}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( Min( CRS ,Max( ARS,FirstVNF_CPU ) ) / Max( Const,FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUC - ( MUC / MUR ) ) ,DS ),( DS - MUC ) ),( Max( MUM,RCSe ) - DS ) )", "obj1": 0.1594488188976378, "obj2": 0.7485496423044494}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * MLU ) + MUR ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.22478966271084627}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * ( RRS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.22244094488188976, "obj2": 0.6328612427096636}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5691835202528694}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 0.3346456692913386, "obj2": 0.5639780844993164}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9114173228346457, "obj2": 0.077624455353594}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02943990380337709}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * ( RRS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( ( Max( RMSe,MUR ) / ( MUR * DS ) ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8686892639390329}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( CS ,RRSe ) ),( RRSe / RRSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5951399448645711}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( MUM + ( Min( MUM ,( MUR * Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) ) ) / CS ) ) * DS )", "obj1": 0.6889763779527559, "obj2": 0.253459516159541}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( Min( MUM ,RMSe ) + ( Min( MUM ,( ( CS + MUC ) * MUR ) ) / CS ) ) * MLU )", "obj1": 0.6732283464566929, "obj2": 0.25924143371403674}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,Min( CS ,RRSe ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5761141359683609}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( ( ( PN - DDR ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( RCSe * Max( Min( ( ( MUC / ( MUM * Min( CS ,RMSe ) ) ) * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( ( MUC / Max( MUR,MUR ) ) - Max( MLU,RCSe ) ) ) ) - Max( MUM,MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.5691594907957478}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUM + MUR ) * DS )", "obj1": 0.7480314960629921, "obj2": 0.21096840557731106}, {"determining": "( ( FirstVNF_RAM / ( BR / ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM / MDR ) ) ) ) * ( RRS * FirstVNF_RAM ) )", "choosing": "( ( Min( Min( ( CS * CS ) ,( ( MLU + RRSe ) + RMSe ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3700787401574803, "obj2": 0.5362407685479519}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( Const / MDR ) * Min( ( ( FirstVNF_Mem_Server * ( Max( DDR,FirstVNF_CPU ) + BR ) ) + ( ( FirstVNF_Mem_Server / PN ) - PN ) ) ,MRS ) ) )", "choosing": "( ( MUC / ( MUC * Max( CS,( RCSe - Min( ( ( DS / MLU ) / Min( RMSe ,DS ) ) ,MUC ) ) ) ) ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( DDR / ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( Min( CS ,MLU ) * MUR ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( DS / ( MUM + MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6121448085084862}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "Min( ( ( MRS * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,CRS ) ) ,( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) + Const ) )", "choosing": "( ( Min( MUR ,Max( MUR,( ( ( MLU + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5922051062423812}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) / PN ) * ( RRS * FirstVNF_RAM ) )", "choosing": "( ( Min( Min( CS ,Min( MUR ,CS ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.39960629921259844, "obj2": 0.49760642945804634}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( CRS ,Max( MDR,Const ) ) * Max( Const,( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + CS ) - Min( Min( ( CS / RRSe ) ,( Min( RCSe ,( Max( ( MLU + RRSe ),( MUR + RRSe ) ) - MUC ) ) * RRSe ) ) ,( ( ( MLU * MUM ) * MUM ) + ( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5801983357492274}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( Min( PN ,MRS ) / MRS ) * ( ( ( RRS - ARS ) * MDR ) / PN ) )", "choosing": "( ( MUM + ( ( Min( ( MUC - Max( CS,( MUC + MLU ) ) ) ,CS ) / RMSe ) / CS ) ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( MUM,MUR ) )", "obj1": 0.984251968503937, "obj2": 0.01773959002220734}, {"determining": "( Max( ( RRS / FirstVNF_CPU_Server ),( RRS * Min( PN ,FirstVNF_Mem ) ) ) * ( Const * ARS ) )", "choosing": "( ( DS + RCSe ) - ( RMSe / Min( CS ,MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,Min( Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ,Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6035255163394696}, {"determining": "( ( RRS + ( ( Const / PN ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR - ( ( Max( ( Min( ( DS * MUC ) ,Max( DS,RMSe ) ) / MLU ),RRSe ) - RRSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + Max( MDR,AMS ) ) / Min( ( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_RAM / AMS ),( AMS * MRS ) ) ) - MRS ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( CS + RMSe ) ,( ( MUR * DS ) + ( MUM * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.5006228838083916}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Max( ( Min( DDR ,( ARS + MRS ) ) * MDR ),( Max( PN,FirstVNF_CPU ) - AMS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RRSe ) * ( Min( MUC ,MUM ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "Min( Max( Const,Max( Min( ( MDR - FirstVNF_Mem_Server ) ,AMS ),BR ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MUM / MUR ) ),( ( MUC / RCSe ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( ( RRSe / ( RCSe * CS ) ) - DS ) ) ) ) ,Max( Min( RMSe ,MUR ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.47488258959899377}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( MUM / MUR ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 0.7362204724409449, "obj2": 0.22286008918613728}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.4153543307086614, "obj2": 0.4777234955850934}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8081084784215897}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,AMS ) / PN ) )", "choosing": "( ( RRSe + RRSe ) * MLU )", "obj1": 0.7401574803149606, "obj2": 0.21972986248459211}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5136247830380541}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( ACS - ( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.39173228346456695, "obj2": 0.510407175621033}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ( FirstVNF_Mem - CRS ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / MRS ) )", "choosing": "Min( Min( ( CS * RCSe ) ,( MLU * ( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( ( MUR / RRSe ) - RCSe ) ) ) - MLU ) ) ) ,( ( MUR * DS ) + ( MUM * DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.2178273067652971}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + MRS )", "choosing": "( ( ( Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) ) - MUM ) / RCSe ) * ( Min( ( ( CS * Min( CS ,MLU ) ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.057844005335962324}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0015510111386807797}, {"determining": "( ( ( ( PN * ( BR * ( RRS * Max( Const,PN ) ) ) ) - MRS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( DS ,( MUR - Max( RRSe,RMSe ) ) )", "obj1": 0.42913385826771655, "obj2": 0.4672402044130299}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( MDR + DDR ) / FirstVNF_RAM_Server ) ) ,BR ) + MRS )", "choosing": "( ( ( Max( RRSe,DS ) / MUC ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) / ( MUM * RCSe ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.057844005335962324}, {"determining": "( ( ( ( PN * ( BR * ( RRS * Max( Const,PN ) ) ) ) - MRS ) - FirstVNF_Mem_Server ) - ( MRS - ( Min( DDR ,CRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( RMSe ,( MUR - Max( RRSe,RMSe ) ) )", "obj1": 0.9921259842519685, "obj2": 0.010366571167266234}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.7440944881889764, "obj2": 0.21463188546292222}, {"determining": "( ( ( AMS * FirstVNF_RAM_Server ) + ( Min( DDR ,AMS ) + AMS ) ) / ( Max( AMS,FirstVNF_Mem_Server ) * PN ) )", "choosing": "Min( Min( Min( RCSe ,Max( RCSe,RMSe ) ) ,( MLU * ( Max( ( Min( ( MUR - RCSe ) ,( MUM * RRSe ) ) / DS ),MUR ) - MLU ) ) ) ,( Min( MUR ,DS ) + ( MUM * RCSe ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3937007874015748, "obj2": 0.5063653946679683}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUM * ( ( DS / MUM ) * RRSe ) ) * DS )", "obj1": 0.7460629921259843, "obj2": 0.2137770162751665}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}, {"determining": "( Max( ( AMS * FirstVNF_RAM_Server ),Max( MDR,AMS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,( FirstVNF_CPU_Server - ( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * ( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( MUM / DS ) ) ) - ( MLU * MLU ) ) ) ) ,( ( MUR * DS ) + ( MUM * DS ) ) )", "obj1": 0.3858267716535433, "obj2": 0.5125634655268564}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( ( Min( RRSe ,Max( MUC,( MUC + ( DS * MUM ) ) ) ) * ( MUM - MLU ) ) / MUR ),( DS / RCSe ) ) )", "obj1": 0.9783464566929134, "obj2": 0.025402946820442286}, {"determining": "Min( Max( Const,FirstVNF_Mem ) ,( ( FirstVNF_Mem_Server + ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MUM / MUR ) ),( CS / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MLU + MUR ),RMSe ) ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.46525243073499917}, {"determining": "( ( ( ( Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( Const * MRS ) ) ),( AMS / ( ARS + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) + MDR ) - AMS ) + RRS ) - FirstVNF_Mem )", "choosing": "Min( ( MUR - MLU ) ,Max( ( DS / MUR ),( ( ( Max( MUC,( DS * ( MLU + MUR ) ) ) + MLU ) * ( MLU - MUM ) ) - MUR ) ) )", "obj1": 0.9803149606299213, "obj2": 0.022929326885436807}], "9": [{"determining": "( Min( Max( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + ( RRS - ACS ) ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + ( RRS - ACS ) ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( ( ( Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),( ( ( RMSe - DS ) * RMSe ) - ( ( RRSe + CS ) * ( DS * CS ) ) ) ) / CS ) / RMSe ) * CS ) ,( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.13380919643643246}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( ( CRS + ( Max( DDR,( ( Max( Max( PN,CRS ),FirstVNF_RAM ) + ( RRS - ACS ) ) * FirstVNF_CPU_Server ) ) - Min( AMS ,( DDR / FirstVNF_RAM ) ) ) ) - ( ACS - MDR ) )", "choosing": "( ( MUC - ( ( ( MUM / Min( RCSe ,( RRSe / ( RCSe * MUC ) ) ) ) - Max( ( Max( ( MUR - CS ),( DS - RRSe ) ) - MUR ),MUR ) ) - MUR ) ) / Max( ( MUR / RRSe ),RCSe ) )", "obj1": 0.8681102362204725, "obj2": 0.15022410160262495}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * ( RRS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "Max( ( Max( RMSe,MUR ) / ( MUR * DS ) ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8686892639390329}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * MLU ) + MUR ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.22478966271084627}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * ( RRS + FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.22244094488188976, "obj2": 0.6328612427096636}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( Min( CRS ,Max( ARS,FirstVNF_CPU ) ) / Max( Const,FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUC - ( MUC / MUR ) ) ,DS ),( DS - MUC ) ),( Max( MUM,RCSe ) - DS ) )", "obj1": 0.1594488188976378, "obj2": 0.7485496423044494}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5691835202528694}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 0.3346456692913386, "obj2": 0.5639780844993164}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02934168044046502}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( CS ,RRSe ) ),( RRSe / RRSe ) )", "obj1": 0.2677165354330709, "obj2": 0.5951399448645711}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( MUM + ( Min( MUM ,( MUR * Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) ) ) / CS ) ) * DS )", "obj1": 0.6889763779527559, "obj2": 0.253459516159541}, {"determining": "( ( CRS * ( Max( DDR,( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + Max( ( FirstVNF_RAM_Server * DDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) ) - Min( AMS ,( FirstVNF_RAM / RRS ) ) ) ) - ( ACS - MDR ) )", "choosing": "( ( MUC - ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),DS ) ) - ( MLU * CS ) ) ) / Max( RCSe,( MUR / RRSe ) ) )", "obj1": 0.8720472440944882, "obj2": 0.14608449692587472}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( Min( MUM ,RMSe ) + ( Min( MUM ,( ( CS + MUC ) * MUR ) ) / CS ) ) * MLU )", "obj1": 0.6732283464566929, "obj2": 0.25924143371403674}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - DDR ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,Min( CS ,RRSe ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5761141359683609}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( ( ( PN - DDR ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( RCSe * Max( Min( ( ( MUC / ( MUM * Min( CS ,RMSe ) ) ) * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( ( MUC / Max( MUR,MUR ) ) - Max( MLU,RCSe ) ) ) ) - Max( MUM,MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.5691594907957478}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( FirstVNF_RAM / ( BR / ( ( RRS * FirstVNF_Mem ) - ( FirstVNF_RAM / MDR ) ) ) ) * ( RRS * FirstVNF_RAM ) )", "choosing": "( ( Min( Min( ( CS * CS ) ,( ( MLU + RRSe ) + RMSe ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3700787401574803, "obj2": 0.5362407685479519}, {"determining": "( ( Const - PN ) / ( AMS * Min( PN ,AMS ) ) )", "choosing": "Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7779787052565861}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( DDR / ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( Min( CS ,MLU ) * MUR ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( DS / ( MUM + MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6121448085084862}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Max( ( ( CRS - ACS ) / Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU + BR ) ) ),BR ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( DDR ,( ARS / Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( RRS * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),Const ) ) ) / PN ) )", "choosing": "( DS * ( ( ( ( ( RCSe + RCSe ) - MLU ) + RRSe ) / DS ) + MUR ) )", "obj1": 0.7519685039370079, "obj2": 0.20898250319936276}, {"determining": "Min( ( ( MRS * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,CRS ) ) ,( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) + Const ) )", "choosing": "( ( Min( MUR ,Max( MUR,( ( ( MLU + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5922051062423812}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( CRS ,Max( MDR,Const ) ) * Max( Const,( Max( CRS,FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + CS ) - Min( Min( ( CS / RRSe ) ,( Min( RCSe ,( Max( ( MLU + RRSe ),( MUR + RRSe ) ) - MUC ) ) * RRSe ) ) ,( ( ( MLU * MUM ) * MUM ) + ( Max( MUM,RMSe ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5801983357492274}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) )", "choosing": "( ( Min( Min( CS ,Min( RRSe ,Min( ( RRSe / ( DS * MUM ) ) ,RCSe ) ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.3937007874015748, "obj2": 0.5063653946679683}, {"determining": "( MRS + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( MUC,( DS / RCSe ) ) * ( Min( MUC ,DS ) - ( MLU + Min( MUC ,( ( MUM / ( ( RMSe - RCSe ) - MUM ) ) / RCSe ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06959682872295024}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "( Max( ( RRS / FirstVNF_CPU_Server ),( RRS * Min( PN ,FirstVNF_Mem ) ) ) * ( Const * ARS ) )", "choosing": "( ( DS + RCSe ) - ( RMSe / Min( CS ,MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,Min( Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ,Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6035255163394696}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49118483299517374}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( MUM,MUR ) )", "obj1": 0.984251968503937, "obj2": 0.01773959002220734}, {"determining": "( ( RRS + ( ( Const / PN ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR - ( ( Max( ( Min( ( DS * MUC ) ,Max( DS,RMSe ) ) / MLU ),RRSe ) - RRSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( MUC ,( ( ( RRSe * Max( RCSe,RRSe ) ) * RCSe ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7509538002631487}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0015510111386807797}, {"determining": "Min( Max( Const,Max( Min( ( MDR - FirstVNF_Mem_Server ) ,AMS ),BR ) ) ,( ( FirstVNF_Mem_Server + ARS ) / ( RRS / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MUM / MUR ) ),( ( MUC / RCSe ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( ( RRSe / ( RCSe * CS ) ) - DS ) ) ) ) ,Max( Min( RMSe ,MUR ),( RCSe / CS ) ) ) - Max( Min( ( RRSe / DS ) ,( CS / RCSe ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.47488258959899377}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( MUM / MUR ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 0.7362204724409449, "obj2": 0.22286008918613728}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.4153543307086614, "obj2": 0.4777234955850934}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8081084784215897}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,AMS ) / PN ) )", "choosing": "( ( RRSe + RRSe ) * MLU )", "obj1": 0.7401574803149606, "obj2": 0.21972986248459211}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUM + MUR ) * DS )", "obj1": 0.7480314960629921, "obj2": 0.21096840557731106}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5136247830380541}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem ) - ( ACS - ( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( MUC * Max( Max( RMSe,MUM ),MUC ) ) ,( DS * MUM ) ),( RMSe - MUM ) )", "obj1": 0.39173228346456695, "obj2": 0.510407175621033}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Max( ( Min( DDR ,( ARS + MRS ) ) * MDR ),( Max( PN,FirstVNF_CPU ) - AMS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RRSe ) * ( Min( MUC ,MUM ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ( FirstVNF_Mem - CRS ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / MRS ) )", "choosing": "Min( Min( ( CS * RCSe ) ,( MLU * ( Max( CS,( ( ( RCSe - RRSe ) + ( MLU / MUM ) ) * ( ( MUR / RRSe ) - RCSe ) ) ) - MLU ) ) ) ,( ( MUR * DS ) + ( MUM * DS ) ) )", "obj1": 0.7421259842519685, "obj2": 0.2178273067652971}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.1640319375643518}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( MDR + DDR ) / FirstVNF_RAM_Server ) ) ,BR ) + MRS )", "choosing": "( ( ( Max( RRSe,DS ) / MUC ) / RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) / ( MUM * RCSe ) ) ) / ( RMSe - RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.057844005335962324}], "10": [{"determining": "( Min( Max( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + ( RRS - ACS ) ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( CS ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + ( RRS - ACS ) ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) / ( Max( FirstVNF_Mem,ACS ) - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( CS - Max( RRSe,MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe - RMSe ) )", "obj1": 0.5039370078740157, "obj2": 0.2917631486119754}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.13380919643643246}, {"determining": "( ( CRS + ( Max( DDR,( ( Max( Max( PN,CRS ),FirstVNF_RAM ) + ( RRS - ACS ) ) * FirstVNF_CPU_Server ) ) - Min( AMS ,( DDR / FirstVNF_RAM ) ) ) ) - ( ACS - MDR ) )", "choosing": "( ( MUC - ( ( ( MUM / Min( RCSe ,( RRSe / ( RCSe * MUC ) ) ) ) - Max( ( Max( ( MUR - CS ),( DS - RRSe ) ) - MUR ),MUR ) ) - MUR ) ) / Max( ( MUR / RRSe ),RCSe ) )", "obj1": 0.8681102362204725, "obj2": 0.15022410160262495}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( ( ( MRS - ( ( RRS - DDR ) - MRS ) ) + FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "Max( ( Max( DS,( ( MLU * CS ) + ( Max( CS,RRSe ) - RRSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.09055118110236221, "obj2": 0.8598266783171414}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / ACS ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * MLU ) + MUR ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.22478966271084627}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM ) / ( ( ( ACS / ( RRS - Max( DDR,FirstVNF_CPU_Server ) ) ) - AMS ) + AMS ) )", "choosing": "Max( ( ( MUM - MUR ) + DS ),( MLU / ( ( MLU * RCSe ) - MUM ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5691835202528694}, {"determining": "( ( Min( CRS ,Max( ARS,FirstVNF_CPU ) ) / Max( Const,FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUC - ( MUC / MUR ) ) ,DS ),( DS - MUC ) ),( Max( MUM,RCSe ) - DS ) )", "obj1": 0.1594488188976378, "obj2": 0.7485496423044494}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( MRS * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + RCSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.1889763779527559, "obj2": 0.6735269696370757}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 0.3346456692913386, "obj2": 0.5639780844993164}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02906087275981682}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5942110423253226}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( MUM + ( Min( MUM ,( MUR * Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) ) ) / CS ) ) * DS )", "obj1": 0.6889763779527559, "obj2": 0.253459516159541}, {"determining": "( ( CRS * ( Max( DDR,( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + Max( ( FirstVNF_RAM_Server * DDR ),( FirstVNF_Mem * FirstVNF_RAM ) ) ) * FirstVNF_CPU_Server ) ) - Min( AMS ,( FirstVNF_RAM / RRS ) ) ) ) - ( ACS - MDR ) )", "choosing": "( ( MUC - ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),DS ) ) - ( MLU * CS ) ) ) / Max( RCSe,( MUR / RRSe ) ) )", "obj1": 0.8720472440944882, "obj2": 0.14608449692587472}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( Min( MUM ,RMSe ) + ( Min( MUM ,( ( CS + MUC ) * MUR ) ) / CS ) ) * MLU )", "obj1": 0.6732283464566929, "obj2": 0.25924143371403674}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( ( ( PN - DDR ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( RCSe * Max( Min( ( ( MUC / ( MUM * Min( CS ,RMSe ) ) ) * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( ( MUC / Max( MUR,MUR ) ) - Max( MLU,RCSe ) ) ) ) - Max( MUM,MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.5691594907957478}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "( ( RRS + ( ( Const / PN ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR - ( ( Max( ( Min( ( DS * MUC ) ,Max( DS,RMSe ) ) / MLU ),RRSe ) - RRSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( FirstVNF_CPU_Server / ARS ) ) ) - ( Const * FirstVNF_Mem ) ) ) ) + ( CRS * FirstVNF_CPU_Server ) ) - ( Const - AMS ) )", "choosing": "( Max( ( ( MUC * Max( ( MUM / CS ),( DS - RMSe ) ) ) / DS ),( MUR / RCSe ) ) - ( ( Min( ( MUC * ( RMSe + ( MUC - Min( RMSe ,MUM ) ) ) ) ,CS ) * RMSe ) / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7768644274011967}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( DDR / ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( Min( CS ,MLU ) * MUR ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( DS / ( MUM + MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6121448085084862}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Max( ( ( CRS - ACS ) / Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU + BR ) ) ),BR ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( DDR ,( ARS / Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( RRS * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),Const ) ) ) / PN ) )", "choosing": "( DS * ( ( ( ( ( RCSe + RCSe ) - MLU ) + RRSe ) / DS ) + MUR ) )", "obj1": 0.7519685039370079, "obj2": 0.20898250319936276}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( MUM,MUR ) )", "obj1": 0.984251968503937, "obj2": 0.01773959002220734}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5136247830380541}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( MRS + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( MUC,( DS / RCSe ) ) * ( Min( MUC ,DS ) - ( MLU + Min( MUC ,( ( MUM / ( ( RMSe - RCSe ) - MUM ) ) / RCSe ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06959682872295024}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.530689818150685}, {"determining": "( ( FirstVNF_RAM / ( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) ) * ( RRS * FirstVNF_RAM ) )", "choosing": "( ( Min( Min( Max( RMSe,MUR ) ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS )", "obj1": 0.38976377952755903, "obj2": 0.5049607960093598}, {"determining": "Min( ( ( MRS * FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,CRS ) ) ,( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) + Const ) )", "choosing": "( ( Min( MUR ,Max( MUR,( ( ( MLU + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.27755905511811024, "obj2": 0.5922051062423812}, {"determining": "( ( MRS / RRS ) / ( ( CRS - RRS ) / ARS ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,Min( Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ,Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6035255163394696}, {"determining": "( ( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) ) + DDR )", "choosing": "( ( DS * MUM ) * MLU )", "obj1": 0.39173228346456695, "obj2": 0.5030407645891344}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49118483299517374}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / Min( ( BR / Min( PN ,FirstVNF_Mem ) ) ,Max( ACS,CRS ) ) ) / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - ARS ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( ( ( RMSe / ( MUC + RCSe ) ) / Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( MUC ,( ( ( RRSe * Max( RCSe,RRSe ) ) * RCSe ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7509538002631487}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0015510111386807797}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.47481524290313976}, {"determining": "( Max( ( RRS / FirstVNF_CPU_Server ),( RRS * Min( PN ,FirstVNF_Mem ) ) ) * ( Const * ARS ) )", "choosing": "( ( DS + RCSe ) - ( RMSe / Min( CS ,MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( MUM / MUR ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 0.7362204724409449, "obj2": 0.22286008918613728}, {"determining": "( ( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( FirstVNF_Mem_Server,( ( Const / ( Const * FirstVNF_Mem ) ) / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( ( MUM / MUC ) - Max( ( Max( ( DS - MUR ),( MUM + RRSe ) ) - MUR ),DS ) ) * MLU ) + MUR ) * DS )", "obj1": 0.7460629921259843, "obj2": 0.2125538327410907}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "Min( ( Max( RRS,PN ) / Max( FirstVNF_Mem,CRS ) ) ,Min( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) ,Const ) )", "choosing": "( ( Min( DS ,Max( MUR,( ( ( ( RRSe * RMSe ) + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.2795275590551181, "obj2": 0.5911951232819}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8081084784215897}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_RAM_Server,AMS ) / PN ) )", "choosing": "( ( RRSe + RRSe ) * MLU )", "obj1": 0.7401574803149606, "obj2": 0.21972986248459211}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Max( ( Min( DDR ,( ARS + MRS ) ) * MDR ),( Max( PN,FirstVNF_CPU ) - AMS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RRSe ) * ( Min( MUC ,MUM ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.4153543307086614, "obj2": 0.4777234955850934}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( MUM + MUR ) * DS )", "obj1": 0.7480314960629921, "obj2": 0.21096840557731106}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Min( ( MDR + CRS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Min( MUR ,MUM ) ) * DS )", "obj1": 0.812992125984252, "obj2": 0.1625172711967745}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}], "11": [{"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( MUM / MUR ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( ( Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) + ( RRS - ACS ) ),Max( FirstVNF_RAM,ACS ) ),AMS ) ,MDR ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( CS ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "Min( ACS ,( Max( ( ARS - Const ),MDR ) * ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MLU - ( ( ( Min( ( RMSe / ( CS - MLU ) ) ,RRSe ) / ( RRSe * MUM ) ) * ( ( RRSe * ( MUC - RCSe ) ) / Max( MUC,RCSe ) ) ) * DS ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.15503321797592243}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( ( MRS - ( ( RRS - DDR ) - MRS ) ) + FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,ACS ) )", "choosing": "Max( ( Max( DS,( ( MLU * CS ) + ( Max( CS,RRSe ) - RRSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.09055118110236221, "obj2": 0.8598266783171414}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( ( DDR + ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( DS / MUM ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.8700787401574803, "obj2": 0.11728918818711365}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const * FirstVNF_RAM_Server ) + MDR ) + MDR ) )", "choosing": "( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.2261900452724061}, {"determining": "( Min( ( FirstVNF_Mem_Server + MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) ,CRS ) + ACS ) )", "choosing": "( Min( Min( Max( MUC,CS ) ,( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - Min( RCSe ,( Max( ( ( MLU * DS ) / MUR ),RCSe ) - RRSe ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6546537736268166}, {"determining": "( ( Min( CRS ,Max( ARS,FirstVNF_CPU ) ) / Max( Const,FirstVNF_CPU_Server ) ) / ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( ( MUC - ( MUC / MUR ) ) ,DS ),( DS - MUC ) ),( Max( MUM,RCSe ) - DS ) )", "obj1": 0.1594488188976378, "obj2": 0.7485496423044494}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 0.3346456692913386, "obj2": 0.5639780844993164}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02906087275981682}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) )", "choosing": "( ( MUM + ( Min( MUM ,( MUR * Max( Min( ( RRSe + DS ) ,MUR ),RMSe ) ) ) / CS ) ) * DS )", "obj1": 0.6889763779527559, "obj2": 0.253459516159541}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5691835202528694}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU_Server,AMS ) + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * ( MRS / ( ( Const - AMS ) * MDR ) ) )", "choosing": "( DS * ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUM ,DS ) / MUR ) ) * ( CS + MUC ) ) ) + Max( DS,( ( MUC - RMSe ) + MUR ) ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.2588478367434733}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5942110423253226}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( ( ( PN - DDR ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( RCSe * Max( Min( ( ( MUC / ( MUM * Min( CS ,RMSe ) ) ) * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( ( MUC / Max( MUR,MUR ) ) - Max( MLU,RCSe ) ) ) ) - Max( MUM,MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.5691594907957478}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6464506462759583}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.530689818150685}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( FirstVNF_CPU_Server / ARS ) ) ) - ( Const * FirstVNF_Mem ) ) ) ) + ( CRS * FirstVNF_CPU_Server ) ) - ( Const - AMS ) )", "choosing": "( Max( ( ( MUC * Max( ( MUM / CS ),( DS - RMSe ) ) ) / DS ),( MUR / RCSe ) ) - ( ( Min( ( MUC * ( RMSe + ( MUC - Min( RMSe ,MUM ) ) ) ) ,CS ) * RMSe ) / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7768644274011967}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( DDR / ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( Min( CS ,MLU ) * MUR ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( DS / ( MUM + MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6121448085084862}, {"determining": "( ( ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( Const - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( Min( DS ,RCSe ),RMSe ) ) ,Max( Min( MUR ,RMSe ),( MLU / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.30118110236220474, "obj2": 0.5701630261006508}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Max( ( ( CRS - ACS ) / Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU + BR ) ) ),BR ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( DDR ,( ARS / Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( RRS * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),Const ) ) ) / PN ) )", "choosing": "( DS * ( ( ( ( ( RCSe + RCSe ) - MLU ) + RRSe ) / DS ) + MUR ) )", "obj1": 0.7519685039370079, "obj2": 0.20898250319936276}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUR ) ) * ( CS + MUC ) ) ) / CS ) ) * DS )", "obj1": 0.984251968503937, "obj2": 0.017390916075082145}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( RRS - FirstVNF_CPU_Server ) / Min( ( Const * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) ) ) ,( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Max( Max( Min( MUC ,( ( MUR / ( RCSe / CS ) ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.14763779527559054, "obj2": 0.7611272324043983}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( ( ARS * Const ) * Min( RRS ,( ACS - ( Min( AMS ,( Min( ARS ,( RRS / FirstVNF_Mem ) ) * CRS ) ) - Const ) ) ) )", "choosing": "( ( ( ( DS - MUC ) - Min( DS ,MUC ) ) - Min( RMSe ,Min( Min( DS ,RMSe ) ,MUC ) ) ) - ( DS * RCSe ) )", "obj1": 0.1515748031496063, "obj2": 0.7559110897282234}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.08533395380870451}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( RRS + ( ( Const / PN ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR - ( ( Max( ( Min( ( DS * MUC ) ,Max( DS,RMSe ) ) / MLU ),RRSe ) - RRSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,Min( Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ,Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6035255163394696}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),DS ) ) * MLU ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.734251968503937, "obj2": 0.22267499509456598}, {"determining": "( ( ( FirstVNF_RAM / PN ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * ACS ) ) + DDR )", "choosing": "( ( DS * MUM ) * MLU )", "obj1": 0.39173228346456695, "obj2": 0.5030407645891344}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49118483299517374}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / Min( ( BR / Min( PN ,FirstVNF_Mem ) ) ,Max( ACS,CRS ) ) ) / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - ARS ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( ( ( RMSe / ( MUC + RCSe ) ) / Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3838582677165354, "obj2": 0.5136247830380541}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,( MUR * RCSe ) ) ) * ( MUC - ( MLU + MUC ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5928676377608162}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( MUC ,( ( ( RRSe * Max( RCSe,RRSe ) ) * RCSe ) - MLU ) ),( DS - MUC ) ),( Max( RMSe,RCSe ) - DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7509538002631487}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3858267716535433, "obj2": 0.5073439716130101}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0015510111386807797}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.06808450004682293}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12007874015748031, "obj2": 0.8076576984026069}, {"determining": "( MRS + Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Max( MUC,( DS / RCSe ) ) * ( Min( MUC ,DS ) - ( MLU + Min( MUC ,( ( MUM / ( ( RMSe - RCSe ) - MUM ) ) / RCSe ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06959682872295024}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( RRS + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( RRSe,DS ) * DS )", "obj1": 0.937007874015748, "obj2": 0.05694318940076237}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "Min( ( Max( RRS,PN ) / Max( FirstVNF_Mem,CRS ) ) ,Min( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) ,Const ) )", "choosing": "( ( Min( DS ,Max( MUR,( ( ( ( RRSe * RMSe ) + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.2795275590551181, "obj2": 0.5911951232819}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.11614173228346457, "obj2": 0.8081084784215897}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Max( ( Min( DDR ,( ARS + MRS ) ) * MDR ),( Max( PN,FirstVNF_CPU ) - AMS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RRSe ) * ( Min( MUC ,MUM ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}], "12": [{"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_Mem / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( MUM / MUR ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / ( RMSe - Max( DS,( DS + ( ( CS + MUM ) + MLU ) ) ) ) ),( Min( ( RMSe * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.7637795275590551, "obj2": 0.20225000529111595}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "Min( Min( DDR ,Min( ( DDR * DDR ) ,AMS ) ) ,( FirstVNF_CPU_Server - ( Const / ( ( ( FirstVNF_CPU * Const ) - ARS ) / DDR ) ) ) )", "choosing": "( Max( ( Min( DS ,DS ) - ( Min( ( CS - MLU ) ,RMSe ) + ( ( MLU / Max( Min( MLU ,CS ),RMSe ) ) + RRSe ) ) ),( DS * CS ) ) * ( CS - RRSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( ACS ,( Max( ( ARS - Const ),MDR ) * ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MLU - ( ( ( Min( ( RMSe / ( CS - MLU ) ) ,RRSe ) / ( RRSe * MUM ) ) * ( ( RRSe * ( MUC - RCSe ) ) / Max( MUC,RCSe ) ) ) * DS ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.15503321797592243}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( RRSe - DS ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.09497725358706632}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( Min( CRS ,RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6467908176216115}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const * FirstVNF_RAM_Server ) + MDR ) + MDR ) )", "choosing": "( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.2261900452724061}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "Min( ( MDR + CRS ) ,Min( ( FirstVNF_Mem - RRS ) ,( AMS * Min( PN ,AMS ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU * RCSe ) / MLU ) / RRSe ) ) / ( RMSe * ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7058512749394746}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5691835202528694}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Const / Max( ( Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) - ( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5547335383857259}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Max( ( ( CRS - ACS ) / Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU + BR ) ) ),BR ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( DDR ,( ARS / Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( RRS * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),Const ) ) ) / PN ) )", "choosing": "( DS * ( ( ( ( ( RCSe + RCSe ) - MLU ) + RRSe ) / DS ) + MUR ) )", "obj1": 0.7519685039370079, "obj2": 0.20898250319936276}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( ARS + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + MDR ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RCSe / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( CS * ( Min( ( MUM * MUM ) ,MUC ) - RMSe ) ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.24916174626065182}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Const / Max( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM + RRS ) / ( ( BR - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - ( MLU + MUC ) )", "obj1": 0.33070866141732286, "obj2": 0.5530126402460519}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU_Server,AMS ) + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * ( MRS / ( ( Const - AMS ) * MDR ) ) )", "choosing": "( DS * ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUM ,DS ) / MUR ) ) * ( CS + MUC ) ) ) + Max( DS,( ( MUC - RMSe ) + MUR ) ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.2588478367434733}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02906087275981682}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5942110423253226}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.05473188323331056}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.530689818150685}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( FirstVNF_CPU_Server / ARS ) ) ) - ( Const * FirstVNF_Mem ) ) ) ) + ( CRS * FirstVNF_CPU_Server ) ) - ( Const - AMS ) )", "choosing": "( Max( ( ( MUC * Max( ( MUM / CS ),( DS - RMSe ) ) ) / DS ),( MUR / RCSe ) ) - ( ( Min( ( MUC * ( RMSe + ( MUC - Min( RMSe ,MUM ) ) ) ) ,CS ) * RMSe ) / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7768644274011967}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( RRS - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( Max( Const,MDR ) / ( DDR + CRS ) ) ) ) + ( Const / DDR ) )", "choosing": "Max( ( Max( DS,DS ) + ( MUM * MLU ) ),( DS + RRSe ) )", "obj1": 0.9409448818897638, "obj2": 0.0563150601687525}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( DDR / ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( Min( CS ,MLU ) * MUR ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( DS / ( MUM + MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6121448085084862}, {"determining": "( ( ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( Const - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( Min( DS ,RCSe ),RMSe ) ) ,Max( Min( MUR ,RMSe ),( MLU / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.30118110236220474, "obj2": 0.5701630261006508}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6464506462759583}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * Min( ( FirstVNF_CPU / PN ) ,PN ) ) ) ) ,Max( ( FirstVNF_Mem + MRS ),Max( FirstVNF_CPU,DDR ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( DS ,MUM ) / MUC ) ) * ( CS + MUC ) ) ) / CS ) ) * Max( MUC,MLU ) )", "obj1": 0.984251968503937, "obj2": 0.017390916075082138}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.08533395380870451}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,( MUR * RCSe ) ) ) * ( MUC - ( MLU + MUC ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5928676377608162}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - RRSe ) ) - MUR ),DS ) ) * MLU ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.734251968503937, "obj2": 0.22267499509456598}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_CPU_Server ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( BR / Max( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ),Max( Min( Min( Max( ( CRS / FirstVNF_Mem ),AMS ) ,( ( FirstVNF_CPU + FirstVNF_CPU ) * DDR ) ) ,BR ),AMS ) ) ) )", "choosing": "( Max( ( RCSe + ( RCSe - ( ( CS + RMSe ) / MUM ) ) ),( ( RMSe / MUR ) / ( MUR * DS ) ) ) - Min( Max( RRSe,( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4780785811702851}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,Min( Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ,Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6035255163394696}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( ( CRS + ( ( DDR + ( Const * ARS ) ) * AMS ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( ( ( MLU / RRSe ) + ( Min( ( MUR * ( Min( DS ,MLU ) * DS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.9271653543307087, "obj2": 0.06422012901029477}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49118483299517374}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "Min( ( Max( RRS,PN ) / Max( FirstVNF_Mem,CRS ) ) ,Min( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) ,Const ) )", "choosing": "( ( Min( DS ,Max( MUR,( ( ( ( RRSe * RMSe ) + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.2795275590551181, "obj2": 0.5911951232819}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.028190223644978373}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "( ( PN * ( AMS + PN ) ) + DDR )", "choosing": "( ( MUC / ( ( MLU + MLU ) + MUR ) ) * MLU )", "obj1": 0.12007874015748031, "obj2": 0.8070112129600668}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.06808450004682293}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / Min( ( BR / Min( PN ,FirstVNF_Mem ) ) ,Max( ACS,CRS ) ) ) / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - ARS ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( ( ( RMSe / ( MUC + RCSe ) ) / Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( RRS - PN ) / ( CRS * Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * Min( MLU ,MUC ) ) ) * ( ( MUC / Max( ( RCSe - DS ),RMSe ) ) + RMSe ) )", "obj1": 0.9960629921259843, "obj2": 0.00523653204180108}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Max( ( Min( DDR ,( ARS + MRS ) ) * MDR ),( Max( PN,FirstVNF_CPU ) - AMS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RRSe ) * ( Min( MUC ,MUM ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "( ( RRS + ( ( Const / PN ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR - ( ( Max( ( Min( ( DS * MUC ) ,Max( DS,RMSe ) ) / MLU ),RRSe ) - RRSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.02569614350321881}, {"determining": "( ( ( ( BR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( DDR ,( Max( ( ( ( FirstVNF_RAM / PN ) * ( RRS * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),Const ) / Max( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * ( RRS * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ),Min( ( ( FirstVNF_CPU + MRS ) - ARS ) ,FirstVNF_Mem ) ) ) ) / PN ) )", "choosing": "( ( ( ( ( Min( ( ( DS / CS ) * Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - MLU ) + RRSe ) / ( ( MUC * Min( ( RRSe + ( MLU - RMSe ) ) ,( RRSe + Min( RRSe ,DS ) ) ) ) * MUR ) ) + MUR ) * DS )", "obj1": 0.7303149606299213, "obj2": 0.2240169841591733}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,AMS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( Min( ( Max( ( MUM / CS ),Min( DS ,RMSe ) ) * RCSe ) ,RRSe ) - DS ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006624713039010849}, {"determining": "( ( BR / ( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ) - Max( AMS,RRS ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ARS,FirstVNF_CPU_Server ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUM - ( ( Max( Max( RCSe,( RMSe / MUC ) ),( DS - MUR ) ) - ( CS / Min( MUR ,RCSe ) ) ) - ( RMSe - RRSe ) ) ) / RCSe ) * ( Min( ( ( ( MUR + CS ) * RCSe ) / Min( DS ,RCSe ) ) ,( ( MUM * RCSe ) / ( RRSe / MUC ) ) ) / ( RMSe - MUM ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07516896379303367}], "13": [{"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( Max( PN,PN ) / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) - AMS ) - Max( PN,PN ) )", "choosing": "( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( Max( DS,DS ) + ( MUM * MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.2898283929555991}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.09354647889307298}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( ( Max( MRS,CRS ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - AMS ) )", "choosing": "( ( DS * MUR ) - Max( MLU,( Min( MUM ,( RRSe * ( ( Max( RCSe,MUM ) / DS ) / MUC ) ) ) / CS ) ) )", "obj1": 0.9645669291338582, "obj2": 0.04919871916782034}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( Const * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3188976377952756, "obj2": 0.5526644087553914}, {"determining": "( Min( CRS ,RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ,( MUM + MUM ) ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6467908176216115}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const * FirstVNF_RAM_Server ) + MDR ) + MDR ) )", "choosing": "( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.2261900452724061}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "Min( ( MDR + CRS ) ,Min( ( FirstVNF_Mem - RRS ) ,( AMS * Min( PN ,AMS ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU * RCSe ) / MLU ) / RRSe ) ) / ( RMSe * ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7058512749394746}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( ARS + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + MDR ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RCSe / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( CS * ( Min( ( MUM * MUM ) ,MUC ) - RMSe ) ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.24916174626065182}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU_Server,AMS ) + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * ( MRS / ( ( Const - AMS ) * MDR ) ) )", "choosing": "( DS * ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUM ,DS ) / MUR ) ) * ( CS + MUC ) ) ) + Max( DS,( ( MUC - RMSe ) + MUR ) ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.2588478367434733}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5942110423253226}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( ( MRS + RRS ) * ( FirstVNF_RAM_Server + ACS ) ),CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - ( CS + MUR ) ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02906087275981682}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( FirstVNF_CPU_Server / ARS ) ) ) - ( Const * FirstVNF_Mem ) ) ) ) + ( CRS * FirstVNF_CPU_Server ) ) - ( Const - AMS ) )", "choosing": "( Max( ( ( MUC * Max( ( MUM / CS ),( DS - RMSe ) ) ) / DS ),( MUR / RCSe ) ) - ( ( Min( ( MUC * ( RMSe + ( MUC - Min( RMSe ,MUM ) ) ) ) ,CS ) * RMSe ) / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7768644274011967}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3110236220472441, "obj2": 0.556070734773195}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( ( FirstVNF_RAM + AMS ) - ( DDR / ( Min( FirstVNF_RAM_Server ,MDR ) - ACS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( Min( CS ,MLU ) * MUR ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( DS / ( MUM + MUM ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6121448085084862}, {"determining": "( ( ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( Const - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( Min( DS ,RCSe ),RMSe ) ) ,Max( Min( MUR ,RMSe ),( MLU / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.30118110236220474, "obj2": 0.5701630261006508}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5691835202528694}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.20866141732283464, "obj2": 0.6464506462759583}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * Min( ( FirstVNF_CPU / PN ) ,PN ) ) ) ) ,Max( ( FirstVNF_Mem + MRS ),Max( FirstVNF_CPU,DDR ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( DS ,MUM ) / MUC ) ) * ( CS + MUC ) ) ) / CS ) ) * Max( MUC,MLU ) )", "obj1": 0.984251968503937, "obj2": 0.017390916075082138}, {"determining": "( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / ( CS * MLU ) ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( MLU ,Min( CS ,Max( RMSe,( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6266463489988249}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( RRS - FirstVNF_Mem_Server ) ,( AMS * Min( PN ,( CRS + AMS ) ) ) ) ,Min( MDR ,CRS ) )", "choosing": "( ( MUR + Max( Min( MLU ,MUR ),( MUM / MUR ) ) ) - ( ( ( MUM * RCSe ) / ( Min( CS ,CS ) + Max( ( MUC + ( RCSe - DS ) ),MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6220026655904928}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.08533395380870451}, {"determining": "( ( PN * ( AMS + PN ) ) + DDR )", "choosing": "( ( MUC / ( ( MLU + MLU ) + MUR ) ) * MLU )", "obj1": 0.12007874015748031, "obj2": 0.8070112129600668}, {"determining": "( ( DDR + ( Min( ( ( Const - PN ) / ( AMS * ( MDR + CRS ) ) ) ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( DS / DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,( MUR * RCSe ) ) ) * ( MUC - ( MLU + MUC ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5928676377608162}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( Max( FirstVNF_CPU_Server,MRS ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( ( Max( RRSe,DS ) * DS ) ,MUC ) ) * Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUC ) ) * ( CS + MUC ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5369682336276959}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.220935330390563}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_CPU_Server ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( BR / Max( Min( BR ,Max( PN,Max( FirstVNF_Mem,Min( ( MDR / MDR ) ,FirstVNF_CPU ) ) ) ),Max( Min( Min( Max( ( CRS / FirstVNF_Mem ),AMS ) ,( ( FirstVNF_CPU + FirstVNF_CPU ) * DDR ) ) ,BR ),AMS ) ) ) )", "choosing": "( Max( ( RCSe + ( RCSe - ( ( CS + RMSe ) / MUM ) ) ),( ( RMSe / MUR ) / ( MUR * DS ) ) ) - Min( Max( RRSe,( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.4780785811702851}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( RRS / ( Const / Max( ( ( ( CRS / ( MRS * FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) * ( RRS + FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) ) ) ) / Max( ( FirstVNF_Mem_Server * ( Const - ( FirstVNF_Mem / Min( AMS ,FirstVNF_CPU ) ) ) ),( Const * BR ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) * ( MUR + RMSe ) ) + MUR ) * ( MUC / Max( Min( ( ( MUM / MLU ) * ( ( Min( RRSe ,RRSe ) * RMSe ) - CS ) ) ,( MUR / ( MUR + RMSe ) ) ),( RCSe - RRSe ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.530689818150685}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,Min( Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ,Min( ( ARS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6035255163394696}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( RRS / ( Const / Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( Const * BR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.49118483299517374}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "Min( Min( BR ,ARS ) ,( FirstVNF_CPU_Server - Max( AMS,Min( ( FirstVNF_RAM_Server - ( Const + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Min( ( ARS - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( MLU ,RRSe ) + ( Max( Min( DS ,( MUR / RMSe ) ),MLU ) / Min( MUC ,Min( MLU ,( ( MUR * ( ( MUC - MUM ) + ( RCSe * DS ) ) ) - ( CS * MUC ) ) ) ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5236783571619079}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "Min( ( Max( RRS,PN ) / Max( FirstVNF_Mem,CRS ) ) ,Min( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) ,Const ) )", "choosing": "( ( Min( DS ,Max( MUR,( ( ( ( RRSe * RMSe ) + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.2795275590551181, "obj2": 0.5911951232819}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.028190223644978373}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "Min( Min( DDR ,Min( ( DDR * DDR ) ,AMS ) ) ,( FirstVNF_CPU_Server - ( Const / ( ( ( FirstVNF_CPU * Const ) - ARS ) / DDR ) ) ) )", "choosing": "( Max( ( Min( DS ,DS ) - ( Min( ( CS - MLU ) ,RMSe ) + ( ( MLU / Max( Min( MLU ,CS ),RMSe ) ) + RRSe ) ) ),( DS * CS ) ) * ( CS - RRSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / Min( ( BR / Min( PN ,FirstVNF_Mem ) ) ,Max( ACS,CRS ) ) ) / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - ARS ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( ( ( RMSe / ( MUC + RCSe ) ) / Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,AMS ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * CS ) ,( RMSe + RMSe ) ) ,RMSe ) ) ) / DS ),Max( RCSe,RMSe ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( AMS,( Const + FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( ( CS + RMSe ) * Min( MLU ,MUM ) ) ) ,DS ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + Max( ( Min( DDR ,( ARS + MRS ) ) * MDR ),( Max( PN,FirstVNF_CPU ) - AMS ) ) ) )", "choosing": "( ( Max( RRSe,RMSe ) * RRSe ) * ( Min( MUC ,MUM ) - ( MLU + CS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.6026096595509902}], "14": [{"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( Max( DDR,( Max( MRS,FirstVNF_RAM_Server ) / BR ) ) + FirstVNF_CPU_Server ) ) + ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( Min( ( Max( PN,PN ) / Max( FirstVNF_CPU_Server,BR ) ) ,PN ) / PN ) )", "choosing": "( ( ( ( Max( MUM,RCSe ) - Max( ( RMSe + MUC ),MUR ) ) * ( RMSe - Min( ( ( RMSe / MLU ) * RMSe ) ,MUR ) ) ) + RMSe ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( Max( DS,DS ) + ( MUM * MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.2898283929555991}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16674541012744976}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( Min( DDR ,Min( ( DDR * DDR ) ,AMS ) ) ,( FirstVNF_CPU_Server - ( Const / ( ( ( FirstVNF_CPU * Const ) - ARS ) / DDR ) ) ) )", "choosing": "( Max( ( Min( DS ,DS ) - ( Min( ( CS - MLU ) ,RMSe ) + ( ( MLU / Max( Min( MLU ,CS ),RMSe ) ) + RRSe ) ) ),( DS * CS ) ) * ( CS - RRSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.09354647889307298}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const * FirstVNF_RAM_Server ) + MDR ) + MDR ) )", "choosing": "( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.2261900452724061}, {"determining": "Min( ( Min( Min( AMS ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,FirstVNF_CPU ) ),MDR ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "( ( ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) * Min( Max( RCSe,MUR ) ,( Min( MUM ,( ( RCSe * MUM ) + DS ) ) / DS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( DS ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( Const * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3188976377952756, "obj2": 0.5526644087553914}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( ( MRS + RRS ) * ( FirstVNF_RAM_Server + ACS ) ),CRS ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - ( CS + MUR ) ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02906087275981682}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "Min( ( MDR + CRS ) ,Min( ( FirstVNF_Mem - RRS ) ,( AMS * Min( PN ,AMS ) ) ) )", "choosing": "( ( MLU + ( ( ( MLU * RCSe ) / MLU ) / RRSe ) ) / ( RMSe * ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.7058512749394746}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( ARS + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + MDR ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RCSe / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( CS * ( Min( ( MUM * MUM ) ,MUC ) - RMSe ) ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.24916174626065182}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU_Server,AMS ) + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * ( MRS / ( ( Const - AMS ) * MDR ) ) )", "choosing": "( DS * ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUM ,DS ) / MUR ) ) * ( CS + MUC ) ) ) + Max( DS,( ( MUC - RMSe ) + MUR ) ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.2588478367434733}, {"determining": "( ( ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( Const - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( Min( DS ,RCSe ),RMSe ) ) ,Max( Min( MUR ,RMSe ),( MLU / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.30118110236220474, "obj2": 0.5701630261006508}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5942110423253226}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.028190223644978373}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.5373728275614721}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6003854165589282}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * Min( ( FirstVNF_CPU / PN ) ,PN ) ) ) ) ,Max( ( FirstVNF_Mem + MRS ),Max( FirstVNF_CPU,DDR ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( DS ,MUM ) / MUC ) ) * ( CS + MUC ) ) ) / CS ) ) * Max( MUC,MLU ) )", "obj1": 0.984251968503937, "obj2": 0.017390916075082138}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5624910680853166}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( Max( FirstVNF_CPU_Server,MRS ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( ( Max( RRSe,DS ) * DS ) ,MUC ) ) * Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUR ,MUM ) / MUC ) ) * ( CS + MUC ) ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5369682336276959}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / ( CS * MLU ) ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( MLU ,Min( CS ,Max( RMSe,( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6266463489988249}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( FirstVNF_CPU_Server / ARS ) ) ) - ( Const * FirstVNF_Mem ) ) ) ) + ( CRS * FirstVNF_CPU_Server ) ) - ( Const - AMS ) )", "choosing": "( Max( ( ( MUC * Max( ( MUM / CS ),( DS - RMSe ) ) ) / DS ),( MUR / RCSe ) ) - ( ( Min( ( MUC * ( RMSe + ( MUC - Min( RMSe ,MUM ) ) ) ) ,CS ) * RMSe ) / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7768644274011967}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.220935330390563}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( RRS - FirstVNF_Mem_Server ) ,( AMS * Min( PN ,( CRS + AMS ) ) ) ) ,Min( MDR ,CRS ) )", "choosing": "( ( MUR + Max( Min( MLU ,MUR ),( MUM / MUR ) ) ) - ( ( ( MUM * RCSe ) / ( Min( CS ,CS ) + Max( ( MUC + ( RCSe - DS ) ),MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6220026655904928}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.08533395380870451}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3110236220472441, "obj2": 0.556070734773195}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( DDR + ( Min( ( ( Const - PN ) / ( AMS * ( MDR + CRS ) ) ) ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( DS / DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,( MUR * RCSe ) ) ) * ( MUC - ( MLU + MUC ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5928676377608162}, {"determining": "( ( MRS + RRS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) + ( BR - BR ) ) ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,CS ) ) ,( ( MUR * MUR ) - ( CS + MUR ) ) ) - ( ( Min( MUR ,Max( MLU,Min( MLU ,( ( RMSe - MUM ) / ( CS / DS ) ) ) ) ) / ( CS + MUR ) ) * DS ) )", "obj1": 0.39173228346456695, "obj2": 0.4957492653392755}, {"determining": "( ( PN + ( FirstVNF_Mem / PN ) ) * ( AMS - ACS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUM ,MUR ) / MUR ) ) + ( ( RMSe - Max( ( CS * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * ( ( RMSe / RCSe ) * MUR ) )", "obj1": 0.41338582677165353, "obj2": 0.4722064823908458}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( RRS + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * ( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( ( Max( RRSe,DS ) * DS ) ,MUC ) ) * Min( MUM ,Min( RMSe ,MLU ) ) )", "obj1": 0.3700787401574803, "obj2": 0.523747108684376}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6070318040676038}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,( ACS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.24606299212598426, "obj2": 0.6117014507422531}, {"determining": "( ( RRS / Max( Const,Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( FirstVNF_CPU_Server - MRS ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( FirstVNF_RAM * Const ) )", "choosing": "( Min( Max( Min( ( ( ( DS - ( RMSe + RCSe ) ) / ( CS + ( RRSe / RMSe ) ) ) + MUM ) ,( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( MUM + RCSe ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4904720297584211}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / Min( ( BR / Min( PN ,FirstVNF_Mem ) ) ,Max( ACS,CRS ) ) ) / ( FirstVNF_RAM_Server / ( FirstVNF_CPU - ARS ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( ( ( RMSe / ( MUC + RCSe ) ) / Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "Min( ( Max( RRS,PN ) / Max( FirstVNF_Mem,CRS ) ) ,Min( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) ,Const ) )", "choosing": "( ( Min( DS ,Max( MUR,( ( ( ( RRSe * RMSe ) + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.2795275590551181, "obj2": 0.5911951232819}, {"determining": "( Min( CRS ,RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( RCSe + MUM ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.48206767749451485}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( RRSe,( MUR - RCSe ) ) ,RMSe ) ) ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "Min( Max( AMS,( DDR * DDR ) ) ,( Const / BR ) )", "choosing": "( Min( ( Max( MUR,Min( CS ,MUC ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * ( RMSe + ( Min( MUC ,RRSe ) - MUM ) ) ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( Max( RRSe,DS ) ,( CS / RCSe ) ),Min( Max( RMSe,MUC ) ,( MUR * DS ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.484562048857062}], "15": [{"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( Min( Min( ( MDR - MRS ) ,BR ) ,FirstVNF_CPU_Server ) - DDR ) ) + ( ( FirstVNF_Mem / AMS ) + ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( MLU + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( Max( DS,DS ) + ( MUM * MLU ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.2898283929555991}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.1666124924281443}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.09354647889307298}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.22410583467569387}, {"determining": "Min( Min( ( Const - ( ARS / MRS ) ) ,AMS ) ,( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) + ( ( ( ACS - AMS ) / Const ) + ( FirstVNF_Mem_Server * ACS ) ) ) )", "choosing": "( ( MLU + ( ( MLU / ( MUM * ( DS - MUM ) ) ) / RRSe ) ) / ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) * RMSe ) )", "obj1": 0.6633858267716536, "obj2": 0.26733526994132484}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( Const * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3188976377952756, "obj2": 0.5526644087553914}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "Min( ( Min( Min( AMS ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,FirstVNF_CPU ) ),MDR ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "( ( ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) * Min( Max( RCSe,MUR ) ,( Min( MUM ,( ( RCSe * MUM ) + DS ) ) / DS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( DS ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.03016465293744498}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( MRS * ( ( AMS - ( ( AMS / FirstVNF_CPU_Server ) / CRS ) ) + ACS ) )", "choosing": "( Max( ( ( MUC * CS ) * ( CS / DS ) ),( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( RRSe - RMSe ) )", "obj1": 0.1732283464566929, "obj2": 0.6831743817918112}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( ARS + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + MDR ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( RCSe / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( CS * ( Min( ( MUM * MUM ) ,MUC ) - RMSe ) ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.24916174626065182}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( Max( FirstVNF_CPU_Server,AMS ) + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * ( MRS / ( ( Const - AMS ) * MDR ) ) )", "choosing": "( DS * ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( MUM ,DS ) / MUR ) ) * ( CS + MUC ) ) ) + Max( DS,( ( MUC - RMSe ) + MUR ) ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.2588478367434733}, {"determining": "( ( ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( Const - DDR ) * MRS ) ) ),Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( Min( DS ,RCSe ),RMSe ) ) ,Max( Min( MUR ,RMSe ),( MLU / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.30118110236220474, "obj2": 0.5701630261006508}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( RRS + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9744094488188977, "obj2": 0.028190223644978373}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8208661417322834, "obj2": 0.14695547269732817}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,RMSe ),MUR ) )", "obj1": 0.9035433070866141, "obj2": 0.0925506542324722}, {"determining": "( ( Min( ( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,MDR ) - ( Const * Min( ( FirstVNF_CPU / PN ) ,PN ) ) ) ) ,Max( ( FirstVNF_Mem + MRS ),Max( FirstVNF_CPU,DDR ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) ) - ( Const - ( ( FirstVNF_Mem_Server / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) / ( Min( CRS ,DDR ) + Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUM + ( Min( MUM ,( ( ( MUR / RRSe ) + ( Min( DS ,MUM ) / MUC ) ) * ( CS + MUC ) ) ) / CS ) ) * Max( MUC,MLU ) )", "obj1": 0.984251968503937, "obj2": 0.017390916075082138}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( FirstVNF_CPU_Server / ARS ) ) ) - ( Const * FirstVNF_Mem ) ) ) ) + ( CRS * FirstVNF_CPU_Server ) ) - ( Const - AMS ) )", "choosing": "( Max( ( ( MUC * Max( ( MUM / CS ),( DS - RMSe ) ) ) / DS ),( MUR / RCSe ) ) - ( ( Min( ( MUC * ( RMSe + ( MUC - Min( RMSe ,MUM ) ) ) ) ,CS ) * RMSe ) / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7768644274011967}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) / ( ( Const / ( ACS - AMS ) ) + ( FirstVNF_Mem_Server * ACS ) ) ) ) * Max( ( ( ( CRS - FirstVNF_RAM ) + BR ) - ( Const / FirstVNF_RAM ) ),( ( Max( Max( FirstVNF_Mem_Server,Min( MRS ,( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ),RRS ) * FirstVNF_RAM_Server ) - Max( ( ( ( Max( DDR,ARS ) - FirstVNF_Mem_Server ) * ( Min( FirstVNF_RAM_Server ,RRS ) / MDR ) ) + ( FirstVNF_Mem_Server / ARS ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + MUC ) * Min( ( ( MUC + DS ) / MUC ) ,Max( DS,Max( DS,RCSe ) ) ) ) ) / CS ) + MUM ) * DS )", "obj1": 0.6811023622047244, "obj2": 0.25371075748015487}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5624910680853166}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / ( CS * MLU ) ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( MLU ,Min( CS ,Max( RMSe,( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6266463489988249}, {"determining": "( ( ( FirstVNF_RAM_Server - MRS ) / ( ARS / DDR ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) - AMS ) ,RRS ) ) )", "choosing": "Max( Max( ( Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),MUC ) - MUC ),DS ),Max( Max( ( ( CS + ( MUC + ( MLU * RMSe ) ) ) * ( MLU - ( Min( MUC ,( MUC + MUC ) ) * CS ) ) ),MUC ),CS ) )", "obj1": 0.4330708661417323, "obj2": 0.4646540236110077}, {"determining": "Min( Min( ( RRS - FirstVNF_Mem_Server ) ,( AMS * Min( PN ,( CRS + AMS ) ) ) ) ,Min( MDR ,CRS ) )", "choosing": "( ( MUR + Max( Min( MLU ,MUR ),( MUM / MUR ) ) ) - ( ( ( MUM * RCSe ) / ( Min( CS ,CS ) + Max( ( MUC + ( RCSe - DS ) ),MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6220026655904928}, {"determining": "( Max( ( Max( ACS,Max( Max( FirstVNF_Mem,PN ),ARS ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS - RRSe ) ) ),( Min( Min( ( RRSe - Max( Max( RMSe,MUM ),MUC ) ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Min( RMSe ,( Max( MLU,RMSe ) * ( CS * Min( MUM ,DS ) ) ) ) ) ) ) )", "obj1": 0.10236220472440945, "obj2": 0.8238851032225469}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "Min( ( Max( RRS,PN ) / Max( FirstVNF_Mem,CRS ) ) ,Min( ( Min( FirstVNF_CPU_Server ,RRS ) / ACS ) ,Const ) )", "choosing": "( ( Min( DS ,Max( MUR,( ( ( ( RRSe * RMSe ) + DS ) + MUC ) + RRSe ) ) ) / Min( RMSe ,MLU ) ) / Min( CS ,MLU ) )", "obj1": 0.2795275590551181, "obj2": 0.5911951232819}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5918743917680107}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.08533395380870451}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3110236220472441, "obj2": 0.556070734773195}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( DDR + ( Min( ( ( Const - PN ) / ( AMS * ( MDR + CRS ) ) ) ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( DS / DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( ( MRS + RRS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) + ( BR - BR ) ) ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,CS ) ) ,( ( MUR * MUR ) - ( CS + MUR ) ) ) - ( ( Min( MUR ,Max( MLU,Min( MLU ,( ( RMSe - MUM ) / ( CS / DS ) ) ) ) ) / ( CS + MUR ) ) * DS ) )", "obj1": 0.39173228346456695, "obj2": 0.4957492653392755}, {"determining": "( ( PN + ( FirstVNF_Mem / PN ) ) * ( AMS - ACS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUM ,MUR ) / MUR ) ) + ( ( RMSe - Max( ( CS * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * ( ( RMSe / RCSe ) * MUR ) )", "obj1": 0.41338582677165353, "obj2": 0.4722064823908458}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ( Const / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM * ( Min( ( RMSe / MUM ) ,DS ) + ( RCSe - RRSe ) ) ),( ( MUR / MUM ) * ( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02905721500933477}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6070318040676038}, {"determining": "( ( RRS + MDR ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,DS )", "obj1": 0.4271653543307087, "obj2": 0.4697089592940307}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,( ACS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.24606299212598426, "obj2": 0.6117014507422531}, {"determining": "( ( RRS / Max( Const,Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( FirstVNF_CPU_Server - MRS ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( FirstVNF_RAM * Const ) )", "choosing": "( Min( Max( Min( ( ( ( DS - ( RMSe + RCSe ) ) / ( CS + ( RRSe / RMSe ) ) ) + MUM ) ,( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( MUM + RCSe ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4904720297584211}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( DS * RMSe ),( CS / Max( MUM,MUR ) ) ) ,Max( ( MUR / RMSe ),( ( Min( ( MLU / RCSe ) ,CS ) * RCSe ) - ( ( RMSe + RMSe ) - ( RMSe + ( MLU - MLU ) ) ) ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42322834645669294, "obj2": 0.4720623688184944}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6003854165589282}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5925443438226544}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( FirstVNF_RAM_Server - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( MUC,( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07684888027788572}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "Min( Min( DDR ,Min( ( DDR * DDR ) ,AMS ) ) ,( FirstVNF_CPU_Server - ( Const / ( ( ( FirstVNF_CPU * Const ) - ARS ) / DDR ) ) ) )", "choosing": "( Max( ( Min( DS ,DS ) - ( Min( ( CS - MLU ) ,RMSe ) + ( ( MLU / Max( Min( MLU ,CS ),RMSe ) ) + RRSe ) ) ),( DS * CS ) ) * ( CS - RRSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( MRS + FirstVNF_Mem ),( FirstVNF_Mem / MRS ) ) ) ) - FirstVNF_CPU_Server ) + ( ( RRS * Min( PN ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUC / MUC ) ,DS ) ) + MUC ) ) + Max( MLU,DS ) ) + ( Max( MUC,MUM ) * ( RMSe - Max( ( MLU * RRSe ),MUC ) ) ) ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.220935330390563}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ( ( RRS * ( ( ( FirstVNF_Mem_Server / BR ) + FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( Min( Max( Max( RCSe,( MUC / ( MUC - RCSe ) ) ),MLU ) ,RCSe ),MUM ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MUC ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5963550523884077}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) / PN ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}], "16": [{"determining": "( Min( ( RRS * FirstVNF_RAM ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - ( CS + ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( Min( Min( ( MDR - MRS ) ,BR ) ,FirstVNF_CPU_Server ) - DDR ) ) + ( ( FirstVNF_Mem / AMS ) + ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( MLU + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16657670772417427}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + Min( ACS ,( ( DDR / AMS ) / ARS ) ) ) ),MDR ) - ( Const + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( ( MUM * RRSe ) / MLU ) ) / CS ),Max( MUC,CS ) ) ,Max( RRSe,( MUC / ( ( RRSe + RCSe ) + DS ) ) ) ) - ( ( ( Max( ( Max( Min( MUC ,MUR ),MLU ) - Max( MUC,MUR ) ),MUM ) / ( ( ( DS / MUR ) - RRSe ) - RRSe ) ) + Max( RRSe,RMSe ) ) - ( ( RRSe + MUR ) - ( MUC + MUM ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5424175745371802}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.09354647889307298}, {"determining": "Min( Min( DDR ,Min( ( DDR * DDR ) ,AMS ) ) ,( FirstVNF_CPU_Server - ( Const / ( ( ( FirstVNF_CPU * Const ) - ARS ) / DDR ) ) ) )", "choosing": "( Max( ( Min( DS ,DS ) - ( Min( ( CS - MLU ) ,RMSe ) + ( ( MLU / Max( Min( MLU ,CS ),RMSe ) ) + RRSe ) ) ),( DS * CS ) ) * ( CS - RRSe ) )", "obj1": 0.1437007874015748, "obj2": 0.7187186825231268}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.22410583467569387}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( Const * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3188976377952756, "obj2": 0.5526644087553914}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "Min( ( Min( Min( AMS ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,FirstVNF_CPU ) ),MDR ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "( ( ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) * Min( Max( RCSe,MUR ) ,( Min( MUM ,( ( RCSe * MUM ) + DS ) ) / DS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( DS ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.03016465293744498}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( Min( ( DS - RRSe ) ,CS ) - DS ) ) * DS )", "obj1": 0.42322834645669294, "obj2": 0.46715890880702693}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( PN * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( MUR - CS ) ) )", "obj1": 0.9783464566929134, "obj2": 0.01611542340944182}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8208661417322834, "obj2": 0.14695547269732817}, {"determining": "( ( DDR + ( Min( ( ( Const - PN ) / ( AMS * ( MDR + CRS ) ) ) ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.9035433070866141, "obj2": 0.08925524016153773}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( ACS * MDR ) ) ) - ( FirstVNF_Mem * Const ) ) ) ) + ( Min( Max( MRS,AMS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - AMS ) ) ) - ( Const - AMS ) )", "choosing": "( Max( ( DS / ( Min( CS ,Max( DS,CS ) ) * Max( ( MUM / CS ),( DS - RMSe ) ) ) ),( DS / RCSe ) ) - ( RMSe / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7750368223603363}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7153306726354086}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( Max( RMSe,( Max( DS,MUC ) - MUR ) ),Min( ( MUR / ( RCSe - ( RRSe / Min( RRSe ,CS ) ) ) ) ,( MUR - CS ) ) )", "obj1": 0.968503937007874, "obj2": 0.02403843059799588}, {"determining": "( ( ( MDR * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + MRS ) ) ) )", "choosing": "Min( ( CS * Max( MUM,( ( RMSe + RCSe ) * Max( ( MUC + MUC ),Max( MUR,Min( MUM ,Min( RRSe ,MUC ) ) ) ) ) ) ) ,DS )", "obj1": 0.4330708661417323, "obj2": 0.46099556080885973}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.8661417322834646, "obj2": 0.12784851923036686}, {"determining": "( ( PN + ( FirstVNF_Mem / PN ) ) * ( AMS - ACS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUM ,MUR ) / MUR ) ) + ( ( RMSe - Max( ( CS * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * ( ( RMSe / RCSe ) * MUR ) )", "obj1": 0.41338582677165353, "obj2": 0.4722064823908458}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / ( CS * MLU ) ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( MLU ,Min( CS ,Max( RMSe,( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6266463489988249}, {"determining": "Min( Min( ( RRS - FirstVNF_Mem_Server ) ,( AMS * Min( PN ,( CRS + AMS ) ) ) ) ,Min( MDR ,CRS ) )", "choosing": "( ( MUR + Max( Min( MLU ,MUR ),( MUM / MUR ) ) ) - ( ( ( MUM * RCSe ) / ( Min( CS ,CS ) + Max( ( MUC + ( RCSe - DS ) ),MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6220026655904928}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ACS ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( Max( ( MUM * MUM ),RMSe ) ,RCSe ) ) * DS ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.30118110236220474, "obj2": 0.565424565372839}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( ( AMS / FirstVNF_CPU_Server ) / CRS ) + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5879695374783035}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6003854165589282}, {"determining": "( ( MDR + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe + CS ) ) + ( RCSe / Min( RCSe ,RMSe ) ) ) ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( MUM - MUM ) )", "obj1": 0.297244094488189, "obj2": 0.5719571389699679}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( MRS + FirstVNF_Mem ),( FirstVNF_Mem / MRS ) ) ) ) - FirstVNF_CPU_Server ) + ( ( RRS * Min( PN ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUC / MUC ) ,DS ) ) + MUC ) ) + Max( MLU,DS ) ) + ( Max( MUC,MUM ) * ( RMSe - Max( ( MLU * RRSe ),MUC ) ) ) ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.220935330390563}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3110236220472441, "obj2": 0.556070734773195}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * ARS ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.3090551181102362, "obj2": 0.5624910680853166}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( DDR + ( Min( ( ( Const - PN ) / ( AMS * ( MDR + PN ) ) ) ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( DS / DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / CS ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( ( MRS + RRS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) + ( BR - BR ) ) ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,CS ) ) ,( ( MUR * MUR ) - ( CS + MUR ) ) ) - ( ( Min( MUR ,Max( MLU,Min( MLU ,( ( RMSe - MUM ) / ( CS / DS ) ) ) ) ) / ( CS + MUR ) ) * DS ) )", "obj1": 0.39173228346456695, "obj2": 0.4957492653392755}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.24803149606299213, "obj2": 0.6070318040676038}, {"determining": "( ( RRS / ( Const / Max( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( FirstVNF_CPU_Server * MRS ) ) ),( ( Max( FirstVNF_RAM_Server,CRS ) / Const ) * Const ) ) ) ) / Min( ( CRS / ( ( FirstVNF_CPU - ACS ) / FirstVNF_RAM_Server ) ) ,( ACS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.24606299212598426, "obj2": 0.6117014507422531}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( RRS / Max( Const,Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( FirstVNF_CPU_Server - MRS ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( FirstVNF_RAM * Const ) )", "choosing": "( Min( Max( Min( ( ( ( DS - ( RMSe + RCSe ) ) / ( CS + ( RRSe / RMSe ) ) ) + MUM ) ,( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( MUM + RCSe ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4904720297584211}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.08533395380870451}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.2854330708661417, "obj2": 0.5829912234102421}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5918743917680107}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ( Const / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM * ( Min( ( RMSe / MUM ) ,DS ) + ( RCSe - RRSe ) ) ),( ( MUR / MUM ) * ( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02905721500933477}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ( ( RRS * ( ( ( FirstVNF_Mem_Server / BR ) + FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( Min( Max( Max( RCSe,( MUC / ( MUC - RCSe ) ) ),MLU ) ,RCSe ),MUM ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MUC ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5963550523884077}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( ( MRS / RRS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS + FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( AMS * FirstVNF_RAM ) ) + ( MDR * ( FirstVNF_CPU * MRS ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUM * MUM ),RMSe ) / ( ( CS + RMSe ) * MUR ) )", "obj1": 0.9862204724409449, "obj2": 0.012788775349085494}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / MUC ) - ( ( ( MUC + ( RCSe - DS ) ) - RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.9173228346456693, "obj2": 0.07450565756833996}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) / PN ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5925443438226544}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Max( RCSe,Max( MUC,Min( ( MLU * RMSe ) ,RMSe ) ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07684888027788572}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU_Server * Min( Min( ( ( ARS + ( MDR / CRS ) ) * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ,BR ) ) - DDR ) )", "choosing": "( ( MUR / Max( ( ( ( Min( MUR ,MUR ) - MUC ) * CS ) / MUC ),MLU ) ) / DS )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}], "17": [{"determining": "( ( DDR / RRS ) / ( ( ( ( ( Const - PN ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( MUM - ( MUM * Min( MLU ,RRSe ) ) ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * Min( ( ( MLU * Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) / MLU ) ,Max( RMSe,( Max( Max( RMSe,RMSe ),Min( ( RCSe / RMSe ) ,MUC ) ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * FirstVNF_RAM ) ,BR ) + ( ( Const - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - ( CS + ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) ),DS ),Min( ( MUR / MUM ) ,( MUR - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16657670772417427}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * FirstVNF_RAM )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3405511811023622, "obj2": 0.5318759643051816}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5511828888253992}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( ( MUM / MUC ) - Max( Min( Max( ( MUR - MUR ),( DS * CS ) ) ,Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( RCSe,( MUR / ( MUM * ( ( MUC / Min( CS ,DS ) ) * ( ( ( MUC - RRSe ) * RCSe ) / RCSe ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.2308555725194469}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.09354647889307298}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( ( ( MDR + Max( FirstVNF_RAM_Server,PN ) ) / MRS ) ,( Min( PN ,BR ) * Max( FirstVNF_RAM_Server,( CRS - FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / MDR ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( Min( MUC ,Max( ( DS + Min( ( Min( RRSe ,MUC ) / RRSe ) ,RRSe ) ),MLU ) ) ,RRSe ),( RRSe / DS ) )", "obj1": 0.6791338582677166, "obj2": 0.24683206074509287}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.07082979243723458}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( Max( MUR,Min( ( MUM / MUC ) ,DS ) ) + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( ( RMSe - Max( ( MLU * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * DS )", "obj1": 0.7283464566929134, "obj2": 0.22410583467569387}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.7401574803149606, "obj2": 0.2155081020276485}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.1220472440944882, "obj2": 0.8016617002263546}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ACS ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( Max( ( MUM * MUM ),RMSe ) ,RCSe ) ) * DS ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.30118110236220474, "obj2": 0.565424565372839}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( Min( ( DS - RRSe ) ,CS ) - DS ) ) * DS )", "obj1": 0.42322834645669294, "obj2": 0.46715890880702693}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( Max( RMSe,( Max( DS,MUC ) - MUR ) ),Min( ( MUR / ( RCSe - ( RRSe / Min( RRSe ,CS ) ) ) ) ,( MUR - CS ) ) )", "obj1": 0.968503937007874, "obj2": 0.02403843059799588}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "( ( Const - ( FirstVNF_RAM_Server - ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8208661417322834, "obj2": 0.14695547269732817}, {"determining": "( ( Const - PN ) / ( ( Max( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( MDR,ARS ) ) - FirstVNF_Mem ),PN ) - ( Const * FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM + MUR ) ) ) ,( MLU / MLU ) ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) - ( MLU + CS ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6045814808718419}, {"determining": "( ( Min( Max( ( FirstVNF_Mem / MRS ),( Max( PN,AMS ) + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( PN,( Const + ( ACS * MDR ) ) ) - ( FirstVNF_Mem * Const ) ) ) ) + ( Min( Max( MRS,AMS ) ,Min( DDR ,FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - AMS ) ) ) - ( Const - AMS ) )", "choosing": "( Max( ( DS / ( Min( CS ,Max( DS,CS ) ) * Max( ( MUM / CS ),( DS - RMSe ) ) ) ),( DS / RCSe ) ) - ( RMSe / RCSe ) )", "obj1": 0.13188976377952755, "obj2": 0.7750368223603363}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.03016465293744498}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "( ( ( MDR * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + MRS ) ) ) )", "choosing": "Min( ( CS * Max( MUM,( ( RMSe + RCSe ) * Max( ( MUC + MUC ),Max( MUR,Min( MUM ,Min( RRSe ,MUC ) ) ) ) ) ) ) ,DS )", "obj1": 0.4330708661417323, "obj2": 0.46099556080885973}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.8661417322834646, "obj2": 0.12784851923036686}, {"determining": "( ( PN + ( FirstVNF_Mem / PN ) ) * ( AMS - ACS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUM ,MUR ) / MUR ) ) + ( ( RMSe - Max( ( CS * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * ( ( RMSe / RCSe ) * MUR ) )", "obj1": 0.41338582677165353, "obj2": 0.4722064823908458}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / ( CS * MLU ) ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( MLU ,Min( CS ,Max( RMSe,( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6266463489988249}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "Min( Min( ( RRS - FirstVNF_Mem_Server ) ,( AMS * Min( PN ,( CRS + AMS ) ) ) ) ,Min( MDR ,CRS ) )", "choosing": "( ( MUR + Max( Min( MLU ,MUR ),( MUM / MUR ) ) ) - ( ( ( MUM * RCSe ) / ( Min( CS ,CS ) + Max( ( MUC + ( RCSe - DS ) ),MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6220026655904928}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( FirstVNF_RAM * Min( PN ,AMS ) ) + Max( ACS,Max( DDR,FirstVNF_CPU_Server ) ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUC / ( MUM * Min( CS ,RMSe ) ) ),( MUM * RMSe ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( ( Min( RCSe ,MLU ) + ( RRSe / Max( Min( MUR ,RMSe ),MUR ) ) ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + CS ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.14232217767122396}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( ( AMS / FirstVNF_CPU_Server ) / CRS ) + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5879695374783035}, {"determining": "( ( MDR + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe + CS ) ) + ( RCSe / Min( RCSe ,RMSe ) ) ) ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( MUM - MUM ) )", "obj1": 0.297244094488189, "obj2": 0.5719571389699679}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( DDR + ( Min( ( ( Const - PN ) / ( AMS * ( MDR + PN ) ) ) ,MDR ) - ACS ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN * ( ( BR * ( MDR + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( DS / DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUR ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / CS ) )", "obj1": 0.8720472440944882, "obj2": 0.11699732412952832}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.2854330708661417, "obj2": 0.5829912234102421}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( MRS + RRS ) * ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) + ( BR - BR ) ) ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,CS ) ) ,( ( MUR * MUR ) - ( CS + MUR ) ) ) - ( ( Min( MUR ,Max( MLU,Min( MLU ,( ( RMSe - MUM ) / ( CS / DS ) ) ) ) ) / ( CS + MUR ) ) * DS ) )", "obj1": 0.39173228346456695, "obj2": 0.4957492653392755}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( Max( Const,( FirstVNF_Mem_Server + CRS ) ) - FirstVNF_CPU_Server ) + ( ( RRS * Min( PN ,FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) + Max( MLU,DS ) ) + ( Max( MUC,MUM ) * ( RMSe - Max( ( MLU * RRSe ),MUC ) ) ) ) * DS )", "obj1": 0.7322834645669292, "obj2": 0.22063557617045448}, {"determining": "( ( RRS / Max( Const,Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( FirstVNF_CPU_Server - MRS ) + ( MDR + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( FirstVNF_RAM * Const ) )", "choosing": "( Min( Max( Min( ( ( ( DS - ( RMSe + RCSe ) ) / ( CS + ( RRSe / RMSe ) ) ) + MUM ) ,( ( MLU / MUM ) / Min( ( ( MUC / DS ) * Max( RRSe,DS ) ) ,CS ) ) ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( MUM + RCSe ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4904720297584211}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5918743917680107}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / MRS ) + FirstVNF_RAM_Server ) ) * Min( MRS ,( FirstVNF_CPU_Server + ( Min( MDR ,FirstVNF_CPU_Server ) - AMS ) ) ) )", "choosing": "( ( ( ( CS + Max( ( ( RCSe * MUM ) + DS ),( RCSe / RCSe ) ) ) * Min( MLU ,MUC ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9350393700787402, "obj2": 0.05905547944592748}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ( Const / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM * ( Min( ( RMSe / MUM ) ,DS ) + ( RCSe - RRSe ) ) ),( ( MUR / MUM ) * ( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02905721500933477}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / Max( DS,RMSe ) ) + ( RRSe / Max( RMSe,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8159248699058674}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7153306726354086}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6003854165589282}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5925443438226544}, {"determining": "Min( Max( Max( ( MDR + FirstVNF_CPU ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ),PN ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * RRS ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MUM ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RMSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "Min( ( Min( Min( AMS ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ,FirstVNF_CPU ) ),MDR ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "( ( ( Min( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ) ,DS ) - ( MLU + CS ) ) * Min( Max( RCSe,MUR ) ,( Min( MUM ,( ( RCSe * MUM ) + DS ) ) / DS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( DS ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ( ( RRS * ( ( ( FirstVNF_Mem_Server / BR ) + FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( Min( Max( Max( RCSe,( MUC / ( MUC - RCSe ) ) ),MLU ) ,RCSe ),MUM ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MUC ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5963550523884077}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9330708661417323, "obj2": 0.060836302056795695}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.3956692913385827, "obj2": 0.4938070472141151}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5997446657035901}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * Max( MDR,ACS ) ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( RRSe / CS ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( DS ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.038639315975813965}], "18": [{"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / RRS ) / ( ( ( ( ( Const - PN ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( MUM - ( MUM * Min( MLU ,RRSe ) ) ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * Min( ( ( MLU * Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) / MLU ) ,Max( RMSe,( Max( Max( RMSe,RMSe ),Min( ( RCSe / RMSe ) ,MUC ) ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.6771653543307087, "obj2": 0.22623924861093023}, {"determining": "( ( MRS - FirstVNF_RAM ) / Min( ( FirstVNF_Mem_Server + ( ( DDR / MDR ) / Min( DDR ,CRS ) ) ) ,Const ) )", "choosing": "( Max( RMSe,RCSe ) * Max( MUC,DS ) )", "obj1": 0.7165354330708661, "obj2": 0.1996350706862322}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.16657670772417427}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * FirstVNF_RAM )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3405511811023622, "obj2": 0.5318759643051816}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5511828888253992}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.07082979243723458}, {"determining": "( ( ( ( PN * ( ( BR * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) - ACS ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( Max( Max( RRSe,RRSe ),RRSe ) / RMSe ) * ( ( ( MUC / MUR ) / MUC ) - RRSe ) ) * ( Max( ( MUR + DS ),( ( Min( RMSe ,MUC ) + ( Max( RRSe,DS ) / ( DS / MUM ) ) ) + RRSe ) ) / MUM ) ) ,( DS + MUR ) )", "obj1": 0.43700787401574803, "obj2": 0.4570644412254117}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.09354647889307298}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.38976377952755903, "obj2": 0.48711692920502303}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( Const,( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( AMS * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) * ( Min( Min( ( MUR + ( RCSe + MLU ) ) ,( Max( MLU,RRSe ) - ( DS * CS ) ) ) ,DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MLU + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.06824232002017909}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( ( MLU * Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) / MLU ) / DS ),( DS / RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7996657649530876}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( ( DDR + ACS ) / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( Max( ( MUM * MUM ),RMSe ) ,RCSe ) ) * DS ) ) - ( ( Min( Min( CS ,( RMSe + ( ( RRSe / RRSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.30118110236220474, "obj2": 0.565424565372839}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( ( DDR - DDR ) * ( PN - Const ) ) ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) - Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( ( MLU - ( DS / MUM ) ) - ( ( ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) - Max( RCSe,MUC ) ) + MUR ) )", "obj1": 0.40551181102362205, "obj2": 0.4870359276722957}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe + CS ) ) + ( RCSe / Min( RCSe ,RMSe ) ) ) ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( MUM - MUM ) )", "obj1": 0.8759842519685039, "obj2": 0.1133144891140006}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( ( CRS * RRS ) / PN ) )", "choosing": "Max( Min( MUC ,( MLU - ( MUR + RRSe ) ) ),( DS / Min( RMSe ,RRSe ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8208661417322834, "obj2": 0.14695547269732817}, {"determining": "( ( Const - PN ) / ( ( Max( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( MDR,ARS ) ) - FirstVNF_Mem ),PN ) - ( Const * FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM + MUR ) ) ) ,( MLU / MLU ) ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) - ( MLU + CS ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6045814808718419}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.03016465293744498}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( FirstVNF_CPU_Server + ( ( AMS / FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / ( CS * MLU ) ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( MLU ,Min( CS ,Max( RMSe,( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ) * MUR ) * Max( MUM,MUR ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6266463489988249}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3838582677165354, "obj2": 0.5004603986240428}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.8661417322834646, "obj2": 0.12784851923036686}, {"determining": "( ( PN + ( FirstVNF_Mem / PN ) ) * ( AMS - ACS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUM ,MUR ) / MUR ) ) + ( ( RMSe - Max( ( CS * RRSe ),MUC ) ) * Max( MUC,MUM ) ) ) * ( ( RMSe / RCSe ) * MUR ) )", "obj1": 0.41338582677165353, "obj2": 0.4722064823908458}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( ( ( ( RRS - FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server / ( Max( CRS,( Const / RRS ) ) / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( BR * RRS ) )", "choosing": "Min( ( ( MUC * ( RCSe + RCSe ) ) - MUC ) ,( ( MUM * Max( RRSe,CS ) ) * MUR ) )", "obj1": 0.41141732283464566, "obj2": 0.4786626725404685}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( CS ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6193708861922919}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( Min( MUR ,MUM ) / MUR ) ) + ( Min( ( DS - RRSe ) ,CS ) - DS ) ) * DS )", "obj1": 0.42322834645669294, "obj2": 0.46715890880702693}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( FirstVNF_RAM * Min( PN ,AMS ) ) + Max( ACS,Max( DDR,FirstVNF_CPU_Server ) ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUC / ( MUM * Min( CS ,RMSe ) ) ),( MUM * RMSe ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( ( Min( RCSe ,MLU ) + ( RRSe / Max( Min( MUR ,RMSe ),MUR ) ) ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + CS ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.14232217767122396}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( ( AMS / FirstVNF_CPU_Server ) / CRS ) + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5879695374783035}, {"determining": "( ( MDR + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe + CS ) ) + ( RCSe / Min( RCSe ,RMSe ) ) ) ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( MUM - MUM ) )", "obj1": 0.297244094488189, "obj2": 0.5719571389699679}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "Min( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),( FirstVNF_RAM + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( CS * RCSe ),Max( RMSe,RRSe ) ) - Min( MLU ,( ( MUC / Max( RCSe,Max( MUM,( MUR + MUM ) ) ) ) * RCSe ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.2854330708661417, "obj2": 0.5829912234102421}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( Min( Max( MDR,FirstVNF_RAM ) ,FirstVNF_Mem ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + MUC ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( ( MLU - CS ) * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.5848646024508738}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "( ( ( MDR * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) - ( MRS - ( Max( ARS,RRS ) + ( FirstVNF_RAM + MRS ) ) ) )", "choosing": "Min( ( CS * Max( MUM,( ( RMSe + RCSe ) * Max( ( MUC + MUC ),Max( MUR,Min( MUM ,Min( RRSe ,MUC ) ) ) ) ) ) ) ,DS )", "obj1": 0.4330708661417323, "obj2": 0.46099556080885973}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.38188976377952755, "obj2": 0.5028126725324437}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - Max( AMS,Min( ( MDR * Min( ( ( ARS - MDR ) + BR ) ,AMS ) ) ,Min( ( ARS - MRS ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5918743917680107}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "( ( RRS / Max( Const,Max( ( RRS * FirstVNF_RAM ),( ( Max( FirstVNF_RAM_Server,AMS ) / ( ( FirstVNF_CPU_Server - MRS ) + ( CRS + FirstVNF_RAM_Server ) ) ) * Const ) ) ) ) / ( MDR * RRS ) )", "choosing": "( Min( Max( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ),( MUM - DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( ( MUM + RCSe ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.4663322485001201}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( ( Const / FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( ( MUM * ( Min( ( RMSe / MUM ) ,DS ) + ( RCSe - RRSe ) ) ),( ( MUR / MUM ) * ( MUR - CS ) ) )", "obj1": 0.9665354330708661, "obj2": 0.02905721500933477}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "Max( Max( RMSe,( Max( DS,MUC ) - MUR ) ),Min( ( MUR / ( RCSe - ( RRSe / Min( RRSe ,CS ) ) ) ) ,( MUR - CS ) ) )", "obj1": 0.968503937007874, "obj2": 0.02403843059799588}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7153306726354086}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( Max( DS,MUC ) - MUC ),RMSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( MUR - CS ) ) )", "obj1": 0.968503937007874, "obj2": 0.02403843059799588}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6003854165589282}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5925443438226544}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) ) ,Const ) / Min( ACS ,AMS ) ) ,( CRS / PN ) )", "choosing": "( ( ( Max( RCSe,MUR ) * Min( MUC ,MUC ) ) * ( ( Min( ( MUC + ( MLU + RCSe ) ) ,( CS / RCSe ) ) + DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( RMSe / ( DS * MUR ) ) - ( MUR / MUR ) ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.05516534849451721}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / MRS ) + FirstVNF_RAM_Server ) ) * Min( MRS ,( FirstVNF_CPU_Server + ( Min( MDR ,FirstVNF_CPU_Server ) - AMS ) ) ) )", "choosing": "( ( ( ( CS + Max( ( ( RCSe * MUM ) + DS ),( RCSe / RCSe ) ) ) * Min( MLU ,MUC ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9350393700787402, "obj2": 0.05905547944592748}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( ( ( RRS * ( ( ( FirstVNF_Mem_Server / BR ) + FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( Min( Max( Max( RCSe,( MUC / ( MUC - RCSe ) ) ),MLU ) ,RCSe ),MUM ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe - DS ) ) - MUC ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5963550523884077}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem / PN ) )", "choosing": "Max( ( ( Min( MUM ,MUC ) / MUC ) * ( Min( MUC ,DS ) - ( MLU / CS ) ) ),( DS / RCSe ) )", "obj1": 0.9330708661417323, "obj2": 0.060581973201784184}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Const + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.16169367532040943}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}], "19": [{"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / RRS ) / ( ( ( ( ( Const - PN ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( MUM - ( MUM * Min( MLU ,RRSe ) ) ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * Min( ( ( MLU * Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) / MLU ) ,Max( RMSe,( Max( Max( RMSe,RMSe ),Min( ( RCSe / RMSe ) ,MUC ) ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.6771653543307087, "obj2": 0.22623924861093023}, {"determining": "( ( MRS - FirstVNF_RAM ) / Min( ( FirstVNF_Mem_Server + ( ( DDR / MDR ) / Min( DDR ,CRS ) ) ) ,Const ) )", "choosing": "( Max( RMSe,RCSe ) * Max( MUC,DS ) )", "obj1": 0.7165354330708661, "obj2": 0.1996350706862322}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * FirstVNF_RAM )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3405511811023622, "obj2": 0.5318759643051816}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.5511828888253992}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.07082979243723458}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "( ( ( MDR + AMS ) / DDR ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Max( ( ( ( MLU * Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) / MLU ) / DS ),( DS / RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7996657649530876}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Max( FirstVNF_CPU,PN ) / ( ( ARS + ( PN - Min( ACS ,FirstVNF_Mem ) ) ) * MDR ) )", "choosing": "Max( Min( Min( RCSe ,( Min( Min( ( ( MUR / RMSe ) * ( RMSe / MUR ) ) ,RCSe ) ,( ( RCSe * ( RRSe * RCSe ) ) - RMSe ) ) - MUR ) ) ,( ( MUR / RRSe ) - MUR ) ),( RCSe / DS ) )", "obj1": 0.37598425196850394, "obj2": 0.5220831026499378}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8208661417322834, "obj2": 0.14695547269732817}, {"determining": "( ( Const - PN ) / ( ( Max( ( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + Max( MDR,ARS ) ) - FirstVNF_Mem ),PN ) - ( Const * FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM + MUR ) ) ) ,( MLU / MLU ) ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) - ( MLU + CS ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6045814808718419}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "Max( ( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) ),( DS / RCSe ) )", "obj1": 0.3799212598425197, "obj2": 0.5169334680450371}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.8661417322834646, "obj2": 0.12784851923036686}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( FirstVNF_RAM * Min( PN ,AMS ) ) + Max( ACS,Max( DDR,FirstVNF_CPU_Server ) ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUC / ( MUM * Min( CS ,RMSe ) ) ),( MUM * RMSe ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( ( Min( RCSe ,MLU ) + ( RRSe / Max( Min( MUR ,RMSe ),MUR ) ) ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + CS ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.14232217767122396}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( ( AMS / FirstVNF_CPU_Server ) / CRS ) + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5879695374783035}, {"determining": "( ( MDR + ( ( Const + ( ( DDR + ( FirstVNF_RAM_Server * Min( FirstVNF_RAM_Server ,ACS ) ) ) / ( FirstVNF_Mem * CRS ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe + CS ) ) + ( RCSe / Min( RCSe ,RMSe ) ) ) ) ) ,( ( ( DS * ( Min( MLU ,MUM ) - DS ) ) + Min( RCSe ,RCSe ) ) * DS ) ) - ( MUM - MUM ) )", "obj1": 0.297244094488189, "obj2": 0.5719571389699679}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "( ( ( ( ( ( RRS / ( Min( Const ,AMS ) + ( FirstVNF_Mem_Server + RRS ) ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( RCSe / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.38188976377952755, "obj2": 0.5028126725324437}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7153306726354086}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.6003854165589282}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) ) ,Const ) / Min( ACS ,AMS ) ) ,( CRS / PN ) )", "choosing": "( ( ( Max( RCSe,MUR ) * Min( MUC ,MUC ) ) * ( ( Min( ( MUC + ( MLU + RCSe ) ) ,( CS / RCSe ) ) + DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( RMSe / ( DS * MUR ) ) - ( MUR / MUR ) ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( BR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( CS - MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06697034433793256}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.05516534849451721}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Min( ( MRS - FirstVNF_CPU ) ,ACS ) ,CRS ) ) ) + Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / ( RCSe * ( MUM / DS ) ) ) ,MUM ) / MUR ) ) / ( MUM - DS ) ),( RRSe / RRSe ) )", "obj1": 0.5039370078740157, "obj2": 0.29064407911528717}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / MRS ) + FirstVNF_RAM_Server ) ) * Min( MRS ,( FirstVNF_CPU_Server + ( Min( MDR ,FirstVNF_CPU_Server ) - AMS ) ) ) )", "choosing": "( ( ( ( CS + Max( ( ( RCSe * MUM ) + DS ),( RCSe / RCSe ) ) ) * Min( MLU ,MUC ) ) + ( MUR - MUR ) ) * DS )", "obj1": 0.9350393700787402, "obj2": 0.05905547944592748}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem / PN ) )", "choosing": "Max( ( ( Min( MUM ,MUC ) / MUC ) * ( Min( MUC ,DS ) - ( MLU / CS ) ) ),( DS / RCSe ) )", "obj1": 0.9330708661417323, "obj2": 0.060581973201784184}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5789052416980828}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( RRSe * MUC ) ) + Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.3838582677165354, "obj2": 0.4935002083469355}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,( MLU + CS ) ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7153306726354086}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.15487931311723174}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( Min( Min( ( DDR + CRS ) ,Const ) ,FirstVNF_RAM_Server ) / ACS ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR / FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( ( Max( MLU,Max( MUM,MUR ) ) * RRSe ) - RCSe ),Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6189295313365513}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "( ( ( ( ( ( ACS * Min( PN ,FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( MRS / ACS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.33661417322834647, "obj2": 0.5360715059214292}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( RCSe / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7362204724409449, "obj2": 0.19689212026068859}, {"determining": "Min( FirstVNF_RAM_Server ,( ( CRS / Max( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU ) ) ) + MRS ),( FirstVNF_CPU + Const ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUM ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MUR + MLU ) ) / ( Min( ( RMSe / RRSe ) ,MUR ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( MRS * FirstVNF_RAM_Server ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( FirstVNF_CPU * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( Const - AMS ) )", "choosing": "( Max( MUC,( MUM * ( MUM - RRSe ) ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem + MRS ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( MUM ,CS ),( MLU / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "Min( AMS ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8188976377952756, "obj2": 0.14905396495215192}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.02331155113414888}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( Min( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_RAM ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) ,Min( ( ( FirstVNF_RAM_Server - CRS ) / Const ) ,Const ) ) / Const ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * Const ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),( CS / MLU ) ) ) - ( ( Max( RCSe,MUC ) - ( Max( ( MUM + ( RCSe * MUM ) ),( CS + RRSe ) ) - RCSe ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( ( DDR + Const ) * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( MLU ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM_Server ,( ( CRS / Max( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( MRS * RRS ) ) ) + MRS ),( FirstVNF_CPU + Const ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ),( DS * CS ) ) * ( ( Min( ( RMSe / RRSe ) ,MUR ) * MUR ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ARS ) / ( ( ( ( Max( ARS,FirstVNF_RAM ) * ( ( ( MRS * FirstVNF_RAM ) / Min( FirstVNF_Mem ,CRS ) ) - FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( MDR * MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),( CS / MLU ) ) ) - ( ( Max( RCSe,MUC ) - ( Max( ( MUM + ( RCSe * MUM ) ),RCSe ) - RCSe ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( FirstVNF_Mem * ( Const / ( BR * AMS ) ) ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( RRSe - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( Min( MUM ,( ( MUM + ( ( RMSe - RCSe ) + RMSe ) ) * MLU ) ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5620838772941554}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.8700787401574803, "obj2": 0.11103171542481444}], "20": [{"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( ( DDR + Const ) * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "Max( ( ( ( MUM / RRSe ) + ( Min( ( Min( RMSe ,( CS / DS ) ) / ( ( RMSe * MUR ) / MUM ) ) ,Min( RRSe ,( CS - MLU ) ) ) / MUR ) ) / ( MUM / DS ) ),( CS * RRSe ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem + MRS ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( MUM ,CS ),( MLU / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.6771653543307087, "obj2": 0.22623924861093023}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( MRS - FirstVNF_RAM ) / Min( ( FirstVNF_Mem_Server + ( ( DDR / MDR ) / Min( DDR ,CRS ) ) ) ,Const ) )", "choosing": "( Max( RMSe,RCSe ) * Max( MUC,DS ) )", "obj1": 0.7165354330708661, "obj2": 0.1996350706862322}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / Min( CRS ,FirstVNF_CPU ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const - FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( MLU - ( MUC + ( RCSe / RMSe ) ) ),( RRSe / ( Min( RCSe ,RCSe ) + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5354170611837284}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.15487931311723174}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( RRSe * MUC ) ) + Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.3838582677165354, "obj2": 0.4935002083469355}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,FirstVNF_Mem ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2963555756251569}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * FirstVNF_RAM )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3405511811023622, "obj2": 0.5318759643051816}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.02331155113414888}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0646432036184827}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "Min( Min( Max( ( ( FirstVNF_RAM_Server * PN ) / PN ),Max( FirstVNF_RAM_Server,BR ) ) ,( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM * MDR ) ) )", "choosing": "( Min( Max( Max( DS,( RMSe + ( DS * ( Min( RMSe ,DS ) * ( DS - MLU ) ) ) ) ),Max( DS,MLU ) ) ,Max( Min( MUR ,RCSe ),( RCSe / CS ) ) ) - ( MLU + MUR ) )", "obj1": 0.84251968503937, "obj2": 0.14014998088777486}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( RCSe / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7362204724409449, "obj2": 0.19689212026068859}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( AMS ,( ( AMS / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( RRSe * ( MUR * Min( MLU ,RMSe ) ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUR + RCSe ) + Max( MLU,RRSe ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7913385826771654, "obj2": 0.15219696882049283}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.8700787401574803, "obj2": 0.11103171542481444}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ( FirstVNF_RAM + MDR ) ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,( MUM / MUR ) ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8188976377952756, "obj2": 0.1480597342766094}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( ( ( ( MRS / FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) ) / ( ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / ( FirstVNF_CPU_Server + Min( AMS ,ACS ) ) ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,Min( RRSe ,( CS + MLU ) ) ) / ( MUC * Min( ( Min( RRSe ,MLU ) - MUM ) ,CS ) ) ) ),DS ) * DS )", "obj1": 0.8582677165354331, "obj2": 0.13382429144787705}, {"determining": "( ( ( ( ( ( RRS / MRS ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( ( ( RCSe * MUM ) + DS ) / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.38188976377952755, "obj2": 0.5008738862935337}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Const - PN ) / ( ( Max( PN,( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) + ( ( MDR + FirstVNF_RAM_Server ) - AMS ) ) - FirstVNF_Mem ) ) - ( Const * FirstVNF_Mem ) ) * MDR ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5789052416980828}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.12598425196850394, "obj2": 0.7797465377309848}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( ( AMS / FirstVNF_CPU_Server ) / CRS ) + MDR ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5879695374783035}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - Min( ( ( BR + CRS ) - DDR ) ,BR ) ) / Min( MRS ,PN ) ) * MDR ) ) )", "choosing": "( Max( ( RMSe / RCSe ),( DS * CS ) ) * ( ( DS * ( ( Min( RMSe ,RRSe ) / DS ) / ( MUC / ( DS * ( Min( MUC ,MUC ) * DS ) ) ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) ) ,Const ) / Min( ACS ,AMS ) ) ,( CRS / PN ) )", "choosing": "( ( ( Max( RCSe,MUR ) * Min( MUC ,MUC ) ) * ( ( Min( ( MUC + ( MLU + RCSe ) ) ,( CS / RCSe ) ) + DS ) - ( MLU + CS ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( RMSe / ( DS * MUR ) ) - ( MUR / MUR ) ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9429133858267716, "obj2": 0.04105617422186424}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6189295313365513}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( FirstVNF_RAM * Min( PN ,AMS ) ) + Max( ACS,Max( DDR,FirstVNF_CPU_Server ) ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUC / ( MUM * Min( CS ,RMSe ) ) ),( MUM * RMSe ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( ( Min( RCSe ,MLU ) + ( RRSe / Max( Min( MUR ,RMSe ),MUR ) ) ) + ( ( MUC + ( RCSe - DS ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + CS ) ) ) )", "obj1": 0.8267716535433071, "obj2": 0.14232217767122396}, {"determining": "Min( ( ( FirstVNF_CPU / CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( MDR * BR ) ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS + RMSe ) * Min( MLU ,MUM ) ) + Max( Min( RCSe ,RRSe ),MUR ) ) * DS )", "obj1": 0.8681102362204725, "obj2": 0.12041758666035791}, {"determining": "Min( FirstVNF_RAM_Server ,( ( DDR / MRS ) - Max( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ),CRS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,MLU ) - ( Min( Max( RMSe,( MUC / ( RMSe * RRSe ) ) ) ,RMSe ) * ( RMSe + ( Max( RMSe,( MUM / CS ) ) / ( MUR + MUC ) ) ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.599338314443739}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5880701869584781}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( Min( MUC ,Max( ( RCSe + CS ),MLU ) ) ,RRSe ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( ( FirstVNF_RAM_Server - DDR ),MRS ) ,( RRS + FirstVNF_Mem ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM / PN ) )", "choosing": "( Max( ( ( MUR / RRSe ) + ( ( MUR / Min( ( MUC / ( DS * MUM ) ) ,RCSe ) ) / MUR ) ),DS ) * DS )", "obj1": 0.9409448818897638, "obj2": 0.05268085295541623}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM_Server + AMS ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Const ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( MUM ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MLU ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( Max( FirstVNF_CPU,BR ) / ( ( BR * ( FirstVNF_Mem_Server + Max( PN,FirstVNF_CPU_Server ) ) ) * ( RRS * Max( Const,Min( ARS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Min( Min( MUR ,RMSe ) ,( RCSe / CS ) ) ) - Max( Min( ( MUR / CS ) ,( DS / MUR ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUC ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9488188976377953, "obj2": 0.02331155113414888}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.07082979243723458}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "Min( ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( Const ,ACS ) ) * ( MRS - AMS ) ),Max( ARS,FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( ( Min( CS ,Max( Min( ( RCSe / MUM ) ,( MUR - ( RCSe * DS ) ) ),( MUM - RRSe ) ) ) + ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6224563621948546}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.8641732283464567, "obj2": 0.12845748919267577}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,( AMS * Const ) ) ) ) / ( ( FirstVNF_CPU - ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( Max( DDR,FirstVNF_RAM_Server ) - ARS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "Max( Max( ( Max( MUC,DS ) - MUC ),DS ),Min( ( MUR / Max( Max( RCSe,RMSe ),MUR ) ) ,Max( MUR,MUM ) ) )", "obj1": 0.9271653543307087, "obj2": 0.062493064345928995}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( DDR + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( ( Min( MUR ,MUR ) / ( CS + MUR ) ) + ( Min( RRSe ,( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) / MUC ) ) * DS )", "obj1": 0.8661417322834646, "obj2": 0.12784851923036686}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Min( FirstVNF_CPU_Server ,MRS ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / MRS ) + FirstVNF_RAM_Server ) ) * ( MRS + FirstVNF_RAM ) )", "choosing": "Min( ( Min( CS ,RCSe ) * ( ( RRSe * Min( ( Min( Max( MUM,RCSe ) ,CS ) / RCSe ) ,MUC ) ) * RCSe ) ) ,( DS / MUC ) )", "obj1": 0.9350393700787402, "obj2": 0.058801150590915965}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7153306726354086}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( FirstVNF_CPU * Min( ( Min( PN ,AMS ) * ( FirstVNF_CPU / ( BR / FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( MLU / RMSe ) ),( MLU + RRSe ) ) ) ) ) - ( ( Min( MLU ,MLU ) - ( DS / ( RMSe - RMSe ) ) ) - ( ( MUC + MUM ) - ( RRSe + ( MUM + CS ) ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.1439920697217434}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( DS + MUM ),Max( DS,RMSe ) ) ,Max( Min( MUR ,RMSe ),Max( DS,Max( RCSe,MLU ) ) ) ) - ( MLU + MUR ) )", "obj1": 0.8208661417322834, "obj2": 0.14695547269732817}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29070579901245525}, {"determining": "( ( ( ( FirstVNF_CPU + Min( Max( FirstVNF_CPU_Server,( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) ,( BR + FirstVNF_CPU ) ) ) - ( Const + FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server + Const ) / FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem / PN ) )", "choosing": "Max( ( ( Min( MUM ,MUC ) / MUC ) * ( Min( MUC ,DS ) - ( MLU / CS ) ) ),( DS / RCSe ) )", "obj1": 0.9330708661417323, "obj2": 0.060581973201784184}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( DDR + FirstVNF_CPU_Server ) / Min( MRS ,CRS ) ) ) ,Const ) / ( ( ( ( Const + FirstVNF_CPU ) / FirstVNF_Mem_Server ) - ACS ) - ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( ( RRSe / MLU ),( RRSe * ( ( RMSe * MUM ) + ( RRSe / CS ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.061818476655839213}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}], "21": [{"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( ( ( DDR + Const ) * ( ( Const - Max( RRS,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) / ( PN * PN ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( ( Const / ( FirstVNF_Mem_Server * RRS ) ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( Min( MUC ,DS ) ,MUM ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 0.6279527559055118, "obj2": 0.28548485078817637}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( Min( MUC ,DS ) - ( MLU + CS ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.6771653543307087, "obj2": 0.22623924861093023}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( MRS - FirstVNF_RAM ) / Min( ( FirstVNF_Mem_Server + ( ( DDR / MDR ) / Min( DDR ,CRS ) ) ) ,Const ) )", "choosing": "( Max( RMSe,RCSe ) * Max( MUC,DS ) )", "obj1": 0.7165354330708661, "obj2": 0.1996350706862322}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "Min( Min( ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + ( FirstVNF_RAM_Server / ARS ) ) ) ,AMS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.8700787401574803, "obj2": 0.11103171542481444}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / Min( CRS ,FirstVNF_CPU ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const - FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( MLU - ( MUC + ( RCSe / RMSe ) ) ),( RRSe / ( Min( RCSe ,RCSe ) + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) )", "choosing": "Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5723054827407303}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( AMS ,( ( AMS / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( RRSe * ( MUR * Min( MLU ,RMSe ) ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUR + RCSe ) + Max( MLU,RRSe ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7913385826771654, "obj2": 0.15219696882049283}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0646432036184827}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "Min( ( FirstVNF_RAM + CRS ) ,( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Max( MDR,( ( AMS - Min( PN ,ACS ) ) - DDR ) ) + MDR ) ) ) )", "choosing": "( ( MLU + ( ( MUR * ( RMSe + CS ) ) / MUR ) ) / ( ( MUR + DS ) * CS ) )", "obj1": 0.6377952755905512, "obj2": 0.27281312037812977}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5354170611837284}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( RRS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS / MUC ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9271653543307087, "obj2": 0.038417999430540195}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.15487931311723174}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( FirstVNF_CPU_Server + ( ( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) * ( RRS * FirstVNF_RAM ) ) ) * FirstVNF_RAM )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3405511811023622, "obj2": 0.5318759643051816}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( Const + ( AMS / ( FirstVNF_Mem * CRS ) ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / RRSe ) + ( Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) / MUR ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUM + RCSe ) + ( MUM - CS ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7421259842519685, "obj2": 0.18707971814174484}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( ( Const - ( ( PN / ( ( FirstVNF_CPU * MRS ) + ( DDR * ACS ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Min( BR ,( AMS + FirstVNF_RAM_Server ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( CS - ( RRSe + RRSe ) ) ) ,RCSe ) ) + ( Min( MUC ,( DS * RRSe ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Min( MUC ,Max( Max( RRSe,( ( RMSe * Min( ( RCSe / RRSe ) ,( DS + MLU ) ) ) * Min( DS ,MUM ) ) ),DS ) ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( RRSe * MUC ) ) + Min( ( Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.3838582677165354, "obj2": 0.4935002083469355}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( RCSe / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7362204724409449, "obj2": 0.19689212026068859}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM + MDR ) - Max( AMS,Min( ( Max( Const,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( DDR ,Max( DDR,Const ) ) ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / RCSe ),RMSe ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6403455543997465}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( AMS - AMS ) ) * MDR ) ) ,( Max( MDR,( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Min( MUC ,MUM ) / MUR ) + ( MUR / Min( ( Min( MUR ,( RCSe * MUM ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) ) / Min( MLU ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( Min( ( ( Max( FirstVNF_CPU,MRS ) / Min( ( ACS + CRS ) ,FirstVNF_Mem_Server ) ) / ( ( ( DDR / BR ) * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server * Const ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( Min( ( MUR / ( RCSe - Min( ( ( MUM * RCSe ) - Max( RMSe,DS ) ) ,MUC ) ) ) ,( MUR - CS ) ),RRSe ) / ( RCSe / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.7773762164151616}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( RRS / ( Const / ( FirstVNF_Mem_Server * RRS ) ) ) / ( ( FirstVNF_Mem_Server * AMS ) + ( BR * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1673228346456693, "obj2": 0.6979363882402575}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( ( ( ( ( RRS / MRS ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( CS ,Min( ( ( MLU / MUM ) / Min( MLU ,CS ) ) ,MUM ) ) ) * RCSe ) * RMSe ) ,( DS / MUC ) )", "obj1": 0.3799212598425197, "obj2": 0.5026395013825066}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6189295313365513}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - Min( ( ( BR + CRS ) - DDR ) ,BR ) ) / Min( MRS ,PN ) ) * MDR ) ) )", "choosing": "( Max( ( RMSe / RCSe ),( DS * CS ) ) * ( ( DS * ( ( Min( RMSe ,RRSe ) / DS ) / ( MUC / ( DS * ( Min( MUC ,MUC ) * DS ) ) ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( Max( FirstVNF_CPU,BR ) / ( ( BR * ( FirstVNF_Mem_Server + Max( PN,FirstVNF_CPU_Server ) ) ) * ( RRS * Max( Const,Min( ARS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Min( Min( MUR ,RMSe ) ,( RCSe / CS ) ) ) - Max( Min( ( MUR / CS ) ,( DS / MUR ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUC ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( FirstVNF_Mem ,ACS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( Const - FirstVNF_Mem_Server ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU / ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUM ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( MUM * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "Min( ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( Const ,ACS ) ) * ( MRS - AMS ) ),Max( ARS,FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( ( Min( CS ,Max( Min( ( RCSe / MUM ) ,( MUR - ( RCSe * DS ) ) ),( MUM - RRSe ) ) ) + ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6224563621948546}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( ( ( ( ( RRS / MRS ) - FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,( ACS / MRS ) ) ) + ( Const / DDR ) ) + MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( RRS / FirstVNF_Mem ) ) - ( Max( RRS,ARS ) + ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "Min( ( ( ( RRSe * Min( ( ( ( RCSe * MUM ) + DS ) / RCSe ) ,MUC ) ) * RCSe ) * Min( CS ,RCSe ) ) ,( DS / MUC ) )", "obj1": 0.38188976377952755, "obj2": 0.5008738862935337}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29070579901245525}, {"determining": "( ( RRS / ( ( MRS * MDR ) * MDR ) ) / ( BR / CRS ) )", "choosing": "Max( ( ( MUC * Max( ( ( MLU / MLU ) * RMSe ),Min( DS ,( RMSe + MUR ) ) ) ) - CS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + RMSe ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "Min( FirstVNF_RAM_Server ,( ( DDR / MRS ) - Max( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ),CRS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,MLU ) - ( Min( Max( RMSe,( MUC / ( RMSe * RRSe ) ) ) ,RMSe ) * ( RMSe + ( Max( RMSe,( MUM / CS ) ) / ( MUR + MUC ) ) ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.599338314443739}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.07224587347920379}, {"determining": "( Min( ( RRS / ( AMS + FirstVNF_RAM_Server ) ) ,ARS ) / ( FirstVNF_CPU_Server * PN ) )", "choosing": "( ( Min( ( ( CS + RCSe ) * RMSe ) ,MUC ) / MUR ) - Max( ( RMSe / ( ( Min( RMSe ,( MLU + MUR ) ) / ( Min( ( RMSe / RRSe ) ,( MUR / RRSe ) ) * MUR ) ) - Min( MUC ,( DS + ( RCSe - CS ) ) ) ) ),CS ) )", "obj1": 0.49803149606299213, "obj2": 0.2941288715289299}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( PN - Min( BR ,ACS ) ) * Max( ( ( MDR * ARS ) / FirstVNF_RAM ),MDR ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( RRS * FirstVNF_RAM_Server ) / ( AMS - ACS ) ) )", "choosing": "( ( ( ( MLU / ( MLU + DS ) ) + ( RRSe * MUC ) ) + ( ( MUR + MUR ) - MLU ) ) * DS )", "obj1": 0.3838582677165354, "obj2": 0.4935002083469355}, {"determining": "( ( ( ARS + FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem_Server,MDR ) * DDR ) ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + ( MLU * ( Min( ( MUC * RMSe ) ,Min( MUC ,( MUM / RRSe ) ) ) / ( RCSe - MUR ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.701282940925315}, {"determining": "Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_Mem + CRS ) ) ) ,Const ) )", "choosing": "( Min( Max( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( RMSe / ( DS * MUR ) ) - ( MUR / MUR ) ) ) ),MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( RRSe * MUC ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( RMSe + ( MLU / Max( ( MUM / CS ),RMSe ) ) ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.599338314443739}, {"determining": "Min( FirstVNF_RAM_Server ,( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,( RCSe / RRSe ) ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( Const + CRS ) - Const ) ,Const ) ) * CRS ) ) ,( Max( ( FirstVNF_CPU * ( Min( AMS ,Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUM - ( Min( RCSe ,MUM ) + Max( RCSe,CS ) ) ) - CS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.06876347051667571}, {"determining": "( Min( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem + MRS ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( Min( MUM ,CS ),( MLU / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7701247828137082}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM_Server + AMS ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Const ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( MUM ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MLU ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7701247828137082}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM_Server ,( ( CRS / Max( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU ) ) ) + MRS ),( Const + Const ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MLU ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ),( DS * CS ) ) * ( Min( ( ( RMSe * ( MUR + MUR ) ) * Min( RCSe ,( MUM - RCSe ) ) ) ,DS ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "Min( FirstVNF_RAM_Server ,( ( DDR / MRS ) - Max( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ),CRS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,MLU ) - ( Min( Max( RMSe,( MUC / ( RMSe * RRSe ) ) ) ,RMSe ) * ( RMSe + ( Max( RMSe,( MUM / CS ) ) / ( MUR + MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( RCSe / MUM ) ) - ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.6220472440944882, "obj2": 0.2672450030467468}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.6771653543307087, "obj2": 0.22623924861093023}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( DDR - ARS ) ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) + ( MLU + ( RMSe * CS ) ) ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( MRS - FirstVNF_RAM ) / Min( ( FirstVNF_Mem_Server + ( ( DDR / MDR ) / Min( DDR ,CRS ) ) ) ,Const ) )", "choosing": "( Max( RMSe,RCSe ) * Max( MUC,DS ) )", "obj1": 0.7165354330708661, "obj2": 0.1996350706862322}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / Min( CRS ,FirstVNF_CPU ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const - FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( MLU - ( MUC + ( RCSe / RMSe ) ) ),( RRSe / ( Min( RCSe ,RCSe ) + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,( ( CRS * Max( CRS,BR ) ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe - Min( DS ,RRSe ) ) - DS ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.18694209784694144}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0646432036184827}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( AMS ,( ( AMS / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( RRSe * ( MUR * Min( MLU ,RMSe ) ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUR + RCSe ) + Max( MLU,RRSe ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7913385826771654, "obj2": 0.15219696882049283}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / MUR ) ,( DS / RRSe ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUM ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( RMSe * CS ) + ( Min( MUM ,MUC ) / Min( Min( MUC ,DS ) ,MUM ) ) ) / Min( MUC ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) * MUC ) ) ),RMSe ) )", "obj1": 0.9271653543307087, "obj2": 0.03730674352957367}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.38188976377952755, "obj2": 0.4876279221858736}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_CPU + ARS ),CRS ) ) ) / ( ( Min( PN ,AMS ) / AMS ) / ( FirstVNF_RAM_Server * MDR ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / RCSe ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( Max( MLU,RRSe ),DS ) ),MUR ) ) - MUR ) ) / ( RMSe * RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.766120436303672}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( ( ( Max( Max( ( ( Const + ACS ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) + ( Min( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( MUC + ( ( MUM + MUM ) / ( MUC * Min( ( Min( MUM ,MUC ) - Max( RRSe,MUM ) ) ,( Min( MUC ,CS ) / RMSe ) ) ) ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15884490359192646}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( ( Const - ( ( PN / ( ( ACS * DDR ) + Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_CPU ) * Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_RAM ) ),CRS ) ) / ( DDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( Max( Min( MLU ,MUR ),( DS * ( RMSe * DS ) ) ) ,RCSe ) ) / ( Min( MUC ,MUM ) / MUR ) ) / Min( ( RMSe * CS ) ,( MUR / ( RCSe / DS ) ) ) ),( ( DS / Max( ( RRSe / ( MLU / ( CS - Max( MLU,MUR ) ) ) ),MUM ) ) / MUM ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "( ( MRS + Min( ARS ,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM_Server - Const ) ,ACS ) )", "choosing": "( Min( ( Min( MUC ,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( CS,RCSe ) ) ) - ( ( Min( Min( Max( Max( DS,( RRSe / CS ) ),Max( ( MLU / RRSe ),MUR ) ) ,Max( RMSe,MUM ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.18700787401574803, "obj2": 0.6710767195467522}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( ( ARS * FirstVNF_Mem ),MDR ) * ( PN * Min( BR ,ACS ) ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( RRSe * MUC ) ) + Min( ( Max( Min( ( ( CS * RRSe ) / MUM ) ,( MUR - RCSe ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.3779527559055118, "obj2": 0.5009356565459668}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,( ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) * Max( CRS,BR ) ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS + RMSe ) ),DS ) - ( MLU + CS ) ) * Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( RMSe / ( ( RRSe - Min( DS ,RRSe ) ) - DS ) ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2653447772631398}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( Min( MDR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + RMSe ) * MUR ) - ( ( MUM * DS ) - ( ( MUC + MUM ) - ( RRSe * MUR ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.15487931311723174}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}, {"determining": "( ( BR / RRS ) / ( ( ( ( Const / ( ( Max( FirstVNF_RAM_Server,ACS ) + Max( FirstVNF_Mem,CRS ) ) * Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,DDR ) ) ) - BR ) - ACS ) / ARS ) )", "choosing": "( ( ( ( DS * ( ( ( MUM * ( MLU + RRSe ) ) - MUM ) / CS ) ) * Max( ( RRSe * MUR ),( RCSe + CS ) ) ) - MUR ) * ( ( RCSe + RMSe ) / Max( ( ( MLU / RRSe ) / ( Max( RMSe,MLU ) + ( MUR + ( RCSe * Max( RMSe,RRSe ) ) ) ) ),MUR ) ) )", "obj1": 0.23622047244094488, "obj2": 0.6124387724529993}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( Max( CS,MUC ),( RMSe - RRSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,RRSe ) ) ),MUR ) ) - MUR ) ) / Max( Min( ( MUR / ( RCSe - ( RRSe / CS ) ) ) ,( MUR - CS ) ),RCSe ) )", "obj1": 0.6456692913385826, "obj2": 0.2555350165611966}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( Const ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / Min( Min( MUC ,DS ) ,MUM ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( Min( MUC ,DS ) - ( MLU + CS ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( ( ( Max( FirstVNF_CPU,MRS ) / Min( ( ACS + CRS ) ,FirstVNF_Mem_Server ) ) / ( ( ( DDR / BR ) * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server * Const ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( Min( ( MUR / ( RCSe - Min( ( ( MUM * RCSe ) - Max( RMSe,DS ) ) ,MUC ) ) ) ,( MUR - CS ) ),RRSe ) / ( RCSe / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.7773762164151616}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6189295313365513}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.24803149606299213, "obj2": 0.5903091482765326}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM_Server + AMS ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Const ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( MUM ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MLU ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - Min( ( ( BR + CRS ) - DDR ) ,BR ) ) / Min( MRS ,PN ) ) * MDR ) ) )", "choosing": "( Max( ( RMSe / RCSe ),( DS * CS ) ) * ( ( DS * ( ( Min( RMSe ,RRSe ) / DS ) / ( MUC / ( DS * ( Min( MUC ,MUC ) * DS ) ) ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( ( Const - ( ( PN / ( ( FirstVNF_CPU * MRS ) + ( DDR * ACS ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Min( BR ,( AMS + FirstVNF_RAM_Server ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( CS - ( RRSe + RRSe ) ) ) ,RCSe ) ) + ( Min( MUC ,( DS * RRSe ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Min( MUC ,Max( Max( RRSe,( ( RMSe * Min( ( RCSe / RRSe ) ,( DS + MLU ) ) ) * Min( DS ,MUM ) ) ),DS ) ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "Min( ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( Const ,ACS ) ) * ( MRS - AMS ) ),Max( ARS,FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( ( Min( CS ,Max( Min( ( RCSe / MUM ) ,( MUR - ( RCSe * DS ) ) ),( MUM - RRSe ) ) ) + ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6224563621948546}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6888235553982134}, {"determining": "( ( RRS / ( ( MRS * MDR ) * MDR ) ) / ( BR / CRS ) )", "choosing": "Max( ( ( MUC * Max( ( ( MLU / MLU ) * RMSe ),Min( DS ,( RMSe + MUR ) ) ) ) - CS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + RMSe ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29070579901245525}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.07224587347920379}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( Max( FirstVNF_CPU,BR ) / ( ( BR * ( FirstVNF_Mem_Server + Max( PN,FirstVNF_CPU_Server ) ) ) * ( RRS * Max( Const,Min( ARS ,RRS ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Min( Min( MUR ,RMSe ) ,( RCSe / CS ) ) ) - Max( Min( ( MUR / CS ) ,( DS / MUR ) ),( Max( RMSe,MUR ) / ( Max( MUM,Min( Max( Max( RRSe,RMSe ),( RCSe * MUC ) ) ,( MUM * Min( MUM ,RMSe ) ) ) ) / ( ( CS + RMSe ) * MLU ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5226967659487611}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,Min( PN ,AMS ) ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2935714711667018}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( Const + CRS ) - Const ) ,Const ) ) * CRS ) ) ,( Max( ( FirstVNF_CPU * ( Min( AMS ,Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUM - ( Min( RCSe ,MUM ) + Max( RCSe,CS ) ) ) - CS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.06876347051667571}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7701247828137082}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_CPU_Server ) * ( ( RRS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( ( CRS - BR ) + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( CS * MUC ) ,( RMSe + RMSe ) ) ,RMSe ) ) ) / DS ),Max( Max( MUR,RMSe ),( Min( Min( ( MUC - CS ) ,( RMSe * ( RRSe - MUC ) ) ) ,( RCSe * RMSe ) ) * ( MLU / ( Min( ( MLU * RCSe ) ,MUR ) * DS ) ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "Min( FirstVNF_RAM_Server ,( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( RRS + BR ),CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server + Max( ( CRS / AMS ),FirstVNF_Mem ) ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,( RCSe / RRSe ) ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288308}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( AMS - AMS ) ) * MDR ) ) ,( Max( MDR,( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Min( MUC ,MUM ) / MUR ) + ( MUR / Min( ( Min( MUR ,( RCSe * MUM ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) ) / Min( MLU ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7701247828137082}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,( Max( ( FirstVNF_CPU * Min( ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server * MDR ) * FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.9468503937007874, "obj2": 0.03644559873088108}], "23": [{"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) / ( ACS - AMS ) ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Min( ( ( ( MUC - MLU ) / MUC ) + MUM ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM_Server ,( ( DDR / MRS ) - Max( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),MDR ),CRS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) * ( ( MLU + CS ) - ( Min( MLU ,MLU ) - ( Min( Max( RMSe,( MUC / ( RMSe * RRSe ) ) ) ,RMSe ) * ( RMSe + ( Max( RMSe,( MUM / CS ) ) / ( MUR + MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( MDR + ARS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / MRS ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( MUR,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) ,( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.6062992125984252, "obj2": 0.25525174300747705}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( RRSe,DS ) ) ,( MUM + RRSe ) ) ) ,( MUM + MUM ) ),RMSe ) / Min( RCSe ,MUC ) )", "obj1": 0.65748031496063, "obj2": 0.20977958875581823}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "( Min( ( DDR - FirstVNF_RAM ) ,FirstVNF_Mem ) / ( MRS / ARS ) )", "choosing": "( Max( MUC,Min( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) ,MUM ) ) - Max( ( MUR + ( ( ( Min( ( RCSe * MUR ) ,RCSe ) / RCSe ) + RCSe ) * MLU ) ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.38188976377952755, "obj2": 0.4876279221858736}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_CPU + ARS ),CRS ) ) ) / ( ( Min( PN ,AMS ) / AMS ) / ( FirstVNF_RAM_Server * MDR ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / RCSe ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( Max( MLU,RRSe ),DS ) ),MUR ) ) - MUR ) ) / ( RMSe * RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.766120436303672}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / Min( CRS ,FirstVNF_CPU ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const - FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( MLU - ( MUC + ( RCSe / RMSe ) ) ),( RRSe / ( Min( RCSe ,RCSe ) + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0646432036184827}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,MUC ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.13807689173254203}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.9606299212598425, "obj2": 0.02286566506106561}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),Min( PN ,AMS ) ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( ( MUR / Max( MUR,( ( DS * CS ) * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.27755905511811024, "obj2": 0.5602183716170059}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( AMS ,( ( AMS / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( RRSe * ( MUR * Min( MLU ,RMSe ) ) ) / ( MUM / DS ) ),( ( Min( Min( CS ,( RMSe + ( ( MUR + RCSe ) + Max( MLU,RRSe ) ) ) ) ,MLU ) / MUR ) * RMSe ) )", "obj1": 0.7913385826771654, "obj2": 0.15219696882049283}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( DDR - ARS ) ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) + ( MLU + ( RMSe * CS ) ) ) ),( RRSe / RRSe ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( ( ARS * FirstVNF_Mem ),MDR ) * ( PN * Min( BR ,ACS ) ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( RRSe * MUC ) ) + Min( ( Max( Min( ( ( CS * RRSe ) / MUM ) ,( MUR - RCSe ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.3779527559055118, "obj2": 0.5009356565459668}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( CS * MUM ) ) / MLU ) / CS ) ) / ( ( MUR * MUC ) - ( RMSe / MLU ) ) )", "obj1": 0.9251968503937008, "obj2": 0.055729367654971704}, {"determining": "( ( Const - ( Min( MDR ,ACS ) - ( Min( ( PN / FirstVNF_CPU ) ,( Max( BR,( ACS + FirstVNF_RAM ) ) / CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( Min( ( Max( MUR,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) / MUR ) + ( Min( Max( RCSe,MUC ) ,Min( RMSe ,( ( RRSe * RRSe ) / ( RRSe - MUM ) ) ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( ( DS - CS ) - MLU ) - DS ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030937205714538233}, {"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( RMSe * CS ) + ( Min( MUM ,MUC ) / Min( Min( MUC ,DS ) ,MUM ) ) ) / Min( MUC ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) * MUC ) ) ),RMSe ) )", "obj1": 0.9271653543307087, "obj2": 0.03730674352957367}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ACS / ( BR + ( PN - Min( ACS ,PN ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( MLU * ( RMSe * RCSe ) ) ) ,RCSe ) ) + Max( MLU,( MUC - Min( ( RRSe + RMSe ) ,MUR ) ) ) ) / Min( RRSe ,CS ) ),( ( ( DS + ( Min( ( MUR / Max( RRSe,DS ) ) ,( ( RMSe - CS ) - ( MLU * RRSe ) ) ) - ( CS + MUR ) ) ) / Max( Max( ( RMSe - RRSe ),MUR ),( RCSe / ( ( RRSe + Min( MUC ,DS ) ) + MLU ) ) ) ) - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6110527020669869}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( AMS - AMS ) ) * MDR ) ) ,( Max( MDR,( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Min( MUC ,MUM ) / MUR ) + ( MUR / Min( ( Min( MUR ,( RCSe * MUM ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) ) / Min( MLU ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( BR + CRS ) )", "choosing": "Max( ( ( MUC * Max( ( CS / MUM ),Min( DS ,( RMSe + MUR ) ) ) ) - DS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + MUM ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "( Min( ( ( Max( FirstVNF_CPU,MRS ) / Min( ( ACS + CRS ) ,FirstVNF_Mem_Server ) ) / ( ( ( DDR / BR ) * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server * Const ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( Min( ( MUR / ( RCSe - Min( ( ( MUM * RCSe ) - Max( RMSe,DS ) ) ,MUC ) ) ) ,( MUR - CS ) ),RRSe ) / ( RCSe / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.7773762164151616}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288307997}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.16584412528999284}, {"determining": "( ( ( Max( Max( ( ( Const + ACS ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) + ( Min( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( MUC + ( ( MUM + MUM ) / ( MUC * Min( ( Min( MUM ,MUC ) - Max( RRSe,MUM ) ) ,( Min( MUC ,CS ) / RMSe ) ) ) ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15884490359192646}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.24803149606299213, "obj2": 0.5903091482765326}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MDR ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6189295313365513}, {"determining": "( ( Const - ( ( PN / ( ( FirstVNF_CPU * MRS ) + ( DDR * ACS ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Min( BR ,( AMS + FirstVNF_RAM_Server ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( CS - ( RRSe + RRSe ) ) ) ,RCSe ) ) + ( Min( MUC ,( DS * RRSe ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Min( MUC ,Max( Max( RRSe,( ( RMSe * Min( ( RCSe / RRSe ) ,( DS + MLU ) ) ) * Min( DS ,MUM ) ) ),DS ) ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - Min( ( ( BR + CRS ) - DDR ) ,BR ) ) / Min( MRS ,PN ) ) * MDR ) ) )", "choosing": "( Max( ( RMSe / RCSe ),( DS * CS ) ) * ( ( DS * ( ( Min( RMSe ,RRSe ) / DS ) / ( MUC / ( DS * ( Min( MUC ,MUC ) * DS ) ) ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( Const - ( ( PN / ( ( ACS * DDR ) + Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_CPU ) * Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_RAM ) ),CRS ) ) / ( DDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( Max( Min( MLU ,MUR ),( DS * ( RMSe * DS ) ) ) ,RCSe ) ) / ( Min( MUC ,MUM ) / MUR ) ) / Min( ( RMSe * CS ) ,( MUR / ( RCSe / DS ) ) ) ),( ( DS / Max( ( RRSe / ( MLU / ( CS - Max( MLU,MUR ) ) ) ),MUM ) ) / MUM ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "Min( ( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( Const ,ACS ) ) * ( MRS - AMS ) ),Max( ARS,FirstVNF_RAM ) ) ) ) ,FirstVNF_RAM_Server )", "choosing": "( Max( ( Min( CS ,Max( Min( ( RCSe / MUM ) ,( MUR - ( RCSe * DS ) ) ),( MUM - RRSe ) ) ) + ( MUR - CS ) ),( RMSe * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6224563621948546}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6888235553982134}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "( ( ( ( Min( BR ,PN ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) + Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / RRS ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( ( ( MUC + ( Max( ( ( Max( RMSe,DS ) - RRSe ) * RCSe ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ),( RRSe / ( Min( MUC ,DS ) - ( MLU + CS ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.07224587347920379}, {"determining": "( ( RRS / ( ( MRS * MDR ) * MDR ) ) / ( BR / CRS ) )", "choosing": "Max( ( ( MUC * Max( ( ( MLU / MLU ) * RMSe ),Min( DS ,( RMSe + MUR ) ) ) ) - CS ),( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - MLU ) / MUC ) + RMSe ) ) / ( ( MUC * ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ) / RCSe ) )", "obj1": 0.24606299212598426, "obj2": 0.602397586826207}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29070579901245525}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( Const + CRS ) - Const ) ,Const ) ) * CRS ) ) ,( Max( ( FirstVNF_CPU * ( Min( AMS ,Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUM - ( Min( RCSe ,MUM ) + Max( RCSe,CS ) ) ) - CS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.889763779527559, "obj2": 0.06876347051667571}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) ) / ( ( AMS - Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM - CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7663751583080587}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_RAM ),MRS ),CRS ) - ( CRS / Max( ( ( PN - Min( BR ,ACS ) ) * FirstVNF_RAM ),Max( ARS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),( RCSe * DS ) ) ) / DS ),( DS / RCSe ) ) - ( Max( Max( RCSe,( ( ( MUC + MLU ) / MUC ) / Min( ( RCSe / RRSe ) ,( RRSe / RCSe ) ) ) ),RMSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.1377952755905512, "obj2": 0.7701247828137082}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_CPU_Server ) * ( ( RRS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( MUC,Min( Min( ( CS * MUC ) ,( RMSe + RMSe ) ) ,RMSe ) ) ) / DS ),( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6792979482617608}, {"determining": "( Max( ( FirstVNF_Mem + ( ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) ),( FirstVNF_CPU + DDR ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - RCSe ) / MUC ) + MUM ) ) / ( ( MUC * ( Min( MUC ,DS ) - ( MLU + CS ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 0.5, "obj2": 0.29326224670221385}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( AMS / FirstVNF_Mem ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,( MLU + MLU ) ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}], "24": [{"determining": "( Min( ( FirstVNF_Mem_Server / ( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,Max( MRS,ACS ) ) / FirstVNF_RAM_Server ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( Min( CS ,( CS + RRSe ) ) / Max( Max( ( RRSe - ( Min( Min( Min( CS ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe * CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( DDR ,( Max( ( ( ( FirstVNF_Mem_Server / PN ) * ( RRS * FirstVNF_RAM ) ) + Max( BR,Max( FirstVNF_CPU,BR ) ) ),Const ) / ARS ) ) ) * ( ( ( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) / ( ACS - AMS ) ) - ( Const + FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Min( ( ( ( MUC - MLU ) / MUC ) + MUM ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( MDR + ARS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / MRS ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( MUR,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) ,( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.6062992125984252, "obj2": 0.25525174300747705}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( ( ( ( Min( BR ,PN ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) + Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / RRS ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * ( Max( RMSe,DS ) - RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,( RRSe / ( Min( MUC ,DS ) - ( MLU + CS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4193230273557536}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( RRSe,DS ) ) ,( MUM + RRSe ) ) ) ,( MUM + MUM ) ),RMSe ) / Min( RCSe ,MUC ) )", "obj1": 0.65748031496063, "obj2": 0.20977958875581823}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( PN * ( PN - FirstVNF_CPU_Server ) ) ) ,Const ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * ( RMSe + MUM ) ) ) * ( Min( MUM ,DS ) - ( RCSe + CS ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,( FirstVNF_CPU / ( ( MDR * BR ) + Const ) ) ) ) ),Const ) / ( FirstVNF_Mem - AMS ) )", "choosing": "Max( ( ( MUM / RCSe ) / ( CS * ( MUC / ( RCSe / MUC ) ) ) ),Max( ( RRSe / CS ),Min( MUR ,MUM ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2487479553072636}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.38188976377952755, "obj2": 0.4876279221858736}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ( FirstVNF_CPU + ARS ),CRS ) ) ) / ( ( Min( PN ,AMS ) / AMS ) / ( FirstVNF_RAM_Server * MDR ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / RCSe ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( Max( MLU,RRSe ),DS ) ),MUR ) ) - MUR ) ) / ( RMSe * RCSe ) )", "obj1": 0.14173228346456693, "obj2": 0.766120436303672}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / Min( CRS ,FirstVNF_CPU ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const - FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( MLU - ( MUC + ( RCSe / RMSe ) ) ),( RRSe / ( Min( RCSe ,RCSe ) + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0646432036184827}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,MUC ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.13807689173254203}, {"determining": "( ( Const - ( ( PN * ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( MDR + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( ( MLU + RRSe ) ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RMSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),Min( PN ,AMS ) ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( ( MUR / Max( MUR,( ( DS * CS ) * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.27755905511811024, "obj2": 0.5602183716170059}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "( Min( ( DDR - FirstVNF_RAM ) ,FirstVNF_Mem ) / ( MRS / ARS ) )", "choosing": "( Max( MUC,Min( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) ,MUM ) ) - Max( ( MUR + ( ( ( Min( ( RCSe * MUR ) ,RCSe ) / RCSe ) + RCSe ) * MLU ) ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( ( ARS * FirstVNF_Mem ),MDR ) * ( PN * Min( BR ,ACS ) ) ) ) / Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * ( ( MRS * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "( ( ( ( MUR / ( MLU + DS ) ) + ( RRSe * MUC ) ) + Min( ( Max( Min( ( ( CS * RRSe ) / MUM ) ,( MUR - RCSe ) ),( MUM - RRSe ) ) / DS ) ,( MUR + ( ( RRSe - RMSe ) / Min( ( MLU - MUC ) ,MUR ) ) ) ) ) * DS )", "obj1": 0.3779527559055118, "obj2": 0.5009356565459668}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MLU + ( ( ( MUM * ( CS * MUM ) ) / MLU ) / CS ) ) / ( ( MUR * MUC ) - ( RMSe / MLU ) ) )", "obj1": 0.9251968503937008, "obj2": 0.055729367654971704}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( RMSe * CS ) + ( Min( MUM ,MUC ) / Min( Min( MUC ,DS ) ,MUM ) ) ) / Min( MUC ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) * MUC ) ) ),RMSe ) )", "obj1": 0.9271653543307087, "obj2": 0.03730674352957367}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( AMS - AMS ) ) * MDR ) ) ,( Max( MDR,( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ) ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( Min( MUC ,MUM ) / MUR ) + ( MUR / Min( ( Min( MUR ,( RCSe * MUM ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) ) / Min( MLU ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( Max( FirstVNF_CPU,CRS ) * ( MDR * Max( AMS,Min( Max( FirstVNF_CPU,( FirstVNF_CPU_Server + BR ) ) ,( ( DDR * BR ) * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Max( ( Max( CS,RMSe ) / CS ),RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),Max( ( ( ( Max( MLU,RMSe ) + Max( MLU,RCSe ) ) + RRSe ) - ( ( MUM - Max( MUM,Min( MUM ,( MUR - MUC ) ) ) ) * Max( ( DS * RRSe ),Min( MLU ,Max( MUR,MUM ) ) ) ) ),DS ) )", "obj1": 0.24015748031496062, "obj2": 0.6081271517078384}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) - Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * ( MRS - Const ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + Min( ( ( ( MUR / ( CS / RMSe ) ) + RCSe ) + ( RMSe - RCSe ) ) ,Min( MUM ,( Max( MLU,RCSe ) * MUM ) ) ) ) / MUR ) - ( ( Min( Min( CS ,( MLU - RMSe ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8720472440944882, "obj2": 0.10012651299434919}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Max( ( MUM * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( ( MUR / RRSe ) + Max( Min( MUR ,( DS / RCSe ) ),( MLU + RRSe ) ) ) ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( ( MUC + ( RCSe / MUM ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07596164288307997}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.16584412528999284}, {"determining": "( ( ACS / ( BR + ( PN - Min( ACS ,PN ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( MLU * ( RMSe * RCSe ) ) ) ,RCSe ) ) + Max( MLU,( MUC - Min( ( RRSe + RMSe ) ,MUR ) ) ) ) / Min( RRSe ,CS ) ),( ( ( DS + ( Min( ( MUR / Max( RRSe,DS ) ) ,( ( RMSe - CS ) - ( MLU * RRSe ) ) ) - ( CS + MUR ) ) ) / Max( Max( ( RMSe - RRSe ),MUR ),( RCSe / ( ( RRSe + Min( MUC ,DS ) ) + MLU ) ) ) ) - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6110527020669869}, {"determining": "( ( ( Max( Max( ( ( Const + ACS ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) + ( Min( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( MUC + ( ( MUM + MUM ) / ( MUC * Min( ( Min( MUM ,MUC ) - Max( RRSe,MUM ) ) ,( Min( MUC ,CS ) / RMSe ) ) ) ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15884490359192646}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030937205714538233}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "( ( Const - ( ( PN / ( ( ACS * DDR ) + Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,ARS ) * FirstVNF_CPU ) * Max( Max( BR,( FirstVNF_Mem_Server + FirstVNF_RAM ) ),CRS ) ) / ( DDR * FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( Max( Min( MLU ,MUR ),( DS * ( RMSe * DS ) ) ) ,RCSe ) ) / ( Min( MUC ,MUM ) / MUR ) ) / Min( ( RMSe * CS ) ,( MUR / ( RCSe / DS ) ) ) ),( ( DS / Max( ( RRSe / ( MLU / ( CS - Max( MLU,MUR ) ) ) ),MUM ) ) / MUM ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( Min( ( ( Max( FirstVNF_CPU,MRS ) / Min( ( ACS + CRS ) ,FirstVNF_Mem_Server ) ) / ( ( ( DDR / BR ) * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server * Const ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( Min( ( MUR / ( RCSe - Min( ( ( MUM * RCSe ) - Max( RMSe,DS ) ) ,MUC ) ) ) ,( MUR - CS ) ),RRSe ) / ( RCSe / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.7773762164151616}, {"determining": "( ( Const - ( ( PN / ( ( FirstVNF_CPU * MRS ) + ( DDR * ACS ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Min( BR ,( AMS + FirstVNF_RAM_Server ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( CS - ( RRSe + RRSe ) ) ) ,RCSe ) ) + ( Min( MUC ,( DS * RRSe ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Min( MUC ,Max( Max( RRSe,( ( RMSe * Min( ( RCSe / RRSe ) ,( DS + MLU ) ) ) * Min( DS ,MUM ) ) ),DS ) ) )", "obj1": 0.9488188976377953, "obj2": 0.023311551134148872}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( FirstVNF_RAM_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "( Max( ( ( MUM - MUC ) * ( Max( CS,DS ) * MUM ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5107596180576303}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( Max( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ) / FirstVNF_RAM_Server ) ),Const ) / ( ACS - AMS ) )", "choosing": "( ( Max( ( ( MUC * Max( Min( DS ,RMSe ),( MUM - CS ) ) ) / DS ),( DS / RCSe ) ) + ( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6175662403931872}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - Min( ( ( BR + CRS ) - DDR ) ,BR ) ) / Min( MRS ,PN ) ) * MDR ) ) )", "choosing": "( Max( ( RMSe / RCSe ),( DS * CS ) ) * ( ( DS * ( ( Min( RMSe ,RRSe ) / DS ) / ( MUC / ( DS * ( Min( MUC ,MUC ) * DS ) ) ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.8838582677165354, "obj2": 0.08975590203868734}, {"determining": "( ( Min( Max( ( MRS + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( Max( ( RRS / ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),MDR ) - ( Const / FirstVNF_Mem ) ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR - FirstVNF_RAM_Server ) ) * ( ( DDR + Max( ACS,CRS ) ) - ( ( RRS + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( FirstVNF_CPU + ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) ) - ( ( ACS / PN ) - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( Max( RRSe,RCSe ) ,RRSe ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) - Max( RRSe,CS ) ),( RRSe - ( MUM + Min( MUM ,RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.0970409137698081}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( Const - ( Min( MDR ,ACS ) - ( Min( ( PN / FirstVNF_CPU ) ,( Max( BR,( ACS + FirstVNF_RAM ) ) / CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( Min( ( Max( MUR,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) / MUR ) + ( Min( Max( RCSe,MUC ) ,Min( RMSe ,( ( RRSe * RRSe ) / ( RRSe - MUM ) ) ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( ( DS - CS ) - MLU ) - DS ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030937205714538233}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6888235553982134}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.24803149606299213, "obj2": 0.5903091482765326}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( Max( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( MUC ,MUM ) / MUR ) + ( MUR / Min( ( Min( MUR ,( RCSe * MUM ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) ) / Min( MLU ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.4940944881889764, "obj2": 0.2963771050174801}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( AMS * Min( PN ,AMS ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( ( MRS + CRS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( MUM / CS ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Max( DS,Max( MLU,MUR ) ) ),MUR ) ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7727382225770474}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "Min( ( RRS * Const ) ,Min( Max( FirstVNF_CPU,CRS ) ,( ( ( Max( CRS,( FirstVNF_Mem + FirstVNF_Mem ) ) - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( MUM * MUM ),DS ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.8877952755905512, "obj2": 0.06973022601116881}, {"determining": "( Max( ( FirstVNF_Mem + ( ( ( BR * ( Max( PN,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) ),( FirstVNF_CPU + DDR ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( MUC - RCSe ) / MUC ) + MUM ) ) / ( ( MUC * ( Min( MUC ,DS ) - ( MLU + CS ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 0.5, "obj2": 0.29326224670221385}, {"determining": "Min( ( ( MDR * MRS ) / ( ( FirstVNF_Mem_Server / ( ACS * MRS ) ) + ( Min( ( Min( Min( ARS ,FirstVNF_RAM ) ,RRS ) + MRS ) ,Const ) * CRS ) ) ) ,( ( ( Min( MDR ,CRS ) / ( ACS - AMS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) ) * ( ( ( Const - ARS ) * MDR ) / PN ) ) ) / Min( Min( AMS ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( ( MUR * MUC ) - ( MUC / MLU ) ) )", "obj1": 0.44881889763779526, "obj2": 0.42097084120681333}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( Max( ( Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) * RMSe ),( MUC / ( MUM * Min( CS ,RMSe ) ) ) ) / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + RMSe ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29070579901245525}], "25": [{"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( AMS + Const ) / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,Max( MRS,ACS ) ) / FirstVNF_RAM_Server ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( Min( CS ,( CS + RRSe ) ) / Max( Max( ( RRSe - ( Min( Min( Min( CS ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe * CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( MDR + ARS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / MRS ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( MUR,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) ,( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.6062992125984252, "obj2": 0.25525174300747705}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "( ( ( ( Min( BR ,PN ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) + Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / RRS ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * ( Max( RMSe,DS ) - RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,( RRSe / ( Min( MUC ,DS ) - ( MLU + CS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4193230273557536}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( ( MUM * RCSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.0646432036184827}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( Min( ARS ,ARS ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.17198076396620218}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.38188976377952755, "obj2": 0.4876279221858736}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( ( Const - ( ( PN * ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( MDR + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( ( MLU + RRSe ) ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RMSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( PN * ( PN - FirstVNF_CPU_Server ) ) ) ,Const ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * ( RMSe + MUM ) ) ) * ( Min( MUM ,DS ) - ( RCSe + CS ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( ( FirstVNF_CPU * Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem_Server ) ) ) - Const ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( RCSe ,( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) / MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.021612299955294186}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( MUC ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.49606043107276643}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( Max( FirstVNF_CPU,CRS ) * ( MDR * Max( AMS,Min( Max( FirstVNF_CPU,( FirstVNF_CPU_Server + BR ) ) ,( ( DDR * BR ) * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Max( ( Max( CS,RMSe ) / CS ),RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),Max( ( ( ( Max( MLU,RMSe ) + Max( MLU,RCSe ) ) + RRSe ) - ( ( MUM - Max( MUM,Min( MUM ,( MUR - MUC ) ) ) ) * Max( ( DS * RRSe ),Min( MLU ,Max( MUR,MUM ) ) ) ) ),DS ) )", "obj1": 0.24015748031496062, "obj2": 0.6081271517078384}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( RMSe * CS ) + ( Min( MUM ,MUC ) / Min( Min( MUC ,DS ) ,MUM ) ) ) / Min( MUC ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) * MUC ) ) ),RMSe ) )", "obj1": 0.9271653543307087, "obj2": 0.03730674352957367}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( ( Max( CS,RMSe ) / CS ) ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5746905880247565}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "( Min( ( ( Max( FirstVNF_CPU,MRS ) / Min( ( ACS + CRS ) ,FirstVNF_Mem_Server ) ) / ( ( ( DDR / BR ) * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server * Const ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( Min( ( MUR / ( RCSe - Min( ( ( MUM * RCSe ) - Max( RMSe,DS ) ) ,MUC ) ) ) ,( MUR - CS ) ),RRSe ) / ( RCSe / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.7773762164151616}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "( Max( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,( ( MDR * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ) / FirstVNF_RAM_Server ) ),Const ) / ( ACS - AMS ) )", "choosing": "( ( Max( ( ( MUC * Max( Min( DS ,RMSe ),( MUM - CS ) ) ) / DS ),( DS / RCSe ) ) + ( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2283464566929134, "obj2": 0.6175662403931872}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.16584412528999284}, {"determining": "( ( ACS / ( BR + ( PN - Min( ACS ,PN ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( MLU * ( RMSe * RCSe ) ) ) ,RCSe ) ) + Max( MLU,( MUC - Min( ( RRSe + RMSe ) ,MUR ) ) ) ) / Min( RRSe ,CS ) ),( ( ( DS + ( Min( ( MUR / Max( RRSe,DS ) ) ,( ( RMSe - CS ) - ( MLU * RRSe ) ) ) - ( CS + MUR ) ) ) / Max( Max( ( RMSe - RRSe ),MUR ),( RCSe / ( ( RRSe + Min( MUC ,DS ) ) + MLU ) ) ) ) - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6110527020669869}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( ( Max( Max( ( ( Const + ACS ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) + ( Min( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( MUC + ( ( MUM + MUM ) / ( MUC * Min( ( Min( MUM ,MUC ) - Max( RRSe,MUM ) ) ,( Min( MUC ,CS ) / RMSe ) ) ) ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15884490359192646}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( ( Max( CS,RMSe ) / ( CS + ( RRSe - RCSe ) ) ) ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6361553650333363}, {"determining": "( ( Const - ( Min( MDR ,ACS ) - ( Min( ( PN / FirstVNF_CPU ) ,( Max( BR,( ACS + FirstVNF_RAM ) ) / CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( Min( ( Max( MUR,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) / MUR ) + ( Min( Max( RCSe,MUC ) ,Min( RMSe ,( ( RRSe * RRSe ) / ( RRSe - MUM ) ) ) ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( ( DS - CS ) - MLU ) - DS ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030937205714538233}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( FirstVNF_RAM_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "( Max( ( ( MUM - MUC ) * ( Max( CS,DS ) * MUM ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5107596180576303}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),Min( PN ,AMS ) ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( ( MUR / Max( MUR,( ( DS * CS ) * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.27755905511811024, "obj2": 0.5602183716170059}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( ( CRS / Max( ARS,( BR * FirstVNF_RAM ) ) ) - ( ( Min( ( CRS / RRS ) ,ARS ) - ( FirstVNF_CPU_Server * PN ) ) - Min( PN ,( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) ) ) - ( FirstVNF_Mem + Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( Max( ( ( CS + ( RRSe - RCSe ) ) * MUM ),( ( ( ( RRSe - DS ) + RMSe ) - MUC ) + RCSe ) ),RRSe ) / MLU ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.030937205714538233}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( PN * ( Max( FirstVNF_Mem_Server,DDR ) * FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server + ( Const - BR ) ) )", "choosing": "( Max( MLU,RRSe ) * MLU )", "obj1": 0.11220472440944881, "obj2": 0.810831003630471}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( MLU + Max( ( MLU - ( DS - CS ) ),( Min( MUC ,MUM ) * MUC ) ) ) - ( ( Min( Min( CS ,( RMSe / MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( CS / RRSe ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8661417322834646, "obj2": 0.10239116775227299}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) - Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * ( MRS - Const ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + Min( ( ( ( MUR / ( CS / RMSe ) ) + RCSe ) + ( RMSe - RCSe ) ) ,Min( MUM ,( Max( MLU,RCSe ) * MUM ) ) ) ) / MUR ) - ( ( Min( Min( CS ,( MLU - RMSe ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8720472440944882, "obj2": 0.10012651299434919}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( RRS * Const ) ,Min( Max( FirstVNF_CPU,CRS ) ,( ( ( Max( CRS,( FirstVNF_Mem + FirstVNF_Mem ) ) - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( MUM * MUM ),DS ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.8877952755905512, "obj2": 0.06973022601116881}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6888235553982134}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / Min( CRS ,FirstVNF_CPU ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const - FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( MLU - ( MUC + ( RCSe / RMSe ) ) ),( RRSe / ( Min( RCSe ,RCSe ) + MUM ) ) )", "obj1": 0.7539370078740157, "obj2": 0.17067348066013346}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),Min( ARS ,AMS ) ) ,AMS ) ) ,FirstVNF_Mem_Server ) ,Const ) / ( FirstVNF_Mem + ( ( DDR * ARS ) - ( Const + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR / Min( ( ( DS * ( RMSe * DS ) ) / Min( RRSe ,MLU ) ) ,Max( CS,DS ) ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / ( MUC * ( MUC + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.48995864065365197}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.24803149606299213, "obj2": 0.5903091482765326}, {"determining": "( Max( Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( MUC ,MUM ) / MUR ) + ( MUR / Min( ( Min( MUR ,( RCSe * MUM ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) ) / Min( MLU ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.4940944881889764, "obj2": 0.2963771050174801}, {"determining": "( Max( ( MRS / ARS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( MLU + MUM ) + Max( MUC,RMSe ) ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.8128655639462241}, {"determining": "( ( AMS - ( FirstVNF_CPU_Server + ACS ) ) / ( AMS * ( FirstVNF_Mem_Server + CRS ) ) )", "choosing": "Max( ( ( MUC * Max( Min( ( DS / ( DS / MUM ) ) ,Max( ( Max( RCSe,RMSe ) - DS ),MUM ) ),Min( Min( ( MUC * MLU ) ,( RCSe + RMSe ) ) ,RMSe ) ) ) / DS ),( DS / RCSe ) )", "obj1": 0.10433070866141732, "obj2": 0.8140377847196631}], "26": [{"determining": "( ( Min( FirstVNF_CPU ,ARS ) - ( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( ( MUM / DS ),MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( AMS + Const ) / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( ( ( ( Min( BR ,PN ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) + Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / RRS ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * ( Max( RMSe,DS ) - RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,( RRSe / ( Min( MUC ,DS ) - ( MLU + CS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4193230273557536}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,( ( CRS * Max( CRS,BR ) ) / Min( ARS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) * Min( Max( RCSe,MUR ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( RMSe / ( ( RRSe - Min( DS ,RRSe ) ) - DS ) ) * RRSe ) ) - ( ( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.6377952755905512, "obj2": 0.2484598483753567}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( MDR + ARS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / MRS ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( MUR,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) ,( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.6062992125984252, "obj2": 0.25525174300747705}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / ARS ) ,( ( Min( Min( AMS ,CRS ) ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS * ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( Max( MUM,( ( ( CS * RRSe ) / RRSe ) * ( ( RCSe + CS ) / ( MLU * RMSe ) ) ) ) / MLU ),MUC ),MUR ) )", "obj1": 0.5590551181102362, "obj2": 0.25985732369733794}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( BR ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * PN ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RMSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,( MUC - RCSe ) ) - ( RCSe + DS ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2737251092484688}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( FirstVNF_CPU / ( BR * BR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / RCSe ) ) ,( ( MUR * Min( ( RCSe * Min( MUR ,DS ) ) ,RRSe ) ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) - ( RRSe + ( Min( MUC ,DS ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8582677165354331, "obj2": 0.10897064897688982}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( ( Const - Const ),Const ) * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) + ( Min( RCSe ,( Max( CS,RMSe ) / CS ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7356175238548027}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "( ( ( Max( Max( ( ( Const + ACS ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) + ( Min( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( MUC + ( ( MUM + MUM ) / ( MUC * Min( ( Min( MUM ,MUC ) - Max( RRSe,MUM ) ) ,( Min( MUC ,CS ) / RMSe ) ) ) ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15884490359192646}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.38188976377952755, "obj2": 0.4876279221858736}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "( ( ( FirstVNF_CPU * Max( FirstVNF_CPU,Min( RRS ,FirstVNF_Mem_Server ) ) ) - Const ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( RCSe ,( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) / MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.021612299955294186}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ( FirstVNF_Mem * PN ) * FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_CPU / PN ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU ) * DDR ) ) ) ) - ( ( FirstVNF_CPU * ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / Max( MUR,Max( MUR,MUM ) ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MLU / ( MUR * ( ( ( RMSe * RRSe ) / ( ( MLU - RMSe ) - RRSe ) ) + ( RRSe / ( MUM / ( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * ( Min( ( ( RMSe * ( MUR + MUR ) ) * Min( RCSe ,( MUM - ( Min( RCSe ,MUM ) + MUC ) ) ) ) ,DS ) / MUC ) )", "obj1": 0.9133858267716536, "obj2": 0.06306349642437188}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( Max( ( Min( ACS ,PN ) + ( DDR / FirstVNF_CPU_Server ) ),FirstVNF_Mem ) + ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( ( ( MUM - MUM ) * MUC ) - Min( Min( Min( MUM ,( ( MUC + RRSe ) + ( DS / MLU ) ) ) ,MLU ) ,DS ) ) + CS ) / Max( Max( ( MUR / ( RCSe - Min( RRSe ,CS ) ) ),( CS - MUR ) ),RCSe ) )", "obj1": 0.12992125984251968, "obj2": 0.7740576273439977}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.12007874015748031, "obj2": 0.7896754097643017}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( PN * ( PN - FirstVNF_CPU_Server ) ) ) ,Const ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * ( RMSe + MUM ) ) ) * ( Min( MUM ,DS ) - ( RCSe + CS ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( ( PN * FirstVNF_RAM_Server ) + ( ( CRS - BR ) + FirstVNF_Mem_Server ) ) / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( ( RCSe * RMSe ) / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3700787401574803, "obj2": 0.49408890811563194}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( Max( FirstVNF_CPU,CRS ) * ( MDR * Max( AMS,Min( Max( FirstVNF_CPU,( FirstVNF_CPU_Server + BR ) ) ,( ( DDR * BR ) * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Max( ( Max( CS,RMSe ) / CS ),RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),Max( ( ( ( Max( MLU,RMSe ) + Max( MLU,RCSe ) ) + RRSe ) - ( ( MUM - Max( MUM,Min( MUM ,( MUR - MUC ) ) ) ) * Max( ( DS * RRSe ),Min( MLU ,Max( MUR,MUM ) ) ) ) ),DS ) )", "obj1": 0.24015748031496062, "obj2": 0.6081271517078384}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "Max( ( ( ( RMSe * CS ) + ( Min( MUM ,MUC ) / Min( Min( MUC ,DS ) ,MUM ) ) ) / Min( MUC ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) * MUC ) ) ),RMSe ) )", "obj1": 0.9271653543307087, "obj2": 0.03730674352957367}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5746905880247565}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Const - ( ( PN * ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( MDR + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( ( MLU + RRSe ) ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RMSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "( Min( ( ( Max( FirstVNF_CPU,MRS ) / Min( ( ACS + CRS ) ,FirstVNF_Mem_Server ) ) / ( ( ( DDR / BR ) * Min( PN ,AMS ) ) / ( FirstVNF_RAM_Server * Const ) ) ) ,BR ) + ( ( Const / FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Max( Min( ( MUR / ( RCSe - Min( ( ( MUM * RCSe ) - Max( RMSe,DS ) ) ,MUC ) ) ) ,( MUR - CS ) ),RRSe ) / ( RCSe / CS ) )", "obj1": 0.12401574803149606, "obj2": 0.7773762164151616}, {"determining": "( ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - PN ) ) + ( Max( AMS,( Min( BR ,( Const - RRS ) ) / BR ) ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) * ( ( RRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( PN - Const ) / ( AMS * Min( PN ,( FirstVNF_RAM / ( ( BR - DDR ) * MRS ) ) ) ) ) ) )", "choosing": "Max( Min( RMSe ,MLU ),Max( Max( MUR,DS ),( ( MLU / Max( Min( ( CS * MLU ) ,RMSe ),DS ) ) * RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.8055977559953007}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - AMS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9724409448818898, "obj2": 0.017440388297348317}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * PN ) + AMS ) ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( ( FirstVNF_RAM_Server * ( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( MLU ,RRSe ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,( CS - MUR ) ) / MUC ) ),( DS * CS ) ) * ( Min( MUC ,DS ) + ( RCSe + CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.05414878768630935}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( RRS - Min( RRS ,AMS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( MUC / CS ) / ( RRSe * MUC ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6157408678404805}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_CPU / ( Max( ( MRS - ACS ),( RRS + FirstVNF_CPU_Server ) ) / ( ( ACS - ( ( MRS / BR ) + BR ) ) / Const ) ) ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Const ,Min( FirstVNF_RAM_Server ,( Min( ACS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RMSe ) ) ) ,RCSe ) / MUR ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM - MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / ( CRS * ( ( FirstVNF_CPU - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) / Max( ACS,AMS ) )", "choosing": "( ( CS / ( ( ( RMSe * RRSe ) + ( Max( DS,RCSe ) - ( ( MLU * MLU ) * DS ) ) ) + Min( Min( ( MUC - CS ) ,( RMSe * ( MUC - Min( DS ,MLU ) ) ) ) ,( RCSe * RMSe ) ) ) ) * MLU )", "obj1": 0.7736220472440944, "obj2": 0.14626091744509503}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( FirstVNF_RAM_Server,( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) + ( RRS + PN ) ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6350165866942138}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( ( ACS / ( BR + ( PN - Min( ACS ,PN ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( MLU * ( RMSe * RCSe ) ) ) ,RCSe ) ) + Max( MLU,( MUC - Min( ( RRSe + RMSe ) ,MUR ) ) ) ) / Min( RRSe ,CS ) ),( ( ( DS + ( Min( ( MUR / Max( RRSe,DS ) ) ,( ( RMSe - CS ) - ( MLU * RRSe ) ) ) - ( CS + MUR ) ) ) / Max( Max( ( RMSe - RRSe ),MUR ),( RCSe / ( ( RRSe + Min( MUC ,DS ) ) + MLU ) ) ) ) - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6110527020669869}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( FirstVNF_RAM_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5098192959759626}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( Min( Min( ( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),Min( ARS ,AMS ) ) ,AMS ) ) ,FirstVNF_Mem_Server ) ,Const ) / ( FirstVNF_Mem + ( ( DDR * ARS ) - ( Const + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR / Min( ( ( DS * ( RMSe * DS ) ) / Min( RRSe ,MLU ) ) ,Max( CS,DS ) ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / ( MUC * ( MUC + RMSe ) ) )", "obj1": 0.3799212598425197, "obj2": 0.48995864065365197}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),Min( PN ,AMS ) ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( ( MUR / Max( MUR,( ( DS * CS ) * ( Max( ( MUM - MUR ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.27755905511811024, "obj2": 0.5602183716170059}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( MLU + Max( ( MLU - ( DS - CS ) ),( Min( MUC ,MUM ) * MUC ) ) ) - ( ( Min( Min( CS ,( RMSe / MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( CS / RRSe ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8661417322834646, "obj2": 0.10239116775227299}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) - Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * ( MRS - Const ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + Min( ( ( ( MUR / ( CS / RMSe ) ) + RCSe ) + ( RMSe - RCSe ) ) ,Min( MUM ,( Max( MLU,RCSe ) * MUM ) ) ) ) / MUR ) - ( ( Min( Min( CS ,( MLU - RMSe ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8720472440944882, "obj2": 0.10012651299434919}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( ( Max( CS,RMSe ) / ( CS + ( RRSe - RCSe ) ) ) ,RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( RRS * Const ) ,Min( Max( FirstVNF_CPU,CRS ) ,( ( ( Max( CRS,( FirstVNF_Mem + FirstVNF_Mem ) ) - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( MUM * MUM ),DS ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.8877952755905512, "obj2": 0.06973022601116881}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_CPU_Server ,Max( ACS,Min( MRS ,MRS ) ) ) ) / ( Min( FirstVNF_CPU ,ARS ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( ( Max( MLU,MLU ) - MUM ) ,RCSe ) * ( Min( ( ( CS * RCSe ) / Min( DS ,RCSe ) ) ,( MUR / ( RRSe - MUC ) ) ) / ( ( MUR / MUR ) / ( ( Min( Max( RCSe,RMSe ) ,MUR ) / ( ( Min( MLU ,MLU ) - ( MUR - DS ) ) / DS ) ) - MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.005783502569759469}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( CRS / Max( ( FirstVNF_Mem + Min( PN ,AMS ) ),( FirstVNF_CPU + DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16535433070866143, "obj2": 0.6888235553982134}], "27": [{"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - ( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( ( MUM / DS ),MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( ( ( ( Min( BR ,PN ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) + Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / RRS ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * ( Max( RMSe,DS ) - RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,( RRSe / ( Min( MUC ,DS ) - ( MLU + CS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4193230273557536}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32635233920702356}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( DDR / ( PN * DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MUM * MUC ) ) * ( MUM / ( Max( CS,MUC ) * MLU ) ) ) + ( ( ( Min( MUC ,Max( MUC,DS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11220472440944881, "obj2": 0.7695274726267458}, {"determining": "Min( ( RRS * Const ) ,Min( Max( FirstVNF_CPU,CRS ) ,( ( ( Max( CRS,( FirstVNF_Mem + FirstVNF_Mem ) ) - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( MUM * MUM ),DS ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2286865926866612}, {"determining": "( ( Min( FirstVNF_CPU ,ARS ) - FirstVNF_Mem ) - ( Const - ( FirstVNF_RAM_Server - ( PN / ( ( BR * ( Max( AMS,FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ) * ( RRS * Max( Const,PN ) ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU + RMSe ) ) ) ,RCSe ) ) + ( Min( Max( RCSe,MLU ) ,MUM ) / Max( MUM,MUC ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4539067930901567}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( MDR + ARS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / MRS ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( MUR,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) ,( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.6062992125984252, "obj2": 0.25525174300747705}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / ARS ) ,( ( Min( Min( AMS ,CRS ) ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS * ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( Max( MUM,( ( ( CS * RRSe ) / RRSe ) * ( ( RCSe + CS ) / ( MLU * RMSe ) ) ) ) / MLU ),MUC ),MUR ) )", "obj1": 0.5590551181102362, "obj2": 0.25985732369733794}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( BR ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * PN ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RMSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,( MUC - RCSe ) ) - ( RCSe + DS ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2737251092484688}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( FirstVNF_CPU / ( BR * BR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / RCSe ) ) ,( ( MUR * Min( ( RCSe * Min( MUR ,DS ) ) ,RRSe ) ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) - ( RRSe + ( Min( MUC ,DS ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8582677165354331, "obj2": 0.10897064897688982}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( ( RCSe * RMSe ) / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5227042452371153}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / Max( FirstVNF_CPU,CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.7480314960629921, "obj2": 0.15727845241484367}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( ( Const - Const ),Const ) * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) + ( Min( RCSe ,( Max( CS,RMSe ) / CS ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7356175238548027}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.38188976377952755, "obj2": 0.4876279221858736}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ( FirstVNF_Mem * PN ) * FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_CPU / PN ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU ) * DDR ) ) ) ) - ( ( FirstVNF_CPU * ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / Max( MUR,Max( MUR,MUM ) ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MLU / ( MUR * ( ( ( RMSe * RRSe ) / ( ( MLU - RMSe ) - RRSe ) ) + ( RRSe / ( MUM / ( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.02161229995529418}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * ( Min( ( ( RMSe * ( MUR + MUR ) ) * Min( RCSe ,( MUM - ( Min( RCSe ,MUM ) + MUC ) ) ) ) ,DS ) / MUC ) )", "obj1": 0.9133858267716536, "obj2": 0.06306349642437188}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ACS - ACS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / Min( RRSe ,CS ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( DS + ( RMSe * RMSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2695982023886998}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( MRS + RRS ) / ( Max( Max( Min( CRS ,FirstVNF_Mem ),AMS ),ACS ) - ACS ) )", "choosing": "( Min( ( Max( MUC,CS ) * Min( DS ,CS ) ) ,( ( MUR * MUR ) / ( MUR + CS ) ) ) - ( ( ( MUM - ( ( ( CS - ( CS / MUC ) ) / CS ) / Max( MUM,MUC ) ) ) - MUC ) * ( ( DS - MUM ) * MLU ) ) )", "obj1": 0.36220472440944884, "obj2": 0.505117728048903}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_CPU / ( Max( ( MRS - ACS ),( RRS + FirstVNF_CPU_Server ) ) / ( ( ACS - ( ( MRS / BR ) + BR ) ) / Const ) ) ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Const ,Min( FirstVNF_RAM_Server ,( Min( ACS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RMSe ) ) ) ,RCSe ) / MUR ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM - MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( Max( FirstVNF_CPU,CRS ) * ( MDR * Max( AMS,Min( Max( FirstVNF_CPU,( FirstVNF_CPU_Server + BR ) ) ,( ( DDR * BR ) * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( MUC / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Max( ( Max( CS,RMSe ) / CS ),RCSe ) / MUR ) ) / Min( RRSe ,CS ) ),Max( ( ( ( Max( MLU,RMSe ) + Max( MLU,RCSe ) ) + RRSe ) - ( ( MUM - Max( MUM,Min( MUM ,( MUR - MUC ) ) ) ) * Max( ( DS * RRSe ),Min( MLU ,Max( MUR,MUM ) ) ) ) ),DS ) )", "obj1": 0.24015748031496062, "obj2": 0.6081271517078384}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9251968503937008, "obj2": 0.036292800751805736}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5746905880247565}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( ( PN * FirstVNF_RAM_Server ) + ( ( CRS - BR ) + FirstVNF_Mem_Server ) ) / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( ( RCSe * RMSe ) / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3700787401574803, "obj2": 0.49408890811563194}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * PN ) + AMS ) ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( ( FirstVNF_RAM_Server * ( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( MLU ,RRSe ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,( CS - MUR ) ) / MUC ) ),( DS * CS ) ) * ( Min( MUC ,DS ) + ( RCSe + CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.05414878768630935}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( RRS - Min( RRS ,AMS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( MUC / CS ) / ( RRSe * MUC ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6157408678404805}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),DDR ) + MRS ),Min( CRS ,( ( ( FirstVNF_RAM / MRS ) * FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,( FirstVNF_CPU * ARS ) ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,DDR ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( Min( MUC ,CS ) / DS ) ) ) ,( ( ( RMSe - MUC ) + ( ( Min( MUR ,CS ) + Max( MLU,CS ) ) + ( RMSe - RMSe ) ) ) * MUM ) ),( Min( Min( ( RRSe + RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8594565591204341}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "( Max( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( PN * ARS ) ),Min( Max( ( CRS + ( CRS * PN ) ),( BR - MDR ) ) ,AMS ) ) + ( ( Max( ARS,Max( RRS,PN ) ) * MDR ) * Max( ARS,CRS ) ) )", "choosing": "( ( Min( MUC ,CS ) / ( Min( ( RRSe + RRSe ) ,Min( DS ,RMSe ) ) * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( ( Max( CS,MUC ) / ( MUR / CS ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6333782978386646}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( ACS / ( BR + ( PN - Min( ACS ,PN ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( MLU * ( RMSe * RCSe ) ) ) ,RCSe ) ) + Max( MLU,( MUC - Min( ( RRSe + RMSe ) ,MUR ) ) ) ) / Min( RRSe ,CS ) ),( ( ( DS + ( Min( ( MUR / Max( RRSe,DS ) ) ,( ( RMSe - CS ) - ( MLU * RRSe ) ) ) - ( CS + MUR ) ) ) / Max( Max( ( RMSe - RRSe ),MUR ),( RCSe / ( ( RRSe + Min( MUC ,DS ) ) + MLU ) ) ) ) - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6110527020669869}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / ( CRS * ( ( FirstVNF_CPU - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) / Max( ACS,AMS ) )", "choosing": "( ( CS / ( ( ( RMSe * RRSe ) + ( Max( DS,RCSe ) - ( ( MLU * MLU ) * DS ) ) ) + Min( Min( ( MUC - CS ) ,( RMSe * ( MUC - Min( DS ,MLU ) ) ) ) ,( RCSe * RMSe ) ) ) ) * MLU )", "obj1": 0.7736220472440944, "obj2": 0.14626091744509503}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( FirstVNF_RAM_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5098192959759626}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - AMS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9724409448818898, "obj2": 0.017440388297348317}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( PN * ( PN - FirstVNF_CPU_Server ) ) ) ,Const ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * ( RMSe + MUM ) ) ) * ( Min( MUM ,DS ) - ( RCSe + CS ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( Const - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( Min( CRS ,ARS ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RCSe - MLU ) * ( Max( RMSe,RCSe ) + Min( RMSe ,RMSe ) ) ) - RCSe ) + MLU ) * MUR ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( MLU + Max( ( MLU - ( DS - CS ) ),( Min( MUC ,MUM ) * MUC ) ) ) - ( ( Min( Min( CS ,( RMSe / MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( CS / RRSe ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8661417322834646, "obj2": 0.10239116775227299}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5039370078740157, "obj2": 0.29093363608190653}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) - Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * ( MRS - Const ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + Min( ( ( ( MUR / ( CS / RMSe ) ) + RCSe ) + ( RMSe - RCSe ) ) ,Min( MUM ,( Max( MLU,RCSe ) * MUM ) ) ) ) / MUR ) - ( ( Min( Min( CS ,( MLU - RMSe ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8720472440944882, "obj2": 0.10012651299434919}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( Const - FirstVNF_RAM ) ) ,Const ) / ( ACS - AMS ) ) + MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( DS * ( MUC * DS ) ) / MUC ) ,RCSe ) ) + ( Min( ( Max( CS,RMSe ) / ( CS + ( RRSe - RCSe ) ) ) ,Min( RCSe ,MUM ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RCSe / ( MUM + MUM ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Min( ( MUM - CS ) ,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "( ( Const - ( Min( ( Max( ( BR / BR ),FirstVNF_Mem ) + CRS ) ,AMS ) - ( AMS - MRS ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( Max( Min( MUM ,DS ),( RRSe / RRSe ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * MUM ) / ( MUR * RRSe ) ) + ( RRSe / Max( ( RCSe - RRSe ),MUM ) ) ) ) ),RCSe ) )", "obj1": 0.9921259842519685, "obj2": 0.004749732177104752}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3779527559055118, "obj2": 0.4918302409466919}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.5117660984856572}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( Const - ( ( PN * ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( MDR + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( ( MLU + RRSe ) ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RMSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( MDR * ARS ) + ( ( Max( Max( ( ( RRS + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * Min( MDR ,ACS ) ) - Min( CRS ,( ( ( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),DDR ) ) / FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUR ) / Min( ( Max( MLU,MUC ) - DS ) ,MUR ) ),( MUC - ( MUC - ( Max( CS,( Min( RMSe ,Min( RCSe ,DS ) ) - Max( MUM,CS ) ) ) / ( ( RMSe + RCSe ) + RMSe ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4229723075925008}], "28": [{"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( ( ACS / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( ACS - AMS ) ) ) - ( FirstVNF_Mem + ( FirstVNF_CPU * ARS ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( Min( Min( ( MDR / FirstVNF_Mem ) ,FirstVNF_Mem ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Max( CS,( MLU + MUC ) ) * MUM ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) )", "obj1": 0.4547244094488189, "obj2": 0.41615820407536974}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32635233920702356}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.48155406099836406}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( ( Max( ( MUR - MUR ),( CS * DS ) ) * ( Min( ( Max( MUR,DS ) / ( CS / MUC ) ) ,MUC ) / Min( MUC ,MLU ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41970734558995776}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( DDR / ( PN * DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MUM * MUC ) ) * ( MUM / ( Max( CS,MUC ) * MLU ) ) ) + ( ( ( Min( MUC ,Max( MUC,DS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11220472440944881, "obj2": 0.7695274726267458}, {"determining": "( Min( ( ( FirstVNF_RAM / Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ) / ( ( Min( ( RRS / CRS ) ,ARS ) / ( PN * FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ,BR ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( ( RCSe * RMSe ) / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3425196850393701, "obj2": 0.5227042452371153}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( MDR + ARS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( Const / MRS ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( MUR,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) ,( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.6062992125984252, "obj2": 0.25525174300747705}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / ARS ) ,( ( Min( Min( AMS ,CRS ) ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS * ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( Max( MUM,( ( ( CS * RRSe ) / RRSe ) * ( ( RCSe + CS ) / ( MLU * RMSe ) ) ) ) / MLU ),MUC ),MUR ) )", "obj1": 0.5590551181102362, "obj2": 0.25985732369733794}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "( ( ( ( Min( BR ,PN ) + ( Max( FirstVNF_CPU_Server,ACS ) * FirstVNF_RAM ) ) + Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / RRS ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * ( Max( RMSe,DS ) - RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,( RRSe / ( Min( MUC ,DS ) - ( MLU + CS ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.4193230273557536}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.2245182234936036}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( BR ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * PN ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RMSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,( MUC - RCSe ) ) - ( RCSe + DS ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2737251092484688}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( FirstVNF_CPU / ( BR * BR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / RCSe ) ) ,( ( MUR * Min( ( RCSe * Min( MUR ,DS ) ) ,RRSe ) ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) - ( RRSe + ( Min( MUC ,DS ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8582677165354331, "obj2": 0.10897064897688982}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( ( Min( ( ( AMS / FirstVNF_Mem ) + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server + ACS ) ) * CRS ) ) ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( ( MUM - RMSe ) + CS ),MUC ),MUR ) )", "obj1": 0.7362204724409449, "obj2": 0.15394224045405075}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( ( Const - Const ),Const ) * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) + ( Min( RCSe ,( Max( CS,RMSe ) / CS ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7356175238548027}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5982211913667101}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,RRS ) / ( AMS / FirstVNF_Mem ) )", "choosing": "( CS / ( Max( ( ( DS * Max( ( RMSe / RRSe ),( CS / Min( RMSe ,CS ) ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7575109981505407}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.02161229995529418}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( RRS - Min( RRS ,AMS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( MUC / CS ) / ( RRSe * MUC ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6157408678404805}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05557170944227532}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_CPU / ( Max( ( MRS - ACS ),( RRS + FirstVNF_CPU_Server ) ) / ( ( ACS - ( ( MRS / BR ) + BR ) ) / Const ) ) ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Const ,Min( FirstVNF_RAM_Server ,( Min( ACS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RMSe ) ) ) ,RCSe ) / MUR ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM - MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( Min( FirstVNF_RAM ,ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5408865414202811}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ACS - ACS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / Min( RRSe ,CS ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( DS + ( RMSe * RMSe ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2695982023886998}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.610236220472441, "obj2": 0.22982716542352907}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( PN * ( PN - FirstVNF_CPU_Server ) ) ) ,Const ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * ( RMSe + MUM ) ) ) * ( Min( MUM ,DS ) - ( RCSe + CS ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.7145669291338582, "obj2": 0.1773243482872595}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5746905880247565}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ( FirstVNF_Mem * PN ) * FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_CPU / PN ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU ) * DDR ) ) ) ) - ( ( FirstVNF_CPU * ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / Max( MUR,Max( MUR,MUM ) ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MLU / ( MUR * ( ( ( RMSe * RRSe ) / ( ( MLU - RMSe ) - RRSe ) ) + ( RRSe / ( MUM / ( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( CRS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * PN ) + AMS ) ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( ( FirstVNF_RAM_Server * ( Min( ACS ,FirstVNF_Mem_Server ) * RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( MLU ,RRSe ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,( CS - MUR ) ) / MUC ) ),( DS * CS ) ) * ( Min( MUC ,DS ) + ( RCSe + CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.05414878768630935}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - AMS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9724409448818898, "obj2": 0.017440388297348317}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9251968503937008, "obj2": 0.036292800751805736}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / ( CRS * ( ( FirstVNF_CPU - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) / Max( ACS,AMS ) )", "choosing": "( ( CS / ( ( ( RMSe * RRSe ) + ( Max( DS,RCSe ) - ( ( MLU * MLU ) * DS ) ) ) + Min( Min( ( MUC - CS ) ,( RMSe * ( MUC - Min( DS ,MLU ) ) ) ) ,( RCSe * RMSe ) ) ) ) * MLU )", "obj1": 0.7736220472440944, "obj2": 0.14626091744509503}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( Const - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( Min( CRS ,ARS ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RCSe - MLU ) * ( Max( RMSe,RCSe ) + Min( RMSe ,RMSe ) ) ) - RCSe ) + MLU ) * MUR ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),DDR ) + MRS ),Min( CRS ,( ( ( FirstVNF_RAM / MRS ) * FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,( FirstVNF_CPU * ARS ) ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,DDR ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( Min( MUC ,CS ) / DS ) ) ) ,( ( ( RMSe - MUC ) + ( ( Min( MUR ,CS ) + Max( MLU,CS ) ) + ( RMSe - RMSe ) ) ) * MUM ) ),( Min( Min( ( RRSe + RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8594565591204341}, {"determining": "( Max( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( PN * ARS ) ),Min( Max( ( CRS + ( CRS * PN ) ),( BR - MDR ) ) ,AMS ) ) + ( ( Max( ARS,Max( RRS,PN ) ) * MDR ) * Max( ARS,CRS ) ) )", "choosing": "( ( Min( MUC ,CS ) / ( Min( ( RRSe + RRSe ) ,Min( DS ,RMSe ) ) * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( ( Max( CS,MUC ) / ( MUR / CS ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6333782978386646}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS * RRS ) / ( ( Min( ARS ,RRS ) - FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) + ( RRS / ( MRS * RRS ) ) ) / FirstVNF_RAM_Server ) / ( ARS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( Max( MLU,MUC ) / MUM ) )", "obj1": 0.9881889763779528, "obj2": 0.010537001674423774}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,PN ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( ( ACS * PN ) + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( ( DS - DS ) ,MLU ) / ( Max( CS,RMSe ) / DS ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) - Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9311023622047244, "obj2": 0.03300037830696479}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( ( AMS + FirstVNF_RAM_Server ),BR ),MDR ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,( MUC / RRSe ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RMSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( Max( Const,( ( ARS / FirstVNF_RAM ) * ( ( BR * FirstVNF_RAM ) + MRS ) ) ) - Min( ( MDR * ARS ) ,BR ) ) ,Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Max( ( ( MUC - MUM ) - ( Max( ( ( ( MLU * RCSe ) / Max( CS,RRSe ) ) + ( MUR / Max( DS,CS ) ) ),DS ) * MUM ) ),Max( DS,CS ) ) * ( Min( ( ( Max( ( DS - MUR ),Max( Min( MUM ,RRSe ),RRSe ) ) / MUC ) - ( Max( MLU,Min( MUR ,RCSe ) ) / DS ) ) ,( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / RCSe ) ) - ( RCSe + CS ) ) )", "obj1": 0.860236220472441, "obj2": 0.10396215573622582}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) * ( ( ( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) - Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * ( MRS - Const ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + Min( ( ( ( MUR / ( CS / RMSe ) ) + RCSe ) + ( RMSe - RCSe ) ) ,Min( MUM ,( Max( MLU,RCSe ) * MUM ) ) ) ) / MUR ) - ( ( Min( Min( CS ,( MLU - RMSe ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8720472440944882, "obj2": 0.10012651299434919}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Min( ( MUM - CS ) ,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( CRS ,FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server * RRS ) ),MDR ),FirstVNF_RAM ) * ( MDR * ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUM / ( MUC + ( RCSe / ( DS * MUR ) ) ) ) ) - MLU ),( RRSe / ( MUM + RMSe ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2915863615860111}, {"determining": "Min( ( Max( FirstVNF_CPU,BR ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( MLU + Max( ( MLU - ( DS - CS ) ),( Min( MUC ,MUM ) * MUC ) ) ) - ( ( Min( Min( CS ,( RMSe / MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( CS / RRSe ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8661417322834646, "obj2": 0.10239116775227299}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + ( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( RRSe / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9901574803149606, "obj2": 0.005337866630582875}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,FirstVNF_CPU_Server ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / Max( ( RRSe * MUM ),RMSe ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8681102362204725, "obj2": 0.10170833728737351}, {"determining": "Min( ( Max( FirstVNF_CPU,( AMS - ACS ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( ( DS - ( Max( RRSe,( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ) ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( RCSe / CS ) ) ),RCSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2286865926866612}, {"determining": "( ( Const - ( Min( ( Max( ( BR / BR ),FirstVNF_Mem ) + CRS ) ,AMS ) - ( AMS - MRS ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( Max( Min( MUM ,DS ),( RRSe / RRSe ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * MUM ) / ( MUR * RRSe ) ) + ( RRSe / Max( ( RCSe - RRSe ),MUM ) ) ) ) ),RCSe ) )", "obj1": 0.9921259842519685, "obj2": 0.004749732177104752}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}], "29": [{"determining": "( ( ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) ) / ( ARS * Const ) )", "choosing": "Max( Max( Max( Max( ( ( MUM * DS ) + MUC ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( MLU * Min( MLU ,MUM ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( Min( ( ACS / ARS ) ,Max( RRS,ARS ) ) + ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) / Const ) )", "choosing": "( ( RMSe * RRSe ) * ( Min( ( ( CS - MLU ) / Min( ( RRSe + RRSe ) ,CS ) ) ,RCSe ) - ( CS + MLU ) ) )", "obj1": 0.42322834645669294, "obj2": 0.41579516086290963}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32635233920702356}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.48155406099836406}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * Min( MDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RRSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5195175495955812}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / ARS ) ,( ( Min( Min( AMS ,CRS ) ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS * ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( Max( MUM,( ( ( CS * RRSe ) / RRSe ) * ( ( RCSe + CS ) / ( MLU * RMSe ) ) ) ) / MLU ),MUC ),MUR ) )", "obj1": 0.5590551181102362, "obj2": 0.25985732369733794}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( ( ( AMS + BR ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( MUM - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.6043307086614174, "obj2": 0.24777534011531793}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( ( Max( ( MUR - MUR ),( CS * DS ) ) * ( Min( ( Max( MUR,DS ) / ( CS / MUC ) ) ,MUC ) / Min( MUC ,MLU ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41970734558995776}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( DDR / ( PN * DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MUM * MUC ) ) * ( MUM / ( Max( CS,MUC ) * MLU ) ) ) + ( ( ( Min( MUC ,Max( MUC,DS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11220472440944881, "obj2": 0.7695274726267458}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( FirstVNF_CPU / ( BR * BR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / RCSe ) ) ,( ( MUR * Min( ( RCSe * Min( MUR ,DS ) ) ,RRSe ) ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) - ( RRSe + ( Min( MUC ,DS ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8582677165354331, "obj2": 0.10897064897688982}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3838582677165354, "obj2": 0.48075849801012926}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( BR ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * PN ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RMSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,( MUC - RCSe ) ) - ( RCSe + DS ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2737251092484688}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.2245182234936036}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Min( ( ( AMS / FirstVNF_Mem ) + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server + ACS ) ) * CRS ) ) ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( ( MUM - RMSe ) + CS ),MUC ),MUR ) )", "obj1": 0.7362204724409449, "obj2": 0.15394224045405075}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( ( Const - Const ),Const ) * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) + ( Min( RCSe ,( Max( CS,RMSe ) / CS ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7356175238548027}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "Min( ( Max( Const,CRS ) * ( Max( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( CRS ,ARS ) ) ) ,Const ),( CRS - ( Const - FirstVNF_RAM ) ) ) * MDR ) ) ,( ARS + ARS ) )", "choosing": "Max( ( ( ( MUR * Min( Min( ( ( DS * MUM ) - RRSe ) ,RCSe ) ,RCSe ) ) + ( Min( ( RMSe - MUC ) ,MUM ) - MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5981117772535799}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.02161229995529418}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( RRS - Min( RRS ,AMS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( MUC / CS ) / ( RRSe * MUC ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6157408678404805}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_CPU / ( Max( ( MRS - ACS ),( RRS + FirstVNF_CPU_Server ) ) / ( ( ACS - ( ( MRS / BR ) + BR ) ) / Const ) ) ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Const ,Min( FirstVNF_RAM_Server ,( Min( ACS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RMSe ) ) ) ,RCSe ) / MUR ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM - MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05557170944227532}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( Min( FirstVNF_RAM ,ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5408865414202811}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ( AMS / FirstVNF_RAM ) * FirstVNF_CPU ) ) * Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ) ) ,( Max( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( RMSe + MLU ),( CS * DS ) ) * ( Min( MUC ,RCSe ) - ( RCSe + CS ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2693538442094868}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,RRS ) / ( AMS / FirstVNF_Mem ) )", "choosing": "( CS / ( Max( ( ( DS * Max( ( RMSe / RRSe ),( CS / Min( RMSe ,CS ) ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7575109981505407}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.7145669291338582, "obj2": 0.1773243482872595}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) / ( DDR / BR ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11614173228346457, "obj2": 0.766431645342729}, {"determining": "( ( ( FirstVNF_CPU - CRS ) * FirstVNF_RAM_Server ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const * RRS ) ) ) ) )", "choosing": "Max( ( ( ( CS - RCSe ) + ( MUC / MUM ) ) - MLU ),( ( MUM * ( RMSe * CS ) ) / RRSe ) )", "obj1": 0.860236220472441, "obj2": 0.09870386919616925}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.27165354330708663, "obj2": 0.5746905880247565}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ( FirstVNF_Mem * PN ) * FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_CPU / PN ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU ) * DDR ) ) ) ) - ( ( FirstVNF_CPU * ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / Max( MUR,Max( MUR,MUM ) ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MLU / ( MUR * ( ( ( RMSe * RRSe ) / ( ( MLU - RMSe ) - RRSe ) ) + ( RRSe / ( MUM / ( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05327795236007025}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( AMS / ( CRS * CRS ) ) + Const ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6082677165354331, "obj2": 0.23114518820629573}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9251968503937008, "obj2": 0.036292800751805736}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / ( CRS * ( ( FirstVNF_CPU - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) / Max( ACS,AMS ) )", "choosing": "( ( CS / ( ( ( RMSe * RRSe ) + ( Max( DS,RCSe ) - ( ( MLU * MLU ) * DS ) ) ) + Min( Min( ( MUC - CS ) ,( RMSe * ( MUC - Min( DS ,MLU ) ) ) ) ,( RCSe * RMSe ) ) ) ) * MLU )", "obj1": 0.7736220472440944, "obj2": 0.14626091744509503}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),DDR ) + MRS ),Min( CRS ,( ( ( FirstVNF_RAM / MRS ) * FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,( FirstVNF_CPU * ARS ) ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,DDR ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( Min( MUC ,CS ) / DS ) ) ) ,( ( ( RMSe - MUC ) + ( ( Min( MUR ,CS ) + Max( MLU,CS ) ) + ( RMSe - RMSe ) ) ) * MUM ) ),( Min( Min( ( RRSe + RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8594565591204341}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( PN * ( PN - FirstVNF_CPU_Server ) ) ) ,Const ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( ( Max( ( Min( CS ,DS ) - ( MUR - CS ) ),( RMSe * ( RMSe + MUM ) ) ) * ( Min( MUM ,DS ) - ( RCSe + CS ) ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Max( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( PN * ARS ) ),Min( Max( ( CRS + ( CRS * PN ) ),( BR - MDR ) ) ,AMS ) ) + ( ( Max( ARS,Max( RRS,PN ) ) * MDR ) * Max( ARS,CRS ) ) )", "choosing": "( ( Min( MUC ,CS ) / ( Min( ( RRSe + RRSe ) ,Min( DS ,RMSe ) ) * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( ( Max( CS,MUC ) / ( MUR / CS ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6333782978386646}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - AMS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9724409448818898, "obj2": 0.017440388297348317}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * ( DDR * ( ( Const - FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) ) ) ) ) - ( FirstVNF_Mem + ( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( Max( Max( ( CS - DS ),DS ),( RMSe - ( MLU + RMSe ) ) ),( RRSe / ( ( Min( Min( RCSe ,Max( MUM,( RCSe - DS ) ) ) ,Min( DS ,( ( MUC / RMSe ) - MUC ) ) ) + ( ( Max( ( CS + MUM ),MUM ) - ( DS / MUC ) ) / CS ) ) * MUM ) ) )", "obj1": 0.9881889763779528, "obj2": 0.006610913759258787}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,PN ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( ( ACS * PN ) + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( ( DS - DS ) ,MLU ) / ( Max( CS,RMSe ) / DS ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) - Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9311023622047244, "obj2": 0.03300037830696479}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Min( ( MUM - CS ) ,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "Min( ( Max( FirstVNF_CPU,( AMS - ACS ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( ( DS - ( Max( RRSe,( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ) ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( RCSe / CS ) ) ),RCSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2286865926866612}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( ( AMS + FirstVNF_RAM_Server ),BR ),MDR ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,( MUC / RRSe ) ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RMSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( CRS ,FirstVNF_Mem ) + MDR ) * ( FirstVNF_RAM_Server * RRS ) ),MDR ),FirstVNF_RAM ) * ( MDR * ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUM / ( MUC + ( RCSe / ( DS * MUR ) ) ) ) ) - MLU ),( RRSe / ( MUM + RMSe ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2915863615860111}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29439786573484317}, {"determining": "Min( ( Max( FirstVNF_CPU_Server,CRS ) * ( ( ( ACS - AMS ) / Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,( ( ( MRS / Min( RRS ,PN ) ) / ARS ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM * MUC ) ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - Min( MUC ,MUC ) ) )", "obj1": 0.7125984251968503, "obj2": 0.17821422075633975}, {"determining": "( ( ( Max( ARS,( DDR / MRS ) ) - MDR ) / FirstVNF_Mem_Server ) + ( ( ( ( ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) ) + ( ( MRS + ( BR * ( ACS - CRS ) ) ) / ( ACS - AMS ) ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( Max( MUR,Max( MUR,( Min( RRSe ,CS ) * ( Max( Min( MUM ,RMSe ),MUM ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.49803149606299213, "obj2": 0.2935714711667018}, {"determining": "( ( Const - ( Min( ( Max( ( BR / BR ),FirstVNF_Mem ) + CRS ) ,AMS ) - ( AMS - MRS ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( Max( Min( MUM ,DS ),( RRSe / RRSe ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * MUM ) / ( MUR * RRSe ) ) + ( RRSe / Max( ( RCSe - RRSe ),MUM ) ) ) ) ),RCSe ) )", "obj1": 0.9921259842519685, "obj2": 0.004749732177104752}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - AMS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( Min( FirstVNF_CPU_Server ,MRS ),( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * RRSe ) / ( MUR * ( RRSe + MUR ) ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9724409448818898, "obj2": 0.017440388297348317}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.610236220472441, "obj2": 0.22982716542352907}], "30": [{"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_RAM + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( Min( ( Max( Max( FirstVNF_RAM,( CRS * DDR ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ,MRS ) - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,RRSe ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) ) / ( ARS * Const ) )", "choosing": "Max( Max( Max( Max( ( ( MUM * DS ) + MUC ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( MLU * Min( MLU ,MUM ) ) ) * CS ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( Min( ( ACS / ARS ) ,Max( RRS,ARS ) ) + ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) / Const ) )", "choosing": "( ( RMSe * RRSe ) * ( Min( ( ( CS - MLU ) / Min( ( RRSe + RRSe ) ,CS ) ) ,RCSe ) - ( CS + MLU ) ) )", "obj1": 0.42322834645669294, "obj2": 0.41579516086290963}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32635233920702356}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.48155406099836406}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * Min( MDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RRSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5195175495955812}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / ARS ) ,( ( Min( Min( AMS ,CRS ) ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS * ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( Max( MUM,( ( ( CS * RRSe ) / RRSe ) * ( ( RCSe + CS ) / ( MLU * RMSe ) ) ) ) / MLU ),MUC ),MUR ) )", "obj1": 0.5590551181102362, "obj2": 0.25985732369733794}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( ( ( AMS + BR ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( MUM - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.6043307086614174, "obj2": 0.24777534011531793}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( ( Max( ( MUR - MUR ),( CS * DS ) ) * ( Min( ( Max( MUR,DS ) / ( CS / MUC ) ) ,MUC ) / Min( MUC ,MLU ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41970734558995776}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( DDR / ( PN * DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MUM * MUC ) ) * ( MUM / ( Max( CS,MUC ) * MLU ) ) ) + ( ( ( Min( MUC ,Max( MUC,DS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11220472440944881, "obj2": 0.7695274726267458}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( FirstVNF_CPU / ( BR * BR ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / RCSe ) ) ,( ( MUR * Min( ( RCSe * Min( MUR ,DS ) ) ,RRSe ) ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) - ( RRSe + ( Min( MUC ,DS ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8582677165354331, "obj2": 0.10897064897688982}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3838582677165354, "obj2": 0.48075849801012926}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( BR ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * PN ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RMSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,( MUC - RCSe ) ) - ( RCSe + DS ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2737251092484688}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Min( ( ( AMS / FirstVNF_Mem ) + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server + ACS ) ) * CRS ) ) ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( ( MUM - RMSe ) + CS ),MUC ),MUR ) )", "obj1": 0.7362204724409449, "obj2": 0.15394224045405075}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( ( Const - Const ),Const ) * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) + ( Min( RCSe ,( Max( CS,RMSe ) / CS ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7356175238548027}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.2245182234936036}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6456692913385826, "obj2": 0.21888319088667896}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.02161229995529418}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05557170944227532}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( Min( FirstVNF_RAM ,ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5408865414202811}, {"determining": "Min( ( Max( Const,CRS ) * ( Max( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( CRS ,ARS ) ) ) ,Const ),( CRS - ( Const - FirstVNF_RAM ) ) ) * MDR ) ) ,( ARS + ARS ) )", "choosing": "Max( ( ( ( MUR * Min( Min( ( ( DS * MUM ) - RRSe ) ,RCSe ) ,RCSe ) ) + ( Min( ( RMSe - MUC ) ,MUM ) - MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5981117772535799}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( ( CRS / Min( FirstVNF_Mem ,AMS ) ) ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( MUC * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,RRS ) / ( AMS / FirstVNF_Mem ) )", "choosing": "( CS / ( Max( ( ( DS * Max( ( RMSe / RRSe ),( CS / Min( RMSe ,CS ) ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7575109981505407}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.7145669291338582, "obj2": 0.1773243482872595}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) / ( DDR / BR ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11614173228346457, "obj2": 0.766431645342729}, {"determining": "( ( ( FirstVNF_CPU - CRS ) * FirstVNF_RAM_Server ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const * RRS ) ) ) ) )", "choosing": "Max( ( ( ( CS - RCSe ) + ( MUC / MUM ) ) - MLU ),( ( MUM * ( RMSe * CS ) ) / RRSe ) )", "obj1": 0.860236220472441, "obj2": 0.09870386919616925}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * MLU ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5715508617735768}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05327795236007025}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ( AMS / FirstVNF_RAM ) * FirstVNF_CPU ) ) * Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ) ) ,( Max( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_CPU_Server ) * FirstVNF_CPU ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( RMSe + MLU ),( CS * DS ) ) * ( Min( MUC ,RCSe ) - ( RCSe + CS ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2693538442094868}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( AMS / ( CRS * CRS ) ) + Const ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6082677165354331, "obj2": 0.23114518820629573}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9251968503937008, "obj2": 0.036292800751805736}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / ( CRS * ( ( FirstVNF_CPU - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) / Max( ACS,AMS ) )", "choosing": "( ( CS / ( ( ( RMSe * RRSe ) + ( Max( DS,RCSe ) - ( ( MLU * MLU ) * DS ) ) ) + Min( Min( ( MUC - CS ) ,( RMSe * ( MUC - Min( DS ,MLU ) ) ) ) ,( RCSe * RMSe ) ) ) ) * MLU )", "obj1": 0.7736220472440944, "obj2": 0.14626091744509503}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( ( RMSe * RRSe ) * ( RMSe * MLU ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6139960999362448}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),DDR ) + MRS ),Min( CRS ,( ( ( FirstVNF_RAM / MRS ) * FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,( FirstVNF_CPU * ARS ) ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,DDR ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( Min( MUC ,CS ) / DS ) ) ) ,( ( ( RMSe - MUC ) + ( ( Min( MUR ,CS ) + Max( MLU,CS ) ) + ( RMSe - RMSe ) ) ) * MUM ) ),( Min( Min( ( RRSe + RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8594565591204341}, {"determining": "( Max( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( PN * ARS ) ),Min( Max( ( CRS + ( CRS * PN ) ),( BR - MDR ) ) ,AMS ) ) + ( ( Max( ARS,Max( RRS,PN ) ) * MDR ) * Max( ARS,CRS ) ) )", "choosing": "( ( Min( MUC ,CS ) / ( Min( ( RRSe + RRSe ) ,Min( DS ,RMSe ) ) * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( ( Max( CS,MUC ) / ( MUR / CS ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6333782978386646}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( RRS - Min( RRS ,AMS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( MUC / CS ) / ( RRSe * MUC ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6157408678404805}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - AMS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( Min( Max( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU + DDR ) ) ,AMS ) ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( Min( RRSe ,CS ) * ( ( ( RMSe * RRSe ) / ( MUR * RRSe ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9724409448818898, "obj2": 0.017440388297348317}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5059055118110236, "obj2": 0.28968870784014566}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * ( DDR * ( ( Const - FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) ) ) ) ) - ( FirstVNF_Mem + ( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( Max( Max( ( CS - DS ),DS ),( RMSe - ( MLU + RMSe ) ) ),( RRSe / ( ( Min( Min( RCSe ,Max( MUM,( RCSe - DS ) ) ) ,Min( DS ,( ( MUC / RMSe ) - MUC ) ) ) + ( ( Max( ( CS + MUM ),MUM ) - ( DS / MUC ) ) / CS ) ) * MUM ) ) )", "obj1": 0.9881889763779528, "obj2": 0.006610913759258787}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_CPU / ( Max( ( MRS - ACS ),( RRS + FirstVNF_CPU_Server ) ) / ( ( ACS - ( ( MRS / BR ) + BR ) ) / Const ) ) ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Const ,Min( FirstVNF_RAM_Server ,( Min( ACS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RMSe ) ) ) ,RCSe ) / MUR ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM - MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29439786573484317}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,PN ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( Max( CS,RMSe ) / DS ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9311023622047244, "obj2": 0.032633585020650904}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( FirstVNF_CPU_Server + MRS ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - Min( MUC ,MUR ) ),MLU ),CS ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( Min( Min( ( MUC - CS ) ,( ( ( RMSe * MLU ) - MUC ) * RMSe ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.06973022601116882}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ( FirstVNF_Mem * PN ) * FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_CPU / PN ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU ) * DDR ) ) ) ) - ( ( FirstVNF_CPU * ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / Max( MUR,Max( MUR,MUM ) ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MLU / ( MUR * ( ( ( RMSe * RRSe ) / ( ( MLU - RMSe ) - RRSe ) ) + ( RRSe / ( MUM / ( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "Min( ( Max( FirstVNF_CPU,( AMS - ACS ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( ( DS - ( Max( RRSe,( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ) ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( RCSe / CS ) ) ),RCSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2286865926866612}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Min( ( MUM - CS ) ,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( Min( ( MUC / ( Max( MUC,MUC ) / MLU ) ) ,( ( ( ( MLU + MUM ) + Max( MUC,RMSe ) ) - ( ( MLU * DS ) + DS ) ) * MLU ) ) * MUM ) ) - Max( Max( Min( RMSe ,MLU ),MUC ),MUR ) )", "obj1": 0.5433070866141733, "obj2": 0.27210738496108505}], "31": [{"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_RAM + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( Min( ( Max( Max( FirstVNF_RAM,( CRS * DDR ) ),FirstVNF_CPU_Server ) + FirstVNF_Mem_Server ) ,MRS ) - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,RRSe ) / ( DS * ( RMSe * RCSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( Const / Max( ( Const - ( FirstVNF_RAM / ( MRS * FirstVNF_CPU_Server ) ) ),( ( Const / Max( Max( MDR,FirstVNF_CPU_Server ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) * ( ( MDR / BR ) + FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) * AMS ) + ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( Max( ( RRSe + Max( MUR,CS ) ),MUM ) - Min( Max( ( MLU - RCSe ),RRSe ) ,RMSe ) ) / Max( Max( ( MLU / ( MUR * RMSe ) ),Min( Min( CS ,CS ) ,MUM ) ),MUR ) ) * MUC ) / ( DS * ( MUR + MUR ) ) ),( ( CS / RMSe ) - RMSe ) )", "obj1": 0.08267716535433071, "obj2": 0.8726671381431429}, {"determining": "( Min( ( ACS / ARS ) ,Max( RRS,ARS ) ) + ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) / Const ) )", "choosing": "( ( RMSe * RRSe ) * ( Min( ( ( CS - MLU ) / Min( ( RRSe + RRSe ) ,CS ) ) ,RCSe ) - ( CS + MLU ) ) )", "obj1": 0.42322834645669294, "obj2": 0.41579516086290963}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.47244094488188976, "obj2": 0.32635233920702356}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.35039370078740156, "obj2": 0.48155406099836406}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server - ACS ) ) - Min( CRS ,( ( ( ( AMS + BR ) * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,Min( Max( RCSe,MUM ) ,Min( CS ,( DS - CS ) ) ) ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ),( DS * CS ) ) * ( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( MUM - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.6043307086614174, "obj2": 0.24777534011531793}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( MLU * RMSe ) ) ) ,RCSe ) ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / Max( MUM,MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( ( Max( ( MUR - MUR ),( CS * DS ) ) * ( Min( ( Max( MUR,DS ) / ( CS / MUC ) ) ,MUC ) / Min( MUC ,MLU ) ) ) - ( RCSe + CS ) ) )", "obj1": 0.39763779527559057, "obj2": 0.41970734558995776}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU_Server + MRS ) - FirstVNF_Mem ) ,Const ) / ( ( RRS * ARS ) - AMS ) ) ,( ( FirstVNF_Mem_Server * Const ) - ( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( Min( ( MUR + ( MLU + RCSe ) ) ,( CS / RCSe ) ),DS ) - ( MLU + CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUC ,MUC ) ) ) - ( ( MUR * ( ( ( ( Min( MLU ,MUM ) + ( MUM * CS ) ) - DS ) / RMSe ) * RRSe ) ) - ( ( ( RMSe * Max( MUR,( RRSe * Min( MUC ,MUR ) ) ) ) + MUM ) / ( RRSe + MUR ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4549452276465953}, {"determining": "( ( ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( ACS - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,RCSe ) )", "obj1": 0.5511811023622047, "obj2": 0.2586369297655999}, {"determining": "( ( Const / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( ( DS * MUR ),DS ) / ( DS + MUR ) ) / RRSe ),( ( Max( RMSe,CS ) / DS ) + DS ) )", "obj1": 0.10236220472440945, "obj2": 0.8165224102463026}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * Min( MDR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RRSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.33267716535433073, "obj2": 0.5195175495955812}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( DDR / ( PN * DDR ) ) )", "choosing": "( ( ( ( RCSe + ( MUM * MUC ) ) * ( MUM / ( Max( CS,MUC ) * MLU ) ) ) + ( ( ( Min( MUC ,Max( MUC,DS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11220472440944881, "obj2": 0.7695274726267458}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( Min( MUC ,DS ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.8582677165354331, "obj2": 0.1089706489768898}, {"determining": "( ( Min( CRS ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,ACS ) + FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) - ( Const * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + ( ( MRS + ( BR * ( ACS - FirstVNF_CPU ) ) ) / ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( Min( ( DS - DS ) ,MUM ) - RMSe ) - Max( MUR,( CS / ( Min( Max( DS,RRSe ) ,( RCSe + RRSe ) ) - MUR ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Min( ( Max( MUC,CS ) * ( DS / CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( Min( RCSe ,RMSe ) / RCSe ) ) ) ) * RMSe ) )", "obj1": 0.3838582677165354, "obj2": 0.48075849801012926}, {"determining": "( ( ( Max( DDR,CRS ) + Const ) + ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( ( Min( ( AMS / FirstVNF_Mem_Server ) ,ARS ) - DDR ) / FirstVNF_CPU_Server ) / ( Const / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe * Max( MUM,RRSe ) ),RMSe ) * Max( MUR,MUR ) ) ) - MLU ) ,Min( ( Max( Max( Min( RRSe ,RMSe ),CS ),Max( DS,( ( MUM * ( RMSe + MLU ) ) - ( DS * CS ) ) ) ) - ( RRSe + MUR ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( DS - ( MLU / RMSe ) ) ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.20461823706112062}, {"determining": "Min( ( ( FirstVNF_CPU + ARS ) + ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,Max( ( Const * Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ),MDR ) ) * ( ( Max( ACS,AMS ) / Min( FirstVNF_Mem_Server ,PN ) ) * MDR ) ) )", "choosing": "( Max( Max( Max( CS,DS ),MUC ),MUR ) - Min( MUR ,MUC ) )", "obj1": 0.6811023622047244, "obj2": 0.19237887727433103}, {"determining": "( ( FirstVNF_CPU / ( MDR + PN ) ) * ( ( Min( FirstVNF_CPU ,BR ) * FirstVNF_RAM_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( Max( MUR,( RCSe - CS ) ) / MUC ) + MUM ) ) / ( ( MUC * ( ( MUC / DS ) - ( MLU + CS ) ) ) * CS ) ) ),Min( Max( ( ( Max( ( MUR * RRSe ),MUC ) * RMSe ) - RRSe ),( RRSe * MUM ) ) ,MUM ) )", "obj1": 0.4921259842519685, "obj2": 0.30285444767295133}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( BR ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( Const ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server / ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * PN ) ) )", "choosing": "( Max( ( ( MUR / Min( ( Min( CS ,MLU ) / ( DS / ( MLU * RMSe ) ) ) ,RCSe ) ) + ( RRSe + MUM ) ),( DS * CS ) ) * ( Min( MUC ,( MUC - RCSe ) ) - ( RCSe + DS ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2737251092484688}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6456692913385826, "obj2": 0.21888319088667896}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.5078740157480315, "obj2": 0.2881729405087051}, {"determining": "( ( Min( ( ( AMS / FirstVNF_Mem ) + ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server + ACS ) ) * CRS ) ) ) ,( ( Min( FirstVNF_Mem ,AMS ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( CRS * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( ( ( MUM - RMSe ) + CS ),MUC ),MUR ) )", "obj1": 0.7362204724409449, "obj2": 0.15394224045405075}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,CRS ) * ( Max( ( Const - Const ),Const ) * MDR ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) + ( Min( RCSe ,( Max( CS,RMSe ) / CS ) ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7356175238548027}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( ( MRS * FirstVNF_Mem_Server ) / Min( ACS ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( DDR ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * Max( ( MRS * ( Const + ( PN - FirstVNF_RAM_Server ) ) ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( Min( MUM ,RCSe ),( Min( CS ,CS ) + ( ( CS - RCSe ) / DS ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.13394535907070332}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,( ( AMS / ( FirstVNF_Mem * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( RCSe,MUC ),MUR ) )", "obj1": 0.765748031496063, "obj2": 0.15353681206992406}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( ( MUC + ( RCSe / MUM ) ) / MUM ) ) - MLU ),( RRSe / ( MUM + MUM ) ) )", "obj1": 0.4763779527559055, "obj2": 0.325487557364608}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( MDR / CRS ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( Min( DS ,MUR ) / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( MUR - ( RMSe * RMSe ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5552675919771185}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( ( MUR - MUR ),( DS * CS ) ) * ( Min( MUC ,DS ) - ( MLU + CS ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6603439834797729}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( CRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.7145669291338582, "obj2": 0.1773243482872595}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9488188976377953, "obj2": 0.02161229995529418}, {"determining": "( ( Min( ( ARS / FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU_Server + ( RRS - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MUM * ( RRSe * Min( MUR ,Min( MUM ,RCSe ) ) ) ) * MUM ) ) - Max( Max( Max( CS,Max( MLU,( DS + CS ) ) ),MUC ),MUR ) )", "obj1": 0.6929133858267716, "obj2": 0.18906676629242708}, {"determining": "( ( ( ( FirstVNF_CPU * Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) + ( MRS / DDR ) ) * ( FirstVNF_Mem_Server + BR ) ) + ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( ( RCSe - RMSe ),MUC ) * ( Min( ( Max( MUR,DS ) / ( CS / RMSe ) ) ,MUC ) / Min( MUC ,MLU ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7173510217489907}, {"determining": "( Max( ACS,FirstVNF_Mem_Server ) / ( Const * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( Max( ( DS + ( MUC / ( RRSe + MUC ) ) ),DS ),DS ),( ( RRSe / ( Max( ( MUC - MLU ),( DS / RRSe ) ) + MUM ) ) / ( ( MUC * ( Min( MLU ,MUM ) * RMSe ) ) * MUC ) ) ),( RRSe / RRSe ) )", "obj1": 0.31496062992125984, "obj2": 0.5277554397850717}, {"determining": "( ( Const + AMS ) * ( ( ( DDR + MRS ) + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MUC,DS ) * ( DS / CS ) ) ,( ( MUR * RMSe ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + ( Min( MLU ,CS ) + ( MUM + RMSe ) ) ) ) ,MLU ) * MLU ) * Max( MUM,MUR ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6742864964637008}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,AMS ) ) ) ,Const ) / ( ( CRS - ( AMS / ACS ) ) - CRS ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - ( Min( Min( Min( MLU ,RMSe ) ,( RRSe / MUC ) ) ,( RCSe - CS ) ) + RCSe ) ),MLU ),CS ) )", "obj1": 0.2736220472440945, "obj2": 0.5635467481361854}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( Min( FirstVNF_RAM ,ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( ( Max( RCSe,MUC ) / Max( MUM,MUC ) ) / ( DS * ( MUC * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5408865414202811}, {"determining": "Min( ( Max( Const,CRS ) * ( Max( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( CRS ,ARS ) ) ) ,Const ),( CRS - ( Const - FirstVNF_RAM ) ) ) * MDR ) ) ,( ARS + ARS ) )", "choosing": "Max( ( ( ( MUR * Min( Min( ( ( DS * MUM ) - RRSe ) ,RCSe ) ,RCSe ) ) + ( Min( ( RMSe - MUC ) ,MUM ) - MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5981117772535799}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_Mem ) ) / ( Min( DDR ,RRS ) + ( Max( PN,FirstVNF_RAM_Server ) + ( BR + Min( FirstVNF_Mem ,BR ) ) ) ) )", "choosing": "Max( Max( ( RRSe - ( ( MLU * MUR ) - Min( Min( ( MUR / RRSe ) ,MLU ) ,( DS * DS ) ) ) ),( RCSe * MUC ) ),( ( Min( MUR ,Min( ( MUC * ( ( MLU * RMSe ) / ( MUM / MUR ) ) ) ,Min( MUM ,MLU ) ) ) - RMSe ) / Max( RCSe,Max( RMSe,RMSe ) ) ) )", "obj1": 0.09055118110236221, "obj2": 0.8329824219111187}, {"determining": "( ( Min( ( ARS + FirstVNF_CPU_Server ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MRS ) / Min( FirstVNF_Mem ,( ( AMS / Max( CRS,BR ) ) + Const ) ) ) ) / Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( ( MLU * ( MUM + ( MUR + MUC ) ) ) + ( ( CS * ( ( RMSe - MUC ) - ( CS / MUR ) ) ) * MUR ) ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7066929133858267, "obj2": 0.18003046969525424}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( AMS / Max( ( CRS / DDR ),FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( PN + BR ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( ( MUR + RMSe ) * RRSe ) / ( Max( MLU,MLU ) * MUM ) ) + ( RRSe / Max( MUM,Max( MUM,RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( ( MLU * ( MUC / RMSe ) ) + ( Max( MLU,RCSe ) + MLU ) ) ) )", "obj1": 0.08661417322834646, "obj2": 0.8562467089293635}, {"determining": "( ( Min( ( Const + RRS ) ,BR ) + Min( Min( CRS ,( RRS / MDR ) ) ,Min( ( AMS * AMS ) ,DDR ) ) ) * ( ( ARS / FirstVNF_CPU ) + ARS ) )", "choosing": "( ( RMSe / MLU ) * ( Min( Min( Min( Max( MLU,MLU ) ,RMSe ) ,RRSe ) ,DS ) + ( MUR + Min( ( MUR * Min( ( ( MUM - RMSe ) + CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.701323882221038}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,RRS ) / ( AMS / FirstVNF_Mem ) )", "choosing": "( CS / ( Max( ( ( DS * Max( ( RMSe / RRSe ),( CS / Min( RMSe ,CS ) ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7575109981505407}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( ( ACS - AMS ) / Min( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( ( MUR / Min( ( DS * CS ) ,( MLU * Max( ( DS / MUR ),( RRSe + MUR ) ) ) ) ) ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6181102362204725, "obj2": 0.2245182234936036}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,BR ) * MRS ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),( CRS + MRS ) ) - ( FirstVNF_Mem * Const ) ) )", "choosing": "Max( ( RRSe + MLU ),( RMSe * RRSe ) )", "obj1": 0.8818897637795275, "obj2": 0.09433059309952578}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),( RRSe / ( MUM + ( RMSe * CS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.0741012512000466}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem ,AMS ) / FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) / ( DDR / BR ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / CS )", "obj1": 0.11614173228346457, "obj2": 0.766431645342729}, {"determining": "( ( ( FirstVNF_CPU - CRS ) * FirstVNF_RAM_Server ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const * RRS ) ) ) ) )", "choosing": "Max( ( ( ( CS - RCSe ) + ( MUC / MUM ) ) - MLU ),( ( MUM * ( RMSe * CS ) ) / RRSe ) )", "obj1": 0.860236220472441, "obj2": 0.09870386919616925}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + ( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( FirstVNF_RAM,Max( ( ( ( MDR - CRS ) + MDR ) * MRS ),MDR ) ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( MUM * MUC ) - ( Max( ( MUM * RRSe ),( Min( CS ,CS ) + ( Max( MUC,( RRSe * RCSe ) ) - MLU ) ) ) - ( ( MUC + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.1410281065798785}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server - ( ( Max( RRS,( RRS - Min( RRS ,AMS ) ) ) - FirstVNF_Mem_Server ) / CRS ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( Min( Max( Max( Max( CS,MUC ),( RMSe - RRSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * MLU ) ) - ( DS * CS ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.16929133858267717, "obj2": 0.6823497733632246}, {"determining": "( Max( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,AMS ) / FirstVNF_RAM_Server ) ),Const ) / ( ( ( CRS + BR ) - ( AMS - RRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( Max( Min( RMSe ,Min( ( MUM / MUC ) ,RMSe ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS - CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - MUM ),RCSe ) )", "obj1": 0.2440944881889764, "obj2": 0.5929478589646208}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * MLU ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5715508617735768}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( Min( MDR ,FirstVNF_Mem ) ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( DDR * ACS ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( Min( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,( Min( ( MUM + RMSe ) ,RMSe ) * RMSe ) ) ) ,( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9212598425196851, "obj2": 0.04646164617948973}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9133858267716536, "obj2": 0.05327795236007025}, {"determining": "( ( FirstVNF_CPU_Server - PN ) / ( AMS * ( ( PN + ( ACS * ( PN + CRS ) ) ) * ( ACS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Max( CS,( CS - MUM ) ) ) * ( ( MLU + CS ) - ( Min( Min( Max( CS,( MUC + RMSe ) ) ,CS ) ,DS ) - ( Min( Max( ( ( MUC / RCSe ) / ( MUC * RRSe ) ),Max( Max( CS,MUC ),( MUM / MUR ) ) ) ,RMSe ) * ( Max( MUC,MLU ) + ( ( Max( MUC,MUM ) + ( RMSe - DS ) ) / DS ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6231203014999273}, {"determining": "Min( Min( Max( ( ( ARS / ( AMS - ( MRS - FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU ),PN ) ,( DDR / FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,Min( DDR ,BR ) ) )", "choosing": "( Min( ( CS * MUR ) ,( ( ( RRSe + MUC ) + Max( Min( Min( MUM ,( RCSe * MUR ) ) ,MUC ),Max( MUR,( CS / MUM ) ) ) ) - MUM ) ) * ( Max( RCSe,RMSe ) / ( RCSe + CS ) ) )", "obj1": 0.16338582677165353, "obj2": 0.6897955491117921}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( MDR / ( FirstVNF_Mem_Server * BR ) ) ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,PN ) ) ) / Min( FirstVNF_Mem ,AMS ) ) ) + ( Max( MRS,( FirstVNF_CPU_Server / PN ) ) * Max( FirstVNF_RAM_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( CS / Min( ( MUC / ( ( MLU * MUR ) / RRSe ) ) ,MLU ) )", "obj1": 0.13188976377952755, "obj2": 0.7505053493571157}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.19094488188976377, "obj2": 0.6486954833649388}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5206707364528412}, {"determining": "Min( ( Min( Const ,Min( Min( Max( ACS,( Const / ( ARS * MDR ) ) ) ,( AMS / FirstVNF_CPU_Server ) ) ,( ACS + ACS ) ) ) / Min( ACS ,AMS ) ) ,( Min( CRS ,FirstVNF_RAM ) + FirstVNF_CPU ) )", "choosing": "( ( ( MLU / ( MUR - ( MLU / Min( MLU ,( MUR - Min( RMSe ,CS ) ) ) ) ) ) + ( ( Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / ( Min( DS ,MUR ) + Max( MLU,MUR ) ) ),MUR ) - ( MUM / MUC ) ) - ( Max( ( MLU + RRSe ),( RMSe + ( ( DS - MUC ) * MUR ) ) ) / MUM ) ) ) / ( ( RMSe - ( ( MUR * ( ( RMSe + DS ) + ( RCSe + ( CS / DS ) ) ) ) * MLU ) ) + RCSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5902612144009328}, {"determining": "Min( ( Max( ( ( CRS / BR ) * ( Min( AMS ,Min( PN ,( FirstVNF_CPU_Server + CRS ) ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,Max( MRS,( FirstVNF_RAM - MDR ) ) ) ,ARS ) / ( AMS - ACS ) ) * MDR ) ) )", "choosing": "( ( ( Max( MUC,CS ) * ( RMSe / MLU ) ) + ( ( Max( ( Max( CS,MUC ) - MLU ),Max( RMSe,( MUM / Max( CS,CS ) ) ) ) * MUR ) / ( CS + MUR ) ) ) - ( ( Min( Min( CS ,( RMSe + MLU ) ) ,MLU ) / ( RRSe + ( ( ( RMSe * MUM ) + ( RRSe / CS ) ) + ( MUC / ( DS * ( MUC * DS ) ) ) ) ) ) - Max( ( MUC * ( ( MUC / ( Max( MLU,MUM ) / ( MUR / MLU ) ) ) * RMSe ) ),( MUC - RMSe ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.09697997575986686}, {"determining": "( ( PN - ( ( Max( PN,CRS ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - ( Min( ( FirstVNF_CPU * PN ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_CPU_Server - DDR ) - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - ACS ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_RAM ,ARS ) ) )", "choosing": "Max( ( Min( ( ( Max( Min( RRSe ,RMSe ),CS ) + ( MUC - ( Min( MUM ,MUR ) * DS ) ) ) / ( RRSe + MLU ) ) ,( ( RMSe - RMSe ) / ( RRSe * ( Max( MLU,Max( RMSe,CS ) ) + RMSe ) ) ) ) - Min( MUC ,( RMSe * ( Max( ( RMSe - DS ),MUM ) / ( ( DS + MLU ) + MUR ) ) ) ) ),( RCSe - MUR ) )", "obj1": 0.9783464566929134, "obj2": 0.010838025202186444}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + ( AMS + Min( Min( BR ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( Max( Max( Max( ( MUR - MUR ),( CS * DS ) ),DS ),( RMSe - ( MLU + RMSe ) ) ),( RRSe / RRSe ) )", "obj1": 0.9724409448818898, "obj2": 0.016168665266201733}, {"determining": "Min( FirstVNF_RAM_Server ,( ( Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * DDR ) / ( FirstVNF_Mem_Server + DDR ) ) ) + MRS ),( MDR + Const ) ) / CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MLU ,DS ) - ( Min( Max( Max( Max( CS,MUC ),( MLU - RMSe ) ),( ( MUC / CS ) / ( RRSe * MUC ) ) ) ,RMSe ) * Max( RRSe,( MUR - RCSe ) ) ) ) + ( DS * CS ) ) * Min( RMSe ,MLU ) )", "obj1": 0.15354330708661418, "obj2": 0.7118959322981755}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU ) + ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_RAM ,CRS ) ) ) ,Const ) / ( ACS / AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,Min( FirstVNF_Mem ,DDR ) ) ) + FirstVNF_CPU_Server ) ),MDR ) + ( Const * Max( ( ( Const + MDR ) * MRS ),MDR ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,MUM ) * CS ) ) - ( Max( MUM,( ( RCSe - MUC ) - ( Max( ( MLU + Min( MLU ,MUR ) ),( Max( RMSe,RMSe ) * Max( MUM,RCSe ) ) ) / ( Min( ( MUM * CS ) ,RCSe ) * Max( DS,( RMSe + DS ) ) ) ) ) ) / Max( MUM,Min( ( MUR - RMSe ) ,DS ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.1457348157517475}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,CRS ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Max( ( RMSe / RRSe ),Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( Min( MUC ,Max( MUC,CS ) ) * Max( MLU,RRSe ) ) + RCSe ) - MUR ) ) / Max( ( MUR / ( MUM * RRSe ) ),RCSe ) )", "obj1": 0.9251968503937008, "obj2": 0.036292800751805736}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.9015748031496063, "obj2": 0.05557170944227532}, {"determining": "( Min( Const ,Min( FirstVNF_Mem_Server ,( FirstVNF_CPU / ( CRS * ( ( FirstVNF_CPU - DDR ) * Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) / Max( ACS,AMS ) )", "choosing": "( ( CS / ( ( ( RMSe * RRSe ) + ( Max( DS,RCSe ) - ( ( MLU * MLU ) * DS ) ) ) + Min( Min( ( MUC - CS ) ,( RMSe * ( MUC - Min( DS ,MLU ) ) ) ) ,( RCSe * RMSe ) ) ) ) * MLU )", "obj1": 0.7736220472440944, "obj2": 0.14626091744509503}, {"determining": "( ( Const / ARS ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),MUM ) / Min( RCSe ,MUC ) )", "obj1": 0.19488188976377951, "obj2": 0.6460492923635371}, {"determining": "( Max( ( Max( ACS,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( ( ( ARS / AMS ) - ACS ) * ( FirstVNF_Mem_Server + MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ACS + RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) - Max( RCSe,MUM ) ) * Max( Min( ( ( ( ( RMSe * RMSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) * MUR ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( ( RRSe - ( DS / Min( Max( DS,RRSe ) ,( CS * RCSe ) ) ) ) + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.10039370078740158, "obj2": 0.8274486525306318}, {"determining": "Min( ( Max( Const,CRS ) * ( ( Min( Min( Min( FirstVNF_Mem_Server ,Max( ACS,CRS ) ) ,( ( MRS * FirstVNF_Mem_Server ) / Min( ARS ,CRS ) ) ) ,Const ) / Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) ) * MDR ) ) ,Min( ARS ,ARS ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( ( RMSe * RRSe ) * ( RMSe * MLU ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6139960999362448}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( ( Const / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Min( FirstVNF_Mem ,CRS ) + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( Min( ( MRS * Min( AMS ,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem + Min( ARS ,ARS ) ) ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "Max( ( ( MUC + ( MUC / MUM ) ) - MLU ),MUC )", "obj1": 0.8996062992125984, "obj2": 0.06302150630862897}, {"determining": "( Min( ( BR - FirstVNF_Mem ) ,Min( ARS ,( CRS - Min( ( ( PN - FirstVNF_RAM_Server ) / Const ) ,AMS ) ) ) ) / ( ACS - AMS ) )", "choosing": "Max( Max( Max( Max( CS,DS ),DS ),( ( RRSe / ( ( ( ( MUC - RRSe ) - RCSe ) / MUC ) + MLU ) ) / ( ( MUC + ( MLU * Min( CS ,MUM ) ) ) * CS ) ) ),( RRSe / ( Min( RCSe ,( DS - Min( MUR ,MUR ) ) ) / DS ) ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ( MRS - Const ) * FirstVNF_Mem ) + ( ( Max( Max( ( ( MDR + Const ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( ( DDR - FirstVNF_CPU ) ,( ( Const + FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) )", "choosing": "( Max( MUC,( Min( Min( ( Max( RRSe,MLU ) * RMSe ) ,( CS - CS ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.812992125984252, "obj2": 0.11625769696909359}, {"determining": "Min( ( Max( FirstVNF_CPU,( ( AMS / ( CRS * AMS ) ) + Const ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,( RRS * Const ) )", "choosing": "Max( ( ( DS - ( Max( ( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ),RRSe ) + RMSe ) ) / Min( RRSe ,( Max( RCSe,MUC ) + MUR ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( MLU - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.6082677165354331, "obj2": 0.23114518820629573}, {"determining": "( Max( ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),DDR ) + MRS ),Min( CRS ,( ( ( FirstVNF_RAM / MRS ) * FirstVNF_Mem_Server ) * Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Min( CRS ,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,( FirstVNF_CPU * ARS ) ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,DDR ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( Min( MUC ,CS ) / DS ) ) ) ,( ( ( RMSe - MUC ) + ( ( Min( MUR ,CS ) + Max( MLU,CS ) ) + ( RMSe - RMSe ) ) ) * MUM ) ),( Min( Min( ( RRSe + RMSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.08464566929133858, "obj2": 0.8594565591204341}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + Min( Min( FirstVNF_Mem_Server ,( Const / Min( FirstVNF_Mem ,AMS ) ) ) ,Min( Const ,FirstVNF_RAM ) ) )", "choosing": "( ( RRSe * RMSe ) * ( Min( MUC ,DS ) - ( ( DS / MLU ) + CS ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29439786573484317}, {"determining": "( Max( Max( ( FirstVNF_CPU * FirstVNF_CPU ),( PN * ARS ) ),Min( Max( ( CRS + ( CRS * PN ) ),( BR - MDR ) ) ,AMS ) ) + ( ( Max( ARS,Max( RRS,PN ) ) * MDR ) * Max( ARS,CRS ) ) )", "choosing": "( ( Min( MUC ,CS ) / ( Min( ( RRSe + RRSe ) ,Min( DS ,RMSe ) ) * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( ( Max( CS,MUC ) / ( MUR / CS ) ) - MUC ) ) ) ),RCSe ) )", "obj1": 0.2125984251968504, "obj2": 0.6333782978386646}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( RRS - Min( RRS ,AMS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( ( MUC / CS ) / ( RRSe * MUC ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2283464566929134, "obj2": 0.6157408678404805}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_CPU / ( Max( ( MRS - ACS ),( RRS + FirstVNF_CPU_Server ) ) / ( ( ACS - ( ( MRS / BR ) + BR ) ) / Const ) ) ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Min( Const ,Min( FirstVNF_RAM_Server ,( Min( ACS ,FirstVNF_Mem ) / Min( FirstVNF_Mem ,CRS ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( Max( ( ( Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * RMSe ) ) ) ,RCSe ) / MUR ) + ( Min( Min( DS ,( RMSe + RRSe ) ) ,MUM ) / ( MUM - MUC ) ) ),( Min( MUC ,MUM ) / MUR ) ) * ( Min( MUC ,DS ) - ( RCSe + CS ) ) )", "obj1": 0.8917322834645669, "obj2": 0.06749042338799979}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( CRS / Min( FirstVNF_Mem ,AMS ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "( Max( MUC,( MUM * MUM ) ) - Max( Max( Max( CS,DS ),MUC ),MUR ) )", "obj1": 0.7263779527559056, "obj2": 0.16047531983352095}, {"determining": "( ( ( ( PN - Min( ACS ,ARS ) ) - FirstVNF_CPU_Server ) / ( ( Const / ( ( AMS * PN ) - ACS ) ) - ( ACS * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( ( ( DS / CS ) * Max( MUC,( ( ( RRSe + MUC ) / ( RRSe * RRSe ) ) - ( MLU * Max( CS,( MUC - MUC ) ) ) ) ) ) ,( MLU + ( ( ( RCSe * RCSe ) / ( MLU / ( DS - MUM ) ) ) / MUM ) ) ) - ( ( Min( Min( CS ,( RMSe + RMSe ) ) ,MLU ) + MUR ) * DS ) )", "obj1": 0.21456692913385828, "obj2": 0.6291776597089607}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * ( DDR * ( ( Const - FirstVNF_RAM_Server ) - Max( MDR,Const ) ) ) ) ) ) ) - ( FirstVNF_Mem + ( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( ACS,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Max( Max( Max( ( CS - DS ),DS ),( RMSe - ( MLU + RMSe ) ) ),( RRSe / ( ( Min( Min( RCSe ,Max( MUM,( RCSe - DS ) ) ) ,Min( DS ,( ( MUC / RMSe ) - MUC ) ) ) + ( ( Max( ( CS + MUM ),MUM ) - ( DS / MUC ) ) / CS ) ) * MUM ) ) )", "obj1": 0.9881889763779528, "obj2": 0.006610913759258787}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( PN / ( AMS / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) ,Const ) / ( ACS - AMS ) )", "choosing": "Max( ( ( ( MLU / Min( ( Min( RRSe ,MLU ) / ( DS * ( MUM * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ),( RRSe - ( MUM + MUM ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5790943432268822}, {"determining": "( ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) + ( ( Max( Max( ( ( Const + MDR ) * MRS ),MDR ),FirstVNF_RAM ) * ( MDR - ACS ) ) - Min( CRS ,( ( Const / FirstVNF_CPU_Server ) / ( Const / RRS ) ) ) ) ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MLU / MUM ) / Min( ( ( RMSe / MUC ) * Max( DS,RRSe ) ) ,( ( ( MUR * MUR ) * ( MUR * MUM ) ) + RMSe ) ) ) ,( MUM + MUM ) ),DS ) / Min( RCSe ,MUC ) )", "obj1": 0.5492125984251969, "obj2": 0.2683711632935254}, {"determining": "Min( ( Max( FirstVNF_CPU,( AMS - ACS ) ) * ( ( ( ACS - AMS ) / Min( ( ( ( CRS * FirstVNF_RAM ) + AMS ) - Max( ARS,Max( MRS,FirstVNF_CPU_Server ) ) ) ,Const ) ) * MDR ) ) ,Max( RRS,Const ) )", "choosing": "Max( ( ( DS - ( Max( RRSe,( Min( CS ,MLU ) * Max( ( RRSe * MUM ),RMSe ) ) ) + RMSe ) ) / Min( RRSe ,Max( RMSe,CS ) ) ),Max( ( MUR / Max( MUR,( RCSe / CS ) ) ),RCSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2286865926866612}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,( MDR - FirstVNF_RAM ) ) * ( Max( ( Const - Min( FirstVNF_CPU_Server ,MRS ) ),Const ) * MDR ) ) )", "choosing": "Max( ( RCSe / RMSe ),( ( MUM + MUM ) / RRSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( Max( BR,( Min( ( ARS / MDR ) ,DDR ) / Min( PN ,FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem ) ) ) ,Const ) / ( ACS - Max( FirstVNF_CPU,( ( ( ARS / DDR ) - DDR ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( MUM ,( ( ( ( MUC / DS ) / MUR ) + ( ( MUC * MUC ) / RCSe ) ) + ( Min( ( RMSe - RCSe ) ,Min( CS ,MUM ) ) / ( ( CS - RMSe ) / RRSe ) ) ) ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - RMSe ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.25984251968503935, "obj2": 0.5788664384484126}, {"determining": "( Max( ( Max( ACS,DDR ) + MRS ),Min( CRS ,( ( ( ACS + BR ) * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / Min( Max( CRS,RRS ) ,( AMS + Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( Const + MDR ) ),MDR ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS + RRS ) ) - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( MUC / DS ) ) * Max( Min( ( MUR * ( ( ( RMSe * RRSe ) / ( MUR * MUM ) ) + ( RRSe / Max( MUM,( RCSe - RRSe ) ) ) ) ) ,( MUC + ( CS / RRSe ) ) ),( Min( Min( ( RRSe - RCSe ) ,( MUC + MLU ) ) ,( MUM + CS ) ) + ( MLU + Max( RCSe,MLU ) ) ) ) )", "obj1": 0.09645669291338582, "obj2": 0.8328229627637003}, {"determining": "( ( ( FirstVNF_CPU * Max( RRS,PN ) ) * ( BR - DDR ) ) / Max( ( PN * ( BR - Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( FirstVNF_CPU + ( FirstVNF_RAM_Server + RRS ) ) ) ) ),( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( Max( ( Min( CS ,Max( Min( MUM ,DS ),Max( MUR,MUC ) ) ) - MUR ),( DS * CS ) ) * ( ( MLU + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7123109858467741}, {"determining": "( ( Const - ( ( PN / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,FirstVNF_Mem ) ,RRS ) ) + ( ( FirstVNF_Mem * PN ) * FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_CPU / PN ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU ) * DDR ) ) ) ) - ( ( FirstVNF_CPU * ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( DS * RMSe ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / Max( MUR,Max( MUR,MUM ) ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MLU / ( MUR * ( ( ( RMSe * RRSe ) / ( ( MLU - RMSe ) - RRSe ) ) + ( RRSe / ( MUM / ( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}, {"determining": "( ( Const - ( ( ( ( AMS / ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ( Max( FirstVNF_RAM_Server,Min( Min( ACS ,PN ) ,RRS ) ) + ( ACS * DDR ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + BR ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( Max( CS,RMSe ) / DS ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / RRSe ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / Max( MUR,( MUC * ( Max( ( MUM - MUR ),( RCSe - CS ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.9311023622047244, "obj2": 0.032633585020650904}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( AMS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( Max( ( ( MUC * Min( ( MUM - CS ) ,Min( DS ,RMSe ) ) ) / DS ),( DS / RCSe ) ) + ( ( ( MUM / MUC ) - Max( ( Max( ( MUR - MUR ),( DS * CS ) ) / Min( MUC ,MUC ) ),MUR ) ) - MUR ) ) / Max( ( DS - RCSe ),RCSe ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( Max( FirstVNF_CPU,Max( RRS,PN ) ) * MDR ) * Max( FirstVNF_CPU,CRS ) ) )", "choosing": "( ( ( MUC / CS ) / ( RRSe * MUC ) ) / Max( ( MUR / Max( MUR,( MUC * ( Max( Min( MUM ,RMSe ),( RCSe - RCSe ) ) - MUR ) ) ) ),RCSe ) )", "obj1": 0.2047244094488189, "obj2": 0.63941390887538}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( ( Min( Min( FirstVNF_Mem_Server ,( ( MRS * FirstVNF_Mem_Server ) / Min( FirstVNF_Mem ,CRS ) ) ) ,Const ) / ( ACS - AMS ) ) * MDR ) ) ,( Max( ( FirstVNF_CPU * ( ( AMS * Min( PN ,AMS ) ) + FirstVNF_CPU_Server ) ),MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( Min( Min( ( MUC - CS ) ,( ( ( RMSe * MLU ) - MUC ) * RMSe ) ) ,( RCSe * RMSe ) ) * MUM ) ) - ( Max( RCSe,MUC ) + MUR ) )", "obj1": 0.8877952755905512, "obj2": 0.06973022601116882}, {"determining": "( Min( ACS ,AMS ) / Min( Min( ( MDR - CRS ) ,( CRS / Min( Min( FirstVNF_RAM_Server ,Const ) ,AMS ) ) ) ,Const ) )", "choosing": "Max( Max( Max( Max( CS,( CS / RMSe ) ),DS ),( ( MLU + RMSe ) - RMSe ) ),( ( CS + ( MUM - RCSe ) ) / MUR ) )", "obj1": 0.2952755905511811, "obj2": 0.543684158279692}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) + FirstVNF_CPU_Server ) * ( ( ARS / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( Const - PN ) / ( AMS * Min( PN ,( Max( MDR,RRS ) / Max( ACS,CRS ) ) ) ) ) ) )", "choosing": "Max( ( ( MUC * Max( Min( RMSe ,( ( RCSe * RRSe ) * CS ) ),DS ) ) / DS ),Max( Min( MUR ,RMSe ),( RCSe / CS ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,AMS ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( FirstVNF_CPU_Server + MRS ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( FirstVNF_Mem + Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( ( ( MUR / Min( ( Min( RRSe ,MLU ) / ( DS * ( RMSe * DS ) ) ) ,RCSe ) ) + ( Min( MUC ,MUM ) / MUR ) ) / Min( RRSe ,CS ) ) / Max( Max( ( RRSe - Min( MUC ,MUR ) ),MLU ),CS ) )", "obj1": 0.9606299212598425, "obj2": 0.01820859056225023}, {"determining": "( ( Const - ( ( PN / ( ( CRS / Min( FirstVNF_Mem ,( ACS - ACS ) ) ) + ( ACS * FirstVNF_Mem_Server ) ) ) - ( Min( ( PN * FirstVNF_CPU ) ,Max( Max( BR,( ACS + FirstVNF_RAM ) ),CRS ) ) / ( FirstVNF_CPU_Server * DDR ) ) ) ) - ( Min( FirstVNF_CPU ,ARS ) + FirstVNF_Mem ) )", "choosing": "Max( ( ( ( MUR / Min( ( Min( MUR ,MLU ) / ( DS * ( RMSe * MUC ) ) ) ,RCSe ) ) + ( MUR / Min( MUC ,MUM ) ) ) / Min( RRSe ,( RMSe * CS ) ) ),Max( ( MUR / ( MUR * ( ( ( RMSe * ( DS * CS ) ) / ( MUR * RRSe ) ) + ( RRSe / Max( MLU,( RCSe - RRSe ) ) ) ) ) ),RCSe ) )", "obj1": 0.9350393700787402, "obj2": 0.03093720571453823}]}